<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.desktop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.desktop</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.desktop:NativeProcess" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcess</apiName><shortdesc class="- topic/shortdesc ">
 Класс NativeProcess обеспечивает интеграцию командной строки и основных возможностей запуска.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс NativeProcess обеспечивает интеграцию командной строки и основных возможностей запуска. Класс NativeProcess позволяет программе AIR выполнять собственные процессы в операционной системе хоста. Программа AIR может отслеживать стандартные потоки ввода (stdin) и вывода (stdout), а также стандартный поток ошибок (stderr) процесса.
 
 <p class="- topic/p ">Класс NativeProcess и его возможности доступны только для приложений AIR, установленных с помощью собственной программы установки (то есть для приложений с профилем расширенного рабочего стола). В ходе отладки можно передать аргумент <codeph class="+ topic/ph pr-d/codeph ">-profile extendedDesktop</codeph> в ADL, чтобы обеспечить возможность выполнения процессов NativeProcess. В среде выполнения можно проверить свойство <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>, чтобы определить, поддерживается ли связь с собственными процессами. </p>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR: </i>эта функция поддерживается в приложениях, которые разворачиваются в компьютерных операционных системах с помощью собственных программ установки. Функция не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
 
 <p class="- topic/p ">Приложения AIR, устанавливаемые с помощью собственной программы установки (то есть приложения с профилем расширенного рабочего стола), также используют для запуска <codeph class="+ topic/ph pr-d/codeph ">File.openWithDefaultApplication</codeph>. Однако класс NativeProcess обеспечивает прямой доступ к стандартным потокам ввода, вывода и ошибок.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b>В среде AIR для ТВ-программ, в которых используется профиль <codeph class="+ topic/ph pr-d/codeph ">extendedTV</codeph>, можно использовать собственные расширения ActionScript для выполнения собственных процессов.</p> 
 
 </apiDesc><example conref="examples\NativeProcessExample.as" class="- topic/example "> В следующем примере проверяется, поддерживает ли компьютер связь с собственными процессами. Если это так, программа создает прослушиватели событий для собственного процесса и запускает файл test.py в своем главном каталоге. :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.desktop.NativeProcess;
    import flash.desktop.NativeProcessStartupInfo;
    import flash.events.Event;
    import flash.events.ProgressEvent;
    import flash.events.IOErrorEvent;
    import flash.events.NativeProcessExitEvent;
    import flash.filesystem.File;
    
    public class NativeProcessExample extends Sprite
    {
        public var process:NativeProcess;

        public function NativeProcessExample()
        {
            if(NativeProcess.isSupported)
            {
                setupAndLaunch();
            }
            else
            {
                trace("NativeProcess not supported.");
            }
        }
        
        public function setupAndLaunch():void
        {     
            var nativeProcessStartupInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();
            var file:File = File.applicationDirectory.resolvePath("test.py");
            nativeProcessStartupInfo.executable = file;

            var processArgs:Vector.&lt;String> = new Vector.&lt;String>();
            processArgs[0] = "foo";
            nativeProcessStartupInfo.arguments = processArgs;

            process = new NativeProcess();
            process.start(nativeProcessStartupInfo);
            process.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA, onOutputData);
            process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
            process.addEventListener(NativeProcessExitEvent.EXIT, onExit);
            process.addEventListener(IOErrorEvent.STANDARD_OUTPUT_IO_ERROR, onIOError);
            process.addEventListener(IOErrorEvent.STANDARD_ERROR_IO_ERROR, onIOError);
        }

        public function onOutputData(event:ProgressEvent):void
        {
            trace("Got: ", process.standardOutput.readUTFBytes(process.standardOutput.bytesAvailable)); 
        }
        
        public function onErrorData(event:ProgressEvent):void
        {
            trace("ERROR -", process.standardError.readUTFBytes(process.standardError.bytesAvailable)); 
        }
        
        public function onExit(event:NativeProcessExitEvent):void
        {
            trace("Process exited with ", event.exitCode);
        }
        
        public function onIOError(event:IOErrorEvent):void
        {
             trace(event.toString());
        }
    }
}
</codeblock> Добавьте следующий сценарий Python в файл с именем test.py, который находится в каталоге программы (и убедитесь, что установлен компонент Python):
 
 <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph "> #!/usr/bin/python
 # ------------------------------------------------------------------------------
 # Sample Python script
 # ------------------------------------------------------------------------------
 
 import sys
 
 for word in sys.argv: #echo the command line arguments
     print word
 
 print "HI FROM PYTHON"
 print "Enter user name" 
 line = sys.stdin.readline()
 
 sys.stdout.write("hello," + line)</codeph></pre>
</example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExtensionContext" class="- topic/link "><linktext class="- topic/linktext ">flash.external.ExtensionContext</linktext></link></related-links><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.NativeProcessExitEvent_exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о завершении работы собственного процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NativeProcessExitEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NativeProcessExitEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о завершении работы собственного процесса. Свойство <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph> содержит значение, которое процесс возвращает операционной системе хоста при завершении работы. Если программа AIR завершает процесс с помощью метода <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph> объекта NativeProcess, свойство <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph> получает значение NaN.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardInputIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputIoError</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что запись в стандартный поток ввода (stdin) не удалась.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что запись в стандартный поток ввода (stdin) не удалась. Объект NativeProcess отправляет это событие, когда метод <codeph class="+ topic/ph pr-d/codeph ">closeInput()</codeph> выполняется с ошибкой или когда среда выполнения не может записать данные в стандартный поток ввода собственного процесса.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardOutputIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputIoError</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что чтение из потока stdout завершилось ошибкой.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что чтение из потока stdout завершилось ошибкой. Объект NativeProcess может отправлять это событие, когда среда выполнения не может прочитать данные из стандартного канала вывода собственного процесса.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardErrorIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorIoError</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что не удалось прочитать данные из стандартного потока ошибок (stderror).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что не удалось прочитать данные из стандартного потока ошибок (stderror). Объект NativeProcess может отправлять это событие, когда среда выполнения не может прочитать данные из стандартного канала ошибок собственного процесса.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardInputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputClose</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток ввода с помощью метода closeInput().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток ввода с помощью метода <codeph class="+ topic/ph pr-d/codeph ">closeInput()</codeph>. Объект NativeProcess не отправляет это событие, когда собственный процесс закрывает поток ввода самостоятельно. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardInputProgress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputProgress</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что объект NativeProcess записал данные в поток ввода для дочернего процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что объект NativeProcess записал данные в поток ввода для дочернего процесса. Объект NativeProcess отправляет это событие, когда в поток записываются данные. Это событие <i class="+ topic/ph hi-d/i ">не</i> указывает на то, удалось ли дочернему процессу прочитать эти данные.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardErrorClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorClose</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток ошибок.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток ошибок. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardErrorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorData</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что собственный процесс содержит данные, доступные для чтения, в стандартном потоке ошибок (stderror).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что собственный процесс содержит данные, доступные для чтения, в стандартном потоке ошибок (stderror). Объект NativeProcess отправляет это событие, когда переполняется стандартный поток ошибок дочернего процесса или когда заполняется внутренний буфер, используемый для связи между процессами. Не создавайте код, зависимый от размера такого внутреннего буфера, так как он неодинаковый в разных версиях и операционных системах.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardOutputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputClose</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток вывода.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что объект NativeProcess закрыл свой поток вывода. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardOutputData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputData</apiName><shortdesc class="- topic/shortdesc ">
 Сообщает о том, что у собственного процесса есть доступные для чтения данные в потоке вывода.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Сообщает о том, что у собственного процесса есть доступные для чтения данные в потоке вывода. Объект NativeProcess отправляет это событие, когда переполняется стандартный поток вывода дочернего процесса или когда заполняется внутренний буфер, используемый для связи между процессами. Не создавайте код, зависимый от размера такого внутреннего буфера, так как он неодинаковый в разных версиях и операционных системах.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.desktop:NativeProcess:NativeProcess" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcess</apiName><shortdesc class="- topic/shortdesc ">
	Создает неинициализированный объект NativeProcess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Создает неинициализированный объект NativeProcess. Чтобы запустить процесс, необходимо вызвать метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/start()" class="- topic/link "><linktext class="- topic/linktext ">start()</linktext></link></related-links></apiConstructor><apiOperation id="flash.desktop:NativeProcess:closeInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">closeInput</apiName><shortdesc class="- topic/shortdesc ">
	Закрывает поток ввода этого процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Закрывает поток ввода этого процесса. Некоторые программы командной строки ожидают закрытия потока ввода для запуска других операций. Закрытый поток нельзя открыть снова, пока процесс не завершит работу и будет запущен снова. 
	
	</apiDesc></apiOperationDetail><adobeApiEvent id="flash.desktop:NativeProcess:closeInput_ioErrorStandardInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioErrorStandardInput</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Существует проблема, связанная с закрытием потока ввода данного процесса.
	
	</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Существует проблема, связанная с закрытием потока ввода данного процесса.
	
	</shortdesc></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess:closeInput_standardInputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputClose</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Поток ввода закрыт. 
	
	</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Поток ввода закрыт.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.desktop:NativeProcess:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
	Попытка завершить собственный процесс.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">force</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Должна ли программа при необходимости пытаться принудительно завершить собственный процесс.
	
	<p class="- topic/p ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">force</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, этот метод пытается завершить собственный процесс без принуждения. Этот метод ненастойчиво «просит» собственной процесс завершить работу. Собственный процесс может проигнорировать такой запрос, в результате чего этот метод не гарантирует его завершение. Объект NativeProcess отправляет событие <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph> только в случае завершения собственного процесса. </p>
	
	<p class="- topic/p ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">force</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, этот метод пытается принудительно завершить собственный процесс. Вызывать этот метод с параметром <codeph class="+ topic/ph pr-d/codeph ">force</codeph>, для которого задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, следует только в крайних случаях. Если для параметра <codeph class="+ topic/ph pr-d/codeph ">force</codeph> задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, этот метод может оказать отрицательное воздействие на состояние системных ресурсов, связанных с собственным процессом. Например, открытые файлы могут остаться несогласованными. Среда выполнения будет предпринимать все попытки для принудительного завершения собственного процесса. Однако это не гарантирует завершения собственного процесса. Объект NativeProcess отправляет событие <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph> только в случае завершения собственного процесса.</p>  
	
	<p class="- topic/p ">Если объект NativeProcess успешно завершит работу, он отправляет событие <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph>.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Попытка завершить собственный процесс.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeProcess:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
	Запускает собственный процесс, указанный в предоставленных данных о запуске.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если в данный момент выполняется NativeProcess.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если свойство nativePath экземпляра NativeProcessStartupInfo не существует.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если не удалось запустить NativeProcess.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeProcessStartupInfo</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">NativeProcessStartupInfo определяет информацию о запуске собственного процесса. 
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Запускает собственный процесс, указанный в предоставленных данных о запуске. После запуска процесса открываются все потоки ввода и вывода. Этот метод возвращает результат сразу после того, как операционной системе отправляется запрос на запуск указанного процесса. Объект NativeProcess выдает исключение <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph>, если в данное время выполняется процесс. Процесс выполняется, если свойство <codeph class="+ topic/ph pr-d/codeph ">running</codeph> объекта NativeProcess имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Если операционная система не может запустить процесс, отправляется исключение <codeph class="+ topic/ph pr-d/codeph ">Error</codeph>. 
	
	<p class="- topic/p ">
	Экземпляр NativeProcess соответствует одному процессу в операционной системе. Если требуется одновременно выполнить несколько экземпляров одного процесса операционной системы, можно создать по одному экземпляру NativeProcess для каждого дочернего процесса.</p>
	
	<p class="- topic/p ">
	Этот метод можно вызывать каждый раз, когда свойство <codeph class="+ topic/ph pr-d/codeph ">running</codeph> объекта NativeProcess возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Это означает, что объект NativeObject можно использовать повторно. Другими словами, можно создать экземпляр NativeProcess, вызвать метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, дождаться события <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>, а затем вызвать метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> еще раз. Можно использовать другой объект NativeProcessStartupInfo в качестве значения параметра <codeph class="+ topic/ph pr-d/codeph ">info</codeph> в следующем вызове метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>.</p> 
	
	<p class="- topic/p ">Класс NativeProcess и его возможности доступны только для программ AIR, установленных с помощью собственной программы установки. В ходе отладки можно передать аргумент <codeph class="+ topic/ph pr-d/codeph ">-profile extendedDesktop</codeph> в ADL, чтобы обеспечить возможность выполнения процессов NativeProcess. Проверьте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>, чтобы определить, поддерживается ли связь с собственными процессами.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Важные моменты с точки зрения безопасности</b></p>
	
	<p class="- topic/p ">Встроенный API собственных процессов может запустить любой исполняемый файл в системе пользователя. Соблюдайте крайнюю осторожность при создании и выполнении команд. Если любая часть используемой команды исходит от внешнего источника, тщательно проанализируйте безопасность выполнения такой команды. Подобным образом приложение AIR должно проверять данные, передаваемые выполняемому процессу.</p>
	 
	<p class="- topic/p ">Однако проверка ввода может представлять определенную трудность. Чтобы избежать таких трудностей, лучше написать собственное приложение (например, EXE-файл в ОС Windows), со специальными API-интерфейсами. Эти API должны обрабатывать только те команды, которые необходимы именно для приложения AIR. Например, собственное приложение может принимать только ограниченный набор инструкций через стандартный поток ввода.</p>
	 
	<p class="- topic/p ">Среда выполнения AIR в ОС Windows не разрешает непосредственное выполнение файлов .bat. Файлы .bat системы Windows выполняются программой интерпретатора команд (cmd.exe). При вызове файла .bat это приложение интерпретирует аргументы, передаваемые команде, как дополнительные приложения, которые требуется запустить. Вредоносная вставка лишних символов в строку аргумента может привести к выполнению приложением cmd.exe вредоносного или небезопасного приложения. Например, без надлежащей проверки данных приложение AIR может вызвать <codeph class="+ topic/ph pr-d/codeph ">myBat.bat myArguments c:/evil.exe</codeph>. В результате этого приложение cmd.exe вместе с файлом .bat запустит приложение evil.exe.</p>
	
	<p class="- topic/p ">Если вызвать метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> вместе с файлом .bat, объект NativeProcess выдаст исключение. Свойство <codeph class="+ topic/ph pr-d/codeph ">message</codeph> объекта Error содержит строку «Error #3219: The NativeProcess could not be started» (Ошибка №3219. Не удалось запустить собственный процесс).</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcessStartupInfo" class="- topic/link "><linktext class="- topic/linktext ">NativeProcessStartupInfo</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeProcess:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
	Указывает, поддерживает ли текущий профиль выполнение собственных процессов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Указывает, поддерживает ли текущий профиль выполнение собственных процессов. Это свойство возвращает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> только при выполнении в профиле extendedDesktop. Кроме того, значением <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph> всегда является <codeph class="+ topic/ph pr-d/codeph ">false</codeph> для программ, установленных в качестве файла AIR. Для использования класса NativeProcess необходимо упаковать программу AIR с использование флага ADT <codeph class="+ topic/ph pr-d/codeph ">-target native</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcess:running:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">running</apiName><shortdesc class="- topic/shortdesc ">
	Указывает, выполняется ли этот собственный процесс в настоящее время.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Указывает, выполняется ли этот собственный процесс в настоящее время. Процесс выполняется, если был вызван метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> и объект NativeProcess еще не отправил события <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>. Экземпляр NativeProcess соответствует одному процессу в операционной системе. Это свойство сохраняет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, пока выполняется основной процесс операционной системы (с момента запуска собственного процесса и до возвращения процессом кода выхода операционной системе). 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcess:standardError:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardError</apiName><shortdesc class="- topic/shortdesc ">
	Обеспечивает доступ к стандартному выводу ошибок из этого собственного процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataInput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если данные отсутствуют и предпринята операция чтения.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Обеспечивает доступ к стандартному выводу ошибок из этого собственного процесса. По мере того как через этот поток поступают данные, объект NativeProcess отправляет объект события ProgressEvent. При попытке прочитать данные этого потока, когда они еще не доступны, объект NativeProcess выдает исключение EOFError. 
	
	<p class="- topic/p ">Применяется тип IDataInput, так как с точки зрения текущего процесса выполняется ввод данных, несмотря на то что для этого используется поток вывода дочернего процесса.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link><link href="flash.utils.xml#IDataInput" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.IDataInput</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeProcess:standardInput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardInput</apiName><shortdesc class="- topic/shortdesc ">
	Обеспечивает доступ к стандартному вводу этого собственного процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataOutput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">при записи этого значения, когда <codeph class="+ topic/ph pr-d/codeph ">running</codeph> возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, или при попытке записать данные в закрытый поток ввода.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Обеспечивает доступ к стандартному вводу этого собственного процесса. Этот канал используется для отправки данных этому процессу. Каждый раз при записи данных в свойство <codeph class="+ topic/ph pr-d/codeph ">input</codeph> они при первой возможности записываются в поток ввода собственного процесса. 
	
	<p class="- topic/p ">Применяется тип IDataOutput, потому что с точки зрения текущего процесса выполняется вывод данных, несмотря на то что для этого используется поток ввода дочернего процесса.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/closeInput()" class="- topic/link "><linktext class="- topic/linktext ">closeInput()</linktext></link><link href="flash.utils.xml#IDataOutput" class="- topic/link "><linktext class="- topic/linktext ">IDataOutput</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeProcess:standardOutput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutput</apiName><shortdesc class="- topic/shortdesc ">
	Обеспечивает доступ к стандартному потоку вывода этого собственного процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataInput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если данные отсутствуют и предпринята операция чтения.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Обеспечивает доступ к стандартному потоку вывода этого собственного процесса. Этот поток служит для чтения данных из стандартного потока вывода собственного процесса. Когда в этом потоке есть данные, объект NativeProcess отправляет объект события ProgressEvent. При попытке прочитать данные этого потока, когда они еще не доступны, объект NativeProcess выдает исключение EOFError. 
	
	<p class="- topic/p ">Применяется тип IDataInput, потому что с точки зрения текущего процесса выполняется ввод данных, несмотря на то что для этого используется поток вывода дочернего процесса.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#IDataInput" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.IDataInput</linktext></link><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:InteractiveIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InteractiveIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Класс InteractiveIcon представляет собой базовый класс значков приложений ОС.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:Icon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс InteractiveIcon представляет собой базовый класс значков приложений ОС. 
	 
	 <p class="- topic/p ">Чтобы получить экземпляр значка приложения, воспользуйтесь свойством <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> объекта NativeApplication. Типом значка является один из подклассов базового класса InteractiveIcon. В Mac OS X<sup class="+ topic/ph hi-d/sup ">®</sup> — это DockIcon, в Windows<sup class="+ topic/ph hi-d/sup ">®</sup> и Linux — SystemTrayIcon.</p>
	 
	 <p class="- topic/p ">Создание экземпляров класса InteractiveIcon невозможно. Вызовы конструктора <codeph class="+ topic/ph pr-d/codeph ">new InteractiveIcon()</codeph> выдают исключение ArgumentError.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsDockIcon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsSystemTrayIcon</linktext></link></related-links><apiValue id="flash.desktop:InteractiveIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc ">
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.
	   
	 <p class="- topic/p ">При отображении значка в контексте конкретной ОС из массива выбирается изображение, размер которого в максимальной степени подходит под текущий размер экрана (при необходимости масштабируется). Обычные размеры включают: 16x16, 32x32, 48x48 и 128x128. (В ближайшем будущем в некоторых ОС могут использоваться значки размером 512x512 пикселей.)</p>
	 
	 <p class="- topic/p ">В некоторых контекстах, если свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ничего присвоено не было, может использоваться значок ОС по умолчанию. В остальных контекстах значок не отображается.</p>
	 
	 <p class="- topic/p ">Чтобы изменить вид значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> массив объектов BitmapData.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Прямая модификация массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ни к чему не приведет.</p>
	 
	 <p class="- topic/p ">Чтобы убрать изображение значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> пустой массив.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Примечание.</b> Загружайте файлы изображений для значков в формате PNG, так как этот формат обеспечивает наилучшее альфа-смешивание. Формат GIF поддерживает только включение или отключение прозрачности, но не смешивание. Формат JPG не поддерживает прозрачность совсем.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InteractiveIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc ">
		 Текущее значение высоты значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Текущее значение высоты значка в пикселях.
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">height</codeph> обозначает высоту значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение высоты может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InteractiveIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc ">
		 Текущее значение ширины значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Текущее значение ширины значка в пикселях. 
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">width</codeph> обозначает ширину значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение ширины может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:InvokeEventReason" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEventReason</apiName><shortdesc class="- topic/shortdesc ">
	 В классе InvokeEventReason перечислены значения, возвращенные свойством reason объекта InvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Определяет константы, представляющие способы вызова приложения через операционную систему.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 В классе InvokeEventReason перечислены значения, возвращенные свойством <codeph class="+ topic/ph pr-d/codeph ">reason</codeph> объекта <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent</codeph>.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#InvokeEvent/reason" class="- topic/link "><linktext class="- topic/linktext ">flash.events.InvokeEvent.reason</linktext></link></related-links><apiValue id="flash.desktop:InvokeEventReason:LOGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOGIN</apiName><shortdesc class="- topic/shortdesc ">
			Указывает, что событие InvokeEvent произошло вследствие входа пользователя в систему.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">login</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Указывает, что событие InvokeEvent произошло вследствие входа пользователя в систему.
			
			</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InvokeEventReason:STANDARD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD</apiName><shortdesc class="- topic/shortdesc ">
			Указывает, что событие InvokeEvent произошло по причине, отличной от входа в систему.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standard</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Указывает, что событие InvokeEvent произошло по причине, отличной от входа в систему.
			
			</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragActions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragActions</apiName><shortdesc class="- topic/shortdesc ">
Класс NativeDragActions задает строковые константы для имен операций перетаскивания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс NativeDragActions задает строковые константы для имен операций перетаскивания.
 
 <p class="- topic/p ">Константы NativeDragActions используются в качестве значений свойства <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> классов NativeDragManager и NativeDragEvent.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link></related-links><apiValue id="flash.desktop:NativeDragActions:COPY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COPY</apiName><shortdesc class="- topic/shortdesc ">
	Задает строку для операции копирования.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">copy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Задает строку для операции копирования.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:LINK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINK</apiName><shortdesc class="- topic/shortdesc ">
	Задает строку для операции создания связок.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">link</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Задает строку для операции создания связок.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVE</apiName><shortdesc class="- topic/shortdesc ">
	 Задает строку для операции перемещения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">move</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает строку для операции перемещения.
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc ">
	Задает строку, которая будет использоваться, если операция не указана.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Задает строку, которая будет использоваться, если операция не указана.
	 
	 <p class="- topic/p ">В событии <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> действие <codeph class="+ topic/ph pr-d/codeph ">none</codeph> указывает на то, что пользователь не завершил операцию перетаскивания.</p>
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:ClipboardFormats" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ClipboardFormats</apiName><shortdesc class="- topic/shortdesc ">
Класс ClipboardFormats определяет константы имен стандартных форматов данных при использовании класса Clipboard.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Clipboard, ClipboardFormats and ClipboardTransferMode were all added to AIR 1.0. These are also being added, with some exceptions listed in this file, to FP10.
</internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс ClipboardFormats определяет константы имен стандартных форматов данных при использовании класса Clipboard. Flash Player 10 поддерживает только следующие форматы данных: TEXT_FORMAT, RICH_TEXT_FORMAT и HTML_FORMAT.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links><apiValue id="flash.desktop:ClipboardFormats:BITMAP_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BITMAP_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Данные изображения (только для AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:bitmap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Данные изображения (только для AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:FILE_LIST_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FILE_LIST_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Массив файлов (только для AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:file list</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Массив файлов (только для AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:FILE_PROMISE_LIST_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FILE_PROMISE_LIST_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Список предварительных образов файлов (только для AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:file promise list</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Список предварительных образов файлов (только для AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:HTML_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Данные HTML.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:html</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Данные HTML.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:RICH_TEXT_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RICH_TEXT_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Данные в формате RTF.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:rtf</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Данные в формате RTF.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:TEXT_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Строковые данные.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Строковые данные.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:URL_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">URL_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Строка URL-адреса (только для AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:url</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Строка URL-адреса (только для AIR).
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeApplication</apiName><shortdesc class="- topic/shortdesc ">
	 Класс NativeApplication представляет приложение AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс NativeApplication представляет приложение AIR.
	 
	 <p class="- topic/p ">
	 Класс NativeApplication предоставляет информацию о приложении, дает доступ к самым распространенным функциям приложения и отправляет события уровня приложения.
	 </p>
	 <p class="- topic/p ">
	 Единственный экземпляр объекта NativeApplication автоматически создается при запуске. Получить экземпляр объекта NativeApplication приложения можно через статическое свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph>.
	 </p>
	 
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_UP_keyUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyUp</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда пользователь отпускает клавишу.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.KeyboardEvent.KEY_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда пользователь отпускает клавишу. Экземпляр NativeApplication обеспечивает это событие к командным клавишам клавиатуры поддержки. Это событие клавиатуры отправлено сначала NativeApplication. Отменение этого события не имеет никаких эффектов на другие объекты (например, командные клавиши меню NativeWindow). Это событие имеет место после a <codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph> событие.
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_DOWN_keyDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyDown</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда пользователь нажимает клавишу.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.KeyboardEvent.KEY_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда пользователь нажимает клавишу. Экземпляр NativeApplication обеспечивает это событие к командным клавишам клавиатуры поддержки. Это событие клавиатуры отправлено сначала NativeApplication. Отменение этого события также отменяет командные клавиши меню NativeWindow. Это событие происходит перед событием <codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph>.
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.USER_PRESENT_userPresent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userPresent</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется при обнаружении нажатий клавиш или кнопок мыши в среде ОС в режиме ожидания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.USER_PRESENT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется при обнаружении нажатий клавиш или кнопок мыши в среде ОС в режиме ожидания.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Это событие не отправляется на мобильных устройствах или в средах AIR для телевизионных устройств.</p>
	 
	 <p class="- topic/p ">Период времени, после которого наступает режим ожидания, регулируется свойством <codeph class="+ topic/ph pr-d/codeph ">idleThreshold</codeph>. Время, прошедшее с момента перехода в режим ожидания, определяется в свойстве <codeph class="+ topic/ph pr-d/codeph ">timeSinceLastUserInput</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/idleThreshold" class="- topic/link "><linktext class="- topic/linktext ">idleThreshold</linktext></link><link href="flash.desktop.xml#NativeApplication/timeSinceLastUserInput" class="- topic/link "><linktext class="- topic/linktext ">timeSinceLastUserInput</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.USER_IDLE_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда пользователь неактивен.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.USER_IDLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда пользователь неактивен.
	 
	 <p class="- topic/p ">Задайте период времени, в течение которого пользователь должен быть неактивным, прежде чем будет отправлено это событие с использованием свойства <codeph class="+ topic/ph pr-d/codeph ">idleThreshold</codeph>. Время, прошедшее с момента перехода в режим ожидания, определяется в свойстве <codeph class="+ topic/ph pr-d/codeph ">timeSinceLastUserInput</codeph>.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Это событие не отправляется на мобильных устройствах или в средах AIR для телевизионных устройств.</p>
	 
	 
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/idleThreshold" class="- topic/link "><linktext class="- topic/linktext ">idleThreshold</linktext></link><link href="flash.desktop.xml#NativeApplication/timeSinceLastUserInput" class="- topic/link "><linktext class="- topic/linktext ">timeSinceLastUserInput</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется при обнаружении нового сетевого подключения или при разрыве существующего соединения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется при обнаружении нового сетевого подключения или при разрыве существующего соединения. 
	 
	 <p class="- topic/p ">Событие <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph> не обязательно обозначает переход компьютера узла в оперативный или автономный режим. Оно также может обозначать переключение с одного соединения на другое. Приложения могут использовать данное событие для оптимизации задач мониторинга доступности удаленных ресурсов. При отправке события <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph> часто наступает удобный момент для проверки доступности любых удаленных ресурсов.
	 </p> 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечания.</b></p> 
	 <ul class="- topic/ul "><li class="- topic/li ">Между изменением состояния сети и доставкой данного события может существовать небольшая задержка.</li><li class="- topic/li ">На платформе Android объект NativeApplication может отправлять несколько событий networkChange для каждого изменения подключения к сети.</li></ul>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.EXITING_exiting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exiting</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется при запуске последовательности операций выхода из приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.EXITING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется при запуске последовательности операций выхода из приложения. 
	 
	 <p class="- topic/p ">Событие <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph> отправляется, когда ОС инициирует процедуру завершения программы. Например, по нажатию комбинации клавиш <codeph class="+ topic/ph pr-d/codeph ">Cmd-Q</codeph> в ОС Mac OS X или когда свойство <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph> объекта NativeApplication принимает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и закрывается окно последней активной программы. При отмене данного события выход из приложения не осуществляется.</p>
	 
	 <p class="- topic/p ">Среда AIR для телевизионных устройств никогда не оправляет событие <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>. 
	 </p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Вызов метода <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph> NativeApplication не приводит к прекращению отправки события <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>. Для уведомления компонентов о предстоящем выходе следует отправить событие <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph> до вызова метода <codeph class="+ topic/ph pr-d/codeph ">exit().</codeph></p>
	 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда фокус перемещается с рабочего стола на приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда фокус перемещается с рабочего стола на приложение.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда данное приложение становится приложением активного рабочего стола.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда данное приложение становится приложением активного рабочего стола.
	  
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.BrowserInvokeEvent.Browser_INVOKE_browserInvoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">browserInvoke</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется при вызове приложения SWF-файлом, выполняющимся в обозревателе пользователя.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.BrowserInvokeEvent.Browser_INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.BrowserInvokeEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется при вызове приложения SWF-файлом, выполняющимся в обозревателе пользователя. 
	 
	 <p class="- topic/p ">Вызов обозревателя разрешается, только если приложение указывает следующие данные в файле дескриптора приложения.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">&lt;allowBrowserInvocation>true&lt;/allowBrowserInvocation></codeblock>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.InvokeEvent.INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется при вызове приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.InvokeEvent.INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.InvokeEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется при вызове приложения. 
	 
	 <p class="- topic/p ">При повторном вызове приложения его копия не запускается. Вместо этого первой копии приложения поступает дополнительное событие о вызове. Дальнейшая реакция на повторные события <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> зависит от самого приложения.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Все события <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> помещаются в очередь. Если прослушиватель для данного события зарегистрирован, он получает все события из очереди, а также все новые события. События из очереди доставляются как до, так и после новых событий <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.desktop:NativeApplication:activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
         Активирует данное приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">window</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:NativeWindow</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Активируемый с приложением объект NativeWindow окна.
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Активирует данное приложение. 
         
		 <p class="- topic/p ">Этот метод не поддерживается на платформах, на которых отсутствует поддержка класса NativeWindow.</p> 
		  
         <p class="- topic/p ">При некоторых, заданных ОС, обстоятельствах данный метод не приводит к активации приложения. В большинстве ОС приложения не могут активировать сами себя. Это сделано для того, чтобы исключить возможность случайного или умышленного использования пользователем других приложений в своих целях.</p>
         
         <p class="- topic/p ">Если такая возможность поддерживается ОС, то указанное окно становится активным и появляется на рабочем столе поверх остальных окон или приложений. (Если параметр <codeph class="+ topic/ph pr-d/codeph ">window</codeph> принимает значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, то активируется видимое окно данной программы.)</p>
         
         <p class="- topic/p ">При работе с приложениями без видимых окон метод <codeph class="+ topic/ph pr-d/codeph ">activate()</codeph> не подходит.</p>
		 
		 <p class="- topic/p ">Операция активации является синхронной.</p>
		 
		 </apiDesc></apiOperationDetail><adobeApiEvent id="flash.desktop:NativeApplication:activate_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отправляется при изменении состояния активности.
         
         </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Отправляется при изменении состояния активности.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.desktop:NativeApplication:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
		
	Регистрирует объект прослушивателя события на объекте EventDispatcher для получения прослушивателем уведомления о событии.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Тип события.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Функция прослушивателя, обрабатывающая событие. Эта функция должна принимать объект Event в качестве единственного параметра и не должна что-либо возвращать <ph class="- topic/ph ">, как показано в примере:</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Эта функция может иметь любое имя.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Определяет, работает ли прослушиватель в фазе захвата или в целевой фазе и в фазе восходящей цепочки. Если значение <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> равно <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, прослушиватель обрабатывает событие только во время фазы захвата, но не во время целевой фазы или фазы восходящей цепочки. Если значение <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> равно <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то прослушиватель обрабатывает событие только в целевой фазе или фазе восходящей цепочки. Чтобы прослушивать событие во всех трех фазах, необходимо вызвать <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> дважды: один раз с <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, а другой — с <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. </ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Уровень приоритета прослушивателя событий. Приоритет определяется 32-разрядным целым числом со знаком. Чем больше число, тем выше приоритет. Все прослушиватели событий с приоритетом <i class="+ topic/ph hi-d/i ">n</i> обрабатываются перед прослушивателями с приоритетом <i class="+ topic/ph hi-d/i ">n</i>-1. Прослушиватели с одинаковым приоритетом обрабатываются в порядке их добавления. Значение приоритета по умолчанию равно 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Определяет, является ли ссылка на listener «сильной» или «слабой». «Сильная» ссылка (по умолчанию) предотвращает удаление listener сборщиком мусора. «Слабая» ссылка не выполняет эту функцию. <p class="- topic/p ">Функции элементов уровня класса не подлежат удалению в качестве мусора, вследствие чего можно установить <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> равным <codeph class="+ topic/ph pr-d/codeph ">true</codeph> для функций элементов уровня класса, не подвергая их возможности подобного удаления. Если свойству <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> присвоить значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> для прослушивателя, который является вложенной внутренней функцией, то функция будет очищена и перестанет быть постоянной. При создании ссылок на внутреннюю функцию (возможно сохранение в другой переменной) она не будет собираться в качестве мусора и останется устойчивой.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Регистрирует объект прослушивателя события на объекте EventDispatcher для получения прослушивателем уведомления о событии. <ph class="- topic/ph ">Можно регистрировать прослушиватели событий в любом узле из списка отображения для каждого типа события, фазы и приоритета.</ph>
	
	
	
	<p class="- topic/p ">После успешной регистрации прослушивателя событий невозможно изменить его приоритет путем дополнительных вызовов <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>. Чтобы изменить приоритет прослушивателя, необходимо сначала вызвать метод <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph>. Затем можно снова зарегистрировать прослушиватель с новым приоритетом. </p>
	
	<p class="- topic/p ">Следует учесть, что после регистрации прослушивателя последующие вызовы метода <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> с другим значением свойства <codeph class="+ topic/ph pr-d/codeph ">type</codeph> или <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> приводят к регистрации другого прослушивателя. <ph class="- topic/ph ">Например, прослушиватель, изначально зарегистрированный со значением <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph>, равным <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, прослушивает только во время фазы захвата. Если вызвать метод <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> еще раз с тем же объектом прослушивателя, но со свойством <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то будет два прослушивателя: один — прослушивающий в фазе захвата, а другой — в целевой фазе и фазе восходящей цепочки. </ph>
	</p>
	
	<p class="- topic/p ">Невозможно зарегистрировать прослушиватель события только для целевой фазы или для фазы восходящей цепочки. Эти фазы соединены при регистрации, поскольку восходящая цепочка применяется только к предшественникам целевого узла.</p>
	
	<p class="- topic/p ">Если прослушиватель событий больше не нужен, его можно удалить, вызвав метод <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph>, иначе могут возникнуть проблемы с памятью. Прослушиватели событий не удаляются из памяти автоматически, так как сборщик мусора не удаляет прослушиватель, пока существует объект, отправляющий соответствующее событие (если параметру <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> не задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).</p>
		
	<p class="- topic/p ">Копирование экземпляра EventDispatcher не приводит к копированию прослушивателей событий, присоединенных к нему. (Если для вновь создаваемого узла требуется прослушиватель событий, его необходимо присоединить после создания узла.) При этом при перемещении экземпляра EventDispatcher присоединенные к нему прослушиватели событий перемещаются вместе с ним.</p>
	
	
	<p class="- topic/p ">Если прослушиватель регистрируется для узла в тот момент, когда на нем обрабатывается событие, то в текущей фазе он не запускается, однако может запуститься в следующей фазе потока события, например в фазе восходящей цепочки.</p>
	
	<p class="- topic/p ">Прослушиватель событий, удаленный из узла во время обработки события на этом узле, будет запускаться текущими операциями. После удаления прослушиватель событий больше не вызывается (если не будет снова зарегистрирован для дальнейшей обработки). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
         Вызывает внутреннюю команду delete экранного объекта с фокусом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Вызывает внутреннюю команду delete экранного объекта с фокусом.
		 
         <p class="- topic/p ">Если объект с фокусом не поддерживает эту команду, вызов функции игнорируется. В настоящее время эту команду поддерживают только те экранные объекты, которые происходят от классов TextField или HTMLLoader.</p>
         
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Команда <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> удаляет выбранный текст. При отсутствии выбранного текста весь текст не удаляется.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><shortdesc class="- topic/shortdesc ">
         Вызывает внутреннюю команду copy экранного объекта с фокусом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Вызывает внутреннюю команду copy экранного объекта с фокусом.
         
         <p class="- topic/p ">Если компонент не поддерживает эту команду, вызов функции игнорируется. В настоящее время эту команду поддерживают только те экранные объекты, которые происходят от классов TextField или HTMLLoader.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:cut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cut</apiName><shortdesc class="- topic/shortdesc ">
         Вызывает внутреннюю команду cut экранного объекта с фокусом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Вызывает внутреннюю команду cut экранного объекта с фокусом.
		 
         <p class="- topic/p ">Если компонент не поддерживает эту команду, вызов функции игнорируется. В настоящее время эти команды поддерживают только те экранные объекты, которые происходят от классов TextField или HTMLLoader.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
		
	Посылает событие в поток событий.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> в случае успешной передачи события. Значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph> указывает на ошибку или на то, что для события был вызван метод <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект события, передаваемый в поток событий. Если осуществляется повторная отправка события, автоматически создается его клон. После отправки события нельзя изменить его свойство <codeph class="+ topic/ph pr-d/codeph ">target</codeph>, поэтому необходимо создать новую копию события, чтобы обеспечить правильное выполнение повторной отправки.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Посылает событие в поток событий. Целью события является объект EventDispatcher, для которого вызывается метод <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
		 Завершает приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">errorCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Код выхода, сообщаемый ОС при выходе приложения.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Завершает приложение. 
		 
		 
		 <p class="- topic/p ">Вызов метода <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph> <i class="+ topic/ph hi-d/i ">приведет</i> к возврату кода выхода. Однако до тех пор, пока не завершится выполнение текущего кода (например, работа обработчика события), процедура завершения работы не начнется. Ожидающие асинхронные операции могут быть выполнены или отменены.</p>
		 
		 <p class="- topic/p ">Имейте в виду, что событие <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph> не отправляется. Если архитектура программы подразумевает использование события <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>, произведите вызов метода <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.dispatchEvent()</codeph>, передав ему в качестве аргумента объект Event типа <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>. Для любых открытых окон объекты NativeWindow отправляют события <codeph class="+ topic/ph pr-d/codeph ">closing</codeph> и <codeph class="+ topic/ph pr-d/codeph ">close</codeph>. Вызов метода <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> для объекта события <codeph class="+ topic/ph pr-d/codeph ">closing</codeph> предотвращает завершение работы приложения.</p>
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Этот метод не поддерживается в операционной системе ОС iOS.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:getDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Определяет приложение по умолчанию для открытия файлов с указанным расширением.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> не содержит ни одного расширения файла, объявленного в дескрипторе приложения.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Путь к приложению по умолчанию.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка с интересующим расширением типа файла (без «.»).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Определяет приложение по умолчанию для открытия файлов с указанным расширением.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Данный метод применим только к типам файлов, объявленным в инструкции <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph> дескриптора приложения.</p>
		 
		 <p class="- topic/p ">Этот метод не применим в среде AIR для телевизионных устройств. Если он вызывается с типом файла, объявленным в дескрипторе программы, возвращается значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:isSetAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isSetAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Указывает, является ли данное приложение текущим приложением по умолчанию для обработки файлов с указанным расширением.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> не содержит ни одного расширения файла, объявленного в дескрипторе приложения.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если по умолчанию используется данное приложение.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка с интересующим расширением типа файла (без «.»).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Указывает, является ли данное приложение текущим приложением по умолчанию для обработки файлов с указанным расширением.
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается во всех компьютерных операционных системах, но не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDefaultApplication</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:paste" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">paste</apiName><shortdesc class="- topic/shortdesc ">
         Вызывает внутреннюю команду paste экранного объекта с фокусом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Вызывает внутреннюю команду paste экранного объекта с фокусом.
		 
         <p class="- topic/p ">Если компонент не поддерживает эту команду, вызов функции игнорируется. В настоящее время эту команду поддерживают только те экранные объекты, которые происходят от классов TextField или HTMLLoader.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:removeAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Отменяет использование данного приложения в качестве приложения по умолчанию для обработки файлов с указанным расширением.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> не содержит ни одного расширения файла, объявленного в дескрипторе приложения.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка с интересующим расширением типа файла (без «.»).
         
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Отменяет использование данного приложения в качестве приложения по умолчанию для обработки файлов с указанным расширением.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Данный метод применим только к типам файлов, объявленным в инструкции <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph> дескриптора приложения.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
		
	Удаляет прослушиватель из объекта EventDispatcher.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Тип события.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Удаляемый объект прослушивателя.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Указывает, был ли прослушиватель зарегистрирован для фазы захвата или целевой фазы и фазы восходящей цепочки. Если прослушиватель зарегистрирован и для фазы захвата, и для фаз цели и восходящей цепочки, метод <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> необходимо вызвать дважды: один раз с <codeph class="+ topic/ph pr-d/codeph ">useCapture()</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, а другой раз с <codeph class="+ topic/ph pr-d/codeph ">useCapture()</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. </ph>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Удаляет прослушиватель из объекта EventDispatcher. При отсутствии прослушивателя, зарегистрированного с объектом EventDispatcher, вызов этого метода не оказывает эффекта.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:selectAll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">selectAll</apiName><shortdesc class="- topic/shortdesc ">
         Вызывает внутреннюю команду selectAll экранного объекта с фокусом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Вызывает внутреннюю команду selectAll экранного объекта с фокусом.
		 
         <p class="- topic/p ">Если компонент не поддерживает эту команду, вызов функции игнорируется. В настоящее время эту команду поддерживают только те экранные объекты, которые происходят от классов TextField или HTMLLoader.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:setAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Задает данное приложение в качестве приложения по умолчанию для обработки файлов с указанным расширением.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> не содержит ни одного расширения файла, объявленного в дескрипторе приложения.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка с интересующим расширением типа файла (без «.»).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Задает данное приложение в качестве приложения по умолчанию для обработки файлов с указанным расширением.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Данный метод применим только к типам файлов, объявленным в инструкции <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph> дескриптора приложения.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeApplication:activeWindow:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">activeWindow</apiName><shortdesc class="- topic/shortdesc ">
         Окно активного приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeWindow</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Окно активного приложения. 
		 
		 <p class="- topic/p ">Если активное окно рабочего стола не относится к этому приложению или активные окна отсутствуют, свойство <codeph class="+ topic/ph pr-d/codeph ">activeWindow</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
		 
		 <p class="- topic/p ">Это свойство не поддерживается на платформах, на которых отсутствует поддержка класса NativeWindow.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:applicationDescriptor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationDescriptor</apiName><shortdesc class="- topic/shortdesc "> 
		 Содержимое файла дескриптора приложения данного приложения AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">XML</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Содержимое файла дескриптора приложения данного приложения AIR.
		 
		 
		 
		 </apiDesc><example conref="examples\NativeApplication.applicationDescriptor.1.as" class="- topic/example "> Следующий пример считывает элементы <codeph class="+ topic/ph pr-d/codeph ">copyright</codeph> и <codeph class="+ topic/ph pr-d/codeph ">version</codeph> из файла дескриптора приложения. Обратите внимание на то, что необходимо использовать пространство имен по умолчанию, определенное в XML-файле дескриптора приложения.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var appDescriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;
var ns:Namespace = appDescriptor.namespace();
var appCopyright:String = appDescriptor.ns::copyright;
var appVersion:String = appDescriptor.ns::version;
trace("appId:", appCopyright);
trace("version:", appVersion);
</codeblock><swfblock conref="examples\NativeApplication.applicationDescriptor.1.swf" xml:space="preserve"/></example></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:applicationID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationID</apiName><shortdesc class="- topic/shortdesc "> 
		 Идентификатор приложения данного приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Идентификатор приложения данного приложения. 
		 
		 <p class="- topic/p ">Значение идентификатора приложения задается в файле дескриптора приложения.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:autoExit:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">autoExit</apiName><shortdesc class="- topic/shortdesc ">
		 Указывает, должно ли приложение автоматически завершаться при закрытии всех его окон.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Указывает, должно ли приложение автоматически завершаться при закрытии всех его окон.  
		 
		 <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph> принимает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> (по умолчанию), то при закрытии всех окон приложения само приложение автоматически завершает работу. Оба события <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph> и <codeph class="+ topic/ph pr-d/codeph ">exit</codeph> отправляются. Если <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph> принимает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то для завершения работы приложения требуется осуществить вызов функции <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.exit()</codeph>. </p> 
		 
		 <p class="- topic/p ">Это свойство не поддерживается на платформах, на которых отсутствует поддержка класса NativeWindow.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:icon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">icon</apiName><shortdesc class="- topic/shortdesc ">
		 Значок приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:InteractiveIcon</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Значок приложения.
		 
		 <p class="- topic/p ">Для определения класса значка используйте <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph> и <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph>. Выбранный тип принадлежит одному из подклассов InteractiveIcon. В ОС Mac<sup class="+ topic/ph hi-d/sup ">®</sup> OS X <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> является объектом типа <codeph class="+ topic/ph pr-d/codeph ">DockIcon</codeph>. В ОС Windows<sup class="+ topic/ph hi-d/sup ">®</sup> объект <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> принадлежит к типу <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon</codeph>. Когда значок программы не поддерживается, свойства <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph> и <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph> имеют значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, а свойство <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>  
		 
		 <p class="- topic/p ">Объект <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> создается автоматически, однако его инициализации с данными изображения не происходит. В некоторых ОС, например в Mac OS X, используется изображение по умолчанию. В остальных случаях, например в Windows, значок отображается только после присвоения ему данных изображения. Для присвоения изображения значка следует настроить свойство <codeph class="+ topic/ph pr-d/codeph ">icon.bitmaps</codeph> на работу с массивом, в котором содержится, по крайней мере, один объект BitmapData. Если в массиве содержится более одного объекта BitmapData, то ОС выбирает изображение, размер которого в наибольшей степени соответствует размерам значка на экране, и масштабирует его по мере необходимости.</p>  
   		 
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">supportsDockIcon</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">supportsSystemTrayIcon</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:idleThreshold:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleThreshold</apiName><shortdesc class="- topic/shortdesc ">
		 Период времени в секундах с момента последнего пользовательского ввода до отправки события userIdle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">При попытке установки свойства в недействительное значение. Приемлемый диапазон значений от 5 (5 секунд) до 86 400 (1 день) включительно.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Период времени в секундах с момента последнего пользовательского ввода до отправки события userIdle. 
		 
		 <p class="- topic/p ">По умолчанию используется значение 300 секунд (5 минут). Приемлемый диапазон значений от 5 (5 секунд) до 86 400 (1 день) включительно.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">userIdle</linktext></link><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">userPresent</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Меню приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Меню приложения.
		 
		 <p class="- topic/p ">Поддержка меню приложений осуществляется, если <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph> принимает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Меню приложений поддерживают не все ОС. Например, меню приложений поддерживаются в Mac OS X, но не поддерживаются в Windows или Linux. Присвоить данному свойству объект NativeMenu, если <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph> принимает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, возможно, однако это не приведет к выполнению какого-либо действия. Свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph> позволяет определить, поддерживает ли операционная система прикладные меню. Использование других средств (например, <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) для определения поддержки может привести к ошибкам программирования (если некоторые целевые операционные системы не рассматриваются).</p>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
 
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Свойство <codeph class="+ topic/ph pr-d/codeph ">menu</codeph> в Mac OS X ссылается на меню приложения, используемое в ОС по умолчанию. Существующую структуру меню можно модифицировать путем добавления или удаления элементов либо путем добавления прослушивателей событий. Также можно полностью заменить используемые по умолчанию меню, присвоив свойству <codeph class="+ topic/ph pr-d/codeph ">menu</codeph> новый объект NativeMenu.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu</linktext></link><link href="flash.display.xml#NativeWindow/supportsMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.supportsMenu</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:nativeApplication:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nativeApplication</apiName><shortdesc class="- topic/shortdesc "> 
		 Единственный экземпляр объекта NativeApplication.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:NativeApplication</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">При доступе из внешней среды за пределами изолированной программной среды безопасности приложения.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Единственный экземпляр объекта NativeApplication.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:openedWindows:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">openedWindows</apiName><shortdesc class="- topic/shortdesc ">
		 В массиве содержатся все собственные открытые окна данного приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 В массиве содержатся все собственные открытые окна данного приложения.
		 
		 <p class="- topic/p ">Это свойство не поддерживается на платформах, на которых отсутствует поддержка класса NativeWindow.</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:publisherID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">publisherID</apiName><shortdesc class="- topic/shortdesc "> 
		 Идентификатор издателя данного приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Идентификатор издателя данного приложения. 
		 
		 <p class="- topic/p ">Значение этого идентификатора задается в файле идентификатора издателя приложения, который создается при установке. Данные берутся из цепочки сертификатов, используемых для подписи приложения.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:runtimePatchLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">runtimePatchLevel</apiName><shortdesc class="- topic/shortdesc "> 
		 Уровень исправления среды, в которой запускается данное приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Уровень исправления среды, в которой запускается данное приложение.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:runtimeVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">runtimeVersion</apiName><shortdesc class="- topic/shortdesc "> 
		 Номер версии среды, в которой запускается данное приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Номер версии среды, в которой запускается данное приложение.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:startAtLogin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">startAtLogin</apiName><shortdesc class="- topic/shortdesc ">
        Указывает, будет ли данное приложение автоматически запускаться при входе текущего пользователя в систему.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В Windows при наличии другого приложения с тем же именем, но с другим путем к исполняемому файлу, настроенного на запуск при входе пользователя в систему.
        
        </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если данное приложение не установлено, как это может произойти при запуске с помощью AIR Debug Launcher (ADL).
        
		</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        Указывает, будет ли данное приложение автоматически запускаться при входе текущего пользователя в систему.
        
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается во всех компьютерных операционных системах, но не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsStartAtLogin</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
	
        <p class="- topic/p ">
        За состояние определенного ОС механизма автоматического запуска приложения при входе пользователя в систему отвечает свойство <codeph class="+ topic/ph pr-d/codeph ">startAtLogin</codeph>. Используя пользовательский интерфейс ОС, пользователь может самостоятельно изменить данное состояние. Это свойство отражает текущее состояние, а именно, было ли оно изменено ОС или приложением AIR.   
        </p>
        </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/supportsStartAtLogin" class="- topic/link "><linktext class="- topic/linktext ">supportsStartAtLogin</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsDefaultApplication:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsDefaultApplication</apiName><shortdesc class="- topic/shortdesc "> 
         Указывает, поддерживает ли текущая платформа setAsDefaultApplication(), removeAsDefaultApplication() и isSetAsDefaultApplication().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
         Указывает, поддерживает ли текущая платформа <codeph class="+ topic/ph pr-d/codeph ">setAsDefaultApplication()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeAsDefaultApplication()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">isSetAsDefaultApplication()</codeph>.
         
         <p class="- topic/p ">Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, вышеупомянутые методы будут работать согласно описанию. Если оно имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то <codeph class="+ topic/ph pr-d/codeph ">setAsDefaultApplication()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">removeDefaultApplication()</codeph> не дают результатов, а <codeph class="+ topic/ph pr-d/codeph ">isSetAsDefaultApplication()</codeph> возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</p>
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/setAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">setAsDefaultApplication()</linktext></link><link href="flash.desktop.xml#NativeApplication/removeAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">removeAsDefaultApplication()</linktext></link><link href="flash.desktop.xml#NativeApplication/isSetAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">isSetAsDefaultApplication()</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsDockIcon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsDockIcon</apiName><shortdesc class="- topic/shortdesc "> 
	   Указывает, поддерживает ли AIR в данной ОС значки программ на панели задач.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	   Указывает, поддерживает ли AIR в данной ОС значки программ на панели задач.
	  
	  <p class="- topic/p ">При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> принадлежит к типу <codeph class="+ topic/ph pr-d/codeph ">DockIcon</codeph>.</p>
	  
      <p class="- topic/p ">Пользовательский интерфейс ОС Mac OS X включает панель Dock, содержащую значки программ, которые выполняются в данный момент или часто используются.</p>
	  
	  <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph> позволяет определить, поддерживает ли операционная система значки панелей приложений. Использование других средств (например, <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) для определения поддержки может привести к ошибкам программирования (если некоторые целевые операционные системы не рассматриваются).</p>
      
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">Значок</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsMenu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsMenu</apiName><shortdesc class="- topic/shortdesc "> 
	   Указывает, поддерживает ли текущая ОС глобальные строки меню приложений.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	   Указывает, поддерживает ли текущая ОС глобальные строки меню приложений.
	  
	  <p class="- topic/p ">При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.menu</codeph> может быть использовано для получения доступа или определения собственного меню приложения.</p> 
	  
	  <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsMenu</codeph> позволяет определить, поддерживает ли операционная система строки меню приложений. Использование других средств (например, <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) для определения поддержки может привести к ошибкам программирования (если некоторые целевые операционные системы не рассматриваются).</p>
	  
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/menu" class="- topic/link "><linktext class="- topic/linktext ">menu</linktext></link><link href="flash.display.xml#NativeWindow/supportsMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.supportsMenu</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsStartAtLogin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsStartAtLogin</apiName><shortdesc class="- topic/shortdesc "> 
         Указывает, поддерживает ли текущая платформа startAtLogin.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
         Указывает, поддерживает ли текущая платформа startAtLogin.
         
         <p class="- topic/p ">Если имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, startAtLogin работает согласно описанию. Если имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, startAtLogin не дает результатов.</p>
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/startAtLogin" class="- topic/link "><linktext class="- topic/linktext ">startAtLogin</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsSystemTrayIcon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsSystemTrayIcon</apiName><shortdesc class="- topic/shortdesc "> 
	  Указывает, поддерживает ли AIR в данной ОС значки на панели задач.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	  Указывает, поддерживает ли AIR в данной ОС значки на панели задач.
	  
	  <p class="- topic/p ">При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> принадлежит к типу <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon</codeph>.</p>
	  
      <p class="- topic/p ">Пользовательский интерфейс ОС Windows включает область значков на панели задач, которая называется <i class="+ topic/ph hi-d/i ">областью уведомлений</i>, где могут отображаться значки приложений. Значки по умолчанию не отображаются. Для отображения значка необходимо задать массив <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> объекта Icon.</p>
      
	  <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph> позволяет определить, поддерживает ли операционная система значки на панели задач. Использование других средств (например, <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) для определения поддержки может привести к ошибкам программирования (если некоторые целевые операционные системы не рассматриваются).</p>
      
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">Значок</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:systemIdleMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">systemIdleMode</apiName><shortdesc class="- topic/shortdesc ">
		 Позволяет приложениям предотвращать переход пользовательского интерфейса в ждущий режим.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Позволяет приложениям предотвращать переход пользовательского интерфейса в ждущий режим.
		 
		 <p class="- topic/p ">Значение из класса SystemIdleMode, позволяющее изменять поведение системы хоста, связанное с переходом в ждущим режим или выходом из него. Это свойство имеет силу для приложения с фокусом ввода. Его можно получить только через содержимое, выполняемое в изолированной программной среде приложения.</p>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается на мобильных устройствах, но не поддерживается в компьютерных операционных системах или средах AIR для телевизионных устройств. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#SystemIdleMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemIdleMode</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:timeSinceLastUserInput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeSinceLastUserInput</apiName><shortdesc class="- topic/shortdesc ">
         Время в секундах с момента последнего пользовательского ввода.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Время в секундах с момента последнего пользовательского ввода.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">userIdle</linktext></link><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">userPresent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Updater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Updater</apiName><shortdesc class="- topic/shortdesc ">
 Класс Updater используется для обновления версии текущего запущенного приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс Updater используется для обновления версии текущего запущенного приложения. Чтобы воспользоваться данным классом, следует создать объект Updater, а затем вызвать его метод <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>.
 
 <p class="- topic/p ">Класс Updater поддерживается только в профиле персональных компьютеров. Его не поддерживают программы расширенного рабочего стола (которые устанавливаются с помощью собственной программы установки), а также программы с профилем AIR для мобильных устройств или профилем AIR для телевизионных устройств. Проверьте свойство <codeph class="+ topic/ph pr-d/codeph ">Updater.isSupported</codeph>.</p>
 
 <p class="- topic/p ">Приложение расширенного рабочего стола (которое устанавливается с помощью собственной программы установки) может загрузить новую версию собственного установщика и запустить ее с помощью метода <codeph class="+ topic/ph pr-d/codeph ">File.openWithDefaultApplication()</codeph>.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdater</linktext></link><link href="air.update.xml#ApplicationUpdaterUI" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdaterUI</linktext></link></related-links><apiConstructor id="flash.desktop:Updater:Updater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Updater</apiName><shortdesc class="- topic/shortdesc ">
     Функция конструктора для класса Updater.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Функция конструктора для класса Updater. Обратите внимание, что метод <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> не является статическим методом класса. Для вызова метода <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> необходимо сначала создать объект Updater.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.desktop:Updater:update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><shortdesc class="- topic/shortdesc ">
     Производит обновление версии текущего запущенного приложения на версию приложения, указанную в файле AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Данный метод был вызван при работе в ADL. 
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">airFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект File, указывающий на файл AIR, в котором хранится версия приложения для обновления.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">version</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Требуемая версия нового файла AIR. Для успешного проведения обновления необходимо, чтобы строка атрибута <codeph class="+ topic/ph pr-d/codeph ">version</codeph> основного элемента <codeph class="+ topic/ph pr-d/codeph ">application</codeph> файла дескриптора приложения для файла AIR совпадала с данным значением.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Производит обновление версии текущего запущенного приложения на версию приложения, указанную в файле AIR. Необходимо, чтобы приложение в файле AIR имело тот же идентификатор (<codeph class="+ topic/ph pr-d/codeph ">appID</codeph>), что и текущее запущенное приложение.
	 
     <p class="- topic/p ">Вызов этого метода приводит к завершению работы приложения (как это происходит при вызове метода <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.exit()</codeph>). Такое поведение объясняется тем, что Adobe AIR не может провести полное обновление приложения без завершения его работы. После успешного проведения обновления версии приложения на более новую, оно запускается вновь. Если установка новой версии не может быть завершена (например, если ее идентификатор приложения не совпадает с идентификатором существующего приложения), то программа установки AIR выводит сообщение об ошибке, и старая версия приложения запускается снова.</p>
	 
	 <p class="- topic/p ">Обновляемое приложение запускается снова независимо от результата проведения обновления. Ошибки в процессе обновления могут быть вызваны причинами, которые не зависят от приложения, например, отсутствие у пользователя прав для установки приложения. Приложения должны уметь определять характер ошибки, чтобы избежать повторных попыток обновления, приводящих к ошибке. В результате бесконечно повторяющегося цикла попыток обновления приложение просто откажется работать. Одним из способов проверки результата обновления приложения является сравнение версии текущего приложения до обновления и после него, когда приложение запустится вновь.</p>
	 
	 <p class="- topic/p ">При проверке приложения с использованием AIR Debug Launcher (ADL) вызов метода <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> приводит к исключению IllegalOperationError.</p>
	 
	 <p class="- topic/p ">При обновлении версии приложения в Mac OS пользователь должен обладать всеми необходимыми правами на запись в каталог приложения. В Windows или Linux пользователь должен обладать правами администратора. </p>
	 
	 <p class="- topic/p ">Если обновленная версия приложения требует обновления среды выполнения, данное обновление устанавливается также. Для обновления среды выполнения пользователь данного компьютера должен обладать правами администратора.</p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> В целях безопасности указание параметра <codeph class="+ topic/ph pr-d/codeph ">version</codeph> является обязательным. Проверка версии приложения в файле AIR позволяет исключить возможность установки более старой версии приложения, в которой, возможно, содержится уязвимость системы безопасности, которую удалось исправить в новой версии.</p>
	 
	 </apiDesc><example conref="examples\Updater.update.1.as" class="- topic/example "> Обратите внимание на то, что метод <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> <i class="+ topic/ph hi-d/i ">не</i> является статическим методом класса. Необходимо создать объект Updater и вызвать метод <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> этого объекта.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.fileSystem.File;
import flash.desktop.Updater;
 
var updater:Updater = new Updater();
var airFile:File = File.applicationStorageDirectory.resolvePath("Example Application.air");
var version:String = "2.01";
updater.update(airFile, version);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdater</linktext></link><link href="air.update.xml#ApplicationUpdaterUI" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdaterUI</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:Updater:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Свойству isSupported задается значение true, если текущая платформа поддерживает класс Updater, в противном случае задается значение false.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Свойству <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph> задается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если текущая платформа поддерживает класс Updater, в противном случае задается значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:SystemTrayIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemTrayIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Класс SystemTrayIcon представляет значок в стиле области уведомлений Windows (панель задач&amp;#xAE;).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Значок на панели задач.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:InteractiveIcon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс SystemTrayIcon представляет значок в стиле области уведомлений Windows (панель задач<sup class="+ topic/ph hi-d/sup ">®</sup>).
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается в компьютерных операционных системах, но не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>	 
	 
	 <p class="- topic/p ">Значки на панели задач поддерживаются не всеми компьютерными операционными системами. Выполните проверку <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph>, чтобы узнать, поддерживает ли текущая ОС значки на панели задач.</p>
	 
	 <p class="- topic/p ">Невозможно создать экземпляр класса SystemTrayIcon. Получите объект, представляющий значок на панели задач, из свойства <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> «глобального» объекта NativeApplication.
	 </p>
	 
	 <p class="- topic/p ">Если поддержка значков на панели задач есть, то значок является типом <i class="+ topic/ph hi-d/i ">SystemTrayIcon</i>. В противном случае тип <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> является другим подклассом класса InteractiveIcon (обычно DockIcon).</p>
	 
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Важно!</b> Попытка применить метод класса SystemTrayIcon к объекту <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> в ОС, где AIR не поддерживает работу со значками на панелях задач, приводит к ошибке.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsSystemTrayIcon</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link></related-links><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется данным объектом SystemTrayIcon по щелчку правой кнопкой мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется данным объектом SystemTrayIcon по щелчку правой кнопкой мыши.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется данным объектом SystemTrayIcon при отпускании правой кнопки мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется данным объектом SystemTrayIcon при отпускании правой кнопки мыши.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_DOWN_rightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseDown</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется данным объектом SystemTrayIcon при нажатии правой кнопки мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется данным объектом SystemTrayIcon при нажатии правой кнопки мыши.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><shortdesc class="- topic/shortdesc ">
 	 Отправляется данным объектом SystemTrayIcon по щелчку левой кнопкой мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Отправляется данным объектом SystemTrayIcon по щелчку левой кнопкой мыши.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><shortdesc class="- topic/shortdesc ">
 	 Отправляется данным объектом SystemTrayIcon при отпускании левой кнопки мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Отправляется данным объектом SystemTrayIcon при отпускании левой кнопки мыши.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><shortdesc class="- topic/shortdesc ">
 	 Отправляется данным объектом SystemTrayIcon при нажатии левой кнопки мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Отправляется данным объектом SystemTrayIcon при нажатии левой кнопки мыши.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiValue id="flash.desktop:SystemTrayIcon:MAX_TIP_LENGTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MAX_TIP_LENGTH</apiName><shortdesc class="- topic/shortdesc ">
		 Допустимая длина всплывающей подсказки значка на панели задач.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">63</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Допустимая длина всплывающей подсказки значка на панели задач.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
		
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.
	   
	 <p class="- topic/p ">При отображении значка в контексте конкретной ОС из массива выбирается изображение, размер которого в максимальной степени подходит под текущий размер экрана (при необходимости масштабируется). Обычные размеры включают: 16x16, 32x32, 48x48 и 128x128. (В ближайшем будущем в некоторых ОС могут использоваться значки размером 512x512 пикселей.)</p>
	 
	 <p class="- topic/p ">В некоторых контекстах, если свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ничего присвоено не было, может использоваться значок ОС по умолчанию. В остальных контекстах значок не отображается.</p>
	 
	 <p class="- topic/p ">Чтобы изменить вид значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> массив объектов BitmapData.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Прямая модификация массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ни к чему не приведет.</p>
	 
	 <p class="- topic/p ">Чтобы убрать изображение значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> пустой массив.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Примечание.</b> Загружайте файлы изображений для значков в формате PNG, так как этот формат обеспечивает наилучшее альфа-смешивание. Формат GIF поддерживает только включение или отключение прозрачности, но не смешивание. Формат JPG не поддерживает прозрачность совсем.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Текущее значение высоты значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Текущее значение высоты значка в пикселях.
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">height</codeph> обозначает высоту значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение высоты может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Меню значка на панели задач.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Меню значка на панели задач.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:tooltip:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tooltip</apiName><shortdesc class="- topic/shortdesc ">
		 Всплывающая подсказка, которая появляется при выполнении определенного действия над значком на панели задач.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Всплывающая подсказка, которая появляется при выполнении определенного действия над значком на панели задач. Если длина строки превышает значение, указанное в <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon.MAX_TIP_LENGTH</codeph>, подсказка усекается.
		 
	     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Текущее значение ширины значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Текущее значение ширины значка в пикселях. 
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">width</codeph> обозначает ширину значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение ширины может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Clipboard</apiName><shortdesc class="- topic/shortdesc ">
 Класс Clipboard предоставляет контейнер для передачи данных и объектов через буфер обмена.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>NativeDragManager is AIR only and is not in FP10.
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс Clipboard предоставляет контейнер для передачи данных и объектов через буфер обмена. Получить доступ к буферу обмена ОС можно через статическое свойство <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph>.
 
 <p class="- topic/p ">В объекте Clipboard одна и та же хранимая информация может быть в различных форматах. Такая организация хранения данных предусмотрена для обеспечения максимальной совместимости с различными приложениями. Для добавления данных в объект Clipboard, используйте метод <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>.</p> 
 
 <p class="- topic/p ">Стандартными форматами являются следующие:</p>
 <ul class="- topic/ul "><li class="- topic/li ">BITMAP_FORMAT: объект BitmapData (только для AIR)</li><li class="- topic/li ">FILE_LIST_FORMAT: массив объектов File (только для AIR)</li><li class="- topic/li ">HTML_FORMAT: строковые данные в формате HTML</li><li class="- topic/li ">TEXT_FORMAT: строковые данные</li><li class="- topic/li ">RICH_TEXT_FORMAT: объект ByteArray, содержащий данные в формате RTF</li><li class="- topic/li ">URL_FORMAT: строка URL (только для AIR)</li></ul>
 <p class="- topic/p ">Эти константы имен стандартных форматов определены в классе ClipboardFormats.</p>
 
 <p class="- topic/p ">При передаче данных в операционную систему или из нее стандартные форматы автоматически преобразуются из типов данных <ph class="- topic/ph ">ActionScript</ph> в собственные типы буфера операционной системы и наоборот.</p>
 
 <p class="- topic/p ">Для добавления объектов <ph class="- topic/ph ">ActionScript</ph> в объект Clipboard можно использовать форматы, определенные приложением. Если объект сериализуемый, доступными могут быть и ссылка на объект, и клон объекта. Ссылки на объекты действуют только в пределах исходного приложения.</p>
 
 <p class="- topic/p ">Если для преобразования передаваемой информации в определенный формат требуется очень большой объем вычислений, можно указать имя функции для выполнения такого преобразования. Данную функцию можно вызвать только в том случае, если требуемый формат может быть распознан принимающим компонентом или приложением. Добавьте функцию отложенной визуализации в объект Clipboard, используя метод <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>. Обратите внимание, что в некоторых случаях операционная система вызывает функцию до завершения перетаскивания. Например, когда используется функция обработчика с целью предоставления данных для файла, перетаскиваемого из программы AIR в файловую систему, операционная системы вызывает функцию обработчика данных, как только жест перетаскивания выйдет за пределы программы AIR. Как правило, это приводит к нежелательной паузе в процессе загрузки или создания файла.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание для программ AIR.</b> Тип объекта Clipboard, на которые ссылаются объекты событий, отправляемые для событий перетаскивания и копирования-вставки HTML, отличается от типа объектов Clipboard AIR. Объекты буфера обмена JavaScript рассматриваются в руководстве для разработчика приложений AIR.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание для Flash Player.</b> В проигрывателе Flash Player 10 перед использованием операции вставки из буфера обмена должно быть отправлено событие пользователя (такого как нажатие комбинации клавиш для команды вставки или выбор команды вставки в контекстном меню щелчком мыши). Метод <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> возвратит содержимое буфера обмена только в том случае, если InteractiveObject получил и обрабатывает событие paste. При любых обстоятельствах вызов метода <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> ни к чему не приведет. В AIR то же ограничение применяется к содержимому за пределами изолированной программной среды приложения.</p> 
 
 <p class="- topic/p ">В Linux при закрытии приложения AIR данные из буфера обмена не сохраняются.</p>
  
 </apiDesc><example conref="examples\ClipboardExample.as" class="- topic/example "> В следующем примере для Adobe AIR показано копирование строки из одной переменной в другую через буфер обмена операционной системы с использованием класса ClipboardExample. Это можно сделать, выполнив следующие действия.
 
 <ol class="- topic/ol "><li class="- topic/li ">Произведите запись данных (в данном случае строковых данных) в <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</li><li class="- topic/li ">Произведите считывание содержимого буфера обмена из <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</li></ol>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Ввиду ограничений безопасности на доступ к данным из буфера обмена этот пример не работает в Flash Player. В Flash Player можно только вызвать метод <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> объекта Clipboard в обработчике события <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.desktop.Clipboard;
    import flash.desktop.ClipboardFormats;
    import flash.desktop.ClipboardTransferMode;

    public class ClipboardExample extends Sprite
    {
        public function ClipboardExample()
        {
            var sally:String = "Sally";
            var person:String;
            
            copy(sally);
            person = paste();
            trace(person); //traces: "Sally"
        }

        private function copy(text:String):void 
        {
            Clipboard.generalClipboard.clear();
            Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, text);
        }
        
        private function paste():String
        {
            if(Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT))
            {
                return String(Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT));
            } 
            else 
            {
                return null;
            }
        }
        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links><apiConstructor id="flash.desktop:Clipboard:Clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Clipboard</apiName><shortdesc class="- topic/shortdesc ">
	Создает пустой объект Clipboard.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>the example located at examples\Clipboard.clipboard.1.as should not be displayed with FP10 docs because FP10 will throw an error when new Clipboard() is called.
	</internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player не поддерживает метод <codeph class="+ topic/ph pr-d/codeph ">new Clipboard()</codeph>, так как здесь может использоваться только буфер обмена ОС. Для осуществления операций копирования/вставки с использованием буфера обмена ОС, используйте уже существующий объект Clipboard.generalClipboard. Это не приводит к ошибке в приложении AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Создает пустой объект Clipboard.
	
	<p class="- topic/p ">Создавайте объекты Clipboard для хранения данных о собственном жесте перетаскивания в Adobe AIR. Объекты Clipboard можно использовать только для жеста перетаскивания, они недоступны для повторного использования.</p>
	
	<p class="- topic/p ">Не создавайте объект Clipboard для операций копирования и вставки. Вместо этого используйте один объект <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</p>
	
	</apiDesc><example conref="examples\Clipboard.clipboard.1.as" class="- topic/example "> В следующем примере создается новый буфер обмена для использования с классом NativeDragManager.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Для осуществления операций копирования/вставки с использованием буфера обмена ОС вместо создания нового буфера обмена используйте уже существующий объект <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.Clipboard;
 
 var clipboard:Clipboard = new Clipboard();
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/generalClipboard" class="- topic/link "><linktext class="- topic/linktext ">generalClipboard</linktext></link></related-links></apiConstructor><apiOperation id="flash.desktop:Clipboard:clearData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clearData</apiName><shortdesc class="- topic/shortdesc ">
	Удаляет представления данных заданного формата.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте вызов метода generalClipboard.clearData() запрещен. В приложении Flash Player этот метод можно вызывать только во время обработки пользовательского события (в виде нажатия клавиши или щелчка мыши). В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Формат данных для удаления.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Удаляет представления данных заданного формата.
	
 	</apiDesc><example conref="examples\Clipboard.clearData.1.as" class="- topic/example "> В следующем примере из буфера обмена производится удаление всех данных в формате <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 Clipboard.generalClipboard.clearData(ClipboardFormats.TEXT_FORMAT);
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:Clipboard:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
	Удаляет все представления данных из этого объекта Clipboard.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте вызов метода generalClipboard.clear() запрещен. В приложении Flash Player этот метод можно вызывать только во время обработки пользовательского события (в виде нажатия клавиши или щелчка мыши). В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.
  	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Удаляет все представления данных из этого объекта Clipboard.
	
 	</apiDesc><example conref="examples\Clipboard.clear.1.as" class="- topic/example "> В следующем примере производится очистка буфера обмена ОС:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 Clipboard.generalClipboard.clear();
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:Clipboard:getData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getData</apiName><shortdesc class="- topic/shortdesc ">
	Определяет данные из буфера обмена, если они существуют в указанном формате.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph> не является одним из имен, определенных в классе ClipboardTransferMode.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Запрошенный объект Clipboard больше не находится в области действия (только для AIR).
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте операции чтения и записи в буфер обмена запрещены. В приложении Flash Player этот метод можно вызывать только во время обработки события <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>. В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект данного типа, соответствующий формату данных.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Возвращаемый формат данных. В строке формата может содержаться одно их стандартных имен, определенных в классе ClipboardFormats, или имя, задаваемое приложением.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">transferMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">originalPreferred</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, возвращать ли ссылку или сериализованную копию при доступе к формату данных, заданному приложением. Данное значение должно быть из списка заданных имен в классе ClipboardTransferMode. Это значение игнорируется для стандартных форматов данных; всегда возвращается копия.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Определяет данные из буфера обмена, если они существуют в указанном формате.
	
	<p class="- topic/p ">В приложении Flash Player метод <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> необходимо вызывать в обработчике события <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>. В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.</p>
	
	<p class="- topic/p ">Когда осуществляется доступ к данным стандартного формата, эти данные возвращаются в качестве нового объекта соответствующего типа данных Flash.</p>
	
	<p class="- topic/p ">При доступе к данным в формате, указанном приложением, значение параметра <codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph> определяет, возвращать ли ссылку на исходный объект или анонимный объект, содержащий сериализованную копию исходного объекта. Если при использовании режима <codeph class="+ topic/ph pr-d/codeph ">originalPreferred</codeph> или <codeph class="+ topic/ph pr-d/codeph ">clonePreferred</codeph> предпочтительная версия недоступна, Flash Player или AIR возвращает альтернативную версию. Если при использовании режима <codeph class="+ topic/ph pr-d/codeph ">originalOnly</codeph> или <codeph class="+ topic/ph pr-d/codeph ">cloneOnly</codeph> запрашиваемая версия недоступна, Flash Player или AIR возвращает значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	
	</apiDesc><example conref="examples\Clipboard.getData.1.as" class="- topic/example "> В следующем примере происходит считывание текста из буфера обмена ОС, если он существует:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;

 var pasteData:String = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String;
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setData()" class="- topic/link "><linktext class="- topic/linktext ">setData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:hasFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasFormat</apiName><shortdesc class="- topic/shortdesc ">
	Проверяет наличие данных указанного формата в данном объекте Clipboard.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Запрошенный объект Clipboard больше не находится в области действия.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте операции чтения и записи в буфер обмена запрещены.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если данные в указанном формате существуют.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Проверяемый тип формата.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Проверяет наличие данных указанного формата в данном объекте Clipboard.
	
	<p class="- topic/p ">С помощью констант класса ClipboardFormats можно ссылаться на имена стандартных форматов.</p>
	
	</apiDesc><example conref="examples\Clipboard.hasFormat.1.as" class="- topic/example "> В следующем примере производится проверка наличия в буфере обмена ОС данных в текстовом формате:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
if(Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)){
    //do something 
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:setDataHandler" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDataHandler</apiName><shortdesc class="- topic/shortdesc ">
	Добавляет ссылку на функцию обработчика, которая подготавливает данные для переноса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Свойство <codeph class="+ topic/ph pr-d/codeph ">format</codeph> или свойство <codeph class="+ topic/ph pr-d/codeph ">handler</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Запрошенный объект Clipboard больше не находится в области действия (только для AIR).
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте операции чтения и записи в буфер обмена запрещены. В приложении Flash Player этот метод можно вызывать только во время обработки пользовательского события (такого как нажатие клавиши или щелчок мыши). В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если обработчик был настроен успешно — <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. В противном случае — <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Функция, при вызове которой возвращаются передаваемые данные.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">handler</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Формат данных. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">serializable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Задайте значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если объект, возвращаемый <codeph class="+ topic/ph pr-d/codeph ">handler</codeph>, можно сериализовать (и десериализовать).
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Добавляет ссылку на функцию обработчика, которая подготавливает данные для переноса.
	
	<p class="- topic/p ">Используйте функцию обработчика, чтобы отложить создание или визуализацию данных до момента доступа к ним.</p>
	
	<p class="- topic/p ">Функция обработчика должна возвращать соответствующий заданному формату тип данных.</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Формат</entry><entry class="- topic/entry ">Возвращаемый тип</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.HTML_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph> (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.RICH_TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph> (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">Массив объектов <codeph class="+ topic/ph pr-d/codeph ">File</codeph> (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_PROMISE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">Массив объектов <codeph class="+ topic/ph pr-d/codeph ">File</codeph> (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Имя пользовательского формата</entry><entry class="- topic/entry ">Непустой</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p ">Функция обработчика вызывается только в том случае, если данные заданного формата распознаются. Обратите внимание, что в некоторых случаях операционная система вызывает функцию до завершения перетаскивания. Например, когда используется функция обработчика с целью предоставления данных для файла, перетаскиваемого из программы AIR в файловую систему, операционная система вызывает функцию обработчика данных, как только жест перетаскивания выйдет за пределы программы AIR. Как правило, это приводит к нежелательной паузе в процессе загрузки или создания файла. Для этого можно использовать экземпляр URLFilePromise.</p>
	 
	<p class="- topic/p ">Обратите внимание на то, что данные могут измениться с момента добавления обработчика до момента их считывания, если только ваше приложение не обеспечивает защиту данных. Поведение при многократном считывании данных буфера обмена, представленных функцией обработчика, не гарантировано. Буфер обмена может возвратить данные, созданные при первом вызове функции, или выполнить повторный вызов функции. Не следует полагаться ни на одно из этих поведений.</p>
	
	
	<p class="- topic/p ">В «песочнице» программы Adobe AIR можно в любое время вызвать метод <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>. В других контекстах метод <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph> можно вызывать только в ответ на событие пользователя, например нажатие клавиши или кнопки мыши.</p>
	
	<p class="- topic/p ">Для добавления данных непосредственно в этот объект Clipboard используйте метод <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>. Если вызываются оба метода — <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph> — с одинаковым именем формата, то функция обработчика не будет вызвана.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> При установке параметра <codeph class="+ topic/ph pr-d/codeph ">format</codeph> равным <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph> в системе Mac OS URL-адрес передается только в том случае, если функция обработчика возвращает действительный URL-адрес. В противном случае объект Clipboard очищается, а вызов <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> возвращает значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>).</p>
	
	</apiDesc><example conref="examples\Clipboard.setDataHandler.1.as" class="- topic/example "> В данном примере происходит добавление произвольного числа в буфер обмена ОС с использованием функции отложенных данных:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 Clipboard.generalClipboard.setDataHandler(ClipboardFormats.TEXT_FORMAT, randomNumberGenerator);

 public function randomNumberGenerator():String{
     return Math.random().toString();
 }
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setData()" class="- topic/link "><linktext class="- topic/linktext ">setData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="" invalidHref="flash.desktop.URLFilePromise.xml" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.URLFilePromise</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:setData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setData</apiName><shortdesc class="- topic/shortdesc ">
	Добавляет представление информации для передачи данных в указанном формате данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Запрашиваемый объект Clipboard оказывается за пределами области действия (это происходит при создании буфера обмена для операций перетаскивания).
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">В данном контексте операции чтения и записи в буфер обмена запрещены. В приложении Flash Player этот метод можно вызывать только во время обработки пользовательского события (в виде нажатия клавиши или щелчка мыши). В приложении AIR это ограничение применяется только к содержимому, находящемуся за пределами изолированной программной среды безопасности.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Свойство <codeph class="+ topic/ph pr-d/codeph ">format</codeph> или свойство <codeph class="+ topic/ph pr-d/codeph ">data</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если данные были записаны успешно — <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. В противном случае — <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Flash Player возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, если элемент <codeph class="+ topic/ph pr-d/codeph ">format</codeph> не поддерживается классом ClipboardFormats. (Flash Player не поддерживает следующие элементы: <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_PROMISE_LIST_FORMAT</codeph> и <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph>.)
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Формат данных.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Добавляемая информация. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">serializable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Укажите значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> для тех объектов, которые можно сериализовать (и десериализовать).
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Добавляет представление информации для передачи данных в указанном формате данных.
	
	<p class="- topic/p ">В «песочнице» программы Adobe AIR можно в любое время вызвать метод <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>. В других контекстах метод <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> можно вызывать только в ответ на событие пользователя, например нажатие клавиши или кнопки мыши.</p>
	
	<p class="- topic/p ">Различные представления одной и той же информации могут храниться в буфере обмена в нескольких форматах. Это расширяет возможности других компонентов или программ для использования доступных данных. Например, можно добавить изображение в виде растровых данных для использования редакторами изображений, в виде URL, а также в виде закодированного файла PNG для передачи в собственную файловую систему.</p>
	
	<p class="- topic/p ">Параметр data должен относиться к типу данных, соответствующему указанному формату.</p>
	<adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Формат</entry><entry class="- topic/entry ">Тип</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">строковые данные</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.HTML_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">строковые данные HTML</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">строка URL-адреса (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.RICH_TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph></entry><entry class="- topic/entry ">Данные в формате RTF</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph></entry><entry class="- topic/entry ">данные растрового изображения (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">массив <codeph class="+ topic/ph pr-d/codeph ">File</codeph></entry><entry class="- topic/entry ">массив файлов (только для AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Имя пользовательского формата</entry><entry class="- topic/entry ">любые</entry><entry class="- topic/entry ">ссылка на объект и сериализованный клон</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p ">Имя пользовательского формата не может начинаться со слов air: или flash:. Во избежание совпадения имен при использовании пользовательских форматов в качестве префикса к формату можно добавить идентификатор программы или имя пакета, например com.example.applicationName.dataPacket.</p>
	
	<p class="- topic/p ">При передаче данных внутри или между программами параметр <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> определяет, являются ли доступными ссылка и копия или только ссылка на объект. Задайте для параметра <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, чтобы сделать доступными и ссылку, и копию объекта данных. Задайте для параметра <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, чтобы сделать доступной только ссылку на объект. Ссылки на объекты действуют только в текущем приложении, поэтому установка параметра <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> на значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph> также означает, что данные такого формата недоступны для других приложений Flash Player или AIR. Компонент может выбрать между получением ссылки на объект или копии объекта, установив соответствующий режим передачи данных для буфера обмена при доступе к данным формата.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Стандартные форматы всегда преобразуются в собственные форматы системы при вставке или перетаскивании данных вне поддерживаемой программы, поэтому значение параметра <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> не влияет на доступность данных стандартного формата для программ, созданных не на базе Flash.</p>
	
	<p class="- topic/p ">Для отложенной визуализации данных формата используйте метод <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>. Если оба метода — <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph> — используются для добавления представления данных с одинаковым именем формата, то функция обработчика не будет вызвана.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> При установке параметра <codeph class="+ topic/ph pr-d/codeph ">format</codeph> равным <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph> в системе Mac OS URL-адрес передается только в том случае, если этот URL-адрес действителен. В противном случае объект Clipboard очищается, а вызов <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> возвращает значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>).</p> 
	
	</apiDesc><example conref="examples\Clipboard.setData.1.as" class="- topic/example "> В следующем примере происходит добавление в буфер обмена одного и того же содержимого в текстовом формате и формате HTML:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var htmlString:String = "&lt;html>&lt;body>Body content&lt;/body>&lt;/html>";
 Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, urlString);
 Clipboard.generalClipboard.setData(ClipboardFormats.HTML_FORMAT, urlString);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setDataHandler()" class="- topic/link "><linktext class="- topic/linktext ">setDataHandler()</linktext></link><link href="flash.desktop.xml#Clipboard/getData()" class="- topic/link "><linktext class="- topic/linktext ">getData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:Clipboard:formats:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">formats</apiName><shortdesc class="- topic/shortdesc ">
	В этом объекте Clipboard находится массив строк, в котором содержатся имена поддерживаемых форматов данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	В этом объекте Clipboard находится массив строк, в котором содержатся имена поддерживаемых форматов данных.
	
	<p class="- topic/p ">Константы имен стандартных форматов содержатся в классе ClipboardFormats. Задаваемые приложением строки могут также использоваться в качестве имен форматов для передачи данных в виде объектов.</p>
	
	</apiDesc><example conref="examples\Clipboard.formats.1.as" class="- topic/example "> В следующем примере происходит считывание массива <codeph class="+ topic/ph pr-d/codeph ">formats</codeph> из буфера обмена ОС:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var availableFormats:Array = Clipboard.generalClipboard.formats;
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link></related-links></apiValue><apiValue id="flash.desktop:Clipboard:generalClipboard:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">generalClipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Буфер обмена ОС.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:Clipboard</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Буфер обмена ОС.
	 
	 <p class="- topic/p ">Любые данные, передаваемые в буфер обмена, доступны другим приложениям. По этой причине возможно удаленное выполнение вредоносного кода в web-браузере.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В приложениях Flash Player 10 перед использованием операции вставки из буфера обмена требуется наличие пользовательского события (такого как нажатие комбинации клавиш для команды вставки или выбор команды вставки в контекстном меню щелчком мыши). Метод <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> возвратит содержимое буфера обмена только в том случае, если InteractiveObject получил и обрабатывает событие paste. При любых обстоятельствах вызов метода <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> ни к чему не приведет. В AIR то же ограничение применяется к содержимому за пределами изолированной программной среды приложения.</p>
	 
	 <p class="- topic/p ">Объект <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph> создается автоматически. Присвоить данному свойству другой экземпляр объекта Clipboard невозможно. Вместо этого для чтения и записи данных в уже существующий объект используйте методы <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>.</p>
	 
	 <p class="- topic/p ">Перед тем как записывать в буфер обмена новые данные, следует удалить из него предыдущие данные всех форматов.</p>
	 
	 <p class="- topic/p ">Объект <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph> нельзя передавать в AIR NativeDragManager. Создайте новый объект Clipboard для собственных операций перетаскивания в приложении AIR.</p>
	 
	 </apiDesc><example conref="examples\Clipboard.generalClipboard.1.as" class="- topic/example "> Порядок записи в буфер обмена операционной системы:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var copy:String = "A string to copy to the system clipboard.";
 Clipboard.generalClipboard.clear();
 Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, copy);
</codeblock></example><example conref="examples\Clipboard.generalClipboard.2.as" class="- topic/example "> Порядок чтения из буфера обмена операционной системы:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var pasteData:String  = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String;
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.desktop:Clipboard:supportsFilePromise:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsFilePromise</apiName><shortdesc class="- topic/shortdesc ">
    Обозначает, поддерживается ли в клиентской системе формат буфера предварительного образа файла.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Обозначает, поддерживается ли в клиентской системе формат буфера предварительного образа файла. 
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NotificationType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NotificationType</apiName><shortdesc class="- topic/shortdesc ">
 Класс NotificationType определяет константы, используемые в параметре priority метода DockIcon bounce(), а также параметр type метода NativeWindow notifyUser().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><Defines>constants for the supported urgency ratings of a notification.
 
 </Defines></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс NotificationType определяет константы, используемые в параметре <codeph class="+ topic/ph pr-d/codeph ">priority</codeph> метода DockIcon <codeph class="+ topic/ph pr-d/codeph ">bounce()</codeph>, а также параметр <codeph class="+ topic/ph pr-d/codeph ">type</codeph> метода NativeWindow <codeph class="+ topic/ph pr-d/codeph ">notifyUser()</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#DockIcon/bounce()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon.bounce()</linktext></link><link href="flash.display.xml#NativeWindow/notifyUser()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.notifyUser()</linktext></link></related-links><apiValue id="flash.desktop:NotificationType:CRITICAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CRITICAL</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает на то, что уведомление носит важный характер, и пользователь должен уделить этому внимание.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">critical</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает на то, что уведомление носит важный характер, и пользователь должен уделить этому внимание.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NotificationType:INFORMATIONAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INFORMATIONAL</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает на то, что уведомление носит информационный характер, и пользователь может не обращать на него внимания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">informational</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает на то, что уведомление носит информационный характер, и пользователь может не обращать на него внимания.
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:IFilePromise" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IFilePromise</apiName><shortdesc class="- topic/shortdesc ">
 Интерфейс IFilePromise определяет интерфейс, используемый средой выполнения AIR для чтения данных предварительного образа файла.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Интерфейс IFilePromise определяет интерфейс, используемый средой выполнения AIR для чтения данных предварительного образа файла.
 
 <p class="- topic/p ">Предварительный образ файла представляет собой формат буфера перетаскивания, который дает пользователю возможность перетащить пока не существующий файл за пределы программы AIR. AIR использует методы и свойства, определенные интерфейсом IFilePromise, чтобы получить доступ к данным, которые будут записаны после завершения перетаскивания предварительного образа файла.</p>
 
 <p class="- topic/p ">После перетаскивания предварительного образа файла в подходящее местоположение AIR вызывает метод <codeph class="+ topic/ph pr-d/codeph ">open()</codeph> объекта IFilePromise. В результате выполнения этого метода поставщик данных должен быть возвращен в качестве объекта, который реализует интерфейс IDataInput. Объект поставщика может быть представлен одним из встроенных классов, таких как ByteArray, FileStream, Socket и URLStream, или это может быть пользовательский класс.</p>
  
 <p class="- topic/p ">Если доступ к данным поставщика осуществляется в синхронном режиме, например при использовании ByteArray, AIR считывает объем данных, указанный в свойстве <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> экземпляра IDataInput, и записывает его в целевом файле.</p>
 
 <p class="- topic/p ">Если же доступ к данным поставщика осуществляется в асинхронном режиме, например при использовании объекта Socket, AIR регулирует процесс считывания данных и их записи в файле, исходя из событий, отправляемых поставщиком. Данные считываются при получении каждого события progress, пока не будет получено событие complete или close. Среда выполнения прослушивает следующие события (но поставщик данных не должен отправлять каждое событие):</p>
 <ul class="- topic/ul "><li class="- topic/li ">Event.OPEN</li><li class="- topic/li ">ProgressEvent.PROGRESS</li><li class="- topic/li ">ProgressEvent.SOCKET_DATA</li><li class="- topic/li ">Event.COMPLETE</li><li class="- topic/li ">Event.CLOSE</li><li class="- topic/li ">IOErrorEvent.IOERROR</li><li class="- topic/li ">SecurityErrorEvent.SECURITY_ERROR</li><li class="- topic/li ">HTTPStatusEvent.HTTP_STATUS</li><li class="- topic/li ">HTTPStatusEvent.HTTP_RESPONSE_STATUS</li></ul>
 
 <p class="- topic/p ">Когда доступны данные, пользовательские классы поставщиков данных должны отправлять событие <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> или <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>. По аналогии, после завершения чтения всех запрошенных данных должно отправляться событие <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> или <codeph class="+ topic/ph pr-d/codeph ">close</codeph>. События ошибок сообщают среде выполнения о том, что выполнить передачу данных не удалось и ее следует прервать. При необходимости должны отправляться и другие события с целью упрощения обработки ошибок и отладки логики программы.</p>
 
 <p class="- topic/p "> Методы, определяемые с помощью IFilePromise, должны вызываться средой выполнения AIR только после завершения операции перетаскивания. Обычно разработчикам не следует вызывать эти методы с помощью кода программы. </p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Класс URLFilePromise, доступный в библиотеке air.desktop, реализует интерфейс IFilePromise и использует экземпляр URLStream в качестве поставщика данных. Библиотека air.desktop включена в виде отдельных SWF- и SWC-файлов в AIR SDK.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link></related-links><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
    Вызывается средой выполнения AIR по окончании чтения всех данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Вызывается средой выполнения AIR по окончании чтения всех данных.
    
    <p class="- topic/p ">После вызова метода <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> для ссылки на объект, возращенной методом <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>, не будут вызываться никакие другие методы. Объект поставщика данных можно уничтожить.</p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
    Возвращает объект поставщика данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">IDataInput — объект, реализующий интерфейс IDataInput. Если данные предоставляются в асинхронном режиме, возвращаемый объект также должен осуществлять интерфейс IEventDispatcher.
    
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:IDataInput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Возвращает объект поставщика данных.
    
    <p class="- topic/p ">Объект поставщика данных должен реализовывать интерфейс IDataInput, который определяет методы для чтения данных. Если свойство <codeph class="+ topic/ph pr-d/codeph ">isAsync</codeph> экземпляра IFilePromise возвращает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, поставщик данных должен также поддерживать интерфейс IEventDispatcher. Следующие встроенные классы могут использоваться в качестве поставщика данных.</p>
    <ul class="- topic/ul "><li class="- topic/li ">ByteArray (синхронный)</li><li class="- topic/li ">FileStream (синхронный или асинхронный)</li><li class="- topic/li ">Socket (асинхронный)</li><li class="- topic/li ">URLStream (асинхронный)</li></ul>
    <p class="- topic/p ">Также можно создать объект пользовательского класса, который реализует необходимые интерфейсы (или расширяет другой реализующий их класс).</p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:reportError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">reportError</apiName><shortdesc class="- topic/shortdesc ">
    Вызывается средой выполнения AIR, чтобы сообщить интерфейсу IFilePromise об ошибках чтения данных из объекта поставщика данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">e</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:ErrorEvent</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Событие ошибки, содержащее подробные сведения об ошибке.
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Вызывается средой выполнения AIR, чтобы сообщить интерфейсу IFilePromise об ошибках чтения данных из объекта поставщика данных.
     
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:isAsync:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAsync</apiName><shortdesc class="- topic/shortdesc ">
    Указывает, поддерживается ли асинхронная передача данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Указывает, поддерживается ли асинхронная передача данных.
    
    <p class="- topic/p ">Если имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, то объект поставщика данных, возвращенный методом <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>, должен осуществлять интерфейс IEventDispatcher (или расширять другой реализующий его класс). Передача данных регулируется событиями <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> или <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>. AIR ожидает эти события о ходе выполнения, пока не отправляется событие <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> или <codeph class="+ topic/ph pr-d/codeph ">close</codeph>.</p>  
    
    <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">isAsync</codeph> возвращает значение false, среда выполнения AIR считает, что все данные сразу становятся доступными. В этом случае среда выполнения считывает свойство <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> объекта поставщика данных, чтобы определить объем доступных данных, и синхронно считывает эти данные.</p> 
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:relativePath:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relativePath</apiName><shortdesc class="- topic/shortdesc ">
    Относительный путь и имя файла, который будет создан из данного предварительного образа.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если в относительном пути используются комбинации .. для обозначения одного или нескольких вышестоящих каталогов, в которые вложено место назначения перетаскивания. 
	
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Относительный путь и имя файла, который будет создан из данного предварительного образа.
    
    <p class="- topic/p ">Это свойство должно содержать действительный путь. В противном случае при завершении перетаскивания выдается ошибка аргумента.</p>
    
    <p class="- topic/p ">Путь может включать подкаталоги, разрешение которых выполняется относительно местоположения перетаскивания. При необходимости создаются подкаталоги. При включении подкаталогов следует использовать константу <codeph class="+ topic/ph pr-d/codeph ">File.separator</codeph>, чтобы вставить символ-разделитель, который используется для указания пути в текущей операционной системе. Указание .. в качестве комбинации клавиш для перехода к родительскому каталогу не поддерживается. При попытке выполнения выдается ошибка аргумента. Недопустимые символы файловой системы удаляются из пути, при этом ошибка не выдается.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Чтобы позволить коду клиента задать путь, можно реализовать функцию установщика с подписью: <codeph class="+ topic/ph pr-d/codeph ">function set relativePath( value:String ):void</codeph>.</p>
    
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeProcessStartupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessStartupInfo</apiName><shortdesc class="- topic/shortdesc ">
 Этот класс предоставляет основную информацию, используемую для запуска процесса в операционной системе хоста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Этот класс предоставляет основную информацию, используемую для запуска процесса в операционной системе хоста. Он создается и передается методу <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> объекта NativeProcess.
 
 <p class="- topic/p ">Доступ к собственным процессам поддерживается только для приложений AIR, установленных с помощью собственной программы установки (то есть для приложений в профиле расширенного рабочего стола). </p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="NativeProcess.html#start()" class="- topic/link "><linktext class="- topic/linktext ">NativeProcess.html#start()</linktext></link></related-links><apiConstructor id="flash.desktop:NativeProcessStartupInfo:NativeProcessStartupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessStartupInfo</apiName><shortdesc class="- topic/shortdesc ">
	Создает пустой объект NativeProcessStartupInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Создает пустой объект NativeProcessStartupInfo.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.desktop:NativeProcessStartupInfo:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
	Аргументы командной строки, которые будут переданы процессу в момент запуска.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Аргументы командной строки, которые будут переданы процессу в момент запуска. 
	
	<p class="- topic/p ">Каждая строка в векторе <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph> передается в качестве отдельного аргумента исполняемому файлу независимо от того, какие символы она содержит. Другими словами, существует точное соответствие «один к одному». Повторной интерпретации не происходит. AIR автоматически маскирует все символы строки, для которых это необходимо (например, символы пробела).</p>

	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcessStartupInfo:executable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">executable</apiName><shortdesc class="- topic/shortdesc ">
    Объект File, который ссылается на исполняемый файл в операционной системе хоста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если указано значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, если он ссылается на каталог или на несуществующий файл.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Объект File, который ссылается на исполняемый файл в операционной системе хоста. Должен быть указан полный путь к исполняемому файлу, включая расширение.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Чтобы запустить исполняемый файл внутри пакета программ в ОС Mac OS, необходимо, чтобы объект File содержал полный путь к исполняемому файлу (внутри пакета), а не просто путь к файлу программы. </p>
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcessStartupInfo:workingDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">workingDirectory</apiName><shortdesc class="- topic/shortdesc ">
	Объект File, который ссылается на исходный рабочий каталог для нового собственного процесса.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если значение не существует или не является каталогом.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Объект File, который ссылается на исходный рабочий каталог для нового собственного процесса. Если назначено значение, где свойство <codeph class="+ topic/ph pr-d/codeph ">isDirectory</codeph> имеет значение false, выдается исключение ArgumentError.
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:SystemIdleMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemIdleMode</apiName><shortdesc class="- topic/shortdesc ">
	 Класс SystemIdleMode предоставляет константы для обозначения поведения системы в режиме ожидания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс SystemIdleMode предоставляет константы для обозначения поведения системы в режиме ожидания. Эти константы используются свойством <codeph class="+ topic/ph pr-d/codeph ">systemIdleMode</codeph> класса NativeApplication.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/systemIdleMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.systemIdleMode</linktext></link></related-links><apiValue id="flash.desktop:SystemIdleMode:KEEP_AWAKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEEP_AWAKE</apiName><shortdesc class="- topic/shortdesc ">
		 Препятствует переходу системы в режим ожидания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keepAwake</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Препятствует переходу системы в режим ожидания.
		 
		 <p class="- topic/p ">На платформе Android в программе должны быть указаны разрешения Android для DISABLE_KEYGUARD и WAKE_LOCK в дескрипторе программы, в противном случае операционная система не будет учитывать этот параметр.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemIdleMode:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
		 Система работает в соответствии с обычным поведением ждущего режима.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Система работает в соответствии с обычным поведением ждущего режима.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:ClipboardTransferMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ClipboardTransferMode</apiName><shortdesc class="- topic/shortdesc ">
 Класс ClipboardTransferMode задает константы для режимов, которые используются в качестве значений параметра transferMode метода Clipboard.getData().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Clipboard, ClipboardFormats and ClipboardTransferMode were all added to AIR 1.0. These are also being added, with some exceptions listed in this file, to FP10.
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Определяет константы для режимов передачи буфера обмена.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс ClipboardTransferMode задает константы для режимов, которые используются в качестве значений параметра <codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph>.
 
 <p class="- topic/p ">В режиме перехода предусмотрен выбор между возвратом ссылки или его копии при обращении объекту буфера обмена.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/getData()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard.getData()</linktext></link></related-links><apiValue id="flash.desktop:ClipboardTransferMode:CLONE_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLONE_ONLY</apiName><shortdesc class="- topic/shortdesc ">
    Объект буфера обмена всегда возвращает копию.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cloneOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Объект буфера обмена всегда возвращает копию.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:CLONE_PREFERRED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLONE_PREFERRED</apiName><shortdesc class="- topic/shortdesc ">
    Объект буфера обмена возвращает копию, если она доступна, и ссылку, если нет.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">clonePreferred</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Объект буфера обмена возвращает копию, если она доступна, и ссылку, если нет.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:ORIGINAL_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIGINAL_ONLY</apiName><shortdesc class="- topic/shortdesc ">
    Объект буфера обмена всегда возвращает ссылку.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">originalOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Объект буфера обмена всегда возвращает ссылку.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:ORIGINAL_PREFERRED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIGINAL_PREFERRED</apiName><shortdesc class="- topic/shortdesc ">
    Объект буфера обмена возвращает ссылку, если она доступна, и копию, если нет.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">originalPreferred</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Объект буфера обмена возвращает ссылку, если она доступна, и копию, если нет.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragManager" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragManager</apiName><shortdesc class="- topic/shortdesc ">
 Класс NativeDragManager отвечает за управление операциями перетаскивания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс NativeDragManager отвечает за управление операциями перетаскивания. С помощью технологии перетаскивания пользователь может перемещать данные между приложением AIR и ОС, между двумя приложениями или компонентами одного приложения.
 
 <p class="- topic/p ">Можно перемещать следующие типы данных:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Растровые изображения</li><li class="- topic/li ">Файлы</li><li class="- topic/li ">Текст</li><li class="- topic/li ">Строки URL</li><li class="- topic/li ">Последовательные объекты</li><li class="- topic/li ">Ссылки на объекты (действует только в пределах исходного приложения)</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Все члены NativeDragManager являются статическими. Нужды в создании этого класса нет.</p>
 
 <p class="- topic/p ">Операция перетаскивания представляет собой действие пользователя, которое начинается с щелчка по видимому элементу и его дальнейшему перетаскиванию куда-либо. По мере передвижения в окне приложения AIR перетаскиваемые интерактивные объекты в списке отображения отправляют события собственного перетаскивания. Обработчики этих событий могут вызывать методы класса NativeDragManager для определения возможности перетащить данный элемент на какой-либо объект. В результате NativeDragManager реагирует на действия пользователя изменением курсора мыши.</p>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция не поддерживается в среде AIR для телевизионных устройств. Кроме того, она поддерживается не на всех мобильных устройствах. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.isSupported</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».
 </p> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Операции перетаскивания</b></p>
 <p class="- topic/p ">Перетаскивание используется для трех типов действий, называемых <i class="+ topic/ph hi-d/i ">операциями</i>. Так как значение этих операций зависит от контекста приложения, никого определенной реакции на действия при выполнении программы не предусмотрено. Однако, правильная реализация операций повышает удобство использование данного приложения.
 </p> 
 
 <p class="- topic/p ">Возможные операции:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Копирование — осуществляет копирование данных, оставляя оригинал без изменений. (При перетаскивании объектов внутри приложения необходимо следить за тем, чтобы копировался сам объект, а не ссылка на него.)</li><li class="- topic/li ">Перемещение — переносит данные из исходного контекста в контекст, определяемый операцией перетаскивания, например, при перемещении объекта из одного списка в другой.</li><li class="- topic/li ">Ссылка — создает ярлык или ссылку на исходные данные, оставляя их в исходном контексте.</li></ul>
 
 <p class="- topic/p ">Возможные операции по перетаскиванию задаются параметром <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph> при вызове <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> в момент начала операции перетаскивания. Если параметр <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph> не задан, все операции считаются допустимыми. Потенциальные цели опускания, могут использовать свойство <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph> объекта NativeDragEvent для запрещения определенных операций перетаскивания (несмотря на то, что в ходе выполнения программы эти ограничения отсутствуют).</p>
 
 <p class="- topic/p ">Если цель опускания реализует только одно действие, то объект может настроить в обработчиках свойство <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> класса NativeDragManager на обработку событий <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph> и <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>. Настройка данного свойства до перетаскивания позволит обновлять курсор мыши для отображения поддерживаемого действия, а также исключит возможность совершения пользователем несовместимого действия с помощью клавиш-модификаторов. При совершении несовместимой операции перетаскивание не осуществляется, даже если цель вызывает метод <codeph class="+ topic/ph pr-d/codeph ">acceptDrop()</codeph>.</p>
 
 <p class="- topic/p ">Если потенциальная цель принимает опускание, она должна указать совершаемое действие путем задания свойства <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.dropAction</codeph> в ответ на событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>. Эта операция возвращается инициирующему экранному объекту в виде события <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>. Если цель опускания операцию не задает, то возвращается операция по умолчанию из списка доступных операций в следующем порядке: копирование, перемещение, ссылка. Инициирующий объект отвечает за обновление внутреннего состояния в ответ на выбранную операцию.</p> 
 
 <p class="- topic/p ">Константы строк для названий операций задаются в классе NativeDragActions.</p>
  
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Порядок событий</b></p>
 <p class="- topic/p ">Процесс перетаскивание начинается с вызова метода <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> в рамках обработчика событий <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph> или <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph> и проходит через следующую последовательность событий в ответ на действия пользователя:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> — при вызове <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> интерактивный объект, переданный в качестве параметра, становится инициирующим объектом и отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>.</li><li class="- topic/li ">Событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph> — в процессе перетаскивания инициирующий объект постоянно отправляет события <codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>.</li><li class="- topic/li ">События <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>, <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph> — при наведении перетаскиваемого объекта на интерактивный объект, последний отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>. При задержке действия над интерактивным объектом он постоянно отправляет события <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>. В ответ на любое из этих двух событий объект, выступающий в роли потенциальной цели опускания, должен осуществить проверку свойств объекта события, чтобы принять или отклонить опускание. Если формат данных и совершаемая операция находятся в списке допустимых, то обработчик этих событий вызывает <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph> и передает действие экранному объекту, который становится местом опускания (обычно это объект, который отправлял событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph> или <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>). Затем пользователь может опустить перетаскиваемый объект на цель.</li><li class="- topic/li ">Событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph> — при выходе жеста перетаскивания на границы интерактивного объекта объект отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>. Если данный объект был выбран в качестве целевого путем вызова метода <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph>, этот выбор считается больше недействительным. При повторном входе жеста перетаскивания в пределы действия интерактивного объекта необходимо также вызвать <codeph class="+ topic/ph pr-d/codeph ">acceptDrop()</codeph> повторно.</li><li class="- topic/li ">Событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph> — целевой экранный объект отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>, когда пользователь отпускает кнопку мыши над объектом. Обработчик данного события получает доступ к свойству <codeph class="+ topic/ph pr-d/codeph ">transferable</codeph> объекта события и устанавливает свойство <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.dropAction</codeph> для оповещения инициирующего объекта об операции, которую необходимо выполнить.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> — когда пользователь в конце жеста перетаскивания отпускает кнопку мыши, инициирующий объект отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> (независимо от результата самого опускания). Обработчик этого события проверяет свойство <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> объекта события и определяет вносимые изменения в его внутреннее состояние данных, если таковые требуется (например, удаление из списка перетащенного элемента). Если <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> является <codeph class="+ topic/ph pr-d/codeph ">NativeDragActions.NONE</codeph>, тогда перетаскивание элемента на пригодный целевой объект не произошло.</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Жесты при работе с приложениями</b></p>
 <p class="- topic/p ">Когда жест перетаскивания входит в окно приложения AIR из приложения, не поддерживающего AIR, то событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> или <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> объектом не отправляется. Отправляемые во время этого жеста события будут, напротив, следовать тому же принципу, что и жесты, начатые и законченные в пределах приложения AIR.</p>
 
 <p class="- topic/p ">Когда жест перетаскивания покидает окно приложения AIR, то целевой объект для отправки событий <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>, <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph> или <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph> отсутствует. Инициирующий объект по-прежнему отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>, которое сообщает об операции перетаскивания, установленной операционной системой (или <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, если опускание было отклонено).</p>
 
 <p class="- topic/p ">Когда жест перетаскивания перемещается между двумя приложениями AIR, то инициирующие и целевые экранные объекты этих приложений отправляют события как обычно.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Информация о передаче</b></p>
 <p class="- topic/p ">Все передаваемые во время жеста перетаскивания данные содержатся в объекте Clipboard. Этот объект данных добавляется к операции перетаскивания с помощью метода <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>, с которого начинается жест перетаскивания. Потенциальные цели опускания могут получить доступ к объекту Clipboard через свойство <codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph> самого объекта, инициирующего событие перетаскивания. После начала операции перетаскивания к объекту Clipboard можно получить доступ через обработчик события NativeDragEvent. Остальные попытки получить доступ к объекту приводят к ошибке выполнения.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Соображения безопасности</b></p>
 <p class="- topic/p ">Способ доступа к перетаскиваемым данным задается изолированными средами инициирующих и потенциальных целевых объектов. Если оба объекта находятся в одной и той же изолированной среде, тогда доступ к данным можно получить через любой объект NativeDragEvent. Однако, если эти объекты расположены в разных изолированных средах, то доступ к данным можно получить только в целевой изолированной среде в пределах обработчика события <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>. Прочие обработчики событий собственного перетаскивания также могут получать доступ к объекту Clipboard, на который ссылается свойство <codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph> события, чтобы определить доступные форматы данных. При этом вызов метода <codeph class="+ topic/ph pr-d/codeph ">clipboard.getData()</codeph> приведет к ошибке системы безопасности.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links><apiOperation id="flash.desktop:NativeDragManager:acceptDragDrop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">acceptDragDrop</apiName><shortdesc class="- topic/shortdesc ">
	 Информирует объект NativeDragManager о том, что указанный целевой интерактивный объект может принять опускание, которое соответствует текущему событию перетаскивания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">target</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Информирует объект NativeDragManager о том, что указанный целевой интерактивный объект может принять опускание, которое соответствует текущему событию перетаскивания.
	 
     <p class="- topic/p ">Данный метод может быть использован только при наличии на указанном целевом объекте обработчика <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph> для обработки, по крайней мере, одного формата данных в перетаскиваемом элементе и хотя бы одной допустимой операции.</p>
     
	 <p class="- topic/p ">Вызов данной функции возможет только в пределах следующих обработчиков событий: <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph> или <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeDragManager:doDrag" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">doDrag</apiName><shortdesc class="- topic/shortdesc ">
	 Начинает выполнять операцию перетаскивания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dragInitiator</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Обычно это объект, с которого начинается жест перетаскивания. Получает события <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> и <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clipboard</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:Clipboard</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Контейнер объектов для перетаскиваемых данных.
	 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dragImage</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:BitmapData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Во время жеста перетаскивания под курсором дополнительно отображается изображение приближения. При значении <codeph class="+ topic/ph pr-d/codeph ">null</codeph> изображение не отображается.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Point</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение смещения верхнего левого угла изображения перетаскивания относительно активной точки курсора мыши. При отрицательных значениях изображение перемещается вверх и влево относительно активной точки курсора мыши. При значении <codeph class="+ topic/ph pr-d/codeph ">null</codeph> верхний левый угол изображения перетаскивания расположен в центре активной точки курсора мыши. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">allowedActions</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeDragOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ограничивает набор операций перетаскивания, применимых для данного действия. При значении <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ограничения отсутствуют.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Начинает выполнять операцию перетаскивания.
	 
	 <p class="- topic/p ">Для начала операции перетаскивания необходимо:</p>
	 <ol class="- topic/ol "><li class="- topic/li ">Создать новый объект Clipboard.</li><li class="- topic/li ">Добавить данные для передачи, используя один или несколько форматов.</li><li class="- topic/li ">Дополнительно можно создать объект BitmapData, который будет выступать в роли изображения перетаскивания во время перетаскивания.</li><li class="- topic/li ">Дополнительно можно также создать объект NativeDragOptions для ограничения набора поддерживаемых операций при выполнении данного действия. (Если параметр <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph> не задан, используется значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, при котором ограничения отсутствуют.)</li><li class="- topic/li ">Вызов <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>.</li></ol>
	 
     <p class="- topic/p ">При вызове этого метода инициирующий объект отправляет событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> в процессе перетаскивания события <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>, а когда пользователь отпускает кнопку мыши, завершая жест перетаскивания, событие <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>. Обработчик события <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> может осуществить проверку свойства <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> данного события, чтобы определить, была ли начатая операция перетаскивания завершена успешно. Если <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> является <codeph class="+ topic/ph pr-d/codeph ">NativeDragActions.NONE</codeph>, тогда перетаскивание элемента на пригодный целевой объект не произошло.</p>
	 
     <p class="- topic/p ">Вызов этого метода возможен только в пределах следующих обработчиков событий: <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph> или <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>. (Если метод вызывает в ответ на событие <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>, то во время перемещения кнопка мыши все равно не должна быть зажата.)</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeDragManager:dragInitiator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dragInitiator</apiName><shortdesc class="- topic/shortdesc ">
	Интерактивный объект, который инициировал операцию перетаскивания, передается вызванному методу NativeDragManager.doDrag().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Интерактивный объект, который инициировал операцию перетаскивания, передается вызванному методу <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragManager:dropAction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dropAction</apiName><shortdesc class="- topic/shortdesc ">
	Операция перетаскивания, определяемая целью опускания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Операция перетаскивания, определяемая целью опускания.
	 
     <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> настраивается в обработчике события <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>. Если свойство <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> не настроено до момента наступления события <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>, тогда NativeDragManager выбирает для данного свойства первое значение из списка допустимых операций: копирование, перемещение, ссылка (именно в этой последовательности).</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeDragManager:isDragging:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDragging</apiName><shortdesc class="- topic/shortdesc ">
	Сообщает, находится ли операция перетаскивания в процессе выполнения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Сообщает, находится ли операция перетаскивания в процессе выполнения.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragManager:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Свойству isSupported задается значение true, если текущая платформа поддерживает класс NativeDragManager, в противном случае задается значение false.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Сообщает, поддерживаются ли собственные операции перетаскивания.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Свойству <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph> задается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если текущая платформа поддерживает класс NativeDragManager, в противном случае задается значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragOptions</apiName><shortdesc class="- topic/shortdesc ">
 Класс NativeDragOptions определяет константы для имен действий перетаскивания, разрешенных в операции перетаскивания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс NativeDragOptions определяет константы для имен действий перетаскивания, разрешенных в операции перетаскивания.
 
 <p class="- topic/p ">Операции перетаскивания являются частью механизма реагирования, который позволяет осуществлять обмен данными между целевыми объектами с помощью технологии перетаскивания. На уровне операционной системы данные операции являются всего лишь <i class="+ topic/ph hi-d/i ">указаниями</i>. Дальнейшая последовательность действий зависит от инициирующего и целевого объектов, участвующих в передачи данных.</p>
 
 <p class="- topic/p ">Инициирующий объект должен только разрешить выполнение поддерживаемых им операций. Например, инициирующий объект может разрешить выполнение операции <i class="+ topic/ph hi-d/i ">перемещения</i> только в том случае, если особенности внутренней архитектуры того объекта позволяют удалить исходные данные после завершения этой операции.</p>
 
 
 <p class="- topic/p ">Новый объект NativeDragOptions инициализируется с полным набором поддерживаемых операций (<codeph class="+ topic/ph pr-d/codeph ">true</codeph> — все операции разрешены).</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link></related-links><apiOperation id="flash.desktop:NativeDragOptions:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Создает строку, содержащую текущие настройки данного объекта NativeDragOptions.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">String. Текущие настройки данного объекта в виде строк.
	 
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Создает строку, содержащую текущие настройки данного объекта NativeDragOptions.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.desktop:NativeDragOptions:allowCopy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowCopy</apiName><shortdesc class="- topic/shortdesc ">
	Цель опускания поддерживает копирование перетаскиваемых данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Цель опускания поддерживает копирование перетаскиваемых данных.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragOptions:allowLink" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowLink</apiName><shortdesc class="- topic/shortdesc ">
	 Цель опускания может создать ссылку на перетаскиваемые данные.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Цель опускания может создать ссылку на перетаскиваемые данные.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragOptions:allowMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowMove</apiName><shortdesc class="- topic/shortdesc ">
	Цель опускания поддерживает перемещение перетаскиваемых данных.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Цель опускания поддерживает перемещение перетаскиваемых данных.
	
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:DockIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DockIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Класс DockIcon отвечает за отображение значка на панели Dock в стиле Mac OS X#xAE;.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Значок на панели Dock в стиле Mac OS X.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:InteractiveIcon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс DockIcon отвечает за отображение значка на панели Dock в стиле Mac OS X<sup class="+ topic/ph hi-d/sup ">®</sup>.
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается во всех компьютерных операционных системах, но не поддерживается на мобильных устройствах или в среде AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
	 
	 <p class="- topic/p ">Класс DockIcon можно использовать для изменения внешнего вида стандартных значков, например, для анимации значка или добавления информационных изображений. Вы также можете добавлять элементы в меню значка панели. Все добавленные элементы отображаются над стандартными элементами меню.</p>
	 
	 <p class="- topic/p ">Невозможно создать экземпляр класса DockIcon. Объект, отвечающий за значок панели операционной системы, находится в <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>.
	 </p>
	 
	 <p class="- topic/p ">Поддержка значков панелей присутствуют не во всех операционных системах. Выполните проверку <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph>, чтобы узнать, поддерживает ли текущая ОС значки панелей. Есть такая поддержка существует, то свойство <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> является типом класса DockIcon. В противном случае тип <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> является другим подклассом класса InteractiveIcon (обычно SystemTrayIcon).</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Важно!</b> Попытка применить метод класса DockIcon к объекту <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> в ОС, где AIR не обеспечивает поддержку работы со значками панелей, приводит к ошибке.</p>
	 
	 </apiDesc><example conref="examples\DockIconExample.as" class="- topic/example "> Следующий пример загружает последовательность изображений и при запуске таймера с меню значка панели применяет анимацию к изображению этого значка. (Чтобы этот пример работал, необходимо предоставить набор изображений и изменить URL-адреса в массиве imageURLs.)
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

 package {
    import flash.desktop.DockIcon;
    import flash.desktop.NativeApplication;
    import flash.display.Loader;
    import flash.display.NativeMenu;
    import flash.display.NativeMenuItem;
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.TimerEvent;
    import flash.net.URLRequest;
    import flash.utils.Timer;

    public class AnimatedDockIcon extends Sprite
    {
        private var imageURLs:Array =  ['gfx/frame01.png',
                                        'gfx/frame02.png',
                                        'gfx/frame03.png',
                                        'gfx/frame04.png'];
        
        private var images:Array = new Array();
        private var animTimer:Timer = new Timer(100);
                                        
        public function AnimatedDockIcon()
        {
            NativeApplication.nativeApplication.autoExit = false;
            
            addEventListener(Event.COMPLETE, loadImages);
            loadImages();
            
            animTimer.addEventListener(TimerEvent.TIMER,advanceFrame);
            addMenu();
            stage.nativeWindow.close();
        }
        
        private function addMenu():void{
            var menu:NativeMenu = new NativeMenu();
            var start:NativeMenuItem = menu.addItem(new NativeMenuItem("Start animation"));
            var stop:NativeMenuItem = menu.addItem(new NativeMenuItem("Stop animation"));
            start.addEventListener(Event.SELECT, startTimer);
            stop.addEventListener(Event.SELECT, stopTimer);
            
            var dockIcon:DockIcon =    NativeApplication.nativeApplication.icon as DockIcon;
            dockIcon.menu = menu;
        }
        
        private function startTimer(event:Event):void{
            animTimer.start();
        }

        private function stopTimer(event:Event):void{
            animTimer.stop();
        }

        private var currentFrame:int = 0;
        private function advanceFrame(event:Event):void{
            if(currentFrame &lt; images.length){
                currentFrame++;
            } else {
                currentFrame = 0;
            }
            NativeApplication.nativeApplication.icon.bitmaps = [images[currentFrame]];
        }
        

        private function loadImages(event:Event = null):void{
            if(event != null){
                images.push(event.target.content.bitmapData);
            }
            if(imageURLs.length > 0){
                var urlString:String = imageURLs.pop();
                var loader:Loader = new Loader();
                loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadImages, false, 0, true);
                loader.load(new URLRequest(urlString));
            } else {
                var complete:Event = new Event(Event.COMPLETE,false,false);
                dispatchEvent(complete);
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsDockIcon</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links><apiOperation id="flash.desktop:DockIcon:bounce" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bounce</apiName><shortdesc class="- topic/shortdesc ">
		 Уведомляет пользователя о событии, требующем его внимания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDefaultValue>NotificationType.Informational
		 
		 </apiDefaultValue><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">informational</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Срочность колебания панели.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Уведомляет пользователя о событии, требующем его внимания.
		 
		 <p class="- topic/p ">Вызов этого метода приводит к колебанию значка панели только тогда, когда приложение работает в фоновом режиме. Если значением <codeph class="+ topic/ph pr-d/codeph ">priority</codeph> является <codeph class="+ topic/ph pr-d/codeph ">NotificationType.Informational</codeph>, то значок колеблется только один раз. Если значением <codeph class="+ topic/ph pr-d/codeph ">priority</codeph> является <codeph class="+ topic/ph pr-d/codeph ">NotificationType.Critical</codeph>, то значок колеблется до тех пор, пока приложение не станет активным.</p>
		 
		 </apiDesc><example conref="examples\DockIcon.bounce.1.as" class="- topic/example "> Следующий пример вызывает колебание значка панели до тех пор, пока пользователь не активирует приложение:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.display.DockIcon;
 import flash.display.NotificationType;
 import flash.desktop.NativeApplication;

 if(NativeApplication.supportsDockIcon){
     var dockIcon:DockIcon = NativeApplication.nativeApplication.icon As DockIcon;
     dockIcon.bounce(NotificationType.CRITICAL);
 }
 
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NotificationType" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NotificationType</linktext></link><link href="flash.display.xml#NativeWindow/notifyUser()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.notifyUser()</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:DockIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
        
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Изображение значка в массиве объектов BitmapData различных размеров. 
        </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        
		  
	 Изображение значка в массиве объектов BitmapData различных размеров.
	   
	 <p class="- topic/p ">При отображении значка в контексте конкретной ОС из массива выбирается изображение, размер которого в максимальной степени подходит под текущий размер экрана (при необходимости масштабируется). Обычные размеры включают: 16x16, 32x32, 48x48 и 128x128. (В ближайшем будущем в некоторых ОС могут использоваться значки размером 512x512 пикселей.)</p>
	 
	 <p class="- topic/p ">В некоторых контекстах, если свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ничего присвоено не было, может использоваться значок ОС по умолчанию. В остальных контекстах значок не отображается.</p>
	 
	 <p class="- topic/p ">Чтобы изменить вид значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> массив объектов BitmapData.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Прямая модификация массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ни к чему не приведет.</p>
	 
	 <p class="- topic/p ">Чтобы убрать изображение значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> пустой массив.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Примечание.</b> Загружайте файлы изображений для значков в формате PNG, так как этот формат обеспечивает наилучшее альфа-смешивание. Формат GIF поддерживает только включение или отключение прозрачности, но не смешивание. Формат JPG не поддерживает прозрачность совсем.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Текущее значение высоты значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Текущее значение высоты значка в пикселях.
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">height</codeph> обозначает высоту значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение высоты может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Системное меню данного значка панели.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Системное меню данного значка панели.
		 
		 <p class="- topic/p ">Все элементы меню отображаются над стандартными элементами. Стандартные элементы невозможно изменить или удалить.</p>
		 
		 </apiDesc><example conref="examples\DockIcon.menu.1.as" class="- topic/example "> Следующий пример добавляет элемент в меню значка панели:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.NativeApplication;
 import flash.events.Event;
 
private function createDockIconMenu():void{
    if(NativeApplication.supportsDockIcon){                
        var dockIcon:DockIcon = NativeApplication.nativeApplication.icon as DockIcon;
        
        var dockMenu:NativeMenu = new NativeMenu();
        var command:NativeMenuItem = dockMenu.addItem(new NativeMenuItem("Command"));
        command.addEventListener(Event.SELECT, onCommand);
        
        dockIcon.menu = dockMenu;
    }
}

 private function onCommand(event:Event):void{
     //do command...
 }
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Текущее значение ширины значка в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Текущее значение ширины значка в пикселях. 
		 
		 <p class="- topic/p ">Некоторые контексты значков поддерживают динамические размеры. Свойство <codeph class="+ topic/ph pr-d/codeph ">width</codeph> обозначает ширину значка, выбранного из массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> для данного контекста. Если в ОС было использовано масштабирование, то текущее значение ширины может отличаться.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Icon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Icon</apiName><shortdesc class="- topic/shortdesc "> 
	 В классе Icon содержится значок операционной системы.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 В классе Icon содержится значок операционной системы. 
	 
	 <p class="- topic/p ">У объекта Icon есть единственное свойство <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>, которое представляет собой массив объектов BitmapData. Одновременно может отображаться только один значок. ОС выбирает изображение, которое в наибольшей степени соответствует текущему размеру экрана, масштабируя его при необходимости.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File.icon</linktext></link><link href="flash.display.xml#BitmapData" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData</linktext></link></related-links><apiValue id="flash.desktop:Icon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
	 Изображение значка в массиве объектов BitmapData различных размеров.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Изображение значка в массиве объектов BitmapData различных размеров.
	   
	 <p class="- topic/p ">При отображении значка в контексте конкретной ОС из массива выбирается изображение, размер которого в максимальной степени подходит под текущий размер экрана (при необходимости масштабируется). Обычные размеры включают: 16x16, 32x32, 48x48 и 128x128. (В ближайшем будущем в некоторых ОС могут использоваться значки размером 512x512 пикселей.)</p>
	 
	 <p class="- topic/p ">В некоторых контекстах, если свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ничего присвоено не было, может использоваться значок ОС по умолчанию. В остальных контекстах значок не отображается.</p>
	 
	 <p class="- topic/p ">Чтобы изменить вид значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> массив объектов BitmapData.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Прямая модификация массива <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> ни к чему не приведет.</p>
	 
	 <p class="- topic/p ">Чтобы убрать изображение значка, присвойте свойству <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph> пустой массив.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Примечание.</b> Загружайте файлы изображений для значков в формате PNG, так как этот формат обеспечивает наилучшее альфа-смешивание. Формат GIF поддерживает только включение или отключение прозрачности, но не смешивание. Формат JPG не поддерживает прозрачность совсем.  
	 </p>
	  
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File.icon</linktext></link><link href="flash.display.xml#BitmapData" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData</linktext></link></related-links></apiValue></apiClassifier></apiPackage>