<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.accessibility" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.accessibility</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.accessibility:ISimpleTextSelection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ISimpleTextSelection</apiName><shortdesc class="- topic/shortdesc ">
	
	Класс ISimpleTextSelection можно использовать для добавления поддержки интерфейса MSAA ISimpleTextSelection в экземпляр AccessibilityImplementation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	Класс ISimpleTextSelection можно использовать для добавления поддержки интерфейса MSAA ISimpleTextSelection в экземпляр AccessibilityImplementation.
	
	<p class="- topic/p ">Если подкласс AccessibilityImplementation реализует эти два получателя в данном классе, то программа чтения экрана, такая как JAWS, может с их помощью определить диапазон выделения текста. Подкласс AccessibilityImplementation не должен формально объявлять то, что он реализует этот интерфейс. Достаточно объявить получателей для этих двух свойств следующим образом:</p>
	
	<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	class TextAreaAccImpl extends AccesibilityImplementation
	{
	...
		public function get selectionAnchorIndex():int
		{
		...
		}
		public function get selectionActiveIndex():int
		{
		...
	}
	}
	</codeblock>
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.AccessibilityImplementation</linktext></link></related-links><apiValue id="flash.accessibility:ISimpleTextSelection:flash.accessibility:ISimpleTextSelection:selectionActiveIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">selectionActiveIndex</apiName><shortdesc class="- topic/shortdesc "> 
		 Отсчитываемое от нуля значение индекса для последнего символа в текущем выделенном фрагменте.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Отсчитываемое от нуля значение индекса для последнего символа в текущем выделенном фрагменте. Если требуется, чтобы компонент поддерживал встроенный редактор IME или специальные возможности, необходимо переопределить этот метод.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:ISimpleTextSelection:flash.accessibility:ISimpleTextSelection:selectionAnchorIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">selectionAnchorIndex</apiName><shortdesc class="- topic/shortdesc "> 
		 Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте. Если требуется, чтобы компонент поддерживал встроенный редактор IME или специальные возможности, необходимо переопределить этот метод.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.accessibility:AccessibilityImplementation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AccessibilityImplementation</apiName><shortdesc class="- topic/shortdesc ">
 
 Класс AccessibilityImplementation является базовым классом в Flash Player, реализующим расширенный доступ в компонентах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Класс AccessibilityImplementation является базовым классом в Flash Player, реализующим расширенный доступ в компонентах. Этот класс обеспечивает связь между компонентом и средством чтения с экрана. Средства чтения с экрана применяются для представления содержимого экрана в виде синтезированной речи или шрифта Брайля для слабовидящих пользователей.
 
 <p class="- topic/p ">Класс AccessibilityImplementation предоставляет набор методов, которые позволяют разработчику компонентов создавать информацию о системных ролях, событиях на основе объектов и состояниях, доступных для специальных возможностей.</p>
 
 <p class="- topic/p ">Adobe Flash Player использует платформу Microsoft Active Accessibility (MSAA), которая обеспечивает наглядный и стандартизированный способ взаимодействия приложений и программ чтения с экрана. Для получения дополнительной информации о работе Flash Player с MSAA см. главу о специальных возможностях в документе <i class="+ topic/ph hi-d/i ">Использование Flex SDK</i>.</p>
 
 <p class="- topic/p ">Методы класса AccessibilityImplementation являются подмножеством интерфейса <xref href="http://msdn.microsoft.com/en-us/library/ms696097(VS.85).aspx" class="- topic/xref ">IAccessible</xref> для экземпляра компонента.</p>
 
 <p class="- topic/p ">Способ, которым AccessibilityImplementation реализует интерфейс IAccessible, и отправляемые им события зависят от вида реализуемого компонента.</p>
 
 <p class="- topic/p ">Не следует создавать экземпляр AccessibilityImplementation непосредственно путем вызова его конструктора. Вместо этого можно создать новые реализации расширенного доступа, расширив класс AccImpl для каждого нового компонента. Во Flash см. пакет fl.accessibility. Во Flex см. пакет mx.accessibility и главу о специальных возможностях в руководстве <i class="+ topic/ph hi-d/i ">Использование Flex SDK</i>.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Класс AccessibilityImplementation не поддерживается в среде выполнения AIR до версий 2. Класс доступен для компиляции в среде AIR до версии 2, но не поддерживается в среде выполнения в AIR до версии 2.</p>
 
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.accessibility:AccessibilityImplementation:AccessibilityImplementation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AccessibilityImplementation</apiName><shortdesc class="- topic/shortdesc ">
	 Статический конструктор.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Статический конструктор. Не следует создавать экземпляр AccessibilityImplementation непосредственно путем вызова его конструктора. Вместо этого можно создать новые реализации расширенного доступа, расширив класс mx.accessibility.AccImpl для каждого нового компонента. 
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="" invalidHref="mx.accessibility.AccImpl.xml" class="- topic/link "><linktext class="- topic/linktext ">mx.accessibility.AccImpl</linktext></link></related-links></apiConstructor><apiOperation id="flash.accessibility:AccessibilityImplementation:accDoDefaultAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">accDoDefaultAction</apiName><shortdesc class="- topic/shortdesc ">
	 Метод IAccessible, выполняющий действия по умолчанию, связанные с компонентом, представленным этим AccessibilityImplementation или являющимся одним из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Выполняет действие по умолчанию, связанное с компонентом.
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод IAccessible, выполняющий действия по умолчанию, связанные с компонентом, представленным этим AccessibilityImplementation или являющимся одним из его дочерних элементов.
	 
	 <p class="- topic/p ">Этот метод следует реализовывать только в том случае, если AccessibilityImplementation представляет элемент пользовательского интерфейса, имеющий действие по умолчанию в модели MSAA.</p>
	 
	 <p class="- topic/p ">При реализации <codeph class="+ topic/ph pr-d/codeph ">accDoDefaultAction()</codeph> только для AccessibilityImplementation или только для его дочерних элементов необходимо в некоторых случаях указать отсутствие действия по умолчанию для определенного childID, который был передан. Для этого следует задать свойству <codeph class="+ topic/ph pr-d/codeph ">errno</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">E_MEMBERNOTFOUND</codeph>.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для выполнения соответствующего действия по умолчанию в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase. Выполнение действия по умолчанию «двойной щелчок» для одного из дочерних элементов пункта списка класса ListBase и наследуемых из него классов выделяет этот элемент.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 override public function accDoDefaultAction(childID:uint):void
	 {
	 	if (childID > 0)
	 		ListBase(master).selectedIndex = childID - 1;
	 }</codeblock>
	 </example></apiOperationDetail></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:accLocation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">accLocation</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения DisplayObject или Rectangle с указанием ограничительной рамки дочернего элемента в AccessibilityImplementation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Rectangle</codeph> с указанием ограничительной рамки дочернего элемента, определенного параметром <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>.
	 
	 
	 </apiDesc><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает объект DisplayObject или Rectangle, который определяет ограничительную рамку дочернего элемента.
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Rectangle</codeph> с указанием ограничительной рамки дочернего элемента в AccessibilityImplementation.
	 
	 <p class="- topic/p ">Этот метод никогда не вызывается с <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равным нулю. Если AccessibilityImplementation никогда не будет содержать дочерние элементы, то не следует реализовывать этот метод. Если AccessibilityImplementation может содержать дочерние элементы, то этот метод обязателен.</p>
	 
	 <p class="- topic/p ">Требования этого метода выполняются возвращением объекта, который непосредственно представляет дочерний элемент. Для этого дочерний элемент должен являться <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>. В этом случае необходимо возвратить <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>, соответствующий имени экземпляра, связанному с соответствующим визуальным объектом в списке отображения.</p>	
	 
	 <p class="- topic/p ">Если дочерний элемент не отвечает вышеизложенным требованиям, можно самостоятельно рассчитать значения ограничительной рамки и возвратить <codeph class="+ topic/ph pr-d/codeph ">Rectangle</codeph> со свойствами: <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph>, <codeph class="+ topic/ph pr-d/codeph ">width</codeph> и <codeph class="+ topic/ph pr-d/codeph ">height</codeph>. Элементы <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph> определяют верхний левый угол ограничительной рамки, в то время как элементы <codeph class="+ topic/ph pr-d/codeph ">width</codeph> и <codeph class="+ topic/ph pr-d/codeph ">height</codeph> определяют ее размер. Все четыре элемента должны измеряться в пикселях Stage и иметь отношение к источнику компонента, представляемого AccessibilityImplementation. Свойства <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph> могут иметь отрицательные значения, так как источник <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> не обязательно находится в левом верхнем углу.</p>
	 
	 <p class="- topic/p ">Если дочерний элемент, указанный <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>, не видим (т.е. <codeph class="+ topic/ph pr-d/codeph ">get_accState</codeph> для этого дочернего элемента возвратит значение, включающее <codeph class="+ topic/ph pr-d/codeph ">STATE_SYSTEM_INVISIBLE</codeph>), можно возвратить <codeph class="+ topic/ph pr-d/codeph ">null</codeph> из <codeph class="+ topic/ph pr-d/codeph ">accLocation</codeph>. Также можно возвратить <codeph class="+ topic/ph pr-d/codeph ">Rectangle</codeph>, представляющий координаты, где дочерний элемент появился бы в случае, если бы он был видимым.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения местоположения данного дочернего элемента в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 override public function accLocation(childID:uint):*
	 
	 {
	 	var listBase:ListBase = ListBase(master);
	 
	 	var index:uint = childID - 1;
	 	
	 	if (index &amp;lt; listBase.verticalScrollPosition ||
	 		index &amp;gt;= listBase.verticalScrollPosition + listBase.rowCount)
	 	{
	 		return null;
	 	}
	 	var item:Object = getItemAt(index);
	 
	 	return listBase.itemToItemRenderer(item);
	 }
	 </codeblock>
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject</linktext></link><link href="flash.geom.xml#Rectangle" class="- topic/link "><linktext class="- topic/linktext ">flash.geom.Rectangle</linktext></link><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696118(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible:: accLocation</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:accSelect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">accSelect</apiName><shortdesc class="- topic/shortdesc ">
	 Метод IAccessible для изменения выбора в компоненте, представленным этим AccessibilityImplementation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">operation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Битовое поле, состоящее одной или более констант флага выбора для обозначения того, как элемент выбирается и получает фокус.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод IAccessible для изменения выбора в компоненте, представленным этим AccessibilityImplementation. 
	 
	 <p class="- topic/p "> Параметр <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> всегда будет отличным от нуля. Этот метод всегда применяется к дочернему элементу, а не полному компоненту, выбором которого управляет Flash Player.</p>
	 
	 <p class="- topic/p ">Параметр <codeph class="+ topic/ph pr-d/codeph ">selFlag</codeph> является битовым полем, состоящим из одной или более констант флага выбора, позволяющим клиенту MSAA указывать, как элемент, имеющий ссылку на <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>, должен выбираться или получать фокус. Далее следуют описания констант флага выбора и информация, сообщаемая ими реализации специальных возможностей. На практике большинство реализаций этого метода в реализациях специальных возможностей, которые наследуются из класса Flex mx.accessibility.ListBaseAccImpl, игнорирует константу <codeph class="+ topic/ph pr-d/codeph ">selFlag</codeph> и вместо этого учитывает поведение компонента при выборе клавиатуры для обработки нескольких выборов.</p>
	 
	 <p class="- topic/p ">Параметр <codeph class="+ topic/ph pr-d/codeph ">selFlag</codeph> может содержать или не содержать флаг <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_TAKEFOCUS</codeph>. Если он содержит флаг, то необходимо установить фокус дочернего элемента на указанный <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> и, если не присутствует также <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_EXTENDSELECTION</codeph>, назначить этот дочерний элемент привязкой выбора. В противном случае фокус дочернего элемента и привязка выбора должны оставаться без изменений несмотря на то, что дополнительные флаги, представленные ниже, могут изменять выбор.</p>
	 
	 <p class="- topic/p "> Параметр <codeph class="+ topic/ph pr-d/codeph ">selFlag</codeph> всегда будет содержать один из следующих четырех флажков, которые обозначают требуемый вид модификации выбора:</p>
	 <ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">SELFLAG_TAKESELECTION</codeph>: Отмените любой существующий выбор и установите выбор для указанного <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>.</p>
	 </li><li class="- topic/li "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">SELFLAG_EXTENDSELECTION</codeph>: Вычислите диапазон дочерних элементов между (и включая) точкой привязки для выбора и указанным <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>. Если <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_ADDSELECTION</codeph> присутствует, добавьте все эти дочерние элементы к выбору. Если <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_REMOVESELECTION</codeph> присутствует, удалите все эти дочерние элементы из выбора. Если отсутствует <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_ADDSELECTION</codeph> или <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_REMOVESELECTION</codeph>, все эти дочерние элементы должны принять состояние выбора точки привязки для выбора: если точка привязки для выбора выбрана, добавьте эти дочерние элементы к выбору, в противном случае удалите их из выбора.</p>
	 </li><li class="- topic/li "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">SELFLAG_ADDSELECTION</codeph> (без <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_EXTENDSELECTION</codeph>): Добавьте указанный <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> к выбору.</p>
	 </li><li class="- topic/li "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">SELFLAG_REMOVESELECTION</codeph> (без <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_EXTENDSELECTION</codeph>): Удалите указанный <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> из выбора.</p></li></ul>
	 
	 <p class="- topic/p ">Обратите внимание, что для не многократно выбираемого компонента, единственными действительными значениями параметра <codeph class="+ topic/ph pr-d/codeph ">selFlag</codeph> являются <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_TAKEFOCUS</codeph> и <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_TAKESELECTION</codeph>. Теоретически возможна поддержка <codeph class="+ topic/ph pr-d/codeph ">SELFLAG_REMOVESELECTION</codeph> для не многократно выбираемого компонента, позволяющего пользователю принудительно выбирать <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, но на практике большинство не многократно выбираемых компонентов не действуют таким образом и клиенты MSAA не могут выполнить попытку этого типа операции.</p>
	 
	 <p class="- topic/p ">При наличии флажков, которые кажутся недопустимыми, установите для <codeph class="+ topic/ph pr-d/codeph ">errno</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">E_INVALIDARG</codeph>.</p>
	 <p class="- topic/p ">В заключение, учтите, что при вызове <codeph class="+ topic/ph pr-d/codeph ">accSelect</codeph> Flash Player обеспечивает для него наличие <i class="+ topic/ph hi-d/i ">фокуса хоста</i> (фокуса окна его приложения контейнера) и наличие фокуса у пользовательского компонента в Flash Player.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для выбора дочернего элемента в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">override public function accSelect(selFlag:uint, childID:uint):void
	 {
	 	
	 	var listBase:ListBase = ListBase(master);
	 	
	 	var index:uint = childID - 1;
	 	
	 	if (index &amp;gt;= 0 &amp;&amp; index &amp;lt; listBase.dataProvider.length)
	 		listBase.selectedIndex = index;
	 }
	 </codeblock>
	 	
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms697291(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::accSelect</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:getChildIDArray" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getChildIDArray</apiName><shortdesc class="- topic/shortdesc ">
	 Возвращает массив, содержащий идентификаторы целого числа без знака для всех дочерних элементов в AccessibilityImplementation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Массив, содержащий идентификаторы целого числа без знака всех дочерних элементов в AccessibilityImplementation.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Возвращает массив, содержащий идентификаторы целого числа без знака для всех дочерних элементов в AccessibilityImplementation. 
	 
	 <p class="- topic/p ">Длина массива может быть нулевой. Идентификаторы в массиве должны появляться в том же логическом порядке, что и представляемые ими дочерние элементы. Если AccessibilityImplementation может содержать дочерние элементы, то этот метод обязателен; в противном случае не следует его реализовывать.</p>
	 
	 <p class="- topic/p ">При назначении дочерних идентификаторов пользовательским дочерним элементам используйте любую схему, которая сохраняет уникальность в пределах каждого экземпляра пользовательского AccessibilityImplementation. Дочерние идентификаторы не должны быть смежными, и для их упорядочения не требуется соответствие логическому упорядочению дочерних элементов. Дочерние идентификаторы <i class="+ topic/ph hi-d/i ">не</i> должны использоваться многократно: при удалении дочернего элемента его идентификатор никогда не должен использоваться снова в период существования этого экземпляра AccessibilityImplementation. Следует учесть, что ввиду различных вариантов реализации в коде Flash Player возможны нежелательные варианты поведения при использовании дочерних идентификаторов, число которых превышает один миллион.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения массива идентификаторов дочерних элементов в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 override public function getChildIDArray():Array
	 {
	 	var childIDs:Array = [];
	 
	 	if (ListBase(master).dataProvider)
	 	{
	 		var n:uint = ListBase(master).dataProvider.length;
	 		for (var i:int = 0; i &amp;lt; n; i++)
	 		{
	 			childIDs[i] = i + 1;
	 		}
	 	}
	 	return childIDs;
	 }
	 </codeblock>
	 
	 </example></apiOperationDetail></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accDefaultAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accDefaultAction</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения заданных по умолчанию действий компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка операции по умолчанию, указанная в модели MSAA для AccessibilityImplementation или одного из его дочерних элементов.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает действие по умолчанию для компонента.
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения заданных по умолчанию действий компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.
	 
	 <p class="- topic/p ">Этот метод следует реализовывать только в том случае, если AccessibilityImplementation представляет элемент пользовательского интерфейса, имеющий действие по умолчанию в модели MSAA. Убедитесь, что возвращена именно та строка, которую указывает модель MSAA. Например, строкой действия по умолчанию для компонента Button является «Press».</p>
	 
	 <p class="- topic/p ">При реализации <codeph class="+ topic/ph pr-d/codeph ">get_accDefaultAction</codeph> только для AccessibilityImplementation или только для его дочерних элементов необходимо в некоторых случаях указать отсутствие действия по умолчанию для определенного <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>, который был передан. Это выполняется возвращением значения <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения соответствующих действий по умолчанию в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">override public function get_accDefaultAction(childID:uint):String
	 {
	 	if (childID == 0)
	 		return null;
	 
	 	return "Double Click";
	 }</codeblock>
	  
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696144(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accDefaultAction</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accFocus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accFocus</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения идентификаторов целого числа без знака для дочернего элемента, при его наличии, имеющего дочерний фокус в компоненте.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Идентификатор целого числа без знака для дочернего элемента, при его наличии, имеющего дочерний фокус в компоненте.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает идентификатор целого числа без знака для дочернего элемента, имеющего дочерний фокус в компоненте.
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения идентификаторов целого числа без знака для дочернего элемента, при его наличии, имеющего дочерний фокус в компоненте. Если ни у одного дочернего элемента нет дочернего фокуса, метод возвращает нуль.
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения childID с фокусом в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">override public function get_accFocus():uint
	 {
	 var index:uint = ListBase(master).selectedIndex;
	 
	 return index >= 0 ? index + 1 : 0;
	 }</codeblock>
	 
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696150(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accFocus</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accName" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accName</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения имени компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>3000
	 
	 </helpid></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя компонента или одного из его дочерних элементов.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает имя компонента.
	  </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения имени компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.
	 
	 <p class="- topic/p ">В случае AccessibilityImplementation непосредственно (<codeph class="+ topic/ph pr-d/codeph ">childID == 0</codeph>), если этот метод не реализован или не возвращает значение, Flash Player использует значение свойства <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph> при его наличии.</p>
	 
	 <p class="- topic/p ">Для AccessibilityImplementation, у которого могут быть дочерние элементы, этот метод должен быть реализован и должен возвратить строковое значение при <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> отличном от нуля.</p>
	 
	 <p class="- topic/p ">В зависимости от типа элемента интерфейса пользователя имена в MSAA означают один из двух различных вариантов: назначенное автором имя или фактическое содержимое текста элемента. Обычно AccessibilityImplementation будет относиться к прежней категории. Его свойство <codeph class="+ topic/ph pr-d/codeph ">name</codeph> представляет имя, назначенное автором. Дочерние элементы всегда относятся ко второй категории. Их имена обозначают содержимое их текста.</p>
	 
	 <p class="- topic/p ">Когда свойство <codeph class="+ topic/ph pr-d/codeph ">name</codeph> у AccessibilityImplementation имеет значение назначенного автором имени, компоненты могут получить имена от авторов двумя способами. Первый способ определяет имена, существующие непосредственно в компоненте; например, компонент флажка может включить метку текста в качестве имени. Второй способ, который является резервным для первого способа, определяет имена, указанные в пользовательском интерфейсе и заканчивающиеся в <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph>. Этот резервный способ позволяет пользователям указывать имена аналогично тому, как они указываются для любого другого Sprite или MovieClip.</p>
	 
	 <p class="- topic/p ">Таким образом, непосредственно для AccessibilityImplementation (<codeph class="+ topic/ph pr-d/codeph ">childID == zero</codeph>) существует три возможности:</p>
	 <ul class="- topic/ul "><li class="- topic/li "><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Назначенное автором имя в компоненте</b> Метод <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен быть реализован и должен возвратить строковое значение, которое содержит имя AccessibilityImplementation при <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равном нулю. Если <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равен нулю, но у AccessibilityImplementation отсутствует имя, <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен возвратить пустую строку, чтобы предотвратить обращение проигрывателя к свойству <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph>.</p>
	 </li><li class="- topic/li "><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Назначенное автором имя из пользовательского интерфейса</b> Если у AccessibilityImplementation могут быть дочерние элементы, метод <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен быть реализован, но не должен возвращать значение при <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равном нулю. Если AccessibilityImplementation никогда не будет содержать дочерние элементы, то не следует реализовывать метод <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph>.</p>
     	 </li><li class="- topic/li "><p class="- topic/p "><b class="+ topic/ph hi-d/b ">Имя, обозначающее содержимое</b> Метод <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен быть реализован и должен возвратить соответствующее строковое значение при <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равном нулю. Если <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> равен нулю, но у AccessibilityImplementation отсутствует содержимое, <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен возвратить пустую строку, чтобы предотвратить обращение проигрывателя к свойству <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph>.</p>
     	 </li></ul>
     	 <p class="- topic/p ">Обратите внимание, что для дочерних элементов (при их наличии у AccessibilityImplementation) всегда применяется третий способ. Метод <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> должен быть реализован и должен возвратить соответствующее строковое значение при <codeph class="+ topic/ph pr-d/codeph ">childID</codeph> отличном от нуля. </p>
     	 
     	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода в классе Flex mx.accessibility.AccImpl - основная реализация специальных возможностей в Flex.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">override public function get_accName(childID:uint):String
	 {
	 	// Start with the name of the component's parent form 
	  	// if the component is contained within a form
	 	var accName:String = UIComponentAccImpl.getFormName(master);
	 
	 	// If the element requested is the component itself, 
	 	// append the value of any assigned accessibilityProperties.name	
	 	if (childID == 0 &amp;&amp; master.accessibilityProperties 
	 		&amp;&amp; master.accessibilityProperties.name 
	 			&amp;&amp; master.accessibilityProperties.name != "")
	 		accName += master.accessibilityProperties.name + " ";
	 
	 	// Append the value of the childIDs name 
	 // returned by the component-specific override 
	 // of the mx.accessibility.AccImpl.getName() utility function,
	 	// and append the component's status returned by the 
	 // component-specific override of the 
	 // mx.accessibility.AccImpl.getStatusName() utility function
	 	accName += getName(childID) + getStatusName();
	 
	 // Return the assembled String if it is neither empty nor null, 
	 // otherwise return null
	 	return (accName != null &amp;&amp; accName != "") ? accName : null;
	 }</codeblock>
	 
	 
	  </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="flash.accessibility.xml#AccessibilityProperties" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.AccessibilityProperties</linktext></link><link href="flash.accessibility.xml#AccessibilityProperties/name" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.AccessibilityProperties.name</linktext></link><link href="" invalidHref="mx.accessibility.xml#AccImpl/get_accName()" class="- topic/link "><linktext class="- topic/linktext ">mx.accessibility.AccImpl.get_accName()</linktext></link><link href="" invalidHref="mx.accessibility.xml#AccImpl/getName()" class="- topic/link "><linktext class="- topic/linktext ">mx.accessibility.AccImpl.getName()</linktext></link><link href="" invalidHref="mx.accessibility.xml#AccImpl/getStatusName()" class="- topic/link "><linktext class="- topic/linktext ">mx.accessibility.AccImpl.getStatusName()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696177(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accName</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accRole" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accRole</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения системной роли компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Код ошибки <xref href="../../runtimeErrors.html#2143" class="- topic/xref ">2143</xref>, значения по умолчанию для AccessibilityImplementation.get_accRole() должны быть изменены.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Системная роль, связанная с компонентом. 
	  
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает системную роль для компонента
	  
	 
	  </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения системной роли компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов. Системные роли предопределены для всех компонентов в MSAA.	 
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="../../accessibilityImplementationConstants.html" class="- topic/link "><linktext class="- topic/linktext ">Константы AccessibilityImplementation: константы роли объекта</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696113(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accRole</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accSelection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accSelection</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения массива, содержащего идентификаторы всех выбранных дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Массив идентификаторов всех выбранных дочерних элементов.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает массив, содержащий идентификаторы всех выбранных дочерних элементов.
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения массива, содержащего идентификаторы всех выбранных дочерних элементов. Возвращенный массив может содержать нуль, один или больше идентификаторов, все из которых являются целыми числами без знака.
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения выбранного childID в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 override public function get_accSelection():Array
	 {
	 	var accSelection:Array = [];
	 
	 	var selectedIndices:Array = ListBase(master).selectedIndices;
	 	
	 	var n:int = selectedIndices.length;
	 	for (var i:int = 0; i &amp;lt; n; i++)
	 	{
	 		accSelection[i] = selectedIndices[i] + 1;
	 	}
	 	
	 	return accSelection;
	 }
	 </codeblock>
	 
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696179(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accSelection</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accState" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accState</apiName><shortdesc class="- topic/shortdesc ">
	 Метод IAccessible для возвращения текущего состояния времени выполнения компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Код ошибки <xref href="../../runtimeErrors.html#2144" class="- topic/xref ">2144</xref>, значения по умолчанию для AccessibilityImplementation.get_accState() должны быть изменены.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Сочетание нуля, одной или более системных констант состояния. Несколько констант собираются в битовое поле с использованием побитового оператора ИЛИ (<codeph class="+ topic/ph pr-d/codeph ">|</codeph>). 
	 
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает состояние компонента
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод IAccessible для возвращения текущего состояния времени выполнения компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.
	 
	 <p class="- topic/p ">Этот метод должен возвратить сочетание нуля, одной или более предопределенных <xref href="../../accessibilityImplementationConstants.html" class="- topic/xref ">констант состояния объекта</xref> для компонентов в MSAA. При применении более одного состояния константы состояния должны быть объединены в битовое поле с использованием побитового оператора ИЛИ (<codeph class="+ topic/ph pr-d/codeph ">|</codeph>).</p>
	 
	 <p class="- topic/p ">Для обозначения того, что ни одна из констант состояния в данное время не применяется, этот метод должен возвратить нуль.</p>
	 
	 <p class="- topic/p ">Состояния STATE_SYSTEM_FOCUSABLE или STATE_SYSTEM_FOCUSED не требуется отслеживать или записывать. Flash Player обрабатывает эти состояния автоматически.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для объединения нескольких констант состояния в mx.accessibility.ListBaseAccImpl - реализация специальных возможностей Flex ListBase.
	 
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 override public function get_accState(childID:uint):uint
	 {
	 	var accState:uint = getState(childID);
	 
	 	if (childID &amp;gt; 0) 
	 	{
	 		var listBase:ListBase = ListBase(master);
	 
	 		var index:uint = childID - 1;
	 
	 		// For returning states (OffScreen and Invisible)
	 		// when the list Item is not in the displayed rows.
	 		if (index &amp;lt; listBase.verticalScrollPosition ||
	 			index &amp;gt;= listBase.verticalScrollPosition + listBase.rowCount)
	 		{
	 			accState |= (STATE_SYSTEM_OFFSCREEN |
	 						 STATE_SYSTEM_INVISIBLE);
	 		}
	 		else
	 		{
	 			accState |= STATE_SYSTEM_SELECTABLE;
	 
	 			var item:Object = getItemAt(index);
	 
	 			var renderer:IListItemRenderer =
	 				listBase.itemToItemRenderer(item);
	 
	 			if (renderer != null &amp;&amp; listBase.isItemSelected(renderer.data))
	 				accState |= STATE_SYSTEM_SELECTED | STATE_SYSTEM_FOCUSED;
	 		}
	 	}
	 
	 	return accState;
	 }</codeblock>
	 
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="../../accessibilityImplementationConstants.html" class="- topic/link "><linktext class="- topic/linktext ">Константы AccessibilityImplementation: константы состояния объекта</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms696191(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accState</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:get_accValue" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">get_accValue</apiName><shortdesc class="- topic/shortdesc ">
	 Метод MSAA для возвращения значения времени выполнения компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, представляющая значение времени выполнения компонента одного из его дочерних элементов.
	  
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">childID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число без знака, относящееся к одному из дочерних элементов компонента в соответствии с <codeph class="+ topic/ph pr-d/codeph ">getChildIDArray()</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает значение компонента
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Метод MSAA для возвращения значения времени выполнения компонента, представленного этим AccessibilityImplementation, или одного из его дочерних элементов.
	 
	 <p class="- topic/p ">Этот метод следует реализовывать только в том случае, если AccessibilityImplementation представляет элемент пользовательского интерфейса, имеющий значение в модели MSAA. Следует учесть, что некоторые элементы пользовательского интерфейса, имеющие очевидное «значение», предоставляют это значение различными средствами, такими как <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> ( например, текст), <codeph class="+ topic/ph pr-d/codeph ">get_accState</codeph> (например, флажки) или <codeph class="+ topic/ph pr-d/codeph ">get_accSelection</codeph> (например, поля списка).</p>
	 
	 <p class="- topic/p ">При реализации <codeph class="+ topic/ph pr-d/codeph ">get_accValue</codeph> только для AccessibilityImplementation или только для его дочерних элементов необходимо в некоторых случаях указать отсутствие понятие значения для определенного <codeph class="+ topic/ph pr-d/codeph ">childID</codeph>, который был передан. Это выполняется возвращением значения <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc><example class="- topic/example ">В нижеследующем примере показана реализация этого метода для возвращения соответствующего значения на основе значения <codeph class="+ topic/ph pr-d/codeph ">selectedIndex</codeph> компонента в классе Flex mx.accessibility.ListBaseAccImpl - реализация специальных возможностей ListBase.
	 
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">override public function get_accValue(childID:uint):String
	 {
	 	var accValue:String;
	 	
	 	var listBase:ListBase = ListBase(master);
	 	
	 	var index:int = listBase.selectedIndex;
	 	if (childID == 0)
	 	{
	 		if (index > -1)
	 		{
	 			var item:Object = getItemAt(index);
	 
	 			if (item is String)
	 			{
	 				accValue = item + " " + (index + 1) + " of " + listBase.dataProvider.length;
	 			}
	 			else
	 			{
	 				accValue = listBase.itemToLabel(item) + " " + (index + 1) +
	 						   " of " + listBase.dataProvider.length;
	 			}
	 		}
	 	}
	 
	 	return accValue;
	 }</codeblock>
	 
	 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#AccessibilityImplementation/getChildIDArray()" class="- topic/link "><linktext class="- topic/linktext ">getChildIDArray()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms697312(VS.85).aspx" class="- topic/link "><linktext class="- topic/linktext ">Центр разработчиков специальных возможностей Microsoft: IAccessible::get_accValue</linktext></link></related-links></apiOperation><apiOperation id="flash.accessibility:AccessibilityImplementation:isLabeledBy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isLabeledBy</apiName><shortdesc class="- topic/shortdesc ">
	 
	 Возвращает значение true или false, чтобы указать, должен ли текстовый объект с ограничительной рамкой, определенной свойствами x, y, width и height, рассматриваться как метка для компонента, представленного данным экземпляром AccessibilityImplementation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, чтобы указать, должен ли текстовый объект с данными границами рассматриваться как метка для компонента, представленного данным экземпляром AccessibilityImplementation.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">labelBounds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект Rectangle, представляющий ограничительную рамку текстового объекта.
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Указывает, является ли соседний текстовый объект меткой для этого компонента. 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
	 Возвращает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, чтобы указать, должен ли текстовый объект с ограничительной рамкой, определенной свойствами <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph>, <codeph class="+ topic/ph pr-d/codeph ">width</codeph> и <codeph class="+ topic/ph pr-d/codeph ">height</codeph>, рассматриваться как метка для компонента, представленного данным экземпляром AccessibilityImplementation. 
	 
	 <p class="- topic/p ">Координаты <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph> определяются относительно верхнего левого угла компонента, к которому применяется экземпляр AccessibilityImplementation, и могут быть отрицательными. Все координаты находятся в пределах области uint пикселов рабочей области.</p>
	 
	 <p class="- topic/p ">Этот метод позволяет сделать доступные компоненты пригодными для поиска отношений автоматической пометки во Flash Player, которые позволяют использовать внешний текст (по отношению к объекту) в качестве источника имени объекта. Данный метод необходим, потому что критерии распознавания меток могут варьироваться в зависимости от компонента. Если реализуется этот метод, необходимо ориентироваться на геометрические критерии, подобные используемым в коде проигрывателя для кнопок и текстовых полей. Эти критерии перечислены ниже.</p>
	 
	 <p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">Для кнопок любой текст, который полностью помещается на кнопке, считается меткой.</li><li class="- topic/li ">Для текстовых полей любой текст, который находится над текстовым полем и выровнен по левому краю или находится слева от него, считается меткой.</li></ul></p>
	 
	 <p class="- topic/p ">Если компонент, который представлен экземпляром AccessibilityImplementation, никогда не должен участвовать в автоматических отношениях пометки, для него не следует реализовывать <codeph class="+ topic/ph pr-d/codeph ">isLabeledBy</codeph>. Так как при этом всегда будет возвращаться значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Например, <codeph class="+ topic/ph pr-d/codeph ">isLabeledBy</codeph> не следует внедрять, когда экземпляр AccessibilityImplementation рассматривается как «назначенное автором имя в компоненте» (этот случай рассматривался в разделе <codeph class="+ topic/ph pr-d/codeph ">get_accName</codeph> выше.</p>
	 <p class="- topic/p ">Обратите внимание, что этот метод не основан на методах класса <b class="+ topic/ph hi-d/b ">IAccessible</b> и используется только для Flash.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.accessibility:AccessibilityImplementation:errno" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">errno</apiName><shortdesc class="- topic/shortdesc ">
	 Обозначает код ошибки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Обозначает код ошибки. Ошибки отображаются не в значениях возвращаемых данных, а во внешнем канале. Для обозначения ошибки следует установить свойство <codeph class="+ topic/ph pr-d/codeph ">errno</codeph> для одного из кодов ошибок, перечисленных в приложении «Константы AccessibilityImplementation». При этом значение возвращаемых данных будет игнорироваться. Проигрыватель всегда отменяет (устанавливает на нуль) свойство <codeph class="+ topic/ph pr-d/codeph ">errno</codeph> пользовательского AccessibilityImplementation перед вызовом любого метода AccessibilityImplementation.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../accessibilityImplementationConstants.html" class="- topic/link "><linktext class="- topic/linktext ">Константы AccessibilityImplementation</linktext></link></related-links></apiValue><apiValue id="flash.accessibility:AccessibilityImplementation:stub" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stub</apiName><shortdesc class="- topic/shortdesc ">
	 Используется для создания подпрограммы специальных возможностей компонента.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Используется для создания подпрограммы специальных возможностей компонента. Если компонент выпущен без реализации специальных возможностей ActionScript, Adobe рекомендует добавить подпрограмму специальных возможностей компонента. В целях использования специальных возможностей с помощью этой заглушки Flash Player обрабатывает компонент как простой графический объект вместо предоставления внутренней структуры кнопок, текстовых полей и т. д. в компоненте. 
	 
	 <p class="- topic/p ">Для создания подпрограммы специальных возможностей компонента следует создать подкласс класса AccImpl, заменив подпрограмму свойства на значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p> 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="" class="- topic/link "><linktext class="- topic/linktext ">Класс mx.accessibility.AccImpl во Flex (\sdks\4.0.0\frameworks\projects\framework\src\mx\accessibility\AccImpl.as)</linktext></link><link href="" class="- topic/link "><linktext class="- topic/linktext ">Класс fl.accessibility.AccImpl во Flash (\Local Settings\Application Data\Adobe\Flash CS5\ru_RU\Configuration\Classes\mx\accessibility\AccImpl.as)</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.accessibility:AccessibilityProperties" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AccessibilityProperties</apiName><shortdesc class="- topic/shortdesc ">
 Класс AccessibilityProperties позволяет управлять представлением объектов Flash в средствах обеспечения специальных возможностей, например в средствах чтения с экрана.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс AccessibilityProperties позволяет управлять представлением объектов Flash в средствах обеспечения специальных возможностей, например в средствах чтения с экрана.
 
 <p class="- topic/p ">Можно прикрепить объект AccessibilityProperties к любому экранному объекту, но проигрыватель Flash Player будет читать объект AccessibilityProperties только для определенных объектов: SWF-файлы целиком (представленные классом <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.root</codeph>, объектами контейнера <codeph class="+ topic/ph pr-d/codeph ">DisplayObjectContainer</codeph> и подклассами), кнопки (представленные <codeph class="+ topic/ph pr-d/codeph ">SimpleButton</codeph> и подклассами) и текстовые поля (представленные <codeph class="+ topic/ph pr-d/codeph ">TextField</codeph> и подклассами).</p>
 
 <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">name</codeph> этих объектов является самым важным задаваемым свойством, потому что навигация с использованием средств расширенного доступа осуществляется по именам объектов. Не путайте свойство <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph> со свойством <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.name</codeph> — это разные не связанные свойства. Свойство <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties.name</codeph> является именем, читаемым вслух с помощью средств расширенного доступа, тогда как <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.name</codeph> является именем переменной, доступной только в коде ActionScript.</p>
 
 <p class="- topic/p ">Во Flash Professional во время разработки свойства объектов <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties</codeph> подменяют соответствующие параметры, доступные на панели специальных возможностей.</p>
 
 <p class="- topic/p ">Для определения, запущен ли проигрыватель Flash Player в окружении, поддерживающем средства расширенного доступа, используйте свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasAccessibility</codeph>. При модификации объекта AccessibilityProperties необходимо вызвать метод <codeph class="+ topic/ph pr-d/codeph ">Accessibility.updateProperties()</codeph>, чтобы изменения вступили в силу.</p>
 
 
 </apiDesc><example conref="examples\AccessibilityPropertiesExample.as" class="- topic/example "> В следующем примере показано, как использовать классы <codeph class="+ topic/ph pr-d/codeph ">AccessibilityExample</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CustomAccessibleButton</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CustomSimpleButton</codeph> и <codeph class="+ topic/ph pr-d/codeph ">ButtonDisplayState</codeph> для создания меню, соответствующего требованиям доступности веб-контента и совместимого с основными программами экранного доступа. Основные функции класса <codeph class="+ topic/ph pr-d/codeph ">AccessibilityProperties</codeph> таковы:
 
 <ol TYPE="1" class="- topic/ol "><li class="- topic/li "> Вызовите <codeph class="+ topic/ph pr-d/codeph ">configureAssets</codeph>, в результате чего будет создана специальная кнопка, а для нее будут заданы ярлык и описание. Это значения, которые программа экранного доступа отображает для конечного пользователя.</li><li class="- topic/li ">Вызовите функцию <codeph class="+ topic/ph pr-d/codeph ">setTimeOut()</codeph>, чтобы дать проигрывателю Flash Player достаточно времени для обнаружения программы экранного доступа, прежде чем будут обновлены свойства.</li></ol>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Вызовите <codeph class="+ topic/ph pr-d/codeph ">setTimeout()</codeph> перед проверкой <codeph class="+ topic/ph pr-d/codeph ">Accessibility.active</codeph>. чтобы дать проигрывателю Flash Player те 2 секунды, которые требуются ему для подключения к программе чтения экрана (если доступна). Если не будет выделено достаточно времени задержки, вызов <codeph class="+ topic/ph pr-d/codeph ">setTimeout</codeph> может возвратить значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, даже если существует доступная программа чтения экрана.</p>
 
 <p class="- topic/p ">В следующем примере показана обработка метода <codeph class="+ topic/ph pr-d/codeph ">Accessibility.updateProperties()</codeph> только в том случае, если вызов <codeph class="+ topic/ph pr-d/codeph ">Accessibility.active</codeph> возвращает <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, что происходит лишь когда проигрыватель Flash Player подключен к активной программе чтения экрана. Если метод <codeph class="+ topic/ph pr-d/codeph ">updateProperties</codeph> вызывается без средства чтения с экрана, то вызывается исключение <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.accessibility.Accessibility;
    import flash.utils.setTimeout;
    
    public class AccessibilityPropertiesExample extends Sprite {
        public static const BUTTON_WIDTH:uint = 90;
        public static const BUTTON_HEIGHT:uint = 20;
        
        private var gutter:uint = 5;
        private var menuLabels:Array = new Array("PROJECTS", "PORTFOLIO", "CONTACT");
        private var menuDescriptions:Array = new Array("Learn more about our projects"
                                                     , "See our portfolio"
                                                     , "Get in touch with our team");
        
        public function AccessibilityPropertiesExample() {
            configureAssets();
            setTimeout(updateAccessibility, 2000); 
        }
        
        private function updateAccessibility():void {
            trace("Accessibility.active: " + Accessibility.active);
            if(Accessibility.active) {
                Accessibility.updateProperties();
            }
        }
        
        private function configureAssets():void {
            var child:CustomAccessibleButton;
            for(var i:uint; i &lt; menuLabels.length; i++) {
                child = new CustomAccessibleButton();
                child.y = (numChildren * (BUTTON_HEIGHT + gutter));
                child.setLabel(menuLabels[i]);
                child.setDescription(menuDescriptions[i]);
                addChild(child);
            }
        }
    }


import flash.accessibility.AccessibilityProperties;
import flash.display.Shape;
import flash.display.SimpleButton;
import flash.display.Sprite;
import flash.events.Event;
import flash.text.TextFormat;
import flash.text.TextField;
    
class CustomAccessibleButton extends Sprite {
    private var button:SimpleButton;
    private var label1:TextField;
    private var description:String;
    private var _name:String;
        
    public function CustomAccessibleButton(_width:uint = 0, _height:uint = 0) {
        _width = (_width == 0) ? AccessibilityPropertiesExample.BUTTON_WIDTH : _width;
        _height = (_height == 0) ? AccessibilityPropertiesExample.BUTTON_HEIGHT : _height;
            
        button = buildButton(_width, _height);
        label1 = buildLabel(_width, _height);
            
        addEventListener(Event.ADDED, addedHandler);
    }
        
    private function addedHandler(event:Event):void {
        trace("addedHandler: " + name);
        var accessProps:AccessibilityProperties = new AccessibilityProperties();
        accessProps.name = this._name;
        accessProps.description = description;
        accessibilityProperties = accessProps;
        removeEventListener(Event.ADDED, addedHandler);
    }
        
    private function buildButton(_width:uint, _height:uint):SimpleButton {
        var child:SimpleButton = new CustomSimpleButton(_width, _height);
        addChild(child);
        return child;
    }

    private function buildLabel(_width:uint, _height:uint):TextField {
        var format:TextFormat = new TextFormat();
        format.font = "Verdana";
        format.size = 11;
        format.color = 0xFFFFFF;
        format.align = TextFormatAlign.CENTER;
        format.bold = true;
            
        var child:TextField = new TextField();
        child.y = 1;
        child.width = _width;
        child.height = _height;
        child.selectable = false;
        child.defaultTextFormat = format;
        child.mouseEnabled = false;
            
        addChild(child);
        return child;
    }
        
    public function setLabel(text:String):void {
        label1.text = text;
        this._name = text;
    }
        
    public function setDescription(text:String):void {
        description = text;
    }
}
    
class CustomSimpleButton extends SimpleButton {
    private var upColor:uint = 0xFFCC00;
    private var overColor:uint = 0xCCFF00;
    private var downColor:uint = 0x00CCFF;

    public function CustomSimpleButton(_width:uint, _height:uint) {
        downState = new ButtonDisplayState(downColor, _width, _height);
        overState = new ButtonDisplayState(overColor, _width, _height);
        upState = new ButtonDisplayState(upColor, _width, _height);
        hitTestState = new ButtonDisplayState(upColor, _width, _height);
        useHandCursor = true;
    }        
}

class ButtonDisplayState extends Shape {
    private var bgColor:uint;
    private var _width:uint;
    private var _height:uint;

    public function ButtonDisplayState(bgColor:uint, _width:uint, _height:uint) {
        this.bgColor = bgColor;
        this._width = _width;
        this._height = _height;
        draw();
    }

    private function draw():void {
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, _width, _height);
        graphics.endFill();
    }
}
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#Accessibility/updateProperties()" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.updateProperties()</linktext></link><link href="flash.display.xml#DisplayObject/accessibilityProperties" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.accessibilityProperties</linktext></link><link href="flash.display.xml#InteractiveObject/tabIndex" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabIndex</linktext></link><link href="flash.system.xml#Capabilities/hasAccessibility" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Capabilities.hasAccessibility</linktext></link></related-links><apiConstructor id="flash.accessibility:AccessibilityProperties:AccessibilityProperties" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AccessibilityProperties</apiName><shortdesc class="- topic/shortdesc ">
	 Создает новый объект AccessibilityProperties.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Создает новый объект AccessibilityProperties.
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.accessibility:AccessibilityProperties:description" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">description</apiName><shortdesc class="- topic/shortdesc ">
	 Позволяет назначить экранному объекту описание в файле презентации с расширенным доступом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Позволяет назначить экранному объекту описание в файле презентации с расширенным доступом. Если на текущий момент имеется достаточно информации об объекте, то целесообразней выбрать короткое имя и поместить большую часть содержания в свойство <codeph class="+ topic/ph pr-d/codeph ">description</codeph>. Применяется к SWF-файлам целиком, контейнерам, кнопкам и тексту. Значение по умолчанию — пустая строка.
     <p class="- topic/p ">Во Flash Professional это свойство соответствует полю «Описание» на панели «Расширенный доступ».</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:AccessibilityProperties:forceSimple" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">forceSimple</apiName><shortdesc class="- topic/shortdesc ">
	 При значении true предписывает проигрывателю Flash Player исключить дочерние объекты этого экранного объекта из файла презентации с расширенным доступом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> предписывает проигрывателю Flash Player исключить дочерние объекты этого экранного объекта из файла презентации с расширенным доступом. Значение по умолчанию равно <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Применяется к SWF-файлам целиком и контейнерам.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:AccessibilityProperties:name" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
	 Позволяет назначить экранному объекту имя в файле презентации с расширенным доступом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Позволяет назначить экранному объекту имя в файле презентации с расширенным доступом. Применяется к SWF-файлам целиком, контейнерам, кнопкам и тексту. Не путайте с не связанным свойством <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.name</codeph>. Значение по умолчанию — пустая строка.
     <p class="- topic/p ">Во Flash Professional это свойство соответствует полю «Имя» на панели «Расширенный доступ».</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:AccessibilityProperties:noAutoLabeling" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">noAutoLabeling</apiName><shortdesc class="- topic/shortdesc ">
	 При значении, равном true, отключает систему автоматических подписей по умолчанию для проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> отключает систему автоматических подписей по умолчанию для проигрывателя Flash Player. Автоматические подписи могут вызвать обработку текстовых объектов внутри кнопок как имен кнопок и обработку текстовых объектов около текстового поля как имен текстового поля. Значение по умолчанию равно <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Применяется только к SWF-файлам целиком.
     <p class="- topic/p ">Значение свойства <codeph class="+ topic/ph pr-d/codeph ">noAutoLabeling</codeph> игнорируется, пока оно не будет определено перед первой проверкой SWF-файла средством обеспечения расширенного доступа. Если планируется установить для свойства <codeph class="+ topic/ph pr-d/codeph ">noAutoLabeling</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, необходимо сделать это в коде как можно раньше.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:AccessibilityProperties:shortcut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shortcut</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает на сочетание клавиш, связанное с этим экранным объектом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает на сочетание клавиш, связанное с этим экранным объектом. Задайте данную строку только для элементов управления пользовательского интерфейса, которые ассоциированы с сочетанием клавиш. Применяется к контейнерам, кнопкам и тексту. Значение по умолчанию — пустая строка.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Установка данного свойства не привязывает автоматически комбинации клавиш к данному объекту, необходимо это делать самостоятельно, например путем прослушивания события <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent</codeph>.</p>
	 
	 <p class="- topic/p ">Синтаксис для данной строки использует длинные имена для управляющих клавиш и знак плюс (+), указывая на комбинацию клавиш. Примеры допустимых строк: Ctrl+F, Ctrl+Shift+Z и так далее.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.accessibility:AccessibilityProperties:silent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">silent</apiName><shortdesc class="- topic/shortdesc ">
	 При значении true исключает этот экранный объект из файла презентации с расширенным доступом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> исключает этот экранный объект из файла презентации с расширенным доступом. Значение по умолчанию равно <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Применяется к SWF-файлам целиком, контейнерам, кнопкам и тексту.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.accessibility:ISearchableText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ISearchableText</apiName><shortdesc class="- topic/shortdesc ">
	Интерфейс ISearchableText может быть реализован объектами, содержащими текст, который должен быть доступным для поиска в Интернете.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Интерфейс ISearchableText может быть реализован объектами, содержащими текст, который должен быть доступным для поиска в Интернете. 
	
	</apiDesc></apiClassifierDetail><apiValue id="flash.accessibility:ISearchableText:flash.accessibility:ISearchableText:searchText:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">searchText</apiName><shortdesc class="- topic/shortdesc "> 
		 Получает текст поиска от компонента, реализующего интерфейс ISearchableText.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Получает текст поиска от компонента, реализующего интерфейс ISearchableText.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.accessibility:Accessibility" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Accessibility</apiName><shortdesc class="- topic/shortdesc ">
 Класс Accessibility управляет связью со средствами чтения с экрана.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Accessibility, Accessibility object, built-in class
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс Accessibility управляет связью со средствами чтения с экрана. Чтение с экрана — это вспомогательная технология для пользователей с ослабленным зрением, предоставляющая аудиоверсию содержимого экрана. Методы класса Accessibility статические, то есть нет необходимости создавать экземпляр класса, чтобы воспользоваться его методами.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Поддержка в мобильных браузерах</b>: этот класс не поддерживается в мобильных браузерах.</p>
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR: </i>эта функция поддерживается во всех компьютерных операционных системах, но не поддерживается на мобильных устройствах или в средах AIR для телевизионных устройств. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
 
 <p class="- topic/p ">Для получения или установки свойства расширенного доступа для определенного объекта, такого как кнопка, видеоролик или текстовое поле, используйте свойство <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.accessibilityProperties</codeph>. Для определения, запущены ли проигрыватель или среда выполнения в среде, поддерживающей средства расширенного доступа, используйте свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasAccessibility</codeph>. </p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> AIR 2 поддерживает программу чтения экрана JAWS 11 (или более поздней версии). Дополнительные сведения см. на странице http://www.adobe.com/accessibility/.</p>
 
 </apiDesc><example conref="examples\AccessibilityExample.as" class="- topic/example "> Ниже показано, как использовать примеры классов <codeph class="+ topic/ph pr-d/codeph ">AccessibilityExample</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CustomAccessibleButton</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CustomSimpleButton</codeph> и <codeph class="+ topic/ph pr-d/codeph ">ButtonDisplayState</codeph> для создания меню, соответствующего требованиям доступности веб-содержимого и совместимого с большинством программ чтения экрана. Для этого выполняются следующие задачи:
 <ol class="- topic/ol "><li class="- topic/li ">Отслеживает свойство <codeph class="+ topic/ph pr-d/codeph ">Accessibility.active</codeph> для определения активности программы чтения экрана и наличия установленной связи проигрывателя с ней.</li><li class="- topic/li ">Если свойство <codeph class="+ topic/ph pr-d/codeph ">active</codeph> возвращает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">updateProperties()</codeph>, который применяет изменения специальных возможностей к кнопкам из данного примера.</li><li class="- topic/li ">В примере вызывается метод <codeph class="+ topic/ph pr-d/codeph ">flash.utils.setTimeout()</codeph>, указывающий, что метод закрытия <codeph class="+ topic/ph pr-d/codeph ">updateAccessibility()</codeph> будет вызван через 2 секунды.</li></ol>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b>Вызовите метод <codeph class="+ topic/ph pr-d/codeph ">setTimeout()</codeph>, прежде чем проверять <codeph class="+ topic/ph pr-d/codeph ">Accessibility.active</codeph>, чтобы дать проигрывателю Flash Player те 2 секунды, которые ему требуются для подключения к программе чтения экрана (если доступна). Если не будет выделено достаточно времени задержки, вызов <codeph class="+ topic/ph pr-d/codeph ">setTimeout</codeph> может возвратить значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, даже если существует доступная программа чтения экрана.
 </p>
 <p class="- topic/p ">В следующем примере показана обработка метода <codeph class="+ topic/ph pr-d/codeph ">Accessibility.updateProperties()</codeph> только в том случае, если вызов <codeph class="+ topic/ph pr-d/codeph ">Accessibility.active</codeph> возвращает <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, что происходит лишь когда проигрыватель Flash Player подключен к активной программе чтения экрана. Если метод <codeph class="+ topic/ph pr-d/codeph ">updateProperties</codeph> вызывается без средства чтения с экрана, то вызывается исключение <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.accessibility.Accessibility;
    import flash.utils.setTimeout;
    
    public class AccessibilityExample extends Sprite {
        public static const BUTTON_WIDTH:uint = 90;
        public static const BUTTON_HEIGHT:uint = 20;
        
        private var gutter:uint = 5;
        private var menuLabels:Array = new Array("PROJECTS", "PORTFOLIO", "CONTACT");
        private var menuDescriptions:Array = new Array("Learn more about our projects"
                                                     , "See our portfolio"
                                                     , "Get in touch with our team");
        
        public function AccessibilityExample() {
            configureAssets();
            setTimeout(updateAccessibility, 2000); 
        }
        
        private function updateAccessibility():void {
            trace("Accessibility.active: " + Accessibility.active);
            if(Accessibility.active) {
                Accessibility.updateProperties();
            }
        }
        
        private function configureAssets():void {
            var child:CustomAccessibleButton;
            for(var i:uint; i &lt; menuLabels.length; i++) {
                child = new CustomAccessibleButton();
                child.y = (numChildren * (BUTTON_HEIGHT + gutter));
                child.setLabel(menuLabels[i]);
                child.setDescription(menuDescriptions[i]);
                addChild(child);
            }
        }
    }
}
    
import flash.accessibility.AccessibilityProperties;
import flash.display.Shape;
import flash.display.SimpleButton;
import flash.display.Sprite;
import flash.events.Event;
import flash.text.TextFormat;
import flash.text.TextField;


class CustomAccessibleButton extends Sprite {
    private var button:SimpleButton;
    private var label:TextField;
    private var description:String;
    private var _name:String;
        
    public function CustomAccessibleButton(_width:uint = 0, _height:uint = 0) {
        _width = (_width == 0) ? AccessibilityExample.BUTTON_WIDTH : _width;
        _height = (_height == 0) ? AccessibilityExample.BUTTON_HEIGHT : _height;
        
        button = buildButton(_width, _height);
        label = buildLabel(_width, _height);
            
        addEventListener(Event.ADDED, addedHandler);
    }
        
    private function addedHandler(event:Event):void {
        trace("addedHandler: " + this._name);
        var accessProps:AccessibilityProperties = new AccessibilityProperties();
        accessProps.name = this._name;
        accessProps.description = description;
        accessibilityProperties = accessProps;
        removeEventListener(Event.ADDED, addedHandler);
    }
        
    private function buildButton(_width:uint, _height:uint):SimpleButton {
        var child:SimpleButton = new CustomSimpleButton(_width, _height);
        addChild(child);
        return child;
    }

    private function buildLabel(_width:uint, _height:uint):TextField {
        var format:TextFormat = new TextFormat();
        format.font = "Verdana";
        format.size = 11;
        format.color = 0xFFFFFF;
        format.align = TextFormatAlign.CENTER;
        format.bold = true;
        
        var child:TextField = new TextField();
        child.y = 1;
        child.width = _width;
        child.height = _height;
        child.selectable = false;
        child.defaultTextFormat = format;
        child.mouseEnabled = false;
            
        addChild(child);
        return child;
    }
        
    public function setLabel(text:String):void {
        label.text = text;
        this._name = text;
    }
        
    public function setDescription(text:String):void {
        description = text;
    }
}
    
class CustomSimpleButton extends SimpleButton {
    private var upColor:uint = 0xFFCC00;
    private var overColor:uint = 0xCCFF00;
    private var downColor:uint = 0x00CCFF;

    public function CustomSimpleButton(_width:uint, _height:uint) {
        downState = new ButtonDisplayState(downColor, _width, _height);
        overState = new ButtonDisplayState(overColor, _width, _height);
        upState = new ButtonDisplayState(upColor, _width, _height);
        hitTestState = new ButtonDisplayState(upColor, _width, _height);
        useHandCursor = true;
    }        
}

class ButtonDisplayState extends Shape {
    private var bgColor:uint;
    private var _width:uint;
    private var _height:uint;

    public function ButtonDisplayState(bgColor:uint, _width:uint, _height:uint) {
        this.bgColor = bgColor;
        this._width = _width;
        this._height = _height;
        draw();
    }

    private function draw():void {
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, _width, _height);
        graphics.endFill();
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/accessibilityProperties" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.accessibilityProperties</linktext></link><link href="flash.system.xml#Capabilities/hasAccessibility" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Capabilities.hasAccessibility</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Socket</linktext></link><link href="http://www.adobe.com/accessibility/" class="- topic/link "><linktext class="- topic/linktext ">http://www.adobe.com/accessibility/</linktext></link></related-links><apiOperation id="flash.accessibility:Accessibility:updateProperties" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateProperties</apiName><shortdesc class="- topic/shortdesc ">
	Предписывает проигрывателю Flash Player применять любые изменения специальных возможностей, внесенные с помощью свойства DisplayObject.accessibilityProperties.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">accessibility; Accessibility.updateProperties, updateProperties, screen reader,
	MSAA
    </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Специальные возможности не поддерживаются этой версией проигрывателя Flash Player. Не вызывайте метод <codeph class="+ topic/ph pr-d/codeph ">Accessibility.updateProperties()</codeph>, если свойство <codeph class="+ topic/ph pr-d/codeph ">flash.system.Capabilities.hasAccessibility</codeph> равно <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Предписывает проигрывателю Flash Player применять любые изменения специальных возможностей, внесенные с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">DisplayObject.accessibilityProperties</codeph>. Необходимо вызвать данный метод, чтобы изменения вступили в силу. 
	
	<p class="- topic/p ">Если выполняется модификация свойств расширенного доступа для нескольких объектов, то необходим только один вызов метода <codeph class="+ topic/ph pr-d/codeph ">Accessibility.updateProperties()</codeph>, так как несколько вызовов может привести к уменьшению производительности и некорректной работе средства чтения с экрана.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#Accessibility/active" class="- topic/link "><linktext class="- topic/linktext ">active</linktext></link><link href="flash.display.xml#DisplayObject/accessibilityProperties" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.accessibilityProperties</linktext></link><link href="flash.system.xml#Capabilities/hasAccessibility" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Capabilities.hasAccessibility</linktext></link></related-links></apiOperation><apiValue id="flash.accessibility:Accessibility:active:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">active</apiName><shortdesc class="- topic/shortdesc ">
	Показывает, активна ли программа чтения с экрана в данный момент и поддерживает ли проигрыватель связь с ней.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Accessibility.isActive, Accessibility, isActive, screen reader, MSAA
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Показывает, активна ли программа чтения с экрана в данный момент и поддерживает ли проигрыватель связь с ней. Используйте данный метод, если в присутствии программы чтения с экрана требуется другое поведение приложения. 
	
	<p class="- topic/p ">После того как этому свойству задается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, оно остается <codeph class="+ topic/ph pr-d/codeph ">true</codeph> на протяжении всего сеанса работы приложения. (Обычно когда пользователи включают программу чтения с экрана, то потом не выключают ее.)</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b>Прежде чем вызывать этот метод, подождите 1 или 2 секунды после запуска приложения AIR или после первого открытия окна Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player, в котором отображается документ. В противном случае может быть возвращено значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, даже если есть активный клиент расширенного доступа. Это происходит из-за механизма асинхронной передачи между клиентами расширенного доступа и Flash Player или AIR.</p>
	
	Для определения, запущен ли проигрыватель в окружении, поддерживающим средства чтения с экрана, используйте свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasAccessibility</codeph>. 
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/hasAccessibility" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Capabilities.hasAccessibility</linktext></link><link href="flash.accessibility.xml#Accessibility/updateProperties()" class="- topic/link "><linktext class="- topic/linktext ">updateProperties()</linktext></link></related-links></apiValue></apiClassifier></apiPackage>