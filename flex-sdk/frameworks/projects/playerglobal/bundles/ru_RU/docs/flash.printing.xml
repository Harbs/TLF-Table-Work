<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.printing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.printing</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.printing:PrintUIOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PrintUIOptions</apiName><shortdesc class="- topic/shortdesc ">
 Класс PrintUIOptions служит для настройки параметров в диалоговых окнах печати, которые выводятся на экран для пользователя.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс PrintUIOptions служит для настройки параметров в диалоговых окнах печати, которые выводятся на экран для пользователя. Создайте экземпляр PrintUIOptions, задайте его свойства и передайте его в качестве параметра <codeph class="+ topic/ph pr-d/codeph ">uiOptions</codeph> методу <codeph class="+ topic/ph pr-d/codeph ">PrintJob.showPageSetupDialog()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start2()</codeph>.
 
 <p class="- topic/p ">Например, в следующем коде экземпляр PrintUIOptions используется для определения минимального и максимального номеров страниц, когда отображается диалоговое окно «Параметры страницы».</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">import flash.printing.PrintJob;
 
 var myPrintJob:PrintJob = new PrintJob();
 if (myPrintJob.supportsPageSetupDialog)
 {
     var uiOpt:PrintUIOptions = new PrintUIOptions();
     uiOpt.minPage = 1;
     uiOpt.maxPage = 3;
     myPrintJob.showPageSetupDialog(uiOpt);
 }</codeblock>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob" class="- topic/link "><linktext class="- topic/linktext ">PrintJob</linktext></link><link href="flash.printing.xml#PrintJob/showPageSetupDialog()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.showPageSetupDialog()</linktext></link><link href="flash.printing.xml#PrintJob/start2()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start2()</linktext></link></related-links><apiConstructor id="flash.printing:PrintUIOptions:PrintUIOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">PrintUIOptions</apiName><shortdesc class="- topic/shortdesc ">
	 Создает новый объект PrintUIOptions.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Создает новый объект PrintUIOptions. Этот объект передается параметру <codeph class="+ topic/ph pr-d/codeph ">uiOptions</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">PrintJob.showPageSetupDialog()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start2()</codeph>.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/showPageSetupDialog()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.showPageSetupDialog()</linktext></link><link href="flash.printing.xml#PrintJob/start2()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start2()</linktext></link></related-links></apiConstructor><apiValue id="flash.printing:PrintUIOptions:disablePageRange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">disablePageRange</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает состояние параметра «Диапазон страниц» в диалоговом окне печати: отключен (true) или доступен для редактирования (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
	 
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает состояние параметра «Диапазон страниц» в диалоговом окне печати: отключен (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или доступен для редактирования (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). По умолчанию используется значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, указывающее на отсутствие ограничений для изменения диапазона страниц.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintUIOptions:maxPage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPage</apiName><shortdesc class="- topic/shortdesc ">
	 Минимальный номер страницы, которую пользователь может ввести в диалоговом окне печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiDefaultValue>0
	 
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Минимальный номер страницы, которую пользователь может ввести в диалоговом окне печати. По умолчанию используется значение 0, указывающее на отсутствие ограничений для ввода максимального числа страниц.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintUIOptions:minPage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">minPage</apiName><shortdesc class="- topic/shortdesc ">
	 Максимальный номер страницы, которую пользователь может ввести в диалоговом окне печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiDefaultValue>0
	 
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Максимальный номер страницы, которую пользователь может ввести в диалоговом окне печати. По умолчанию используется значение 0, указывающее на отсутствие ограничений для ввода минимального числа страниц.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.printing:PrintMethod" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PrintMethod</apiName><shortdesc class="- topic/shortdesc ">
Этот класс предоставляет значения, используемые свойством PrintJobOptions.printMethod для определения способа печати страницы.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Этот класс предоставляет значения, используемые свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJobOptions.printMethod</codeph> для определения способа печати страницы.
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printMethod" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printMethod</linktext></link></related-links><apiValue id="flash.printing:PrintMethod:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc ">
	Автоматический выбор оптимального способа печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printMethod.auto, auto
	</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Автоматический выбор оптимального способа печати. Это значение указывает на то, что автоматически выбирается векторная или растровая печать в зависимости от типа содержимого. Векторная печать используется всегда, когда этот способ позволяет надежно воспроизвести содержимое. Если используются такие эффекты, как прозрачность или некоторые другие, используется растровая печать.
	
	<p class="- topic/p ">Эта константа используется со свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJobOptions.printMethod</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">PrintMethod.AUTO</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printMethod" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printMethod</linktext></link><link href="flash.printing.xml#PrintMethod/VECTOR" class="- topic/link "><linktext class="- topic/linktext ">VECTOR</linktext></link><link href="flash.printing.xml#PrintMethod/BITMAP" class="- topic/link "><linktext class="- topic/linktext ">BITMAP</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintMethod:BITMAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BITMAP</apiName><shortdesc class="- topic/shortdesc ">
	Растровый способ печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printMethod.bitmap, bitmap
	</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">bitmap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Растровый способ печати. 
	
	<p class="- topic/p ">Эта константа используется со свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJobOptions.printMethod</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">PrintMethod.BITMAP</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printMethod" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printMethod</linktext></link><link href="flash.printing.xml#PrintMethod/VECTOR" class="- topic/link "><linktext class="- topic/linktext ">VECTOR</linktext></link><link href="flash.printing.xml#PrintMethod/AUTO" class="- topic/link "><linktext class="- topic/linktext ">AUTO</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintMethod:VECTOR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VECTOR</apiName><shortdesc class="- topic/shortdesc ">
	Векторный метод печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printMethod.vector, vector
	</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">vector</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Векторный метод печати. 
	
	<p class="- topic/p ">Эта константа используется со свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJobOptions.printMethod</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">PrintMethod.VECTOR</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printMethod" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printMethod</linktext></link><link href="flash.printing.xml#PrintMethod/BITMAP" class="- topic/link "><linktext class="- topic/linktext ">BITMAP</linktext></link><link href="flash.printing.xml#PrintMethod/AUTO" class="- topic/link "><linktext class="- topic/linktext ">AUTO</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.printing:PrintJobOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PrintJobOptions</apiName><shortdesc class="- topic/shortdesc ">
	 Класс PrintJobOptions содержит свойства для применения с параметром options метода PrintJob.addPage().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс PrintJobOptions содержит свойства для применения с параметром <codeph class="+ topic/ph pr-d/codeph ">options</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph>. Дополнительные сведения о <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> см. в классе PrintJob.
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob" class="- topic/link "><linktext class="- topic/linktext ">PrintJob</linktext></link><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link></related-links><apiConstructor id="flash.printing:PrintJobOptions:PrintJobOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">PrintJobOptions</apiName><shortdesc class="- topic/shortdesc ">
		 Создает новый объект PrintJobOptions.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">printAsBitmap</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если установлено <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, этот объект распечатывается как растровое изображение. Если установлено <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, этот объект распечатывается как векторное изображение. 
		 
		 <p class="- topic/p ">Если распечатываемое содержимое содержит растровое изображение, установите для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, чтобы можно было включить альфа-прозрачность и какие-либо цветовые эффекты. Если в содержимом нет растровых изображений, пропустите данный параметр, чтобы распечатать содержимое в высококачественном векторном формате (формат по умолчанию).</p>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> Adobe AIR не поддерживает печать векторной графики в операционной системе Mac OS.</p>
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Создает новый объект PrintJobOptions. Передайте этот объект параметру <codeph class="+ topic/ph pr-d/codeph ">options</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph>.
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link></related-links></apiConstructor><apiValue id="flash.printing:PrintJobOptions:pixelsPerInch" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pixelsPerInch</apiName><shortdesc class="- topic/shortdesc ">
		 Указывает разрешение для растровых изображений в пикселах на дюйм.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">NaN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Указывает разрешение для растровых изображений в пикселах на дюйм. По умолчанию используется значение <codeph class="+ topic/ph pr-d/codeph ">Number.NaN</codeph>, указывающее на то, что используется собственное разрешение принтера.
		 
		 <p class="- topic/p ">Настройка разрешения применяется и для растровой и для векторной печати. При растровой печати, разрешение управляет растрированием всей страницы. При векторной печати разрешение управляет растрированием определенного содержимого, например растровых изображений и градиентов</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJobOptions:printAsBitmap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">printAsBitmap</apiName><shortdesc class="- topic/shortdesc ">
		 Определяет режим печати содержимого по заданию печати: как растровое или как векторное изображение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Определяет режим печати содержимого по заданию печати: как растровое или как векторное изображение. По умолчанию для печати в векторном формате задано значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		 
		 <p class="- topic/p ">Если распечатываемое содержимое содержит растровое изображение, установите для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, чтобы можно было включить альфа-прозрачность и какие-либо цветовые эффекты. Если в содержимом нет растровых изображений, его следует печатать в высококачественном векторном формате (формат по умолчанию).</p>
		 <p class="- topic/p ">Например, чтобы распечатать содержимое как растровое изображение, используйте следующий синтаксис:</p> 
		 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 var options:PrintJobOptions = new PrintJobOptions();
		 options.printAsBitmap = true;
		 myPrintJob.addPage(mySprite, null, options);
		 </codeblock>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> Adobe AIR не поддерживает печать векторной графики в операционной системе Mac OS.</p>
		 
		 </apiDesc><example conref="examples\printAsBitmapExample.as" class="- topic/example "> В следующем примере вначале выполняется загрузка изображения, помещение его в прямоугольный кадр, а затем печать его как растрового изображения.  
 
 <ol class="- topic/ol "><li class="- topic/li ">Конструктор загружает изображение (<codeph class="+ topic/ph pr-d/codeph ">image.jpg</codeph>), используя объекты <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph> и <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph>. Он также проверяет, не произошло ли ошибок во время загрузки. Здесь предполагается, что файл находится в том же каталоге, что и SWF-файл. SWF-файл должен быть откомпилирован с установленным для параметра Local Playback Secuirty режимом Access Local Files Only.</li><li class="- topic/li ">При загрузке изображения (завершении события) вызывается метод <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph>.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> создает объект <codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph> и загружает в него изображение (растровое). В объекте <codeph class="+ topic/ph pr-d/codeph ">Sprite</codeph> рисуется прямоугольник (<codeph class="+ topic/ph pr-d/codeph ">frame</codeph>) и используется метод <codeph class="+ topic/ph pr-d/codeph ">beginBitmapFill()</codeph> для заполнения его изображением (объект <codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph>). Объект <codeph class="+ topic/ph pr-d/codeph ">Matrix</codeph> также используется для масштабирования изображения и заполнения им прямоугольника. (Обратите внимание на то, что изображение при этом искажается. Этот объект используется в данном примере, чтобы обеспечить гарантированное заполнение прямоугольника изображением.) Как только заполнение изображением произведено, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">printPage()</codeph>.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">printPage()</codeph> создает новый экземпляр задания печати и запускает процесс печати, вызывая диалоговое окно «Печать» для пользователя и заполняя значениями свойства задания печати. Метод <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> содержит подробные сведения о задании печати. Здесь кадр с изображением (объект Sprite) настроен для печати как растровое, а не векторное изображение. <codeph class="+ topic/ph pr-d/codeph ">options</codeph> являются экземпляром класса <codeph class="+ topic/ph pr-d/codeph ">PrintJobOptions</codeph>, а для его свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> установлено значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, чтобы выполнять печать растрового изображения (по умолчанию установлено значение false).</li></ol>
 <p class="- topic/p ">Примечание. Для этого примера определена минимальная обработка ошибок.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.Loader;
    import flash.display.Bitmap;
    import flash.display.BitmapData;    
    import flash.printing.PrintJob;
    import flash.printing.PrintJobOptions;
    import flash.events.Event;
    import flash.events.IOErrorEvent;
    import flash.net.URLRequest;
    import flash.geom.Matrix;

    public class printAsBitmapExample extends Sprite {

        private var frame:Sprite = new Sprite();
        private var url:String = "image.jpg";
        private var loader:Loader = new Loader();

        public function printAsBitmapExample() {

           var request:URLRequest = new URLRequest(url);
  
           loader.load(request);
           loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);
           loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
        
            var picture:Bitmap = Bitmap(loader.content);
            var bitmap:BitmapData = picture.bitmapData;

            var matrix:Matrix = new Matrix();

            matrix.scale((200 / bitmap.width), (200 / bitmap.height));
            
            frame.graphics.lineStyle(10);
            frame.graphics.beginBitmapFill(bitmap, matrix, true);
            frame.graphics.drawRect(0, 0, 200, 200);
            frame.graphics.endFill();

            addChild(frame);
             
            printPage();    
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("Unable to load the image: " + url);
        }

        private function printPage ():void {
            var myPrintJob:PrintJob = new PrintJob();
            var options:PrintJobOptions = new PrintJobOptions();
            options.printAsBitmap = true;
            
            myPrintJob.start();
  
            try {
                myPrintJob.addPage(frame, null, options);
            }
            catch(e:Error) {
                trace ("Had problem adding the page to print job: " + e);
            }
 
            try {
            myPrintJob.send();
            }
            catch (e:Error) {
                trace ("Had problem printing: " + e);    
            }
        }
    }
}

</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printMethod" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printMethod</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJobOptions:printMethod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">printMethod</apiName><shortdesc class="- topic/shortdesc ">
		 Указывает, что среда выполнения Flash выбирает наиболее подходящий способ печати или что разработчик хочет явным образом выбрать векторную либо растровую печать.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение свойства <codeph class="+ topic/ph pr-d/codeph ">printMethod</codeph> не соответствует ни одному из значений, определенных в классе <codeph class="+ topic/ph pr-d/codeph ">PrintMethod</codeph>.
     	 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Указывает, что среда выполнения Flash выбирает наиболее подходящий способ печати или что разработчик хочет явным образом выбрать векторную либо растровую печать.
		 
		 <p class="- topic/p ">Задайте свойству одно из следующих значений, определенных в классе <codeph class="+ topic/ph pr-d/codeph ">PrintMethod</codeph>.</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">PrintMethod.AUTO</codeph>: это значение указывает на то, что автоматически выбирается векторная или растровая печать в зависимости от типа содержимого. Векторная печать используется всегда, когда этот способ позволяет надежно воспроизвести содержимое. Если используются такие эффекты, как прозрачность или некоторые другие, будет использована растровая печать.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">PrintMethod.VECTOR</codeph>: это значение задает растровую печать. Тот же результат, что и при установке значения <codeph class="+ topic/ph pr-d/codeph ">false</codeph> для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph>.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">PrintMethod.BITMAP</codeph>: это значение задает растровую печать. Тот же результат, что и при установке значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph>.</li></ul>
		 
		 <p class="- topic/p ">Если свойству printMethod задано поддерживаемое значение, то printAsBitmap игнорируется.</p>
		 
		 <p class="- topic/p ">По умолчанию задано значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>; используется свойство printAsBitmap.</p>
		 
     	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOptions/printAsBitmap" class="- topic/link "><linktext class="- topic/linktext ">PrintJobOptions.printAsBitmap</linktext></link><link href="flash.printing.xml#PrintMethod" class="- topic/link "><linktext class="- topic/linktext ">Класс PrintMethod</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.printing:PrintJob" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PrintJob</apiName><shortdesc class="- topic/shortdesc ">
 Класс PrintJob позволяет создавать содержимое и распечатывать его на одной или нескольких страницах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, print
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс PrintJob позволяет создавать содержимое и распечатывать его на одной или нескольких страницах. Этот класс позволяет прорисовывать для пользователя содержимое, которое является видимым, отображается динамически или находится вне экрана, открывать для пользователей одно диалоговое окно «Печать» и печатать немасштабированный документ с пропорциями, соответствующими пропорциям содержимого. Эта возможность особенно полезна для прорисовки и печати динамического содержимого, например содержимого баз данных и динамического текста.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Поддержка в мобильных браузерах</b>: этот класс не поддерживается в мобильных браузерах.</p>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR:</i> эта функция поддерживается во всех компьютерных операционных системах, но не поддерживается на мобильных устройствах или в среде AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">PrintJob.isSupported</codeph>, чтобы проверить наличие поддержки в среде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
 
 <p class="- topic/p ">Используйте конструктор <codeph class="+ topic/ph pr-d/codeph ">PrintJob()</codeph> для создания задания печати.</p>
 
 <p class="- topic/p ">Кроме того, благодаря свойствам класса PrintJob можно считывать параметры настройки принтера, например высоту страницы, ее ширину и ориентацию изображения, и настроить в документе динамическое форматирование содержимого Flash в соответствии с параметрами принтера.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> ActionScript 3.0 не ограничивает объект PrintJob одним кадром (как это было в предыдущих версиях программы ActionScript). Однако, поскольку операционная система отображает информацию о состоянии печати пользователю, после того как он нажал кнопку «ОК» в диалоговом окне «Печать», необходимо как можно быстрее вызвать методы <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph>, чтобы отправить страницы в диспетчер очереди печати. Задержка при обращении к кадру, содержащему вызов <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph>, приводит к задержке процесса печати.</p>
 <p class="- topic/p ">Кроме того, для следующих интервалов применяется 15 секундное ограничение задержки сценария:</p>
 <ul class="- topic/ul "><li class="- topic/li ">между <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph> и первым<codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph></li><li class="- topic/li ">между <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и следующим <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph></li><li class="- topic/li ">между последним <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph></li></ul>
 
 <p class="- topic/p ">Если любой из вышеуказанных интервалов длится более 15 секунд, следующий вызов метода <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph> для экземпляра PrintJob возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, а следующее обращение к методу <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> для этого экземпляра PrintJob вызывает в приложении Flash Player или Adobe AIR исключение при выполнении.</p>
 
 </apiDesc><example conref="examples\PrintJobExample_Simple.as" class="- topic/example "> Следующий пример демонстрирует основы печати. Создается новый объект PrintJob, и в случае успешного вызова метод <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> добавляет спрайт как одну страницу. Метод <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> передает страницу принтеру.

<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package 
{ 
    import flash.printing.PrintJob; 
    import flash.display.Sprite; 
 
    public class BasicPrintExample extends Sprite 
    { 
        var myPrintJob:PrintJob = new PrintJob(); 
        var mySprite:Sprite = new Sprite();
        mySprite.graphics.beginFill(0x336699);
    mySprite.graphics.drawCircle(100, 100, 50);
 
        public function BasicPrintExample() 
        { 
            if (myPrintJob.start()) {
            try {
                myPrintJob.addPage(mySprite);
            }
            catch(e:Error) {
                // handle error 
            }
            myPrintJob.send();
        } 
    } 
}
</codeblock></example><example conref="examples\PrintJobExample.as" class="- topic/example "> В следующем примере класс <codeph class="+ topic/ph pr-d/codeph ">PrintJobExample</codeph> используется для создания небольшого документа и последующей отправки его на принтер. Это можно сделать, выполнив следующие действия:
 <ol class="- topic/ol "><li class="- topic/li ">Объявляются две переменные типа Sprite с названиями <codeph class="+ topic/ph pr-d/codeph ">sheet1</codeph> и <codeph class="+ topic/ph pr-d/codeph ">sheet2</codeph>.</li><li class="- topic/li ">Вызывается метод <codeph class="+ topic/ph pr-d/codeph ">init()</codeph>, который назначает новый экземпляр Sprite обеим переменным <codeph class="+ topic/ph pr-d/codeph ">sheet1</codeph> и <codeph class="+ topic/ph pr-d/codeph ">sheet2</codeph>, а затем вызывается метод <codeph class="+ topic/ph pr-d/codeph ">createSheet()</codeph>.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">createSheet()</codeph> выполняет следующие действия:
  <ol outputclass="A" class="- topic/ol "><li class="- topic/li ">Передаваемый объект Sprite используется для создания прямоугольника со светло-серой заливкой, черной рамкой толщиной в один пиксель, шириной в 100 пикселей и высотой в 200 пикселей, с координатами x = 0, y = 0.</li><li class="- topic/li ">Создается новый объект TextField с именем <codeph class="+ topic/ph pr-d/codeph ">txt</codeph> и такими же размерами, что и объект Sprite, для свойства wordWrap устанавливается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, а для текстового свойства в качестве аргумента для <codeph class="+ topic/ph pr-d/codeph ">createSheet()</codeph> устанавливается «Строка передана».</li><li class="- topic/li ">Если определено значение для переданного аргумента объекта, создайте новый экземпляр Sprite с именем <codeph class="+ topic/ph pr-d/codeph ">img</codeph>, который используется для отображения белого прямоугольника, используя свойства координат и размеров переданного объекта. Этот белый прямоугольник добавляется к списку отображения объекта Sprite с помощью метода <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>.</li><li class="- topic/li ">Объект TextField с названием <codeph class="+ topic/ph pr-d/codeph ">txt</codeph> добавляется к списку отображения объекта Sprite с помощью метода <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>.</li></ol></li><li class="- topic/li ">Выполняется обратный переход в конструктор, а затем вызывается разрешенный (незакомментированный) метод печати. Поскольку методы очень похожи, далее описан только один из них <codeph class="+ topic/ph pr-d/codeph ">printOnePerPage()</codeph>.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">printOnePerPage()</codeph> выполняет следующие действия:
  <ol outputclass="A" class="- topic/ol "><li class="- topic/li ">Объявляется новый объект PrintJob с именем <codeph class="+ topic/ph pr-d/codeph ">pj</codeph> и <codeph class="+ topic/ph pr-d/codeph ">pagesToPrint</codeph> в качестве объекта uint.</li><li class="- topic/li ">Открывается предусмотренное в операционной системе диалоговое окно «Печать», выполняется ожидание, пока пользователь не нажмет кнопку <codeph class="+ topic/ph pr-d/codeph ">«OK»</codeph>.</li><li class="- topic/li ">Проверяется ориентация, и если выбрана альбомная ориентация, выдается сообщение об ошибке и выполнение операции завершается.</li><li class="- topic/li ">Настраивается высота и ширина страницы для <codeph class="+ topic/ph pr-d/codeph ">sheet1</codeph> и <codeph class="+ topic/ph pr-d/codeph ">sheet2</codeph>.</li><li class="- topic/li ">Объекты <codeph class="+ topic/ph pr-d/codeph ">sheet1</codeph> и <codeph class="+ topic/ph pr-d/codeph ">sheet2</codeph> отправляются в диспетчер очереди печати принтера с помощью метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>.</li><li class="- topic/li ">Если число страниц для печати больше нуля, выполняется печать всех помещенных в очередь печати страниц.</li></ol></li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> вызывается, когда необходимо изменить размеры двух объектов Sprite для размещения на монтажном столе или изменения положения <codeph class="+ topic/ph pr-d/codeph ">sheet2</codeph>, например, поместив его справа от <codeph class="+ topic/ph pr-d/codeph ">sheet1</codeph>.</li></ol>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Конструктор настроен таким образом, что можно выбрать один из трех методов печати (печать одной страницы на лист, двух страниц на лист или печать в верхней половине листа) в зависимости от предпочтения. Этот пример не будет работать правильно до тех пор, пока два метода печати не будут отключены с помощью комментариев в программном коде. Пример настроен таким образом, что будет вызываться метод <codeph class="+ topic/ph pr-d/codeph ">printOnePerPage()</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.printing.PrintJob;
    import flash.printing.PrintJobOrientation;
    import flash.display.Stage;
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.geom.Rectangle;
       
    public class PrintJobExample extends Sprite {
        private var sheet1:Sprite;
        private var sheet2:Sprite;
           
        public function PrintJobExample() {
            init();
            printOnePerPage();
//            printTwoPerPage();
//            printTopHalf();
            draw();
        }
        
        private function init():void {
            sheet1 = new Sprite();
            createSheet(sheet1, "Once upon a time...", {x:10, y:50, width:80, height:130});

            sheet2 = new Sprite();
            createSheet(sheet2, "There was a great story to tell, and it ended quickly.\n\nThe end.", null);
        }
        
        private function createSheet(sheet:Sprite, str:String, imgValue:Object):void {
            sheet.graphics.beginFill(0xEEEEEE);
            sheet.graphics.lineStyle(1, 0x000000);
            sheet.graphics.drawRect(0, 0, 100, 200);
            sheet.graphics.endFill();
            
            var txt:TextField = new TextField();
            txt.height = 200;
            txt.width = 100;
            txt.wordWrap = true;
            txt.text = str;
            
            if(imgValue != null) {
                var img:Sprite = new Sprite();
                img.graphics.beginFill(0xFFFFFF);
                img.graphics.drawRect(imgValue.x, imgValue.y, imgValue.width, imgValue.height);
                img.graphics.endFill();
                sheet.addChild(img);
            }
            sheet.addChild(txt);
        }
        
        private function printOnePerPage():void {
            var pj:PrintJob = new PrintJob();
            var pagesToPrint:uint = 0;
            if(pj.start()) {                
                if(pj.orientation == PrintJobOrientation.LANDSCAPE) {    
                    throw new Error("Without embedding fonts you must print one sheet per page with an orientation of portrait.");
                }
                
                sheet1.height = pj.pageHeight;
                sheet1.width = pj.pageWidth;
                sheet2.height = pj.pageHeight;
                sheet2.width = pj.pageWidth;

                try {
                    pj.addPage(sheet1);
                    pagesToPrint++;
                }
                catch(e:Error) {
                    // do nothing
                }

                try {
                    pj.addPage(sheet2);
                    pagesToPrint++;
                }
                catch(e:Error) {
                    // do nothing
                }

                if(pagesToPrint > 0) {
                    pj.send();
                }
            }
        }
        
        private function printTwoPerPage():void {
            var pj:PrintJob = new PrintJob();
            var pagesToPrint:uint = 0;
            if(pj.start()) {                
                if(pj.orientation == PrintJobOrientation.PORTRAIT) {
                    throw new Error("Without embedding fonts you must print two sheets per page with an orientation of landscape.");
                }
                
                sheet1.height = pj.pageHeight;
                sheet1.width = pj.pageWidth/2;
                sheet2.height = pj.pageHeight;
                sheet2.width = pj.pageWidth/2;

                var sheets:Sprite = new Sprite();
                sheets.addChild(sheet1);
                sheets.addChild(sheet2);
                sheets.getChildAt(1).x = sheets.getChildAt(0).width;
                try {
                    pj.addPage(sheets);
                    pagesToPrint++;
                }
                catch(e:Error) {
                    // do nothing
                }

                if(pagesToPrint > 0) {
                    pj.send();
                }
            }
        }

        private function printTopHalf():void {
            var pj:PrintJob = new PrintJob();
            var pagesToPrint:uint = 0;
            if(pj.start()) {                
                if(pj.orientation == PrintJobOrientation.PORTRAIT) {
                    throw new Error("Without embedding fonts you must print the top half with an orientation of landscape.");
                }
                
                sheet1.height = pj.pageHeight;
                sheet1.width = pj.pageWidth/2;
                sheet2.height = pj.pageHeight;
                sheet2.width = pj.pageWidth/2;

                var sheets:Sprite = new Sprite();
                sheets.addChild(sheet1);
                sheets.addChild(sheet2);
                sheets.getChildAt(1).x = sheets.getChildAt(0).width;
                try {
                    pj.addPage(sheets, new Rectangle(0, 0, sheets.width, sheets.height/2));
                    pagesToPrint++;
                }
                catch(e:Error) {
                    // do nothing
                }

                if(pagesToPrint > 0) {
                    pj.send();
                }
            }
        }


        private function draw():void {
            var sheetWidth:Number = this.stage.stageWidth/2;
            var sheetHeight:Number = this.stage.stageHeight;
            
            addChild(sheet1);
            sheet1.width = sheetWidth;
            sheet1.height = sheetHeight;
            
            addChild(sheet2);
            sheet2.width = sheetWidth;
            sheet2.height = sheetHeight;
            sheet2.x = sheet1.width;
        }        
    }
}
</codeblock></example><example conref="examples\PrintJobExample.2.as" class="- topic/example "> Следующий пример демонстрирует дополнительные функции печати. В примере инициализируются настройки PrintJob для числа экземпляров, размера бумаги (legal) и ориентации страницы (альбомная). Сначала вызывается диалоговое окно «Параметры страницы», затем запускается задание печати путем вызова диалогового окне «Печать».
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
package 
 { 
     import flash.display.Sprite; 
     import flash.display.Stage; 
     import flash.geom.Rectangle; 
     import flash.printing.PaperSize; 
     import flash.printing.PrintJob; 
    import flash.printing.PrintJobOrientation; 
    import flash.printing.PrintUIOptions; 
    import flash.text.TextField; 
      
     public class PrintJobExample extends Sprite 
     { 
         private var bg:Sprite; 
         private var txt:TextField; 
        private var pj:PrintJob; 
        private var uiOpt:PrintUIOptions; 
  
         public function PrintJobExample():void 
         { 
            var pj = new PrintJob(); 
            uiOpt = new PrintUIOptions(); 
            initPrintJob(); 
             initContent(); 
             draw(); 
             printPage(); 
         } 
          
         private function printPage():void 
         { 
            if (pj.supportsPageSetupDialog) 
            { 
                pj.showPageSetupDialog(); 
            }
            
             if (pj.start2(uiOpt, true)) 
             { 
                   try 
                 { 
                     pj.addPage(this, new Rectangle(0, 0, 100, 100)); 
                 } 
                 catch (error:Error) 
                 { 
                     // Do nothing. 
                 } 
                 pj.send(); 
             } 
             else 
             { 
                 txt.text = "Print job terminated"; 
                pj.terminate(); 
             } 
         } 
         
         private function initContent():void 
         { 
             bg = new Sprite(); 
             bg.graphics.beginFill(0x00FF00); 
             bg.graphics.drawRect(0, 0, 100, 200); 
             bg.graphics.endFill(); 
              
             txt = new TextField(); 
             txt.border = true; 
             txt.text = "Hello World"; 
         } 
          
        private function initPrintJob():void 
        { 
            pj.setPaperSize(PaperSize.LEGAL); 
            pj.orientation = PrintJobOrientation.LANDSCAPE; 
            pj.copies = 2; 
            pj.jobName = "Flash test print";
        } 
         
         private function draw():void 
         { 
             addChild(bg); 
             addChild(txt); 
             txt.x = 50; 
             txt.y = 50; 
         } 
     } 
}
</codeblock></example></apiClassifierDetail><apiConstructor id="flash.printing:PrintJob:PrintJob" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">PrintJob</apiName><shortdesc class="- topic/shortdesc ">
 Создает объект PrintJob, который можно использовать для печати одной или нескольких страниц.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>See <code>PrintJob.addPage()</code>.
 
 </maelexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Во Flash Player и AIR до версии AIR 2 выдается исключение, если еще активен другой экземпляр PrintJob.
 
 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Создает объект PrintJob, который можно использовать для печати одной или нескольких страниц. После создания объекта PrintJob для отправки задания печати на принтер необходимо использовать (в указанном порядке) методы <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph>, а затем <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph>.
 
 <p class="- topic/p ">Например, можно заменить текст-заполнитель <codeph class="+ topic/ph pr-d/codeph ">[params]</codeph> для вызовов метода <codeph class="+ topic/ph pr-d/codeph ">myPrintJob.addPage()</codeph> пользовательскими параметрами, как показано в следующем коде.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">
 // create PrintJob object
 var myPrintJob:PrintJob = new PrintJob();
  
 // display Print dialog box, but only initiate the print job
 // if start returns successfully.
 if (myPrintJob.start()) {
  
    // add specified page to print job
    // repeat once for each page to be printed
    try {
      myPrintJob.addPage([params]);
    }
    catch(e:Error) {
      // handle error 
    }
    try {
      myPrintJob.addPage([params]);
    }
    catch(e:Error) {
      // handle error 
    }
 
    // send pages from the spooler to the printer, but only if one or more
    // calls to addPage() was successful. You should always check for successful 
    // calls to start() and addPage() before calling send().
    myPrintJob.send();
 }
 </pre>
 
 <p class="- topic/p ">В AIR 2 и более поздних версиях можно создавать и использовать несколько экземпляров PrintJob. Свойства, заданные для экземпляра PrintJob, сохраняются после завершения печати. Это позволяет многократно использовать экземпляр PrintJob и сохранять выбранные пользователем установки печати, предлагая другие настройки для остального содержимого в приложении. Для содержимого во Flash Player и в AIR до версии 2 нельзя создавать второй объект PrintJob, пока активен первый. Если второй объект PrintJob создается (вызовом метода <codeph class="+ topic/ph pr-d/codeph ">new PrintJob()</codeph>), когда активен первый объект PrintJob, второй объект создан не будет. Поэтому можно проверить значение <codeph class="+ topic/ph pr-d/codeph ">myPrintJob</codeph>, прежде чем создавать второй объект PrintJob.</p>
 
 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link><link href="flash.printing.xml#PrintJob/start()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start()</linktext></link></related-links></apiConstructor><apiOperation id="flash.printing:PrintJob:addPage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addPage</apiName><shortdesc class="- topic/shortdesc ">
     Отправляет заданный объект Sprite в диспетчер очереди печати принтера в виде одной страницы.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.addpage, addpage
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Выдается исключение, если не был вызван метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или пользователь отменяет задание печати
	 
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sprite</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:Sprite</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект Sprite с содержимым для печати. 
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">printArea</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Прямоугольный объект, указывающий область для печати.	 
	 
	 <p class="- topic/p ">Значения ширины и высоты прямоугольника задаются в пикселях. Принтер использует точки в качестве единиц измерения для печати. Точки имеют фиксированный физический размер (1/72 дюйма), но размер пикселя на экране зависит от разрешения конкретного экрана. Поэтому коэффициент преобразования между пикселями и точками зависит от параметров принтера и масштабирования объекта Sprite. Немасштабированный объект Sprite, имеющий ширину 72 пиксела, печатается с шириной 1 дюйм, при этом одна точка будет равна одному пикселу, независимо от разрешения экрана.</p>
	 
	 <p class="- topic/p ">Можно использовать следующие соответствия для преобразования дюймов или сантиметров в твипы или точки (твип равен 1/20 части точки):</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li ">1 точка = 1/72 дюйма = 20 твипов</li><li class="- topic/li ">1 дюйм = 72 пунктам = 1440 твипам</li><li class="- topic/li ">1 см = 567 твипам</li></ul>
	 
	 <p class="- topic/p ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph> пропущен или неверно передан, распечатывается вся область параметра <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph>.</p>
	 
	 <p class="- topic/p ">Если не требуется указывать значение для параметра <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph>, но необходимо значение для параметров <codeph class="+ topic/ph pr-d/codeph ">options</codeph> или <codeph class="+ topic/ph pr-d/codeph ">frameNum</codeph>, укажите <codeph class="+ topic/ph pr-d/codeph ">null</codeph> в качестве значения для <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph>.</p>
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">options</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.printing:PrintJobOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Дополнительный параметр, который указывает на необходимость выполнять печать в векторном или растровом формате. По умолчанию установлено значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, которое соответствует запросу на печать в векторном формате. Чтобы распечатать объект <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph> в растровом формате, установите для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> объекта rintJobOptions значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Не забывайте о следующих рекомендациях, когда определяете, устанавливать ли для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
	 
	 <ul class="- topic/ul "><li class="- topic/li ">Если распечатываемое содержимое содержит растровое изображение, установите для свойства <codeph class="+ topic/ph pr-d/codeph ">printAsBitmap</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, чтобы можно было включить альфа-прозрачность и какие-либо цветовые эффекты.</li><li class="- topic/li ">Если в содержимом нет растровых изображений, пропустите данный параметр, чтобы распечатать содержимое в высококачественном векторном формате.</li></ul>
	 
	 <p class="- topic/p ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">options</codeph> пропущен или передан неверно, используется векторная печать. Если не требуется указывать значение для параметра <codeph class="+ topic/ph pr-d/codeph ">options</codeph>, но необходимо значение для параметра <codeph class="+ topic/ph pr-d/codeph ">frameNum</codeph>, укажите <codeph class="+ topic/ph pr-d/codeph ">null</codeph> в качестве значения для <codeph class="+ topic/ph pr-d/codeph ">options</codeph>.</p>
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">frameNum</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательный объект Number, который позволяет указать, какой кадр объекта MovieClip необходимо напечатать. Передача свойства <codeph class="+ topic/ph pr-d/codeph ">frameNum</codeph> не позволяет вызвать код ActionScript для этого кадра. Если этот параметр пропущен, а параметр <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph> содержит объект MovieClip, печатается текущий кадр в <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph>.	 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отправляет заданный объект Sprite в диспетчер очереди печати принтера в виде одной страницы. Перед использованием этого метода необходимо создать объект PrintJob, а затем применить метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>. Затем, после вызова метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> один или несколько раз для задания печати, используйте метод <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> для передачи страниц в диспетчере очереди печати на принтер. Другими словами, после создания объекта PrintJob для отправки задания печати на принтер необходимо использовать (в указанном порядке) методы <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph><codeph class="+ topic/ph pr-d/codeph "/>, а затем <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>. Метод <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> можно вызывать несколько раз после вызова метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, чтобы напечатать несколько страниц в задании печати.
     
     <p class="- topic/p ">Если метод <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> вызывает исключение в проигрывателе Flash Player (например, если не вызван метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или пользователь отменил задание печати), любой последующий вызов <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> завершится ошибкой. Однако, если предыдущие вызовы метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> были успешными, завершающая команда <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> отправляет на принтер страницы, успешно помещенные в очередь диспетчера печати.</p>
	 
     <p class="- topic/p ">Если заданию печати требуется более 15 секунд для выполнения операции <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>, то проигрыватель Flash Player вызовет исключение при следующем вызове метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>.</p>
	 
     <p class="- topic/p ">Если передается значение для параметра <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph>, то в качестве координат <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">x</i></codeph> и <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">y</i></codeph> прямоугольника <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph> задается верхний левый угол (координаты 0,0) области печати страницы. Предназначенные только для чтения свойства <codeph class="+ topic/ph pr-d/codeph ">pageHeight</codeph> и <codeph class="+ topic/ph pr-d/codeph ">pageWidth</codeph> описывают область печати, заданную методом <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>. Поскольку печатаемые данные выравниваются по верхнему левому углу области печати страницы, то когда область, определенная параметром <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph> больше, чем область печати страницы, печатаемые данные обрезаются по правой или по левой границе (или по обеим сразу) области, заданной параметром <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph>. Если во Flash Professional значение для параметра <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph> не передано и рабочая область больше области печати, выполняется обрезка по такому же принципу. Если во Flex или Flash Builder значение параметра <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph> не передано и размеры экрана превышают размеры области печати, выполняется обрезка по такому же принципу.</p>
	 
	 <p class="- topic/p ">Если требуется отмасштабировать объект Sprite перед тем как распечатывать его, установите свойства масштабирования (см. <codeph class="+ topic/ph pr-d/codeph ">flash.display.DisplayObject.scaleX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">flash.display.DisplayObject.scaleY</codeph>) прежде чем вызывать этот метод, а затем верните их в исходное состояние после выполнения печати. Масштаб объекта Sprite не связан с параметром <codeph class="+ topic/ph pr-d/codeph ">printArea</codeph>. Таким образом, если указывается область печати 50 x 50 пикселей, распечатывается 2500 пикселей. Если объект Sprite масштабируется, распечатываются те же 2500 пикселей, но объект Sprite при этом печатается в отмасштабированном размере.</p>
	 
	 <p class="- topic/p ">Функция печати в проигрывателе Flash Player может работать с поддерживающими и не поддерживающими PostScript принтерами. В принтерах, которые не поддерживают PostScript, происходит преобразование векторных изображений в растровые.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link><link href="flash.printing.xml#PrintJob/start()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start()</linktext></link><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">Класс DisplayObject</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:selectPaperSize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">selectPaperSize</apiName><shortdesc class="- topic/shortdesc ">
     Установите формат бумаги.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.selectPaperSize, selectPaperSize
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если параметру <codeph class="+ topic/ph pr-d/codeph ">paperSize</codeph> задано значение, не определенное в классе PaperSize.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">paperSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Формат бумаги, который должен использоваться для последующих страниц задания печати.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Установите формат бумаги. Допустимые значения для параметра <codeph class="+ topic/ph pr-d/codeph ">paperSize</codeph> перечислены в качестве констант в классе PaperSize. Вызов этого метода изменяет настройки печати так же, как пользователь задает размер бумаги в диалоговых окнах «Параметры страницы» или «Печать».
     
     <p class="- topic/p ">Этот метод можно вызвать в любое время. Вызовите этот метод до запуска задания, чтобы задать формат бумаги по умолчанию в диалоговых окнах «Параметры страницы» или «Печать». Вызовите его в процессе выполнения задания печати, чтобы задать формат бумаги для диапазона страниц в этом задании.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     import flash.printing.PrintJob;
     import flash.printing.PaperSize;
	 
     var myPrintJob:PrintJob = new PrintJob();
     myPrintJob.selectPaperSize(PaperSize.ENV_10);
     </codeblock>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PaperSize" class="- topic/link "><linktext class="- topic/linktext ">PaperSize</linktext></link><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
      Отправляет на принтер страницы, переданные в диспетчер печати, после успешных вызовов методов start() или start2() и addPage().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.send, send
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Отправляет на принтер страницы, переданные в диспетчер печати, после успешных вызовов методов <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>.
	 
	 <p class="- topic/p ">Этот метод не удается выполнить, если операция <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> завершается ошибкой или если вызов метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph> выдает исключение. Чтобы избежать ошибки, перед вызовом этого метода убедитесь, что метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> возвращает <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, и обработайте все исключения <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>. В следующем примере показано, как правильно проверять наличие ошибок перед вызовом этого метода.</p>
	 
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var myPrintJob:PrintJob = new PrintJob();
     if (myPrintJob.start()) {
       try {
         myPrintJob.addPage([params]);
       }
       catch(e:Error) {
          // handle error 
       }
     
       myPrintJob.send();
     }
     </codeblock>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link><link href="flash.printing.xml#PrintJob/start()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start()</linktext></link><link href="flash.printing.xml#PrintJob/start2()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start2()</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:showPageSetupDialog" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">showPageSetupDialog</apiName><shortdesc class="- topic/shortdesc ">
     Отображает диалоговое окно «Параметры страницы» операционной системы, если это поддерживается текущая среда.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.showPageSetupDialog, showPageSetupDialog
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если система не поддерживает вызов диалогового окна «Параметры страницы». Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">supportsPageSetupDialog</codeph>, чтобы определить, поддерживается ли отображение окна «Параметры страницы».
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если активно какое-либо задание печати (включая текущее).
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Возвращает значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если пользователь нажимает кнопку «ОК» в диалоговом окне «Параметры страницы». Это обозначает, что некоторые свойства PrintJob, могли измениться. Возвращает значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, если пользователь нажимает кнопку «Отмена» в диалоговом окне «Параметры страницы».
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отображает диалоговое окно «Параметры страницы» операционной системы, если это поддерживается текущая среда. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">supportsPageSetupDialog</codeph>, чтобы определить, поддерживается ли отображение окна «Параметры страницы».
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 import flash.printing.PrintJob;
	 
	 var myPrintJob:PrintJob = new PrintJob();
	 if (myPrintJob.supportsPageSetupDialog)
	 {
	     myPrintJob.showPageSetupDialog();
	 }
	 </codeblock>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/supportsPageSetupDialog" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.supportsPageSetupDialog</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:start2" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">start2</apiName><shortdesc class="- topic/shortdesc ">
     По выбору может открывать диалоговое окно «Печать» операционной системы, запускать подкачку и при возможности изменять доступные только для чтения значения свойств PrintJob.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.start2, start2
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если в данный момент отображается окно «Параметры печати» или активно другое задание печати.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если пользователь нажимает кнопку «ОК» при появлении диалогового окна «Печать» или если это окно не появляется и не возникает ошибки; имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, если пользователь нажимает кнопку «Отмена» или если возникает ошибка.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">uiOptions</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.printing:PrintUIOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект, который определяет параметры, отображаемые в диалоговом окне «Печать» для пользователя. Если параметр <codeph class="+ topic/ph pr-d/codeph ">showPrintDialog</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, это значение игнорируется.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">showPrintDialog</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Определяет, показывается ли пользователю диалоговое окно «Печать» перед запуском задания печати.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     По выбору может открывать диалоговое окно «Печать» операционной системы, запускать подкачку и при возможности изменять доступные только для чтения значения свойств PrintJob.
     
     <p class="- topic/p ">Параметр <codeph class="+ topic/ph pr-d/codeph ">uiOptions</codeph> позволяет вызывающему объекту определять, какие параметры должны отображаться в диалоговом окне «Печать». См. описание класса <codeph class="+ topic/ph pr-d/codeph ">PrintUIOptions</codeph>. Этот параметр игнорируется, если свойство <codeph class="+ topic/ph pr-d/codeph ">showPrintDialog</codeph> имеет значение false.</p>
     
     <p class="- topic/p ">Даже когда свойство <codeph class="+ topic/ph pr-d/codeph ">showPrintDialog</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, поведение этого метода может отличаться от поведения исходного метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>. В некоторых операционных системах метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> сначала показывает диалоговое окно «Параметры страницы», а затем окно «Печать». Метод <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>, напротив, никогда не показывает диалоговое окно «Параметры страницы». </p>
	 
	 <p class="- topic/p ">В следующем примере перед выводом диалогового окна «Печать» для пользователя задаются параметры минимального и максимального номеров страниц.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     import flash.printing.PrintJob;
     import flash.printing.PrintUIOptions;
	 
     var myPrintJob:PrintJob = new PrintJob();
     var uiOpt:PrintUIOptions = new PrintUIOptions();
     uiOpt.minPage = 1;
     uiOpt.maxPage = 3;
     var accepted:Boolean = myPrintJob.start2(uiOpt);
     </codeblock>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
     Выводит на экран системное диалоговое окно «Печать» и начинает передачу задания диспетчеру печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.start, print
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">в AIR 2 или более поздних версиях, если в данный момент активен другой экземпляр PrintJob.
	 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Устанавливается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если пользователь нажал кнопку «ОК», когда открылось диалоговое окно «Печать»; а значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, если была нажата кнопка «Отмена».
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Выводит на экран системное диалоговое окно «Печать» и начинает передачу задания диспетчеру печати. Диалоговое окно «Печать» позволяет пользователю изменять параметры печати. Если метод <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph> успешно выполняется (пользователь нажимает кнопку «ОК» в диалоговом окне «Печать»), то следующие свойства заполняются значениями, соответствующими параметрам печати, установленным пользователем.
      
     <adobetable class="innertable"><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Свойство</entry><entry class="- topic/entry ">Тип</entry><entry class="- topic/entry ">Единицы</entry><entry class="- topic/entry ">Примечания</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PrintJob.paperHeight</codeph></entry><entry class="- topic/entry ">Number</entry><entry class="- topic/entry ">Пункты</entry><entry class="- topic/entry ">Общая высота страницы.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PrintJob.paperWidth</codeph></entry><entry class="- topic/entry ">Number</entry><entry class="- topic/entry ">Пункты</entry><entry class="- topic/entry ">Общая ширина страницы.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PrintJob.pageHeight</codeph></entry><entry class="- topic/entry ">Number</entry><entry class="- topic/entry ">Пункты</entry><entry class="- topic/entry ">Высота фактически печатаемой области на странице; все установленные пользователем границы игнорируются.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PrintJob.pageWidth</codeph></entry><entry class="- topic/entry ">Number</entry><entry class="- topic/entry ">Пункты</entry><entry class="- topic/entry ">Ширина фактически печатаемой области на странице; любые установленные пользователем границы игнорируются.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PrintJob.orientation</codeph></entry><entry class="- topic/entry ">String</entry><entry class="- topic/entry "/><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">portrait</codeph> (<codeph class="+ topic/ph pr-d/codeph ">flash.printing.PrintJobOrientation.PORTRAIT</codeph>) или <codeph class="+ topic/ph pr-d/codeph ">landscape</codeph> (<codeph class="+ topic/ph pr-d/codeph ">flash.printing.PrintJobOrientation.LANDSCAPE</codeph>).</entry></row></tbody></tgroup></adobetable>
     	 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Если пользователь закрывает диалоговое окно «Печать», эти свойства не заполняются.</p>
     <p class="- topic/p ">После того как пользователь нажмет кнопку «ОК» в диалоговом окне «Печать», проигрыватель начинает отправлять задание печати в очередь диспетчера печати операционной системы. Поскольку операционная система затем начинает отображать пользователю информацию о выполнении печати, необходимо как можно быстрее вызвать методы <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph>, чтобы отправить страницы в диспетчер очереди печати. Можно использовать доступные только для чтения свойства высоты, ширины и ориентации страницы, которые этот метод подставляет при форматировании печатаемой страницы.</p>
     <p class="- topic/p ">Проверьте, возвращает ли метод значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> (если пользователь нажмет кнопку «ОК» в диалоговом окне «Печать» операционной системы) перед последующим вызовом одного из методов <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph>:</p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var myPrintJob:PrintJob = new PrintJob();
        if(myPrintJob.start()) {
          // addPage() and send() statements here
        }
     </codeblock>
     <p class="- topic/p ">Для заданного экземпляра задания печати, если какой-либо из следующих интервалов длится дольше 15 секунд, при следующем вызове <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph> будет возвращаться значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>:</p>
     <ul class="- topic/ul "><li class="- topic/li ">между <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph> и первым<codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph></li><li class="- topic/li ">между <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и следующим <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph></li><li class="- topic/li ">между последним <codeph class="+ topic/ph pr-d/codeph ">PrintJob.addPage()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">PrintJob.send()</codeph></li></ul>
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/addPage()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.addPage()</linktext></link><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link></related-links></apiOperation><apiOperation id="flash.printing:PrintJob:terminate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">terminate</apiName><shortdesc class="- topic/shortdesc ">
     Сообщает, что задание печати необходимо прервать без отправки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.terminate, terminate
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Сообщает, что задание печати необходимо прервать без отправки. Используйте этот метод, когда задание печати уже инициировано вызовом <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>, но в данный момент неуместно отправлять страницы принтеру. Как правило, метод <codeph class="+ topic/ph pr-d/codeph ">terminate()</codeph> используется только для исправления ошибок.
     
     <p class="- topic/p ">После вызова этого метода экземпляр PrintJob можно использовать повторно. Настройки печати для задания по возможности сохраняются для последующего использования.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.printing:PrintJob:active:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">active</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, активно ли в данный момент задание печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, активно ли в данный момент задание печати. Задание печати является активным (свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>) в любом из двух случаев.
	 
     <ul class="- topic/ul "><li class="- topic/li ">В данный момент отображается диалоговое окно «Параметры страницы» или «Печать».</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> вызывался и возвратил значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, и не вызывался метод <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">terminate()</codeph>.</li></ul>
	 
	 <p class="- topic/p ">Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и вызывается метод <codeph class="+ topic/ph pr-d/codeph ">showPageSetupDialog()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>, среда выполнения выдает исключение.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/start()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start()</linktext></link><link href="flash.printing.xml#PrintJob/start2()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.start2()</linktext></link><link href="flash.printing.xml#PrintJob/send()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.send()</linktext></link><link href="flash.printing.xml#PrintJob/terminate()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.terminate()</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:copies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">copies</apiName><shortdesc class="- topic/shortdesc ">
     Число экземпляров, которое система печати печатает для всех страниц, впоследствии добавляемых в задание печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Число экземпляров, которое система печати печатает для всех страниц, впоследствии добавляемых в задание печати. Это значение указывает число экземпляров, введенное пользователем в диалоговом окне «Печать» операционной системы. Если в диалоговом окне «Печать» не отображается число экземпляров или если это окно не выводится, используется значение 1 (если оно не изменено кодом приложения).
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:firstPage:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">firstPage</apiName><shortdesc class="- topic/shortdesc ">
     Номер первой страницы диапазона, введенный пользователем в системном диалоговом окне «Печать».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Номер первой страницы диапазона, введенный пользователем в системном диалоговом окне «Печать». Это свойство имеет нулевое значение, если пользователь запрашивает печать всех страниц, если диапазон страниц не отображался в диалоговом окне «Печать» или если это окно не выводилось.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:isColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isColor</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, какой режим использует выбранный принтер с текущими настройками печати: цветной (true) или градации серого (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, какой режим использует выбранный принтер с текущими настройками печати: цветной (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или градации серого (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	 
	 <p class="- topic/p ">Если не удается определить режим, используется значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Указывает, поддерживает ли текущая платформа класс PrintJob: да (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Указывает, поддерживает ли текущая платформа класс PrintJob: да (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). 
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:jobName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">jobName</apiName><shortdesc class="- topic/shortdesc ">
     Имя или заголовок задания печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">если код пытается установить свойство, когда свойство <codeph class="+ topic/ph pr-d/codeph ">active</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiDefaultValue>&lt;code>null&lt;/code>
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Имя или заголовок задания печати. Имя задания обычно используется операционной системой как заголовок задания в очереди печати или как имя по умолчанию для задания, которое печатается в файл.
     
     <p class="- topic/p ">Если еще не вызывался метод <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> и свойство не задано, то ему задается значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     
     <p class="- topic/p ">Для каждого задания печати, выполняемого с помощью экземпляра PrintJob, задайте это свойство до вызова метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:lastPage:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastPage</apiName><shortdesc class="- topic/shortdesc ">
     Номер последней страницы диапазона, введенный пользователем в системном диалоговом окне «Печать».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Номер последней страницы диапазона, введенный пользователем в системном диалоговом окне «Печать». Это свойство имеет нулевое значение, если пользователь запрашивает печать всех страниц, если диапазон страниц не отображался в диалоговом окне «Печать» или если это окно не выводилось.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:maxPixelsPerInch:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPixelsPerInch</apiName><shortdesc class="- topic/shortdesc ">
     Физическое разрешение выбранного принтера, в пикселах на дюйм.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Физическое разрешение выбранного принтера, в пикселах на дюйм. Это значение вычисляется в соответствии с текущими настройками печати в операционной системе.
     
     <p class="- topic/p ">Если определить разрешение не удается, используется значение по умолчанию. Значение по умолчанию — 600 пикс./дюйм в ОС Linux и 360 пикс./дюйм в ОС Mac OS. В ОС Windows разрешение принтера всегда доступно, поэтому значение по умолчанию не требуется.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:orientation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">orientation</apiName><shortdesc class="- topic/shortdesc ">
    Ориентация изображения при печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="read only" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="read only" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="read-write" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.orientation, orientation 
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Ориентация изображения при печати. Допустимые значения определены как константы в классе PrintJobOrientation.
	
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В AIR 2 и более поздних версиях это свойство можно установить до начала печати, чтобы задать ориентацию по умолчанию в диалоговых окнах «Параметры страницы» и «Печать». Установите это свойство в процессе выполнения задания печати (после вызова метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph>, чтобы задать ориентацию для диапазона страниц в текущем задании.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJobOrientation" class="- topic/link "><linktext class="- topic/linktext ">Класс PrintJobOrientation</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:pageHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pageHeight</apiName><shortdesc class="- topic/shortdesc ">
     Высота самой большой области, которую можно расположить по центру фактической области печати на странице (в пунктах).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.pageHeight, pageHeight 
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Высота самой большой области, которую можно расположить по центру фактической области печати на странице (в пунктах). Любые границы, установленные пользователем, игнорируются. Это свойство доступно только после того, как был вызван метод <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В AIR 2 и более поздних версиях это свойство игнорируется. Используйте вместо него свойство <codeph class="+ topic/ph pr-d/codeph ">printableArea</codeph>, которое измеряет область печати в дробных пунктах и точно описывает области печати, смещенные относительно центра.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/printableArea" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.printableArea</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:pageWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pageWidth</apiName><shortdesc class="- topic/shortdesc ">
     Ширина самой большой области, которую можно расположить по центру фактической области печати на странице (в пунктах).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.pageWidth, pageWidth 
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ширина самой большой области, которую можно расположить по центру фактической области печати на странице (в пунктах). Любые границы, установленные пользователем, игнорируются. Это свойство доступно только после того, как был вызван метод <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В AIR 2 и более поздних версиях это свойство игнорируется. Используйте вместо него свойство <codeph class="+ topic/ph pr-d/codeph ">printableArea</codeph>, которое измеряет область печати в дробных пунктах и точно описывает области печати, смещенные относительно центра.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/printableArea" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.printableArea</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:paperArea:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">paperArea</apiName><shortdesc class="- topic/shortdesc ">
     Границы материала для печати в принтере, в пунктах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Границы материала для печати в принтере, в пунктах. Это значение использует ту же систему координат, что и в последующих вызовах метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:paperHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">paperHeight</apiName><shortdesc class="- topic/shortdesc ">
    Общая высота бумаги (в пунктах).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.paperHeight, paperHeight 
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Общая высота бумаги (в пунктах). Это свойство доступно только после того, как был вызван метод <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В AIR 2 и более поздних версиях это свойство игнорируется. Вместо него используйте свойство <codeph class="+ topic/ph pr-d/codeph ">paperArea</codeph>, которое измеряет размеры бумаги в дробных пунктах.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/paperArea" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.paperArea</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:paperWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">paperWidth</apiName><shortdesc class="- topic/shortdesc ">
    Общая ширина бумаги (в пунктах).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob, printjob.paperWidth, paperWidth 
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Общая ширина бумаги (в пунктах). Это свойство доступно только после того, как был вызван метод <codeph class="+ topic/ph pr-d/codeph ">PrintJob.start()</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> В AIR 2 и более поздних версиях это свойство игнорируется. Вместо него используйте свойство <codeph class="+ topic/ph pr-d/codeph ">paperArea</codeph>, которое измеряет размеры бумаги в дробных пунктах.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/paperArea" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.paperArea</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJob:printableArea:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">printableArea</apiName><shortdesc class="- topic/shortdesc ">
     Границы области печати материала в принтере, в пунктах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Границы области печати материала в принтере, в пунктах. Это значение использует ту же систему координат, что и в последующих вызовах метода <codeph class="+ topic/ph pr-d/codeph ">addPage()</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:printer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">printer</apiName><shortdesc class="- topic/shortdesc ">
     Получает или задает принтер для выполнения текущего задания печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Получает или задает принтер для выполнения текущего задания печати. Объект String, передаваемый установщику получателем, должен соответствовать одной из строк в объекте Array, возращенном методом <codeph class="+ topic/ph pr-d/codeph ">printers()</codeph>. Чтобы указать, что необходимо использовать принтер по умолчанию, задайте этому свойству значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. В операционных системах, где невозможно определить принтер по умолчанию, это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 import flash.printing.PrintJob;
	 
	 var myPrintJob:PrintJob = new PrintJob();
	 myPrintJob.printer = "HP_LaserJet_1";
	 myPrintJob.start();
	 </codeblock>
     
     <p class="- topic/p ">Когда задается значение для этого свойства, предпринимается попытка немедленно выбрать принтер. Если выбрать принтер не удается, используется предыдущее значение этого свойства. Чтобы узнать, удалось ли задать значение принтера, проверьте значение свойства после попытки установить его и убедитесь, соответствует ли оно заданному значению.</p>
     
     <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">printer</codeph> активного задания печати изменить нельзя. Попытки изменить свойство после успешного вызова метода <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">start2()</codeph> и перед вызовом метода <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">terminate()</codeph> не дают результатов.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:printers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">printers</apiName><shortdesc class="- topic/shortdesc ">
     Предоставляет список доступных принтеров в виде строковых значений имен.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Предоставляет список доступных принтеров в виде строковых значений имен. Список не вычисляется предварительно, он генерируется в момент вызова функции. Если нет доступных принтеров или система не поддерживает печать, используется значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Если система поддерживает печать, но не может вернуть список принтеров, в качестве значения используется объект Vector с одним элементом (его свойство <codeph class="+ topic/ph pr-d/codeph ">length</codeph> имеет значение 1). В этом случае единственный элемент содержит действительное имя принтера, либо имя по умолчанию, если невозможно определить имя текущего принтера.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PrintJob:supportsPageSetupDialog:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsPageSetupDialog</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, поддерживает ли текущая среда выполнения Flash отображение отдельного диалогового окна «Параметры страницы».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, поддерживает ли текущая среда выполнения Flash отображение отдельного диалогового окна «Параметры страницы». Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, можно вызвать метод <codeph class="+ topic/ph pr-d/codeph ">showPageSetupDialog()</codeph>, чтобы вывести системное диалоговое окно «Параметры страницы».
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/showPageSetupDialog()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.showPageSetupDialog()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.printing:PrintJobOrientation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PrintJobOrientation</apiName><shortdesc class="- topic/shortdesc ">
Этот класс содержит значения, используемые свойством PrintJob.orientation для позиционирования изображения на печатаемой странице.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Этот класс содержит значения, используемые свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJob.orientation</codeph> для позиционирования изображения на печатаемой странице.
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/orientation" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.orientation</linktext></link></related-links><apiValue id="flash.printing:PrintJobOrientation:LANDSCAPE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LANDSCAPE</apiName><shortdesc class="- topic/shortdesc ">
	Горизонтальная (альбомная) ориентация изображения для печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob.landscape, landscape
	</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">landscape</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Горизонтальная (альбомная) ориентация изображения для печати. Эта константа используется со свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJob.orientation</codeph>. Используется синтаксис <codeph class="+ topic/ph pr-d/codeph ">PrintJobOrientation.LANDSCAPE</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/orientation" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.orientation</linktext></link><link href="flash.printing.xml#PrintJobOrientation/PORTRAIT" class="- topic/link "><linktext class="- topic/linktext ">PORTRAIT</linktext></link></related-links></apiValue><apiValue id="flash.printing:PrintJobOrientation:PORTRAIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PORTRAIT</apiName><shortdesc class="- topic/shortdesc ">
	Вертикальная (книжная) ориентация изображения для печати.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">printjob.portrait, portrait
	</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">portrait</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Вертикальная (книжная) ориентация изображения для печати. Эта константа используется со свойством <codeph class="+ topic/ph pr-d/codeph ">PrintJob.orientation</codeph>. Используется синтаксис <codeph class="+ topic/ph pr-d/codeph ">PrintJobOrientation.PORTRAIT</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/orientation" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.orientation</linktext></link><link href="flash.printing.xml#PrintJobOrientation/LANDSCAPE" class="- topic/link "><linktext class="- topic/linktext ">LANDSCAPE</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.printing:PaperSize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PaperSize</apiName><shortdesc class="- topic/shortdesc ">
Этот класс предоставляет доступные значения для параметра paperSize метода PrintJob.selectPaperSize().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Этот класс предоставляет доступные значения для параметра <codeph class="+ topic/ph pr-d/codeph ">paperSize</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">PrintJob.selectPaperSize()</codeph>. Каждая константа представляет формат бумаги, используемой для печати страницы.

<p class="- topic/p ">В следующей таблице приводятся приблизительные размеры для каждого типа бумаги. Размеры указаны приблизительно, так как они незначительно варьируются в зависимости от драйвера принтера. Например, ширина бумаги A4 может составлять 595,0 595,2, 595,22 или 595,28 пунктов в зависимости от драйвера.</p>

<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Значение</entry><entry class="- topic/entry ">Размер в пунктах</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">A4</entry><entry class="- topic/entry ">595 x 842</entry></row><row class="- topic/row "><entry class="- topic/entry ">A5</entry><entry class="- topic/entry ">420 x 595</entry></row><row class="- topic/row "><entry class="- topic/entry ">A6</entry><entry class="- topic/entry ">297 x 420</entry></row><row class="- topic/row "><entry class="- topic/entry ">CHOUKEI3GOU</entry><entry class="- topic/entry ">340 x 666</entry></row><row class="- topic/row "><entry class="- topic/entry ">CHOUKEI4GOU</entry><entry class="- topic/entry ">298 x 666</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_10</entry><entry class="- topic/entry ">297 x 684</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_B5</entry><entry class="- topic/entry ">499 x 709</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_C5</entry><entry class="- topic/entry ">459 x 649</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_DL</entry><entry class="- topic/entry ">312 x 624</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_MONARCH</entry><entry class="- topic/entry ">279 x 540</entry></row><row class="- topic/row "><entry class="- topic/entry ">ENV_PERSONAL</entry><entry class="- topic/entry ">261 x 468</entry></row><row class="- topic/row "><entry class="- topic/entry ">EXECUTIVE</entry><entry class="- topic/entry ">522 x 756</entry></row><row class="- topic/row "><entry class="- topic/entry ">FOLIO</entry><entry class="- topic/entry ">612 x 936</entry></row><row class="- topic/row "><entry class="- topic/entry ">JIS_B5</entry><entry class="- topic/entry ">516 x 729</entry></row><row class="- topic/row "><entry class="- topic/entry ">LEGAL</entry><entry class="- topic/entry ">612 x 1008</entry></row><row class="- topic/row "><entry class="- topic/entry ">LETTER</entry><entry class="- topic/entry ">612 x 792</entry></row><row class="- topic/row "><entry class="- topic/entry ">STATEMENT</entry><entry class="- topic/entry ">396 x 612</entry></row></tbody></tgroup></adobetable>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.printing.xml#PrintJob/selectPaperSize()" class="- topic/link "><linktext class="- topic/linktext ">PrintJob.selectPaperSize()</linktext></link></related-links><apiValue id="flash.printing:PaperSize:A4" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">A4</apiName><shortdesc class="- topic/shortdesc ">
	 A4
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">a4</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 A4
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:A5" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">A5</apiName><shortdesc class="- topic/shortdesc ">
	 A5
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">a5</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 A5
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:A6" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">A6</apiName><shortdesc class="- topic/shortdesc ">
	 A6
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">a6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 A6
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:CHOUKEI3GOU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHOUKEI3GOU</apiName><shortdesc class="- topic/shortdesc ">
	 Японский конверт choukei 3 gou
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">choukei3gou</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Японский конверт choukei 3 gou
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:CHOUKEI4GOU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHOUKEI4GOU</apiName><shortdesc class="- topic/shortdesc ">
	 Японский конверт choukei 4 gou
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">choukei4gou</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Японский конверт choukei 4 gou
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_10" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_10</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт Legal
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_10</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт Legal
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_B5" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_B5</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт B5
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_b5</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт B5
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_C5" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_C5</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт C5
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_c5</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт C5
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_DL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_DL</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт DL
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_dl</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт DL
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_MONARCH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_MONARCH</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт Monarch
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_monarch</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт Monarch
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:ENV_PERSONAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENV_PERSONAL</apiName><shortdesc class="- topic/shortdesc ">
	 Конверт Personal
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">env_personal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Конверт Personal
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:EXECUTIVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXECUTIVE</apiName><shortdesc class="- topic/shortdesc ">
	 Формат Executive
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">executive</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Формат Executive
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:FOLIO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FOLIO</apiName><shortdesc class="- topic/shortdesc ">
	 Формат Folio
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">folio</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Формат Folio
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:JIS_B5" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JIS_B5</apiName><shortdesc class="- topic/shortdesc ">
	 Японский B5
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">jis_b5</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Японский B5
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:LEGAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LEGAL</apiName><shortdesc class="- topic/shortdesc ">
	 Традиционный формат Legal
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">legal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Традиционный формат Legal
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:LETTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LETTER</apiName><shortdesc class="- topic/shortdesc ">
	 Традиционный формат Letter
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">letter</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Традиционный формат Letter
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.printing:PaperSize:STATEMENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STATEMENT</apiName><shortdesc class="- topic/shortdesc ">
	 Формат Statement
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">statement</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Формат Statement
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>