<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.system" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.system</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.system:ImageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ImageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
 Die ImageDecodingPolicy-Klasse definiert Werte für die imageDecodingPolicy-Eigenschaft der LoaderContext-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die ImageDecodingPolicy-Klasse definiert Werte für die imageDecodingPolicy-Eigenschaft der LoaderContext-Klasse.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die ImageDecodingPolicy-Klasse definiert Werte für die <codeph class="+ topic/ph pr-d/codeph ">imageDecodingPolicy</codeph>-Eigenschaft der LoaderContext-Klasse.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext/imageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.imageDecodingPolicy</linktext></link></related-links><apiValue id="flash.system:ImageDecodingPolicy:ON_DEMAND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_DEMAND</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass das Bild, das geladen wird, erst dann dekodiert wird, wenn es gebraucht wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onDemand</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass das Bild, das geladen wird, erst dann dekodiert wird, wenn es gebraucht wird.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ImageDecodingPolicy:ON_LOAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_LOAD</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass das Bild dekodiert wird, wenn es geladen wurde, bevor das complete-Ereignis gesendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onLoad</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass das Bild dekodiert wird, wenn es geladen wurde, bevor das complete-Ereignis gesendet wird. 
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdaterType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdaterType</apiName><shortdesc class="- topic/shortdesc ">
	 Die SystemUpdaterType-Klasse stellt Konstanten für ein Systemupdate bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die SystemUpdaterType-Klasse stellt Konstanten für ein Systemupdate bereit. Diese Konstanten werden in der <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update()</codeph>-Funktion verwendet.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die SystemUpdater-API wird auf Desktopplattformen unterstützt.</p>
	 </apiDesc></apiClassifierDetail><apiValue id="flash.system:SystemUpdaterType:DRM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM</apiName><shortdesc class="- topic/shortdesc ">
		Aktualisiert das DRM-Modul.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drm</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Aktualisiert das DRM-Modul.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:SystemUpdaterType:SYSTEM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SYSTEM</apiName><shortdesc class="- topic/shortdesc ">
		Aktualisiert die Player-Laufzeitumgebung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">system</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Aktualisiert die Player-Laufzeitumgebung.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:IMEConversionMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IMEConversionMode</apiName><shortdesc class="- topic/shortdesc ">
 Diese Klasse enthält Konstanten zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Diese Klasse enthält Konstanten zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Durch Setzen von <codeph class="+ topic/ph pr-d/codeph ">conversionMode</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph> wird im Player eine Schrift mit voller Breite verwendet, bei Verwendung von <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph> dagegen eine Schrift mit halber Breite.
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „ALPHANUMERIC_FULL“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"ALPHANUMERIC_FULL"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit allen IMEs verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „ALPHANUMERIC_HALF“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"ALPHANUMERIC_HALF"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit allen IMEs verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:CHINESE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHINESE</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „CHINESE“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">CHINESE</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"CHINESE"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit IMEs für vereinfachtes und traditionelles Chinesisch verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.CHINESE</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_HIRAGANA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_HIRAGANA</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „JAPANESE_HIRAGANA“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_HIRAGANA</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_HIRAGANA"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit IMEs für Japanisch verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_HIRAGANA</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „JAPANESE_KATAKANA_FULL“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_KATAKANA_FULL"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit IMEs für Japanisch verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „JAPANESE_KATAKANA_HALF“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_KATAKANA_HALF"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit IMEs für Japanisch verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:KOREAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KOREAN</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „KOREAN“ zur Verwendung mit der IME.conversionMode-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">KOREAN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"KOREAN"</codeph> zur Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft. Diese Konstante wird mit IMEs für Koreanisch verwendet. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.KOREAN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:UNKNOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNKNOWN</apiName><shortdesc class="- topic/shortdesc ">
	 Der String „UNKNOWN“, der durch Aufrufen der IME.conversionMode-Eigenschaft zurückgegeben werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">UNKNOWN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der String <codeph class="+ topic/ph pr-d/codeph ">"UNKNOWN"</codeph>, der durch Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>-Eigenschaft zurückgegeben werden kann. Dieser Wert kann nicht gesetzt werden und wird nur zurückgegeben, wenn der Player den derzeit aktiven IME nicht erkennt. Verwenden Sie die Syntax <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.UNKNOWN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityPanel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityPanel</apiName><shortdesc class="- topic/shortdesc ">
 Die SecurityPanel-Klasse enthält Werte zur Angabe des anzuzeigenden Bedienfelds für die Sicherheitseinstellungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die SecurityPanel-Klasse enthält Werte zur Angabe des anzuzeigenden Bedienfelds für die Sicherheitseinstellungen.
 
 <p class="- topic/p ">Diese Klasse enthält statische Konstanten, die mit der <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>-Methode verwendet werden. Sie können keine neuen Instanzen der SecurityPanel-Klasse erstellen.</p>
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> Das folgende Beispiel demonstriert, wie Sie mit einem <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis eines Sprite-Objekts das Bedienfeld für die Einstellungen des lokalen Speichers in den Flash Player-Einstellungen anzeigen können. Der Bühne wird mithilfe von <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> ein orangefarbenes Feld hinzugefügt. Zu <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> wird ein <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis-Listener mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> hinzugefügt, der auf <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignisse reagiert, indem Flash Player veranlasst wird, das Bedienfeld für die Einstellungen des lokalen Speichers zu öffnen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiValue id="flash.system:SecurityPanel:CAMERA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAMERA</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld für die Kamera angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.CAMERA, CAMERA
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">camera</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld für die Kamera angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird das zuletzt geöffnete Bedienfeld angezeigt, bei dem der Benutzer Flash Player-Einstellungen geschlossen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DEFAULT, DEFAULT
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird das zuletzt geöffnete Bedienfeld angezeigt, bei dem der Benutzer die Flash Player-Einstellungen geschlossen hat.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DISPLAY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld „Anzeige“ angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DISPLAY, DISPLAY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">display</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld „Anzeige“ angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:LOCAL_STORAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_STORAGE</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird das Bedienfeld für die Einstellungen des lokalen Speichers in den Flash Player-Einstellungen angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.LOCAL_STORAGE, LOCAL_STORAGE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localStorage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird das Bedienfeld für die Einstellungen des lokalen Speichers in den Flash Player-Einstellungen angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:MICROPHONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MICROPHONE</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld für das Mikrofon angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.MICROPHONE, MICROPHONE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">microphone</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird in den Flash Player-Einstellungen das Bedienfeld für das Mikrofon angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:PRIVACY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PRIVACY</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird das Bedienfeld für die Zugriffsschutzeinstellungen in den Flash Player-Einstellungen angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.PRIVACY, PRIVACY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">privacy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird das Bedienfeld für die Zugriffsschutzeinstellungen in den Flash Player-Einstellungen angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:SETTINGS_MANAGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SETTINGS_MANAGER</apiName><shortdesc class="- topic/shortdesc ">
	 Wenn diese Konstante für Security.showSettings() übergeben wird, wird der Einstellungsmanager (in einem separaten Browserfenster) angezeigt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.SETTINGS_MANAGER, SETTINGS_MANAGER
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">settingsManager</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn diese Konstante für <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> übergeben wird, wird der Einstellungsmanager (in einem separaten Browserfenster) angezeigt.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:TouchscreenType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TouchscreenType</apiName><shortdesc class="- topic/shortdesc ">
 Die TouchscreenType-Klasse ist eine Aufzählungsklasse, die Werte für die verschiedenen Arten von berührungsempfindlichen Bildschirmen bietet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die TouchscreenType-Klasse ist eine Aufzählungsklasse, die Werte für die verschiedenen Arten von berührungsempfindlichen Bildschirmen bietet.
 
 <p class="- topic/p ">Verwenden Sie die Werte, die von der TouchscreenType-Klasse definiert werden, mit der <codeph class="+ topic/ph pr-d/codeph ">Capabilities.touchscreenType</codeph>-Eigenschaft.</p>
 
 </apiDesc><example conref="examples\KeyboardType.as" class="- topic/example "> Das folgende Beispiel ist ein einfacher Test, der den aktuellen Status der Feststelltaste und der Taste „NUM“ sowie den Tastaturtyp und den Touchscreentyp der laufenden Umgebung anzeigt. Klicken Sie beim Testen dieses Beispiels auf das Textfeld, um die Eigenschaftswerte zu sehen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.ui.Keyboard;
import flash.system.Capabilities;
import flash.text.TextField;


var keyboardInfoTxt:TextField = new TextField();
keyboardInfoTxt.x = 30;
keyboardInfoTxt.y = 50;
keyboardInfoTxt.width = 300;
keyboardInfoTxt.height = 100;
keyboardInfoTxt.border = true;

addChild(keyboardInfoTxt);

addEventListener (MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    keyboardInfoTxt.text= "Caps Lock is : " + String(flash.ui.Keyboard.capsLock)+ "\n" + 
    "Num Lock is : " + String(flash.ui.Keyboard.numLock) +"\n" + 
    "Has Virtual Keyboard : " + String(flash.ui.Keyboard.hasVirtualKeyboard) + "\n" + 
    "Physical Keyboard Type : " + flash.ui.Keyboard.physicalKeyboardType + "\n" + 
    "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/touchscreenType" class="- topic/link "><linktext class="- topic/linktext ">Capabilities.touchscreenType</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links><apiValue id="flash.system:TouchscreenType:FINGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FINGER</apiName><shortdesc class="- topic/shortdesc ">
	 Ein Touchscreen, der auf Fingerberührungen reagiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">finger</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein Touchscreen, der auf Fingerberührungen reagiert.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc ">
	 Der Computer oder das Gerät hat keinen unterstützten Touchscreen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Computer oder das Gerät hat keinen unterstützten Touchscreen.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:STYLUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STYLUS</apiName><shortdesc class="- topic/shortdesc ">
	 Ein Touchscreen, der mit einem Touchpen verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stylus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein Touchscreen, der mit einem Touchpen verwendet wird.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
 Die ApplicationDomain-Klasse ist ein Container für diskrete Gruppen mit Klassendefinitionen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Security considerations for application domains are discussed in the 
 applicationDomain property entries of URLRequest and LoaderInfo. 
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die ApplicationDomain-Klasse ist ein Container für diskrete Gruppen mit Klassendefinitionen. Mit Anwendungsdomänen werden Klassen unterteilt, die sich in der gleichen Sicherheitsdomäne befinden. Dies ermöglicht mehrere Definitionen der gleichen Klasse und die Wiederverwendung übergeordneter Definitionen in Unterklassen.
 
 <p class="- topic/p ">Anwendungsdomänen werden beim Laden einer externen SWF-Datei über die Loader-Klasse verwendet. Alle ActionScript 3.0-Definitionen in der geladenen SWF-Datei sind in der Anwendungsdomäne gespeichert, die durch die <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph>-Eigenschaft des LoaderContext-Objekts angegeben wird, das als <codeph class="+ topic/ph pr-d/codeph ">context</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph>-Methode des Loader-Objekts übergeben wird. Das LoaderInfo-Objekt enthält auch eine schreibgeschützte <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph>-Eigenschaft.</p>
 
 <p class="- topic/p ">Der gesamte Code in einer SWF-Datei ist so definiert, dass er sich in einer Anwendungsdomäne befindet. Die aktuelle Anwendungsdomäne ist die Domäne, in der die Hauptanwendung ausgeführt wird. Die Systemdomäne enthält alle Anwendungsdomänen, einschließlich der aktuellen Domäne, d. h. alle Klassen von Flash Player.</p>
 
 <p class="- topic/p ">Mit Ausnahme der Systemdomäne ist jede Anwendungsdomäne mit einer übergeordneten Domäne verknüpft. Die Systemdomäne ist die übergeordnete Domäne der Anwendungsdomäne der Hauptanwendung. Geladene Klassen werden nur definiert, wenn sie in der jeweiligen Superklasse nicht bereits definiert sind. Die Definition einer geladenen Klasse kann nicht mit einer neueren Definition überschrieben werden.</p>
 
 <p class="- topic/p ">Verwendungsbeispiele für Anwendungsdomänen finden Sie im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
 
 <p class="- topic/p ">Über die <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain()</codeph>-Konstruktorfunktion können Sie ein ApplicationDomain-Objekt erstellen.</p>
 
 </apiDesc><example conref="examples\ApplicationDomainExample.as" class="- topic/example "> Das folgende Beispiel veranschaulicht, wie Klassen zur Laufzeit geladen und öffentliche Methoden, die sich in einer anderen SWF-Datei befinden, aufgerufen werden.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Da eine SWF-Datei von der ClassLoader-Klasse geladen wird, muss die lokale Sicherheit die Dateisystemebene erfassen.</li><li class="- topic/li ">Um dieses Beispiel auszuführen, müssen Sie über eine swf-Datei mit dem Namen „RuntimeClasses.swf“ verfügen, die sich im gleichen Ordner befindet wie „ApplicationDomainExample.swf“.</li></ul>
 
 <p class="- topic/p ">Erstellen Sie zunächst die Datei „RuntimeClasses.swf“ mithilfe des folgenden Codes:</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
   import flash.display.Sprite;
   public class RuntimeClasses extends Sprite
   {
     public function RuntimeClasses()
     {}
      
     public function greet():String {
       return("Hello World");
     }
   }
 }
 </codeblock>
 
 <p class="- topic/p ">Implementieren Sie dann den folgenden Code:</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;

    public class ApplicationDomainExample extends Sprite {
        private var loader:ClassLoader;
        private var tf:TextField = new TextField();

        public function ApplicationDomainExample() {
            addChild(tf);

            loader = new ClassLoader();
            loader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            loader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            loader.load("RuntimeClasses.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            var runtimeClassRef:Class = loader.getClass("RuntimeClasses");
            var greeter:Object = new runtimeClassRef();

            tf.text = greeter.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
        context.applicationDomain=ApplicationDomain.currentDomain;
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example><example conref="examples\ApplicationDomainExample.2.as" class="- topic/example "> Wenn mehrere SWF-Dateien kompilierte Klassen mit demselben Namen enthalten, die jedoch unterschiedliche Implementierungen bieten, können Sie die Klassen der extern geladenen SWF-Dateien anhand des folgenden Beispiels getrennt von anderen Klassen speichern. Bisher wurde die untergeordnete SWF-Datei angewiesen, <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph> zu verwenden. In diesem Fall wurde eine neue <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph> erstellt, sodass die Eigenschaften und Methoden der <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph>-Klasse der SWF-Datei, die als zweite geladen wird, nicht die Eigenschaften und Methoden der ersten <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph>-Klasse ersetzen. Sie können dies testen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">context.applicationDomain</codeph>-Eigenschaft in der <codeph class="+ topic/ph pr-d/codeph ">load</codeph>-Methode von <codeph class="+ topic/ph pr-d/codeph ">ClassLoader</codeph> ändern.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Da eine SWF-Datei von der ClassLoader-Klasse geladen wird, muss die lokale Sicherheit die Dateisystemebene erfassen.</li><li class="- topic/li ">Um dieses Beispiel auszuführen, müssen Sie über zwei SWF-Dateien mit dem Namen „Greeter.swf“ verfügen, die im Ordner „en“ bzw. „es“ gespeichert sind.</li></ul>
 
 <p class="- topic/p ">Erstellen Sie im Ordner „en“ eine Datei mit dem Namen „Greeter.as“ mit dem folgenden Code:</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Good Morning");
        }
    }
 }
 </codeblock>
 <p class="- topic/p ">Erstellen Sie dann eine sehr ähnliche „Greeter.as“-Datei im Ordner „es“:</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Buenos Dias");
        }
    }
}
 </codeblock>
 
 <p class="- topic/p ">Kompilieren Sie SWF-Dateien für beide und implementieren Sie dann den folgenden Code:</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class ApplicationDomainExample2 extends Sprite {
        private var spanishGreeterLoader:ClassLoader;
        private var englishGreeterLoader:ClassLoader;
        private var tf:TextField = new TextField();
        private var greetersLoaded:uint = 0;

        public function ApplicationDomainExample2() {
            tf.autoSize = TextFieldAutoSize.LEFT;
            addChild(tf);

            spanishGreeterLoader = new ClassLoader();
            spanishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            spanishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            spanishGreeterLoader.load("es/Greeter.swf");
            
            englishGreeterLoader = new ClassLoader();
            englishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            englishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            englishGreeterLoader.load("en/Greeter.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            greetersLoaded++;
            if(greetersLoaded == 2) {
                greet();    
            }
        }
        
        private function greet():void {
            var spanishGreeter:Class = spanishGreeterLoader.getClass("Greeter");
            var englishGreeter:Class = englishGreeterLoader.getClass("Greeter");
            var greeter1 = new spanishGreeter();
            var greeter2 = new englishGreeter();
            
            tf.text = greeter1.greet() + "\n" + greeter2.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
//        context.applicationDomain = ApplicationDomain.currentDomain;
        context.applicationDomain = new ApplicationDomain();
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#LoaderInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links><apiConstructor id="flash.system:ApplicationDomain:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt eine neue Anwendungsdomäne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">parentDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn keine übergeordnete Domäne übergeben wird, wird dieser Anwendungsdomäne die Systemdomäne als übergeordnete Domäne zugeordnet.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt eine neue Anwendungsdomäne.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:ApplicationDomain:getDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Ruft eine öffentliche Definition von der angegebenen Anwendungsdomäne ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws SecurityError The definition belongs to a domain to which
     the calling code does not have access.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es ist keine öffentliche Definition mit dem angegebenen Namen vorhanden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das mit der Definition verknüpfte Objekt.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der Definition.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft eine öffentliche Definition von der angegebenen Anwendungsdomäne ab. Dabei kann es sich um die Definition einer Klasse, eines Namespace oder einer Funktion handeln.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:ApplicationDomain:hasDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Überprüft, ob in der angegebenen Anwendungsdomäne eine öffentliche Definition vorhanden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die angegebene Definition vorhanden ist, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der Definition.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Überprüft, ob in der angegebenen Anwendungsdomäne eine öffentliche Definition vorhanden ist. Dabei kann es sich um die Definition einer Klasse, eines Namespace oder einer Funktion handeln.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:ApplicationDomain:MIN_DOMAIN_MEMORY_LENGTH:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIN_DOMAIN_MEMORY_LENGTH</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die erforderliche Mindestlänge des Speicherobjekts ab, das als ApplicationDomain.domainMemory verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die erforderliche Mindestlänge des Speicherobjekts ab, das als ApplicationDomain.domainMemory verwendet wird.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die aktuelle Anwendungsdomäne ab, in der der Code ausgeführt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Question: Do you call System.currentDomain? or Loader.currentDomain or request.currentDomain?
     
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die aktuelle Anwendungsdomäne ab, in der der Code ausgeführt wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:domainMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domainMemory</apiName><shortdesc class="- topic/shortdesc ">
     Ruft das Objekt ab und stellt es ein, für welches Cross-Domain-Speichervorgänge innerhalb dieser ApplicationDomain stattfinden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft das Objekt ab und stellt es ein, für welches Cross-Domain-Speichervorgänge innerhalb dieser ApplicationDomain stattfinden.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:parentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die übergeordnete Domäne der Anwendungsdomäne ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die übergeordnete Domäne der Anwendungsdomäne ab.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Security" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Security</apiName><shortdesc class="- topic/shortdesc ">
 Mit der Security-Klasse können Sie angeben, wie Inhalte in unterschiedlichen Domänen miteinander kommunizieren können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, XMLNode object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der Security-Klasse können Sie angeben, wie Inhalte in unterschiedlichen Domänen miteinander kommunizieren können.
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> Das folgende Beispiel demonstriert, wie Sie mit einem <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis eines Sprite-Objekts das Bedienfeld für die Einstellungen des lokalen Speichers in den Flash Player-Einstellungen anzeigen können. Der Bühne wird mithilfe von <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> ein orangefarbenes Feld hinzugefügt. Zu <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> wird ein <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis-Listener mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> hinzugefügt, der auf <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignisse reagiert, indem Flash Player veranlasst wird, das Bedienfeld für die Einstellungen des lokalen Speichers zu öffnen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiOperation id="flash.system:Security:allowDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowDomain</apiName><shortdesc class="- topic/shortdesc ">
     Lässt SWF-Dateien in den identifizierten Domänen auf Objekte und Variablen in der SWF-Datei zugreifen, die den allowDomain()-Aufruf enthalten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowDomain, allowDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn diese Methode von Code in der Sicherheitssandbox der AIR-Anwendung aufgerufen wird, wird ein SecurityError-Ausnahmefehler zurückgegeben. Inhalt außerhalb der Sicherheitssandbox der Anwendung kann kein Cross-Scripting für Inhalte in der Sicherheitssandbox der Anwendung ausführen. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein oder mehrere Strings bzw. URLRequest-Objekte zur Bezeichnung der Domänen, über die Sie den Zugriff gewähren möchten. Sie können die Sonderdomäne „~~“ angeben, um den Zugriff über alle Domänen zu ermöglichen.  
     
     <p class="- topic/p ">In Flash Professional kann nur durch Angabe von „~~“ der Zugriff auf nicht lokale SWF-Dateien über lokale SWF-Dateien ermöglicht werden, die unter Verwendung von „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ im Flash-Authoringtool veröffentlicht wurden.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der Platzhalterwert funktioniert nicht für Subdomänen. Sie können zum Beispiel nicht <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> für den <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>-Parameter verwenden. Sie können zwar eine Subdomäne mit einem Platzhalterwert für eine domänenübergreifende Richtliniendatei angeben (wie in <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), es ist jedoch nicht möglich, einen Platzhalterwert auf diese Weise für die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode zu verwenden.</p>
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Hiermit können SWF-Dateien und HTML-Dateien auf Objekte und Variablen in der aufrufenden SWF-Datei zugreifen.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Lässt SWF-Dateien in den identifizierten Domänen auf Objekte und Variablen in der SWF-Datei zugreifen, die den <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Aufruf enthalten.</ph>
     
     
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Der Aufruf dieser Methode vom Code in der Sandbox der AIR-Anwendung verursacht eine SecurityError-Ausnahme. Inhalt außerhalb der Sicherheitsdomäne der Anwendung kann kein direktes Cross-Scripting für Inhalte in der Anwendungssandbox ausführen. Allerdings kann Inhalt außerhalb der Anwendungssandbox über eine Sandbox-Brücke mit Inhalt in der Sicherheitssandbox der Anwendung kommunizieren.</p>
     
     <p class="- topic/p ">Wenn zwei SWF-Dateien von derselben Domäne aus bereitgestellt werden, z. B. von http://mysite.com/swfA.swf und http://mysite.com/swfB.swf, kann swfA.swf Variablen, Objekte, Eigenschaften, Methoden usw. in swfB.swf untersuchen und ändern, und swfB.swf kann dasselbe bei swfA.swf tun. Dies wird als <i class="+ topic/ph hi-d/i ">Skripterstellung über mehrere Filme</i> oder <i class="+ topic/ph hi-d/i ">Cross-Scripting</i> bezeichnet.</p>
     
     <p class="- topic/p ">Wenn zwei SWF-Dateien über verschiedene Domänen bereitgestellt werden, beispielsweise http://siteA.com/swfA.swf und http://siteB.com/siteB.swf, kann swfA.swf in Flash Player keine Skripterstellung von swfB.swf durchführen und umgekehrt. Eine SWF-Datei erteilt SWF-Dateien von anderen Domänen Berechtigungen durch Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Dies wird als <i class="+ topic/ph hi-d/i ">Cross-Domain-Scripting</i> bezeichnet. Durch Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("siteA.com")</codeph> erteilt siteB.swf der Datei siteA.swf die Berechtigung zur Skripterstellung.</p>
     
     <p class="- topic/p ">In domänenübergreifenden Situationen ist es wichtig, die betreffenden beiden Seiten klar zu trennen. Im Folgenden wird die Seite, die das Cross-Scripting durchführt, als <i class="+ topic/ph hi-d/i ">zugreifende Seite</i> (in der Regel die zugreifende SWF-Datei) und die andere Seite als <i class="+ topic/ph hi-d/i ">Seite, auf die zugegriffen wird</i> (in der Regel die SWF-Datei, auf die zugegriffen wird), bezeichnet. Wenn siteA.swf die Skripterstellung von siteB.swf durchführt, handelt es sich bei siteA.swf um die zugreifende Seite und bei siteB.swf um die Seite, auf die zugegriffen wird.</p>
     
     <p class="- topic/p "><adobeimage alt="Diagramm zu Cross-Domain-Scripting" href="../../images/crossScript_load.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
     
     <p class="- topic/p ">Mit <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> hergestellte Cross-Domain-Berechtigungen sind asymmetrisch. Im vorherigen Beispiel kann siteA.swf die Skripterstellung von siteB.swf durchführen, siteB.swf jedoch keine Skripterstellung von siteA.swf, da siteA.swf nicht <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> aufgerufen hat, um SWF-Dateien auf siteB.com die Berechtigung zur Skripterstellung zu erteilen. Sie können jedoch symmetrische Berechtigungen einrichten, indem Sie <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> aus beiden SWF-Dateien aufrufen.</p>
     
     <p class="- topic/p ">Flash Player schützt SWF-Dateien nicht nur vor Cross-Domain-Scripting durch andere SWF-Dateien, sondern auch vor Cross-Domain-Scripting durch HTML-Dateien. HTML-für-SWF-Skripterstellung kann bei älteren Browserfunktionen wie z. B. <codeph class="+ topic/ph pr-d/codeph ">SetVariable</codeph> oder bei Callbacks über <codeph class="+ topic/ph pr-d/codeph ">ExternalInterface.addCallback()</codeph> auftreten. Bei domänenübergreifender HTML-für-SWF-Skripterstellung muss die SWF-Datei, auf die zugegriffen wird, <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> genauso aufrufen, als ob es sich bei der zugreifenden Seite um eine SWF-Datei handelt, andernfalls schlägt der Vorgang fehl.</p>
     
     <p class="- topic/p ">Die Angabe einer IP-Adresse als Argument für <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> gestattet keinen Zugriff durch alle zugreifenden Seiten, die von der angegebenen IP-Adresse stammen. Stattdessen erhält hierdurch nur eine Seite Zugriff, die in der URL die angegebene IP-Adresse und nicht den Domänennamen enthält, der dieser IP-Adresse zugeordnet ist.</p> 
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Versionsspezifische Unterschiede</b></p>
     <p class="- topic/p ">Die domänenübergreifenden Sicherheitsregeln von Flash Player wurden von Version zu Version weiterentwickelt. Die Unterschiede sind in der folgenden Tabelle zusammengefasst.</p>
     
     <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Aktuellste am Cross-Scripting beteiligte SWF-Version</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> erforderlich?</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> erforderlich?</entry><entry class="- topic/entry ">Welche SWF-Datei muss <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> aufrufen?</entry><entry class="- topic/entry ">Was kann in <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> bzw. <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> angegeben werden?</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry align="center" class="- topic/entry ">5 oder frühere Version</entry><entry class="- topic/entry ">Nein</entry><entry align="center" class="- topic/entry ">Nein</entry><entry align="center" class="- topic/entry ">n. zutr.</entry><entry align="center" class="- topic/entry ">n. zutr.</entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">6</entry><entry class="- topic/entry ">Ja, wenn übergeordnete Domänen nicht übereinstimmen.</entry><entry align="center" class="- topic/entry ">Nein</entry><entry class="- topic/entry ">Die SWF-Datei, auf die zugegriffen wird, oder jede SWF-Datei mit der gleichen Superdomäne wie die SWF-Datei, auf die zugegriffen wird.</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Textbasierte Domäne (mysite.com)</li><li class="- topic/li ">IP-Adresse (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">7</entry><entry class="- topic/entry ">Ja, wenn Domänen nicht exakt übereinstimmen.</entry><entry class="- topic/entry ">Ja, wenn Zugriff von HTTP auf HTTPS stattfindet (auch wenn die Domänen exakt übereinstimmen)</entry><entry class="- topic/entry ">Die SWF-Datei, auf die zugegriffen wird, oder jede SWF-Datei mit der gleichen Domäne wie die SWF-Datei, auf die zugegriffen wird.</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Textbasierte Domäne (mysite.com)</li><li class="- topic/li ">IP-Adresse (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">8 oder spätere Version</entry><entry class="- topic/entry ">Ja, wenn Domänen nicht exakt übereinstimmen.</entry><entry class="- topic/entry ">Ja, wenn Zugriff von HTTP auf HTTPS stattfindet (auch wenn die Domänen exakt übereinstimmen)</entry><entry class="- topic/entry ">SWF-Datei, auf die zugegriffen wird</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Textbasierte Domäne (mysite.com)</li><li class="- topic/li ">IP-Adresse (192.168.1.1)</li><li class="- topic/li ">Platzhalter (~~)</li></ul></entry></row></tbody></tgroup></adobetable>
      
     <p class="- topic/p ">Die Versionen, die das Verhalten von Flash Player steuern, sind <i class="+ topic/ph hi-d/i ">SWF-Versionen</i> (Veröffentlichungsversionen einer SWF), nicht die Version von Flash Player selbst. Beispiel: Wenn Flash Player 8 eine SWF wiedergibt, die für Version 7 veröffentlicht wurde, wendet Flash Player das Verhalten von Version 7 an. Hierdurch wird sichergestellt, dass Upgrades des Players keinen Einfluss auf das Verhalten von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> in bereitgestellten SWF-Dateien haben.</p>
     
     <p class="- topic/p ">Die Spalte „Version“ in der vorherigen Tabelle gibt jeweils die neueste SWF-Version an, die an einem Cross-Scripting-Vorgang beteiligt ist. Flash Player bestimmt das Verhalten entweder aufgrund der Version der zugreifenden SWF-Datei oder der Version der SWF-Datei, auf die zugegriffen wird, je nachdem, welche der beiden Versionen neuer ist.</p>
     
     <p class="- topic/p ">Die folgenden Absätze enthalten weitere Informationen zu den Sicherheitsänderungen in Flash Player mit Bezug auf <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 5</b>. Beim Cross-Domain-Scripting liegen keine Beschränkungen vor.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 6</b>. Einführung der Cross-Domain-Scripting-Sicherheit. Standardmäßig verbietet Flash Player das Cross-Domain-Scripting. Mit <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> kann es jedoch zugelassen werden. Um festzustellen, ob sich zwei Dateien in derselben Domäne befinden, verwendet Flash Player die Superdomäne der jeweiligen Datei. Diese entspricht exakt dem Hostnamen aus der URL der Datei, minus dem ersten Segment, bis zu einem Minimum von zwei Segmenten. Beispiel: Die Superdomäne www.mysite.com lautet einfach mysite.com. In diesem Fall könnten SWF-Dateien sowohl von www.mysite.com als auch von store.mysite.com Skripten füreinander erstellen, ohne <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufzurufen.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 7</b>. Superdomänen-Übereinstimmung wird durch exakte Domänenübereinstimmung ersetzt. Zwei Dateien haben aufeinander nur dann Skriptzugriff, wenn die Hostnamen in ihren URLs identisch sind. Andernfalls ist ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> erforderlich. In der Standardeinstellung haben Dateien, die aus Nicht-HTTPS-URLs geladen werden, keinen Skriptzugriff mehr auf Dateien, die aus HTTPS-URLs geladen werden, auch wenn diese Dateien aus exakt derselben Domäne geladen werden. Diese Einschränkung trägt zum Schutz von HTTPS-Dateien bei, da eine Nicht-HTTPS-Datei beim Herunterladen geändert werden kann. Eine absichtlich geänderte Nicht-HTTPS-Datei kann eine HTTPS-Datei beschädigen, die ansonsten gegen Aktionen dieser Art geschützt wäre. Mit <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> können HTTPS-SWF-Dateien, auf die zugegriffen wird, diese Einschränkung bei Bedarf aufheben. Von der Verwendung von <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> wird jedoch abgeraten.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 8</b>. Änderungen in zwei wichtigen Bereichen:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Durch Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> sind Cross-Scripting-Vorgänge nun nur noch dann möglich, wenn die SWF-Datei, auf die zugegriffen wird, die Datei ist, die <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufgerufen hat. Mit anderen Worten: Eine SWF-Datei, die <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufruft, gibt nun nur den Zugriff auf sich selbst frei. In früheren Versionen ermöglichte der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> Cross-Scripting-Vorgänge, bei denen die SWF-Datei, auf die zugegriffen wurde, jede SWF-Datei in der Domäne der SWF-Datei sein konnte, die <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufgerufen hat. Durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> wurde bisher die gesamte Domäne der aufrufenden SWF-Datei freigegeben.</li><li class="- topic/li ">Für <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph> und <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph> werden nun Werte mit Platzhalterzeichen unterstützt. Der Platzhalter (~~) ermöglicht Cross-Scripting-Vorgänge, bei denen die zugreifende Datei jede beliebige Datei aus einer beliebigen Quelle sein kann. Der Platzhalter ist gewissermaßen eine globale Berechtigung. Berechtigungen durch Platzhalter sind zum Aktivieren bestimmter Vorgänge unter den Sicherheitsregeln für lokale Dateien erforderlich. Insbesondere bei einer lokalen SWF-Datei mit Berechtigung für den Netzwerkzugriff zum Erstellen von Skripten für eine SWF-Datei im Internet muss die Internet-SWF-Datei, auf die zugegriffen wird, die <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph>-Methode aufrufen, um der Tatsache Rechnung zu tragen, dass der Ursprung einer lokalen SWF-Datei unbekannt ist. (Wenn die Internet-SWF-Datei von einer HTTPS-URL geladen wird, muss die Internet-SWF-Datei stattdessen die <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph>-Methode aufrufen.)</li></ul>
       
     <p class="- topic/p ">Von Zeit zu Zeit stellt sich Ihnen folgende Situation: Sie laden eine untergeordnete SWF-Datei aus einer anderen Domäne und möchten dieser das Scripting für die übergeordnete SWF-Datei ermöglichen, Ihnen ist jedoch die endgültige Domäne der untergeordneten SWF-Datei nicht bekannt. Dies ist beispielsweise der Fall, wenn Sie Weiterleitungen mit Lastausgleich oder Server von Dritten verwenden.</p>
     
     <p class="- topic/p ">Sie können dann die <codeph class="+ topic/ph pr-d/codeph ">url</codeph>-Eigenschaft des URLRequest-Objekts verwenden, das für <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> übergeben wird. Wenn Sie beispielsweise eine untergeordnete SWF-Datei in einer übergeordneten SWF-Datei laden, können Sie auf die <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph>-Eigenschaft des Loader-Objekts für die übergeordnete SWF-Datei zugreifen: </p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">Security.allowDomain(loader.contentLoaderInfo.url)</codeblock>
     
     <p class="- topic/p ">Warten Sie, bis der Ladevorgang der untergeordneten SWF-Datei gestartet wird, um den korrekten Wert der <codeph class="+ topic/ph pr-d/codeph ">url</codeph>-Eigenschaft abrufen zu können. Über das <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignis können Sie bestimmen, wann der Ladevorgang der untergeordneten SWF-Datei gestartet wurde.</p>
     
     <p class="- topic/p ">Es kann auch die entgegengesetzte Situation auftreten: Angenommen, Sie haben eine untergeordnete SWF-Datei erstellt, die das Scripting durch die übergeordnete SWF-Datei ermöglichen soll, der jedoch die Domäne der übergeordneten SWF-Datei nicht bekannt ist. In diesem Fall können Sie auf die <codeph class="+ topic/ph pr-d/codeph ">loaderInfo</codeph>-Eigenschaft des Anzeigeobjekts zugreifen, bei dem es sich um das Stammobjekt der SWF-Datei handelt. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain(this.root.loaderInfo.loaderURL)</codeph> in der untergeordneten SWF-Datei auf. Sie müssen nicht warten, bis die übergeordnete SWF-Datei geladen wurde, da der Ladevorgang der übergeordneten Datei bereits abgeschlossen ist, wenn der Ladevorgang für die untergeordnete SWF-Datei erfolgt.</p>
     
     <p class="- topic/p ">Wenn Sie eine Datei für Flash Player 8 oder eine spätere Version veröffentlichen, können Sie in diesen Fällen auch <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph> aufrufen. Dies ist jedoch mitunter gefährlich, da hierdurch die aufrufende SWF-Datei für den Zugriff durch jede andere SWF-Datei der Domäne geöffnet wird. In der Regel ist es sicherer, die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">_url</codeph> zu verwenden.</p> 
     
     <p class="- topic/p "> Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExternalInterface/addCallback()" class="- topic/link "><linktext class="- topic/linktext ">ExternalInterface.addCallback()</linktext></link><link href="flash.events.xml#Event/COMPLETE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.COMPLETE</linktext></link><link href="flash.display.xml#DisplayObject/parent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.parent</linktext></link><link href="flash.net.xml#URLRequest/url" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest.url</linktext></link><link href="flash.system.xml#Security/allowInsecureDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowInsecureDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:allowInsecureDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowInsecureDomain</apiName><shortdesc class="- topic/shortdesc ">
     Hiermit können SWF- und HTML-Dateien in den angegebenen Domänen auf Objekte und Variablen in der aufrufenden SWF-Datei zugreifen, die über das HTTPS-Protokoll gehostet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowInsecureDomain, allowInsecureDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufruf dieser Methode vom Code in der Sicherheitssandbox der AIR-Anwendung verursacht eine SecurityError-Ausnahme. Inhalt außerhalb der Sicherheitssandbox der Anwendung kann kein Cross-Scripting für Inhalte in der Sicherheitssandbox der Anwendung ausführen. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein oder mehrere Strings bzw. URLRequest-Objekte zur Bezeichnung der Domänen, über die Sie den Zugriff gewähren möchten. Sie können die Sonderdomäne „~~“ angeben, um den Zugriff über alle Domänen zu ermöglichen.  
     
     <p class="flashonly">Nur durch Angabe von „~~“ kann der Zugriff auf nicht lokale SWF-Dateien über lokale SWF-Dateien ermöglicht werden, die unter Verwendung der Option „Nur auf Netzwerk zugreifen“ für die Einstellung „Sicherheit bei lokaler Wiedergabe“ („Datei“ > „Einstellungen für Veröffentlichungen“ > Registerkarte „Flash“) im Flash-Authoringtool veröffentlicht wurden.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der Platzhalterwert funktioniert nicht für Subdomänen. Sie können zum Beispiel nicht <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> für den <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>-Parameter verwenden. Sie können zwar eine Subdomäne mit einem Platzhalterwert für eine domänenübergreifende Richtliniendatei angeben (wie in <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), es ist jedoch nicht möglich einen Platzhalterwert auf diese Weise für die <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>-Methode zu verwenden.</p>
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Hiermit können SWF-Dateien und HTML-Dateien, die mit dem HTTPS-Protokoll gehostet werden, auf Objekte und Variablen in der aufrufenden SWF-Datei zugreifen.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Hiermit können SWF- und HTML-Dateien in den angegebenen Domänen auf Objekte und Variablen in der aufrufenden SWF-Datei zugreifen, die über das HTTPS-Protokoll gehostet wird.</ph>
     
     
     
     
     <p class="- topic/p ">Flash Player stellt <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> zur Verfügung, um die Flexibilität zu maximieren, aber das Aufrufen dieser Methode wird nicht empfohlen. Beim Bereitstellen einer Datei über HTTPS sind einige Schutzvorkehrungen für Sie und die Benutzer aktiv. Durch Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain</codeph> wird eine dieser Schutzvorkehrungen geschwächt.</p>
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Der Aufruf dieser Methode vom Code in der Sandbox der AIR-Anwendung verursacht eine SecurityError-Ausnahme. Inhalt außerhalb der Sicherheitsdomäne der Anwendung kann kein direktes Cross-Scripting für Inhalte in der Anwendungssandbox ausführen. Allerdings kann Inhalt außerhalb der Anwendungssandbox über eine Sandbox-Brücke mit Inhalt in der Sicherheitssandbox der Anwendung kommunizieren.</p>
     
     <p class="- topic/p ">Diese Methode funktioniert genauso wie <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>, erlaubt jedoch zusätzlich Operationen, bei denen die zugreifende Seite mit einem Nicht-HTTPS-Protokoll und die Seite, auf die zugegriffen wird, mit HTTPS geladen werden. In Flash Player ab Version 7 erhalten Nicht-HTTPS-Dateien keinen Skriptzugriff auf HTTPS-Dateien. Die <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>-Methode hebt diese Einschränkung auf, wenn sie von der HTTPS-SWF verwendet wird, auf die zugegriffen wird.</p>
     
     <p class="- topic/p ">Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>-Methode nur, um den Skriptzugriff durch Nicht-HTTPS-Dateien auf HTTPS-Dateien zu ermöglichen. Verwenden Sie diese Methode zum Ermöglichen der Skripterstellung, wenn die zugreifende Nicht-HTTPS-Datei und die HTTPS-Datei, auf die zugegriffen wird, von derselben Domäne aus bereitgestellt werden, beispielsweise, wenn eine SWF-Datei auf http://mysite.com Skripten für https://mysite.com erstellen soll. Verwenden Sie die Methode nicht, um eine Skripterstellung zwischen Nicht-HTTPS-Dateien, zwischen HTTPS-Dateien oder seitens HTTPS-Dateien bei Nicht-HTTPS-Dateien zu ermöglichen. Für diese Fälle sollten Sie die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode verwenden.</p>
     
     Das folgende Szenario verdeutlicht, wie <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> bei unsachgemäßer Anwendung die Sicherheit gefährden kann.
     
     <p class="- topic/p ">Beachten Sie, dass das folgende Beispiel nur ein mögliches Szenario darstellt. Es soll lediglich die Problematik von <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> anhand eines realistischen Beispiels für Cross-Scripting verdeutlichen. Es deckt jedoch nicht alle Probleme bezüglich der Sicherheitsarchitektur ab und sollte nur als Hintergrundinformation betrachtet werden. Im Flash Player Developer Center stehen umfangreiche Informationen zum Thema Flash Player und Sicherheit zur Verfügung. Weitere Informationen finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     <p class="- topic/p ">Angenommen, Sie möchten eine E-Commerce-Site erstellen, die aus zwei Komponenten besteht: einem Katalog, der nicht sicher zu sein braucht, da er nur öffentliche Informationen enthält, und einer Einkaufswagen-/Bezahlkomponente, die sicher sein muss, um finanzspezifische und persönliche Daten der Benutzer zu schützen. Der Katalog soll von http://mysite.com/catalog.swf aus bereitgestellt werden, der Einkaufswagen von https://mysite.com/cart.swf. Eine Anforderung an die Site besteht darin, dass kein Dritter die Kreditkartennummern Ihrer Benutzer ausspionieren kann, indem er eine Schwachstelle in der Sicherheitsarchitektur nutzt.</p>
     
     <p class="- topic/p ">Stellen Sie sich vor, dass sich ein Angreifer zwischen Ihren Server und Ihre Benutzer platziert, um zu versuchen, die Kreditkartennummern abzufangen, die die Benutzer in der Einkaufswagen-Anwendung eingeben. Ein solcher Angreifer kann beispielsweise ein skrupelloser Internet-Dienstanbieter (ISP) sein, der von einem Ihrer Benutzer verwendet wird, oder ein böswilliger Administrator am Arbeitsplatz des Benutzers – im Grunde jeder, der die Fähigkeit besitzt, Netzwerkpakete einzusehen oder zu ändern, die über das öffentliche Internet zwischen Ihren Benutzern und Ihren Servern übertragen werden. Diese Situation ist nicht ungewöhnlich.</p> 
     
     <p class="- topic/p ">Wenn cart.swf die Kreditkartendaten mittels HTTPS an Ihre Server überträgt, kann der Angreifer diese Informationen nicht direkt aus den Netzwerkpaketen stehlen, da es sich um eine verschlüsselte Übertragung handelt. Er kann jedoch eine andere Technik anwenden: den Inhalt einer Ihrer SWF-Dateien ändern, während diese dem Benutzer bereitgestellt wird, d. h. die SWF-Datei durch eine andere Version ersetzen, die die Benutzerdaten an einen anderen vom Angreifer betriebenen Server überträgt.</p>
     
     <p class="- topic/p ">Das HTTPS-Protokoll verhindert u. a., dass eine solche Änderung durchgeführt wird, da HTTPS-Übertragungen nicht nur verschlüsselt, sondern auch manipulationssicher sind. Wenn ein Angreifer ein Paket ändert, erkennt die empfangende Seite diese Änderung und verwirft das Paket. In diesem Fall kann der Angreifer also die Datei cart.swf nicht ändern, da die Übertragung über HTTPS erfolgt.</p>
     
     <p class="- topic/p ">Doch nun möchten Sie, dass in der über HTTP bereitgestellten Datei catalog.swf Artikel mittels Schaltflächen dem Einkaufswagen in cart.swf hinzugefügt werden können, der seinerseits über HTTPS bereitgestellt wird. Dazu ruft cart.swf die <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>-Methode auf, über die der Katalog (catalog.swf) ein Skript für cart.swf erstellen kann. Diese Aktion hat eine nicht beabsichtigte Folge: Der Angreifer kann nun bereits Änderungen an der Datei catalog.swf vornehmen, während der Benutzer sie herunterlädt, da sie mittels HTTP übertragen wird und somit nicht manipulationssicher ist. Die geänderte catalog.swf des Angreifers kann nun ein Skript für cart.swf erstellen, da cart.swf einen Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> enthält. Die geänderte Datei catalog.swf kann mithilfe von ActionScript auf die Variablen in cart.swf zugreifen und somit die Kreditkartendaten und andere vertrauliche Informationen des Benutzers lesen. Die geänderte catalog.swf kann diese Daten dann an den Server des Angreifers senden.</p>
     
     <p class="- topic/p ">Ein solcher Missbrauch ist natürlich nicht erwünscht, Sie möchten dennoch, dass Cross-Scripting zwischen den beiden SWF-Dateien Ihrer Site möglich ist. Im Folgenden sind zwei Möglichkeiten aufgeführt, wie Sie diese hypothetische E-Commerce-Site so umbauen können, dass <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> verhindert wird:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Bereitstellen aller SWF-Dateien der Anwendung über HTTPS: Dies ist die bei weitem einfachste und zuverlässigste Lösung. Im genannten Beispiel würden Sie sowohl catalog.swf als auch cart.swf über HTTPS übertragen. Eventuell bemerken Sie ein etwas höheres Datenverkehrsaufkommen und eine etwas stärkere CPU-Auslastung des Servers, wenn Sie eine Datei wie catalog.swf von HTTP auf HTTPS umstellen, und für Ihre Benutzer kommt es eventuell zu etwas längeren Anwendungsladezeiten. Um die Auswirkung dieser Umstellung zu testen, sollten Sie mit reellen Servern experimentieren. Normalerweise liegt die Datenverkehrserhöhung in einem Bereich von 10 bis 20 Prozent. Manchmal ist auch gar keine Erhöhung feststellbar. In der Regel können Sie die Ergebnisse mithilfe von HTTPS-Beschleunigungshardware oder -software weiter optimieren. Ein entscheidender Vorteil der Bereitstellung aller kooperierenden SWF-Dateien über HTTPS besteht darin, dass Sie eine HTTPS-URL als Haupt-URL im Browser des Benutzers verwenden können, ohne dass der Browser Warnmeldungen bezüglich gemischtem Inhalt ausgibt. Darüber hinaus wird dem Benutzer das Schlosssymbol des Browsers als ihm bekanntes und vertrauenswürdiges Zeichen für Sicherheit angezeigt.</li><li class="- topic/li ">Verwenden des HTTPS-auf-HTTP-Skriptzugriffs anstelle des HTTP-auf-HTTPS-Skriptzugriffs: Im genannten Beispiel könnten Sie den Inhalt des Einkaufswagens eines Benutzers in catalog.swf speichern, während cart.swf nur für das Bezahlen zuständig ist. Beim Auschecken kann die Datei cart.swf den Inhalt des Einkaufwagens aus ActionScript-Variablen der Datei catalog.swf abrufen. Die Beschränkung auf HTTP-zu-HTTPS-Skripten ist asymmetrisch. Obwohl eine über HTTP-übermittelte catalog.swf-Datei nicht sicher für Skript-Operationen in einer über HTTPS übermittelten cart.swf-Datei freigegeben werden kann, kann die HTTPS-cart.swf-Datei Änderungen in der HTTP-catalog.swf-Datei vornehmen. Dieser Ansatz ist feiner als der reine HTTPS-Ansatz. Achten Sie jedoch darauf, nicht allen per HTTP übermittelten SWF-Dateien zu vertrauen, da diese manipuliert werden können. Wenn beispielsweise cart.swf die ActionScript-Variable abruft, die den Inhalt des Einkaufswagens beschreibt, kann der ActionScript-Code in cart.swf nicht darauf vertrauen, dass der Wert dieser Variable im erwarteten Format vorliegt. Sie müssen deshalb darauf achten, dass der Inhalt des Einkaufswagens keine ungültigen Daten enthält, die cart.swf zu einer unerwünschten Aktion veranlassen könnte. Sie müssen auch das Risiko einkalkulieren, dass ein Angreifer durch Ändern von catalog.swf zwar gültige, aber inkorrekte Daten an cart.swf übermitteln könnte. So könnte er z. B. Artikel in den Einkaufswagen des Benutzers schmuggeln. Beim üblichen Bezahlvorgang wird das Risiko dadurch ein wenig abgemildert, dass der Inhalt des Einkaufswagens und der Gesamtbetrag erneut zur abschließenden Bestätigung durch den Benutzer angezeigt wird, doch grundsätzlich bleibt das Risiko bestehen.</li></ul>
     
     <p class="- topic/p ">Die gängigen Webbrowser unterscheiden bereits seit Jahren zwischen HTTPS- und Nicht-HTTPS-Dateien. Das erläuterte Szenario verdeutlicht, weshalb diese Unterscheidung so wichtig ist. Flash Player bietet die Möglichkeit, diese Sicherheitsvorkehrung zu umgehen, wenn dies absolut erforderlich ist. Zuvor sollten Sie sich jedoch die möglichen Folgen sehr genau bewusst machen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:loadPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">loadPolicyFile</apiName><shortdesc class="- topic/shortdesc ">  
     Sucht an dem durch den url-Parameter angegebenen Ort nach einer Richtliniendatei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die URL der Richtliniendatei, die geladen werden soll.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Sucht an dem durch den url-Parameter angegebenen Ort nach einer Richtliniendatei.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">  
     Sucht an dem durch den <codeph class="+ topic/ph pr-d/codeph ">url</codeph>-Parameter angegebenen Ort nach einer Richtliniendatei. In Adobe AIR und Flash Player wird mithilfe von Richtliniendateien bestimmt, ob über Anwendungen Daten von anderen Servern als dem eigenen geladen werden können. Bitte beachten Sie, dass der Methodenname zwar <codeph class="+ topic/ph pr-d/codeph "> loadPolicyFile()</codeph> ist, aber dass die Datei erst geladen wird, wenn vom Netzwerk eine Richtliniendatei angefordert wird.
     
	 <p class="- topic/p ">Mithilfe von <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph> kann Flash Player oder AIR Richtliniendateien von beliebigen Orten laden, wie im folgenden Beispiel veranschaulicht wird:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("http://www.example.com/sub/dir/pf.xml");
     </codeblock>
     
     
     
     <p class="- topic/p ">Hierdurch versucht Flash Player bzw. AIR, von der angegebenen URL eine Richtliniendatei abzurufen. Alle an diesem Speicherort von der Richtliniendatei zugelassenen Berechtigungen gelten auch für alle Inhalte auf der gleichen oder einer niedrigeren Ebene in der virtuellen Ordnerhierarchie des Servers. </p>
     
     <p class="- topic/p ">Beispielsweise wird bei den folgenden zusätzlichen Codezeilen keine Ausnahme ausgelöst:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request:URLRequest = new URLRequest("http://www.example.com/sub/dir/vars.txt");
     var loader:URLLoader = new URLLoader();
     loader.load(request);
     
     var loader2:URLLoader = new URLLoader();
     var request2:URLRequest = new URLRequest("http://www.example.com/sub/dir/deep/vars2.txt");
     loader2.load(request2);
     </codeblock>
     
     <p class="- topic/p ">Beim folgenden Code wird jedoch eine Sicherheitsausnahme ausgelöst:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request3:URLRequest = new URLRequest("http://www.example.com/elsewhere/vars3.txt");
     var loader3:URLLoader = new URLLoader();
     loader3.load(request3);
     </codeblock>
     
     <p class="- topic/p ">Mit <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> können Sie beliebig viele Richtliniendateien laden. Beim Prüfen einer Anforderung, für die eine Richtliniendatei erforderlich ist, wartet Flash Player oder AIR immer, bis der Download der Richtliniendatei abgeschlossen ist, bevor eine Anforderung zurückgewiesen wird. Als letzter Weg, wenn mit <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> keine Richtliniendatei angegeben ist, die eine Anforderung zulässt, konsultiert Flash Player bzw. AIR die ursprünglichen Standardpfade.</p>
     
     <p class="- topic/p ">Beim Überprüfen auf eine Master-Richtliniendatei wartet Flash Player drei Sekunden lang auf eine Antwort des Servers. Wenn keine Antwort erhalten wird, nimmt Flash Player an, dass es keine Master-Richtliniendatei gibt. Für Aufrufe der Methode <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> besteht hingegen kein standardmäßiges Zeitlimit. Flash Player geht davon aus, dass die aufgerufene Datei vorhanden ist, und wartet für einen beliebigen Zeitraum, um diese zu laden. Um sicherzustellen, dass die Master-Richtliniendatei geladen wird, sollten Sie diese daher mit der Methode <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> explizit aufrufen.</p>
     
     <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     <p class="- topic/p ">Wenn Sie das <codeph class="+ topic/ph pr-d/codeph ">xmlsocket</codeph>-Protokoll zusammen mit einer angegebenen Portnummer verwenden, können Sie Richtliniendatei direkt von einem XMLSocket-Server abrufen, wie im folgenden Beispiel gezeigt. Socket-Verbindungen unterliegen nicht der oben beschriebenen Beschränkung für reservierte Ports.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("xmlsocket://foo.com:414");
     </codeblock>
     
     
     
     <p class="- topic/p ">Hierdurch versucht Flash Player bzw. AIR, eine Richtliniendatei von dem angegebenen Host und Port abzurufen. Wurde eine Verbindung mit dem angegebenen Port hergestellt, sendet Flash Player oder AIR <codeph class="+ topic/ph pr-d/codeph ">&lt;policy-file-request /></codeph>, beendet mit einem <codeph class="+ topic/ph pr-d/codeph ">null</codeph>-Byte. Der Server muss zum Beenden einer Richtliniendatei ein Null-Byte senden und kann die Verbindung anschließend schließen. Tut er dies nicht, schließt Flash Player oder AIR die Verbindung nach Erhalt des beendenden <codeph class="+ topic/ph pr-d/codeph ">null</codeph>-Byte.</p>
     
     <p class="- topic/p ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der <codeph class="+ topic/ph pr-d/codeph ">object</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph>-Tags festlegen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:Security:showSettings" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">showSettings</apiName><shortdesc class="- topic/shortdesc ">
     Zeigt das Bedienfeld für die Sicherheitseinstellungen in Flash Player an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.showSettings(), showSettings()
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">panel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert der SecurityPanel-Klasse, der angibt, welches Bedienfeld für die Sicherheitseinstellungen angezeigt wird. Wenn Sie diesen Parameter weglassen, wird <codeph class="+ topic/ph pr-d/codeph ">SecurityPanel.DEFAULT</codeph> verwendet. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Zeigt das Bedienfeld für die Sicherheitseinstellungen in Flash Player an. Diese Methode gilt nicht für Inhalt in Adobe AIR; der Aufruf in einer AIR-Anwendung hat keine Auswirkungen.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SecurityPanel" class="- topic/link "><linktext class="- topic/linktext ">SecurityPanel</linktext></link></related-links></apiOperation><apiValue id="flash.system:Security:APPLICATION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPLICATION</apiName><shortdesc class="- topic/shortdesc ">
	 Die Datei wird in einer AIR-Anwendung ausgeführt und sie wurde mit dem Paket (der AIR-Datei) für diese Anwendung installiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">application</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Datei wird in einer AIR-Anwendung ausgeführt und sie wurde mit dem Paket (der AIR-Datei) für diese Anwendung installiert. Der Inhalt befindet sich im Ressourcenordner der AIR-Anwendung (in dem der Anwendungsinhalt installiert wird).
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_TRUSTED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_TRUSTED</apiName><shortdesc class="- topic/shortdesc ">
     Die Datei ist eine lokale Datei, die vom Benutzer über den Flash Player-Einstellungsmanager oder eine FlashPlayerTrust-Konfigurationsdatei als vertrauenswürdig eingestuft wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localTrusted</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Datei ist eine lokale Datei, die vom Benutzer über den Flash Player-Einstellungsmanager oder eine FlashPlayerTrust-Konfigurationsdatei als vertrauenswürdig eingestuft wurde. Die Datei kann lokale Datenquellen lesen und eine Verbindung mit dem Internet herstellen.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_FILE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_FILE</apiName><shortdesc class="- topic/shortdesc ">
     Die Datei ist eine lokale Datei, wurde vom Benutzer nicht als vertrauenswürdig einstuft, und es handelt sich nicht um eine SWF-Datei, die mit einem Netzwerkziel veröffentlicht wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithFile</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Datei ist eine lokale Datei, wurde vom Benutzer nicht als vertrauenswürdig einstuft, und es handelt sich nicht um eine SWF-Datei, die mit einem Netzwerkziel veröffentlicht wurde. In Adobe AIR befindet sich die lokale Datei <i class="+ topic/ph hi-d/i ">nicht</i> im Ressourcenordner der Anwendung; diese Dateien werden in der Sicherheitssandbox der Anwendung abgelegt. Die Datei kann lokale Datenquellen lesen, jedoch keine Verbindung mit dem Internet herstellen.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_NETWORK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_NETWORK</apiName><shortdesc class="- topic/shortdesc ">
	 Die Datei ist eine lokale Datei, wurde vom Benutzer nicht als vertrauenswürdig einstuft, und es handelt sich um eine SWF-Datei, die mit einem Netzwerkziel veröffentlicht wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithNetwork</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Datei ist eine lokale Datei, wurde vom Benutzer nicht als vertrauenswürdig einstuft, und es handelt sich um eine SWF-Datei, die mit einem Netzwerkziel veröffentlicht wurde. Die Datei kann eine Verbindung mit dem Internet herstellen, jedoch keine lokalen Datenquellen lesen.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:REMOTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOTE</apiName><shortdesc class="- topic/shortdesc ">
     Die Datei stammt von einer Internet-URL und kann entsprechend den domänenbasierten Sandbox-Regeln verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">remote</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Datei stammt von einer Internet-URL und kann entsprechend den domänenbasierten Sandbox-Regeln verwendet werden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:exactSettings:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exactSettings</apiName><shortdesc class="- topic/shortdesc ">
     Legt fest, wie in Flash Player oder AIR die für bestimmte Inhalteinstellungen, beispielsweise Berechtigungen für Kamera und Mikrofon, Speicheranteile oder Speicher für permanente gemeinsame Objekte, zu verwendende Domäne ausgewählt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.exactSettings, exactSettings
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert von <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> wurde in Flash Player oder AIR bereits mindestens einmal bei einer Entscheidung hinsichtlich der Player-Einstellungen verwendet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt fest, wie in Flash Player oder AIR die für bestimmte Inhalteinstellungen, beispielsweise Berechtigungen für Kamera und Mikrofon, Speicheranteile oder Speicher für permanente gemeinsame Objekte, zu verwendende Domäne ausgewählt wird. Um in der SWF-Datei die gleichen Einstellungen zu verwenden, die in Flash Player 6 verwendet wurden, setzen Sie <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     
     
     <p class="- topic/p ">In Flash Player 6 basiert die für diese Player-Einstellungen verwendete Domäne auf dem der Domäne der SWF-Datei nachgestellten Teil. Wenn die Domäne einer SWF-Datei mehr als zwei Segmente enthält, beispielsweise www.example.com, wird das erste Segment der Domäne („www“) entfernt und der restliche Teil der Domäne verwendet, d. h. example.com. In Flash Player 6 wird daher bei www.example.com und bei store.example.com die Domäne example.com als Domäne für diese Einstellungen verwendet. Genauso wird bei www.example.co.uk und store.example.co.uk die Domäne example.co.uk als Domäne für diese Einstellungen verwendet. In Flash Player 7 und späteren Versionen werden Player-Einstellungen in der Standardeinstellung entsprechend der exakten Domäne einer SWF-Datei ausgewählt. Beispiel: Eine SWF-Datei von www.example.com verwendet die Player-Einstellungen für www.example.com und eine SWF-Datei von store.example.com für store.example.com.</p>
     
     <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, verwendet Flash Player oder AIR exakte Domänen für Player-Einstellungen. Der Standardwert für <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> ist <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> einen anderen Wert als den Standardwert festlegen, tun Sie dies, bevor Ereignisse auftreten, bei denen Flash Player oder AIR Player-Einstellungen wählen muss (z. B. beim Verwenden einer Kamera oder eines Mikrofons oder beim Abrufen eines permanenten gemeinsamen Objekts.</p>
     
     <p class="- topic/p ">Wenn Sie zuvor eine SWF-Datei in Version 6 veröffentlicht und daraus permanente gemeinsame Objekte erstellt haben und jetzt diese permanenten gemeinsamen Objekt aus der SWF-Datei, die Sie auf Version 7 oder höher portiert haben, abrufen müssen, setzen Sie <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, bevor Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> aufrufen.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:pageDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pageDomain</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die Seitendomäne ab, die die SWF-Datei enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die Seitendomäne ab, die die SWF-Datei enthält. Aus Sicherheitsgründen gibt die Methode nicht die vollständige URL zurück, sondern nur die Seitendomäne, zum Beispiel http://www.example.com. 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:sandboxType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sandboxType</apiName><shortdesc class="- topic/shortdesc ">
     Gibt den Typ der Sicherheitssandbox an, in der die aufrufende Datei verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt den Typ der Sicherheitssandbox an, in der die aufrufende Datei verwendet wird.
     
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">Security.sandboxType</codeph> weist einen der folgenden Werte auf:</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">remote</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph>): Diese Datei stammt von einer Internet-URL und kann entsprechend den domänenbasierten Sandbox-Regeln verwendet werden.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithFile</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph>): Diese Datei ist eine lokale Datei, wurde vom Benutzer nicht als vertrauenswürdig einstuft, und es handelt sich nicht um eine SWF-Datei, die mit einem Netzwerkziel veröffentlicht wurde. Die Datei kann lokale Datenquellen lesen, jedoch keine Verbindung mit dem Internet herstellen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithNetwork</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_NETWORK</codeph>): Diese SWF-Datei ist eine lokale Datei, die für den Benutzer nicht vertrauenswürdig ist und für die Verwendung im Netzwerk veröffentlicht wurde. Die SWF-Datei kann eine Verbindung mit dem Internet herstellen, jedoch keine lokalen Datenquellen lesen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localTrusted</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>): Diese Datei ist eine lokale Datei, die für den Benutzer über den Flash Player-Einstellungsmanager oder eine FlashPlayerTrust-Konfigurationsdatei als vertrauenswürdig gekennzeichnet wurde. Die Datei kann lokale Datenquellen lesen und eine Verbindung mit dem Internet herstellen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">application</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph>): Die Datei wird in einer AIR-Anwendung ausgeführt, und sie wurde mit dem Paket (der AIR-Datei) für diese Anwendung installiert. Standardmäßig können Dateien in der Sandbox der AIR-Anwendung Cross-Skripting für jede Datei in jeder Domäne durchführen (während Dateien außerhalb der AIR-Anwendung u. U. kein Cross-Skripting für die AIR-Datei durchführen dürfen). Standardmäßig können Dateien in der Sandbox der AIR-Anwendung Inhalte und Daten aus einer beliebigen Domäne laden. </li></ul>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 Die LoaderContext-Klasse enthält Optionen zum Laden von SWF-Dateien und anderen Mediendateien über die Loader-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die LoaderContext-Klasse enthält Optionen zum Laden von SWF-Dateien und anderen Mediendateien über die Loader-Klasse. Die LoaderContext-Klasse wird als <codeph class="+ topic/ph pr-d/codeph ">context</codeph>-Parameter in den Methoden <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> der Loader-Klasse verwendet.
 
 <p class="- topic/p ">Beim Laden von SWF-Dateien mit der <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode müssen zwei Entscheidungen getroffen werden: in welcher Sicherheitsdomäne wird eine geladene SWF-Datei abgelegt, und in welcher Anwendungsdomäne in dieser Sicherheitsdomäne. Weitere Informationen zu dieser Auswahl finden Sie in den Angaben zur <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph>- und zur <codeph class="+ topic/ph pr-d/codeph ">securityDomain</codeph>-Eigenschaft.</p>
 
 <p class="- topic/p ">Beim Laden einer SWF-Datei mit der <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>-Methode müssen Sie wie bei <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> eine Anwendungsdomäne auswählen. Es muss jedoch keine Sicherheitsdomäne angegeben werden, da die geladene SWF-Datei von <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> immer in der Sicherheitsdomäne der ladenden SWF-Datei abgelegt wird.</p>
 
 <p class="- topic/p ">Beim Laden von Bildern (JPEG-, GIF- oder PNG-Dateien) anstelle von SWF-Dateien muss weder eine Sicherheitsdomäne noch eine Anwendungsdomäne angegeben werden, da dies nur für SWF-Dateien gilt. Stattdessen muss nur eine Entscheidung getroffen werden: Ist ein programmgesteuerter Zugriff auf die Pixel des geladenen Bilds erforderlich? Wenn dies der Fall ist, finden Sie entsprechende Hinweise im Abschnitt zur <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>-Eigenschaft. Wenn Sie beim Laden eines Bildes gleichzeitig Deblocking anwenden möchten, verwenden Sie statt der LoaderContext-Klasse die JPEGLoaderContext-Klasse.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#JPEGLoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.JPEGLoaderContext</linktext></link><link href="flash.system.xml#LoaderContext/applicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.applicationDomain</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.checkPolicyFile</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.securityDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ImageDecodingPolicy</linktext></link></related-links><apiConstructor id="flash.system:LoaderContext:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein neues LoaderContext-Objekt mit den angegebenen Einstellungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob vor dem Laden des Objekts geprüft werden soll, ob es eine URL-Richtliniendatei gibt.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt das ApplicationDomain-Objekt zur Verwendung mit einem Loader-Objekt an.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt das SecurityDomain-Objekt an, das für ein Loader-Objekt verwendet werden soll.
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Material in der Sicherheitssandbox der AIR-Anwendung kann kein Material aus anderen Sandboxen in seine SecurityDomain laden.</p>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein neues LoaderContext-Objekt mit den angegebenen Einstellungen. Ausführliche Informationen zu diesen Einstellungen finden Sie in den Beschreibungen der Eigenschaften für diese Klasse.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:LoaderContext:allowCodeImport" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowCodeImport</apiName><shortdesc class="- topic/shortdesc ">
     Legt fest, ob Sie ein Loader-Objekt zum Importieren von Inhalt mit ausführbarem Code, zum Beispiel eine SWF-Datei, in die Sicherheitssandbox des Aufrufers verwenden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt fest, ob Sie ein <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph>-Objekt zum Importieren von Inhalt mit ausführbarem Code, zum Beispiel eine SWF-Datei, in die Sicherheitssandbox des Aufrufers verwenden können. Es gibt zwei betroffenen Importoperationen: die <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>-Methode und die <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode mit <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph>. (Die letztgenannte Operation wird in der AIR-Anwendungssandbox nicht unterstützt.) Wenn die <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat sind diese Importoperationen auf sichere Operation, zum Beispiel das Laden von Bildern, beschränkt. Normale, nicht importierende SWF-Dateien, die mit der <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode laden, sind vom Wert dieser Eigenschaft nicht betroffen.
     
     <p class="- topic/p ">Diese Eigenschaft ist hilfreich, wenn Sie Bildinhalte in Ihre Sandbox importieren möchten - zum Beispiel, wenn Sie ein Bild aus einer anderen Domäne replizieren oder verarbeiten möchten - aber nicht das Risiko eingehen möchten, eine SWF-Datei zu empfangen, wenn Sie nur eine Bilddatei erwartet haben. Da SWF-Dateien ActionScript-Code enthalten können, ist das Importieren einer SWF-Datei viel riskanter als das Importieren einer Bilddatei.</p>
     
     <p class="- topic/p ">In AIR-Material in der Anwendungssandbox ist der Standardwert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. In Nicht-Anwendungsinhalten (wozu alle Inhalte in Flash Player gehören) ist der Standardwert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>-Eigenschaft wurde in Flash Player 10.1 und AIR 2.0 hinzugefügt. Diese Eigenschaft steht jedoch SWF-Dateien und AIR-Anwendungen aller Versionen zur Verfügung, wenn die Flash-Laufzeitumgebung dies unterstützt.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">securityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:applicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Anwendungsdomäne an, die für die Loader.load()- oder Loader.loadBytes()-Methode verwendet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Anwendungsdomäne an, die für die <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>-Methode verwendet werden soll. Verwenden Sie diese Eigenschaft nur beim Laden einer SWF-Datei, die in ActionScript 3.0 geschrieben wurde (nicht beim Laden eines Bilds oder einer SWF-Datei, die in ActionScript 1.0 oder ActionScript 2.0 geschrieben wurde).
     
     <p class="- topic/p ">Jede Sicherheitsdomäne ist in eine oder mehrere Anwendungsdomänen unterteilt, die durch ApplicationDomain-Objekte angegeben werden. Anwendungsdomänen dienen keinen Sicherheitszwecken, sondern der Verwaltung kooperierender Einheiten des ActionScript-Codes. Wenn Sie eine SWF-Datei von einer anderen Domäne laden und festlegen, dass die SWF-Datei in einer anderen Sicherheitsdomäne abgelegt werden kann, können Sie die Anwendungsdomäne nicht auswählen, in der die geladene SWF-Datei abgelegt wird. Wenn Sie eine Anwendungsdomäne angegeben haben, wird diese Auswahl ignoriert. Wenn Sie jedoch eine SWF-Datei in Ihre eigene Sicherheitsdomäne laden, da die SWF-Datei aus Ihrer eigenen Domäne stammt oder Sie sie in Ihre Sicherheitsdomäne importieren, können Sie die Anwendungsdomäne für die geladene SWF-Datei auswählen.</p>
     
     <p class="- topic/p ">Sie können eine Anwendungsdomäne für <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.applicationDomain</codeph> nur über Ihre eigene Sicherheitsdomäne übergeben. Beim Versuch, eine Anwendungsdomäne über eine andere Sicherheitsdomäne zu übergeben, wird eine <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Ausnahme ausgelöst.</p>
     
     <p class="- topic/p ">Für die <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph>-Eigenschaft können Sie vier verschiedene Optionen auswählen:</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Untergeordnete Domäne von ApplicationDomain des ladenden Objekts</b> Dies ist die Standardoption. Sie können diese Auswahl explizit mit der Syntax <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain)</codeph> angeben. Damit kann die geladene SWF-Datei direkt die Klassen der übergeordneten Domäne verwenden, beispielsweise durch Schreiben von <codeph class="+ topic/ph pr-d/codeph ">new MyClassDefinedInParent()</codeph>. Die übergeordnete Domäne kann diese Syntax jedoch nicht verwenden. Die übergeordnete Domäne kann die Klassen der untergeordneten Domäne nur verwenden, indem <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> aufgerufen wird, um die Klassen abzurufen. Der Vorteil dieser Auswahl liegt darin, dass kein Fehler ausgegeben wird, wenn die untergeordnete Domäne eine Klasse mit demselben Namen wie eine Klasse definiert, die bereits in der übergeordneten Domäne festgelegt ist. Die Unterklasse übernimmt einfach die Definition der übergeordneten Domäne für die entsprechende Klasse. Die widersprüchliche Definition der untergeordneten Domäne wird erst verwendet, wenn sie durch die untergeordnete oder übergeordnete Domäne durch Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph>-Methode abgerufen wird.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Eigene ApplicationDomain des ladenden Objekts</b> Sie können diese Anwendungsdomäne bei Verwendung von <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph> verwenden. Nach Abschluss des Ladevorgangs können in der übergeordneten und der untergeordneten Domäne jeweils die Klassen der anderen Domäne verwendet werden. Wenn die untergeordnete Domäne eine Klasse mit demselben Namen wie eine bereits in der übergeordneten Domäne festgelegte Klasse definiert, wird die Superklasse verwendet und die Unterklasse ignoriert.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Untergeordnete Domäne von ApplicationDomain des Systems</b> Sie können diese Anwendungsdomäne bei Verwendung von <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(null)</codeph> verwenden. Damit sind das ladende und das geladene Objekt vollkommen getrennt. Sie können gesonderte Versionen von Klassen mit demselben Namen erstellen, ohne dass Konflikte auftreten oder Prioritäten festgelegt werden. Die Klassen der jeweils anderen Seite werden nur durch Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph>-Methode angezeigt.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Untergeordnete Domäne einer anderen ApplicationDomain</b> Gelegentlich liegt möglicherweise eine komplexere ApplicationDomain-Hierarchie vor. Sie können eine SWF-Datei in einer beliebigen ApplicationDomain Ihrer eigenen SecurityDomain laden. Über <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain.parentDomain.parentDomain)</codeph> wird eine SWF-Datei beispielsweise in einer neuen untergeordneten Domäne der übergeordneten Domäne der übergeordneten Domäne der aktuellen Domäne geladen.</li></ul>
     
     <p class="- topic/p ">Nach Abschluss eines Ladevorgangs muss auf beiden Seiten (ladendes Objekt und geladenes Objekt) möglicherweise die eigene ApplicationDomain oder die ApplicationDomain der anderen Seite gesucht werden, um <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> aufzurufen. Jede Seite kann mithilfe von <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph> einen Verweis auf die eigene Anwendungsdomäne abrufen. Die ladende SWF-Datei kann über <codeph class="+ topic/ph pr-d/codeph ">Loader.contentLoaderInfo.applicationDomain</codeph> einen Verweis auf die ApplicationDomain der geladenen SWF-Datei abrufen. Wenn in der geladenen SWF-Datei die Art und Weise des Ladevorgangs bekannt ist, kann das ApplicationDomain-Objekt der ladenden SWF-Datei aufgerufen werden. Wenn die untergeordnete Domäne beispielsweise standardmäßig geladen wurde, kann die Anwendungsdomäne der ladenden SWF-Datei über <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain.parentDomain</codeph> abgerufen werden.</p>
     
     <p class="- topic/p ">Weitere Informationen finden Sie im Abschnitt „ApplicationDomain-Klasse“ im Kapitel „Clientsystem-Umgebung“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:checkPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">checkPolicyFile</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob der Anwendung vor dem Laden des eigentlichen Objekts eine URL-Richtliniendatei vom Server des zu ladenden Objekts herunterladen soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob der Anwendung vor dem Laden des eigentlichen Objekts eine URL-Richtliniendatei vom Server des zu ladenden Objekts herunterladen soll. Dieser Merker kann auf die <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode, jedoch nicht auf die <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>-Methode angewendet werden.
     
     <p class="- topic/p ">Setzen Sie diesen Merker auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn Sie ein Bild (JPEG-, GIF- oder PNG-Datei) von außerhalb der Domäne der aufrufenden SWF-Datei laden und davon ausgehen, dass Sie über ActionScript auf den Inhalt des Bilds zugreifen müssen. Beispiele für den Zugriff auf Bildinhalte sind u. a. Verweise auf die <codeph class="+ topic/ph pr-d/codeph ">Loader.content</codeph>-Eigenschaft zum Abrufen eines Bitmap-Objekts oder Aufrufe der <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>-Methode zum Abrufen einer Kopie der Pixel im geladenen Bild. Wenn Sie einen dieser Vorgänge starten, ohne während des Ladevorgangs einen Wert für <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> angegeben zu haben, wird möglicherweise eine <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Ausnahme ausgegeben, da die erforderliche Richtliniendatei noch nicht heruntergeladen wurde.</p>
     
     <p class="- topic/p ">Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode aufrufen und <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, beginnt die Anwendung erst dann, das in <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> angegebene Objekt herunterzuladen, wenn sie entweder eine relevanten URL-Richtliniendatei heruntergeladen oder festgestellt hat, dass keine Richtliniendatei existiert. Flash Player bzw. AIR berücksichtigen zuerst Richtliniendateien, die bereits heruntergeladen wurden, versuchen dann, eventuelle in Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>-Methode anstehende Richtliniendateien herunterzuladen, und dann, eine Richtliniendatei vom Standardpfad herunterzuladen, der <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> entspricht und der <codeph class="+ topic/ph pr-d/codeph ">/crossdomain.xml</codeph> auf dem gleichen Server wie <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> ist. In jedem Fall muss die gegebene Richtliniendatei unter <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> auf Grundlage des Speicherorts der Richtliniendatei vorhanden sein und die Datei muss den Zugriff mittels eines oder mehrerer <codeph class="+ topic/ph pr-d/codeph ">&lt;allow-access-from></codeph>-Tags zulassen.</p>
     
     <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, wird der Hauptdownload, der in der <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode angegeben ist, nicht geladen, bevor die Richtliniendatei vollständig verarbeitet wurde. Wenn die erforderliche Richtliniendatei vorhanden ist und <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Ereignisse von der <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph>-Eigenschaft des Loader-Objekts zurückgegeben wurden, ist der Download der Richtliniendatei abgeschlossen. Sie können dann Vorgänge durchführen, bei denen die Richtliniendatei erforderlich ist.</p>
     
     <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen und keine entsprechende Richtliniendatei vorhanden ist, wird eine Fehlermeldung erst bei einem Vorgang ausgegeben, bei dem eine <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Ausnahme ausgelöst wird. Nachdem das LoaderInfo-Objekt ein <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Ereignis ausgelöst hat, können Sie jedoch testen, ob eine entsprechende Richtliniendatei gefunden wurde, indem Sie den Wert der <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph>-Eigenschaft überprüfen.</p>
     
     <p class="- topic/p ">Wenn Sie keinen Zugriff auf Pixelebene auf das geladene Bild benötigen, setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. In diesem Fall ist es nicht erforderlich, nach einer Richtliniendatei zu suchen, da dies möglicherweise den Start des Downloads verzögert und unter Umständen unnötigerweise Netzwerkbandbreite beansprucht.</p>
     
     <p class="- topic/p ">Setzen Sie <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> zudem nicht auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn Sie eine SWF-Datei mit der <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Methode herunterladen. Dies liegt darin begründet, dass SWF-zu-SWF-Berechtigungen nicht über Richtliniendateien sondern durch die <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>-Methode gesteuert werden. Daher hat <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> beim Laden einer SWF-Datei keine Auswirkung. In diesem Fall ist es nicht erforderlich, nach einer Richtliniendatei zu suchen, da dies möglicherweise den Download der SWF-Datei verzögert und unter Umständen unnötigerweise Netzwerkbandbreite beansprucht. (In Flash Player oder AIR kann nicht festgestellt werden, ob eine SWF-Datei oder ein Bild heruntergeladen wird, da die Richtliniendatei vor diesem Download heruntergeladen wird.)</p>
     
     <p class="- topic/p ">Bei Verwendung von <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> beim Herunterladen eines Objekts von einer URL, bei der möglicherweise serverseitige HTTP-Weiterleitungen verwendet werden, ist Folgendes zu beachten: Richtliniendateien werden immer von der entsprechenden ursprünglichen URL abgerufen, die Sie in <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> angeben. Wenn das endgültige Objekt aufgrund von HTTP-Weiterleitungen von einer anderen URL stammt, gelten die ursprünglich heruntergeladenen Richtliniendateien möglicherweise nicht für die endgültige URL des Objekts. Dies ist jedoch die URL, die bei Sicherheitsentscheidungen von Bedeutung ist. In diesem Fall können Sie den Wert von <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.url</codeph> nach dem Empfangen eines <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Ereignisses überprüfen, in dem die endgültige URL des Objekts angegeben ist. Rufen Sie dann die <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>-Methode mit der URL einer Richtliniendatei auf, die auf der endgültigen URL des Objekts beruht. Rufen Sie anschließend den Wert von <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph> auf, bis er sich in <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ändert.</p>
     
         <p class="- topic/p ">Sie brauchen diese Eigenschaft nicht für AIR-Inhalt einstellen, der in der Anwendungssandbox ausgeführt wird. Inhalt in der AIR-Anwendungssandbox kann die <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>-Methode über einen beliebigen geladenen Bildinhalt als Quelle aufrufen. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link><link href="flash.display.xml#Loader/content" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.content</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#LoaderInfo/childAllowsParent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.childAllowsParent</linktext></link><link href="flash.display.xml#LoaderInfo/url" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.url</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.allowDomain()</linktext></link><link href="flash.system.xml#Security/loadPolicyFile()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.loadPolicyFile()</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:imageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">imageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob Bilddaten dekodiert werden, wenn sie gebraucht werden, oder wenn sie geladen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob Bilddaten dekodiert werden, wenn sie gebraucht werden, oder wenn sie geladen wurden.
     
     <p class="- topic/p ">Mit der Standardrichtlinie, <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_DEMAND</codeph> dekodiert die Laufzeitumgebung die Bilddaten, wenn die Daten für die Anzeige oder zu anderen Zwecken gebraucht werden. Diese Richtlinie behält das Verhalten bei, das frühere Versionen der Laufzeitumgebung verwendet haben.</p>
	 
	 <p class="- topic/p ">Mit der Richtlinie <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_LOAD</codeph> dekodiert die Laufzeitumgebung die Bilder sofort, nachdem sie geladen wurden, und bevor das complete-Ereignis abgesetzt wird. Wenn Bilder direkt nach dem Laden dekodiert werden, kann dies die Leistung von Animationen und UI verbessern, falls mehrere geladene Bilder in schneller Folge angezeigt werden, zum Beispiel bei in einer Bildlaufliste oder einem Cover Flow. Auf der anderen Seite kann die Verwendung der onLoad-Richtlinie die Spitzenspeicherlast Ihrer Anwendung erhöhen, da sich zu einem bestimmten Zeitpunkt unter Umständen mehr Bilddaten im Arbeitsspeicher befinden als dies mit der onDemand-Richtlinie der Fall wäre.</p>
	 
     <p class="- topic/p ">Mit beiden Richtlinien verwendet die Laufzeitumgebung dasselbe Cache- und Flush-Verhalten, nachdem das Bild dekodiert wurde. Die Laufzeitumgebung kann die dekodierten Daten jederzeit aus dem Arbeitsspeicher entfernen und das Bild neu dekodieren, wenn es wieder benötigt wird.</p>
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ImageDecodingPolicy</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:parameters" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parameters</apiName><shortdesc class="- topic/shortdesc ">
     Ein Objekt, das die Parameter enthält, die an das LoaderInfo-Objekt des Inhalts übergeben werden sollen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Objekt, das die Parameter enthält, die an das LoaderInfo-Objekt des Inhalts übergeben werden sollen.
     
     <p class="- topic/p ">Normalerweise wird der Wert der <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph>-Eigenschaft durch die Analyse der anfordernden URL erhalten. Wenn <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph> gesetzt wurde, bezieht <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph> seinen Wert vom LoaderContext-Objekt anstatt von der anfordernden URL. Die Variable <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph> akzeptiert nur Objekte, die Namen-Wert-Stringpaare enthalten, ähnlich wie URL-Parameter. Wenn das Objekt keine Namen-Wert-Stringpaare enthält, wird ein <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph> ausgegeben.</p>
     <p class="- topic/p ">Der Zweck dieser API ist es, der ladenden SWF-Datei zu ermöglichen, ihre Parameter an eine geladene SWF-Datei weiterzuleiten. Diese Funktion ist besonders hilfreich, wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph>-Methode verwenden, da <codeph class="+ topic/ph pr-d/codeph ">LoadBytes</codeph> kein Mittel bereitstellt, Parameter über die URL weiterzugeben. Parameter lassen sich nur an eine andere AS3-SWF-Dteai weiterleiten; eine AS1- oder AS2-SWF-Datei kann die Parameter nicht in einer zugänglichen Form erhalten, obwohl das loaderInfo.parameters-AS3-Objekt des AVM1Movies das weitergegebene Objekt ist. </p>
     
     
     <p class="- topic/p ">Betrachten Sie zum Beispiel die folgende URL: </p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">http://yourdomain/users/jdoe/test01/child.swf?foo=bar;</codeph></p>
     <p class="- topic/p ">Der folgende Code verwendet die LoaderContext.parameters-Eigenschaft, um einen an diese URL übergebenen Parameter zu replizieren: </p>
     
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      var l:Loader = new Loader(); 
      var lc:LoaderContext = new LoaderContext; 
      lc.parameters = { "foo": "bar" }; 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">Um zu überprüfen, ob der Parameter korrekt übergeben wurde, verwenden Sie die folgende trace-Anweisung, nachdem Sie den Code ausgeführt haben:</p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">trace(loaderInfo.parameters.foo);</codeph></p>
     <p class="- topic/p ">Wenn der Inhalt erfolgreich geladen wurde, gibt diese trace-Anweisung „bar“ aus.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:requestedContentParent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedContentParent</apiName><shortdesc class="- topic/shortdesc ">
     Das übergeordnete Element, dem der Loader den geladenen Inhalt hinzuzufügen versucht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:DisplayObjectContainer</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Das übergeordnete Element, dem der Loader den geladenen Inhalt hinzuzufügen versucht. 
     
     <p class="- topic/p ">Nachdem der Inhalt vollständig geladen wurde, wird das Loader-Objekt normalerweise zum übergeordneten Element des Inhalts. Wenn <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> festgelegt wurde, wird das dadurch angegebene Objekt zum übergeordneten Element, solange kein Laufzeitfehler die Zuweisung verhindert. Diese Neuzuweisung des übergeordneten Elements kann auch nach dem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis ohne Verwendung dieser Eigenschaft erfolgen. Bei der Angabe des übergeordneten Elements durch <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> sind jedoch keine zusätzlichen Ereignisse erforderlich. </p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> legt das gewünschte übergeordnete Element fest, bevor Skripts aus Bild Eins im geladenen Inhalt ausgeführt werden, aber nachdem der Konstruktor ausgeführt wurde. Wenn <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> den Wert null hat (den Standardwert), wird das Loader-Objekt das übergeordnete Element des Inhalts.</p>
     <p class="- topic/p ">Wenn es sich bei dem geladenen Inhalt um ein AVM1Movie-Objekt handelt, oder wenn beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> für das <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph>-Objekt ein Fehler auftritt, geschieht Folgendes:
     <ul class="- topic/ul "><li class="- topic/li ">Das Loader-Objekt wird das übergeordnete Element des geladenen Inhalts.</li><li class="- topic/li ">Die Laufzeitumgebung setzt ein <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent</codeph> ab.</li></ul></p>
     <p class="- topic/p ">Wenn das angeforderte übergeordnete Element und der geladene Inhalt sich in unterschiedlichen Sicherheits-Sandboxen befinden, und wenn das angeforderte übergeordnete Element keinen Zugriff auf den geladenen Inhalt hat, geschieht Folgendes:
     <ul class="- topic/ul "><li class="- topic/li ">Der Loader wird das übergeordnete Element des geladenen Inhalts.</li><li class="- topic/li ">Die Laufzeitumgebung setzt ein <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent</codeph> ab.</li></ul></p>
     
     <p class="- topic/p ">Der folgende Code verwendet <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph>, um den geladenen Inhalt in einem Sprite-Objekt zu platzieren:</p>
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      import flash.display.Sprite; 
     
      var lc:LoaderContext = new LoaderContext(); 
      var l:Loader = new Loader(); 
      var s:Sprite = new Sprite(); 
      lc.requestedContentParent = s; 
      addChild(s); 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">Wenn dieser Code ausgeführt wird, erscheint die untergeordnete SWF-Datei auf der Bühne. Diese Tatsache bestätigt, dass das Sprite-Objekt, das Sie der Bühne hinzugefügt haben, das übergeordnete Element der geladenen untergeordneten SWF-Datei ist.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:securityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">securityDomain</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die bei einem Loader.load()-Vorgang zu verwendende Sicherheitsdomäne an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die bei einem <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>-Vorgang zu verwendende Sicherheitsdomäne an. Verwenden Sie diese Eigenschaft nur beim Laden einer SWF-Datei (und nicht beim Laden eines Bilds).
     
     <p class="- topic/p ">Die Auswahl der Sicherheitsdomäne ist nur beim Laden einer SWF-Datei von Bedeutung, die möglicherweise von einer anderen Domäne (einem anderen Server) als die ladende SWF-Datei stammt. Wenn Sie eine SWF-Datei von Ihrer eigenen Domäne laden, wird sie immer in Ihrer Sicherheitsdomäne abgelegt. Wenn Sie jedoch eine SWF-Datei von einer anderen Domäne laden, stehen Ihnen zwei Optionen zur Verfügung. Sie können festlegen, dass die geladene SWF-Datei in ihrer „natürlichen“ Sicherheitsdomäne abgelegt wird, die sich von der der ladenden SWF-Datei unterscheidet. Dies ist die Standardeinstellung. Die andere Möglichkeit besteht darin, dass Sie festlegen, dass die geladene SWF-Datei in der gleichen Sicherheitsdomäne wie die ladende SWF-Datei abgelegt wird. Setzen Sie dazu <codeph class="+ topic/ph pr-d/codeph ">myLoaderContext.securityDomain</codeph> auf den gleichen Wert wie <codeph class="+ topic/ph pr-d/codeph ">SecurityDomain.currentDomain</codeph>. Dies wird als <i class="+ topic/ph hi-d/i ">importiertes Laden</i> bezeichnet und entspricht sicherheitstechnisch dem Kopieren der geladenen SWF-Datei auf Ihren Server und dem anschließenden Laden der Datei von diesem Server. Damit das importierte Laden erfolgreich durchgeführt wird, muss der Server der geladenen SWF-Datei über eine Richtliniendatei verfügen, die in der Domäne der ladenden SWF-Datei als vertrauenswürdig eingestuft ist.</p>
     
     <p class="- topic/p ">Sie können für <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain</codeph> nur Ihre eigene Sicherheitsdomäne übergeben. Beim Versuch, andere Sicherheitsdomänen zu übergeben, wird eine <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Ausnahme ausgegeben.</p>
     
     <p class="- topic/p ">Material in der AIR-Anwendungs-Sandbox kann kein Material aus anderen Sandboxen in seine SecurityDomain laden.</p>
     
     <p class="- topic/p ">Weitere Informationen finden Sie im Kapitel „Sicherheit“ des <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuchs</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:allowLoadBytesCodeExecution:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowLoadBytesCodeExecution</apiName><shortdesc class="- topic/shortdesc ">
     Alte Eigenschaft, die durch allowCodeImport ersetzt wurde, aus Kompatibilitätsgründen aber weiterhin unterstützt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Alte Eigenschaft, die durch <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> ersetzt wurde, aus Kompatibilitätsgründen aber weiterhin unterstützt wird. Zuvor die einzige Operation, die von <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> betroffen war, die <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>-Methode, ab Flash Player 10.1 und AIR 2.0 ist jedoch auch die Import-Ladefunktion von <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> mit <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph> betroffen. (Die letztgenannte Operation wird in der AIR-Anwendungssandbox nicht unterstützt.) Dieser Doppeleffekt führte dazu, dass der Eigenschaftenname <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> zu spezifisch wurde, weshalb jetzt der Name <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> bevorzugt wird. Die Einstellung von <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> wirkt sich auf beide Werte aus.
     
     <p class="- topic/p ">Legt fest, ob Sie ein <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph>-Objekt zum Importieren von Inhalt mit ausführbarem Code, zum Beispiel eine SWF-Datei, in die Sicherheitssandbox des Aufrufers verwenden können. Wenn diese Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat sind diese Importoperationen auf sichere Operation, zum Beispiel das Laden von Bildern, beschränkt.</p>
     
     <p class="- topic/p ">In AIR-Material in der Anwendungssandbox ist der Standardwert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. In anwendungsfremdem Inhalt ist der Standardwert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 Die JPEGLoaderContext-Klasse enthält eine Eigenschaft zur Aktivierung eines Deblocking-Filters beim Laden eines JPEG-Bildes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.system:LoaderContext</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die JPEGLoaderContext-Klasse enthält eine Eigenschaft zur Aktivierung eines Deblocking-Filters beim Laden eines JPEG-Bildes. Der Deblocking-Filter verbessert die Qualität eines Bildes bei höheren Komprimierungseinstellungen, indem er benachbarte Pixel glättet. Um bei Laden eines JPEG-Bildes Deblocking anzuwenden, erstellen Sie ein JPEGLoaderContext-Objekt und legen Sie seine <codeph class="+ topic/ph pr-d/codeph ">deblockingFilter</codeph>-Eigenschaft fest. Verwenden Sie dann den Namen des JPEGLoaderContext-Objekts als Wert des <codeph class="+ topic/ph pr-d/codeph ">context</codeph>-Parameters der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode des Loader-Objekts, um das Bild zu laden.
 
 <p class="- topic/p ">Die JPEGLoaderContext-Klasse erweitert die LoaderContext-Klasse. Setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn Sie programmgesteuerten Zugriff auf die Pixel des geladenen Bildes benötigen (z. B. wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>-Methode verwenden). Für AIR-Inhalt, der in der Anwendungssandbox ausgeführt wird, ist es nicht notwendig, die <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>-Eigenschaft festzulegen.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link></related-links><apiConstructor id="flash.system:JPEGLoaderContext:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein neues JPEGLoaderContext-Objekt mit den festgelegten Einstellungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">deblockingFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt die Stärke des Deblocking-Filters fest. Der Wert 1,0 bedeutet, dass der Deblocking-Filter mit voller Stärke arbeitet, während ein Wert von 0,0 den Filter deaktiviert.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob Flash Player vor dem Laden des Objekts prüfen soll, ob es eine URL-Richtliniendatei gibt. Gilt nicht für AIR-Inhalt, der in der Anwendungs-Sandbox ausgeführt wird.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt das ApplicationDomain-Objekt zur Verwendung mit einem Loader-Objekt an.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt das SecurityDomain-Objekt an, das für ein Loader-Objekt verwendet werden soll.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein neues JPEGLoaderContext-Objekt mit den festgelegten Einstellungen. 
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:JPEGLoaderContext:deblockingFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">deblockingFilter</apiName><shortdesc class="- topic/shortdesc "> 
	 Legt die Stärke des Deblocking-Filters fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Legt die Stärke des Deblocking-Filters fest. Der Wert 1,0 bedeutet, dass der Deblocking-Filter mit voller Stärke arbeitet, während ein Wert von 0,0 den Filter deaktiviert.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Capabilities" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Capabilities</apiName><shortdesc class="- topic/shortdesc ">
 Die Capabilities-Klasse enthält Eigenschaften, die das System und die Laufzeitumgebung beschreiben, die eine SWF-Datei hosten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 <ph class="- topic/ph ">Die Capabilities-Klasse enthält Eigenschaften, die das System und die Laufzeitumgebung beschreiben, die eine SWF-Datei hosten. Zum Beispiel hat das Display eines Mobiltelefons möglicherweise eine Größe von 100 Quadratpixel und ist schwarzweiß, während der Bildschirm eines Computers eine Größe von 1000 Quadratpixel hat und farbig ist. Indem Sie mithilfe der Capabilities-Klasse feststellen, über welchen Funktionsumfang der Client verfügt, können Sie passenden Inhalt für möglichst viele Benutzer bereitstellen. Wenn Sie den Funktionsumfang des Geräts kennen, können Sie festlegen, dass der Server die entsprechenden SWF-Dateien sendet oder dass die Darstellung der SWF-Datei geändert wird.</ph>
 
 
 
 <p class="- topic/p ">Einige Funktionen von Adobe AIR sind allerdings nicht als Eigenschaften in der Capabilities-Klasse aufgelistet. Sie sind Eigenschaften anderer Klassen:</p>
 
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Beschreibung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Betriebssystem Anwendungsdock-Symbole unterstützt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsMenu</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Betriebssystem eine globale Anwendungsmenüleiste unterstützt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Betriebssystem Taskleistensymbole unterstützt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsMenu</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Betriebssystem Fenstermenüs unterstützt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsTransparency</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Betriebssystem transparente Fenster unterstützt.</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">Verwenden Sie <i class="+ topic/ph hi-d/i ">nicht</i> <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> bzw. <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph>, um eine betriebssystemspezifische Funktionalität zu ermitteln. Die Funktionalität auf dem Betriebssystem basieren zu lassen, wird nicht empfohlen, da dies zu Problemen führt, wenn eine Anwendung nicht alle möglichen Zielbetriebssysteme berücksichtigt. Verwenden Sie stattdessen die Eigenschaft, die der von Ihnen zu testenden Funktionalität entspricht.</p>
 
 <p class="- topic/p ">Sie können Daten zum Funktionsumfang, die in der <codeph class="+ topic/ph pr-d/codeph ">Capabilities.serverString</codeph>-Eigenschaft als URL-kodierter String gespeichert sind, senden, und zwar mithilfe der HTTP-Methode <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Im folgenden Beispiel ist ein Serverstring für einen Computer mit MP3-Unterstützung und einer Auflösung von 1600 x 1200 Pixel dargestellt, auf dem Windows XP ausgeführt und ein Eingabemethoden-Editor (IME) installiert ist.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
     SB=f&amp;DEB=t&amp;V=WIN%209%2C0%2C0%2C0&amp;M=Adobe%20Windows&amp;
     R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
     L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f&amp;IME=t</pre>
 
 <p class="- topic/p ">In der folgenden Tabelle sind die Eigenschaften der Capabilities-Klasse und die entsprechenden Serverstrings aufgeführt:
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Eigenschaften der Capabilities-Klasse</entry><entry align="left" class="- topic/entry ">Serverstring</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">avHardwareDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AVD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAccessibility</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ACC</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">A</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudioEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasEmbeddedVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">EV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasIME</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">IME</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasMP3</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">MP3</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasPrinting</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenBroadcast</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenPlayback</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SA</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasTLS</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TLS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasVideoEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">VE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isDebugger</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DEB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">language</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">L</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localFileReadDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LFD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">manufacturer</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">M</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">maxLevelIDC</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ML</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">os</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">OS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pixelAspectRatio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">playerType</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PT</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenColor</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">COL</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenDPI</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionX</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionY</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">version</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">V</codeph></entry></row></tbody></tgroup></adobetable>
 </p>
  
 <p class="- topic/p ">Es gibt auch einen <codeph class="+ topic/ph pr-d/codeph ">WD</codeph>-Serverstring, der festlegt, ob der fensterlose Modus deaktiviert ist. Der fensterlose Modus kann in Flash Player aufgrund einer Inkompatibilität mit dem Webbrowser oder einer Benutzereinstellung in der Datei mms.cfg deaktiviert werden. Es gibt keine entsprechende Capabilities-Eigenschaft.</p>
  
 <p class="- topic/p ">Alle Eigenschaften der Capabilities-Klasse sind schreibgeschützt.</p>
 
 </apiDesc><example conref="examples\CapabilitiesExample.as" class="- topic/example "> Im folgenden Beispiel werden die Werte ausgegeben, die im flash.system.Capabilities-Objekt gefunden wurden. Zuerst werden die Werte in ein Textfeld ausgegeben. Danach werden die Werte mithilfe mehrerer Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> ausgegeben.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.system.Capabilities;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class CapabilitiesExample extends Sprite {
        
        public function CapabilitiesExample() {
            showCapabilities();
        }
        
        private function showCapabilities():void {
            var tf:TextField = new TextField();
            tf.height = 600;
            tf.width = 400;
            tf.autoSize = TextFieldAutoSize.LEFT;
            tf.wordWrap = true;
            
            tf.text = "avHardwareDisable: " + Capabilities.avHardwareDisable +
                
                "\nhasAccessibility: " + Capabilities.hasAccessibility +
                "\nhasAudio: " + Capabilities.hasAudio +
                "\nhasAudioEncoder: " + Capabilities.hasAudioEncoder +
                "\nhasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo +
                "\nhasIME: " + Capabilities.hasIME +
                "\nhasMP3: " + Capabilities.hasMP3 +
                "\nhasPrinting: " + Capabilities.hasPrinting +
                "\nhasScreenBroadcast: " + Capabilities.hasScreenBroadcast +
                "\nhasScreenPlayback: " + Capabilities.hasScreenPlayback +
                "\nhasStreamingAudio: " + Capabilities.hasStreamingAudio +
                "\nhasStreamingVideo: " + Capabilities.hasStreamingVideo +
                "\nhasTLS: " + Capabilities.hasTLS +
                "\nhasVideoEncoder: " + Capabilities.hasVideoEncoder +
                "\nisDebugger: " + Capabilities.isDebugger +
                "\nisEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat +
                "\nlanguage: " + Capabilities.language +
                "\nlocalFileReadDisable: " + Capabilities.localFileReadDisable +
                "\nmanufacturer: " + Capabilities.manufacturer +
                "\nmaxLevelIDC: " + Capabilities.maxLevelIDC +
                "\nos: " + Capabilities.os +
                "\npixelAspectRatio: " + Capabilities.pixelAspectRatio +
                "\nplayerType: " + Capabilities.playerType +
                "\nscreenColor: " + Capabilities.screenColor +
                "\nscreenDPI: " + Capabilities.screenDPI +
                "\nscreenResolutionX: " + Capabilities.screenResolutionX +
                "\nscreenResolutionY: " + Capabilities.screenResolutionY +
                "\nserverString: " + Capabilities.serverString +
                "\ntouchscreenType: " + Capabilities.touchscreenType +
                
                // The following capabilities are supported only when publishing for AIR.
                // If you are publishing for AIR, uncomment the following lines.
                //"\nlanguages: " + Capabilities.languages +
                //"\ncpuArchitecture: " + Capabilities.cpuArchitecture +
                //"\nsupports32BitProcesses: " + Capabilities.supports32BitProcesses +
                //"\nsupports64BitProcesses: " + Capabilities.supports64BitProcesses +    
                                
                "\nversion: " + Capabilities.version;
                
            addChild(tf);   
                
            trace("avHardwareDisable: " + Capabilities.avHardwareDisable);
            trace("hasAccessibility: " + Capabilities.hasAccessibility);
            trace("hasAudio: " + Capabilities.hasAudio);
            trace("hasAudioEncoder: " + Capabilities.hasAudioEncoder);
            trace("hasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo);
            trace("hasIME: " + Capabilities.hasIME);
            trace("hasMP3: " + Capabilities.hasMP3);
            trace("hasPrinting: " + Capabilities.hasPrinting);
            trace("hasScreenBroadcast: " + Capabilities.hasScreenBroadcast);
            trace("hasScreenPlayback: " + Capabilities.hasScreenPlayback);
            trace("hasStreamingAudio: " + Capabilities.hasStreamingAudio);
            trace("hasStreamingVideo: " + Capabilities.hasStreamingVideo);
            trace("hasTLS: " + Capabilities.hasTLS);
            trace("hasVideoEncoder: " + Capabilities.hasVideoEncoder);
            trace("isDebugger: " + Capabilities.isDebugger);
            trace("isEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat);
            trace("language: " + Capabilities.language);
            trace("localFileReadDisable: " + Capabilities.localFileReadDisable);
            trace("manufacturer: " + Capabilities.manufacturer);
            trace("maxLevelIDC: " + Capabilities.maxLevelIDC);
            trace("os: " + Capabilities.os);
            trace("pixelAspectRatio: " + Capabilities.pixelAspectRatio);
            trace("playerType: " + Capabilities.playerType);
            trace("screenColor: " + Capabilities.screenColor);
            trace("screenDPI: " + Capabilities.screenDPI);
            trace("screenResolutionX: " + Capabilities.screenResolutionX);
            trace("screenResolutionY: " + Capabilities.screenResolutionY);
            trace("serverString: " + Capabilities.serverString);
            trace("touchscreenType: " + Capabilities.touchscreenType);
            
            // The following capabilities are supported only when publishing for AIR.
            // If you are publishing for AIR, uncomment the following lines.       
            //trace("cpuArchitecture: " + Capabilities.cpuArchitecture);
            //trace("languages: " + Capabilities.languages);
            //trace("supports32BitProcesses: " + Capabilities.supports32BitProcesses);
            //trace("supports64BitProcesses: " + Capabilities.supports64BitProcesses);        
                        
            trace("version: " + Capabilities.version);
       
        }
    }
}

</codeblock></example></apiClassifierDetail><apiValue id="flash.system:Capabilities:avHardwareDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">avHardwareDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob der Zugriff auf die Kamera und das Mikrofon eines Benutzers vom Administrator untersagt (true) oder zugelassen (false) wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.avHardwareDisable, avHardwareDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob der Zugriff auf die Kamera und das Mikrofon eines Benutzers vom Administrator untersagt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder zugelassen (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) wurde. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">AVD</codeph>.
	 
	 <p class="- topic/p ">Für Inhalt in Adobe AIR™ gilt diese Eigenschaft nur für Inhalt in Sicherheitssandboxen, bei denen es sich nicht um die Sicherheitssandbox der Anwendung handelt. Inhalt in der Sicherheitssandbox der Anwendung kann immer auf die Kamera und das Mikrofon des Benutzers zugreifen.</p>
 	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/getCamera()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.getCamera()</linktext></link><link href="flash.media.xml#Microphone/getMicrophone()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.getMicrophone()</linktext></link><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:cpuArchitecture:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cpuArchitecture</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt die aktuelle CPU-Architektur zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	 <pre xml:space="preserve" class="- topic/pre ">
	 trace(Capabilities.cpuArchitecture);
	 </pre>
	  
	 </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt die aktuelle CPU-Architektur zurück. Die <codeph class="+ topic/ph pr-d/codeph ">cpuArchitecture</codeph>-Eigenschaft kann die folgenden Strings zurückgeben: "<codeph class="+ topic/ph pr-d/codeph ">PowerPC</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">x86</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">SPARC</codeph>" und "<codeph class="+ topic/ph pr-d/codeph ">ARM</codeph>". Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">ARCH</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAccessibility:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAccessibility</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System die Kommunikation über Eingabehilfen zur Barrierefreiheit unterstützt (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAccessibility, hasAccessibility,
	 accessibility
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System die Kommunikation über Eingabehilfen zur Barrierefreiheit unterstützt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">ACC</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#Accessibility/active" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.active</linktext></link><link href="flash.accessibility.xml#Accessibility/updateProperties()" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.updateProperties()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasAudioEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudioEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System einen Audiostream, der beispielsweise von einem Mikrofon stammt, kodieren kann (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudioEncoder, hasAudioEncoder 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System einen Audiostream, der beispielsweise von einem Mikrofon stammt, kodieren kann (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">AE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System über Audiofunktionen verfügt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudio, hasAudio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System über Audiofunktionen verfügt. Diese Eigenschaft ist immer auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">A</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasEmbeddedVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasEmbeddedVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System eingebettetes Video unterstützt (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasEmbeddedVideo, hasEmbeddedVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System eingebettetes Video unterstützt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">EV</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasIME:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasIME</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob auf dem System ein Eingabemethoden-Editor (IME) installiert ist (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasIME, hasIME, IME 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob auf dem System ein Eingabemethoden-Editor (IME) installiert ist (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">IME</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.system.xml#System/ime" class="- topic/link "><linktext class="- topic/linktext ">flash.system.System.ime</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasMP3:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasMP3</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System über einen MP3-Decoder verfügt (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasMP3, hasMP3, MP3, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System über einen MP3-Decoder verfügt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">MP3</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasPrinting:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasPrinting</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System das Drucken unterstützt (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasPrinting, hasPrinting, printing 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System das Drucken unterstützt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">PR</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenBroadcast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenBroadcast</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System die Entwicklung von Bildschirm-Broadcast-Anwendungen, die über Flash Media Server ausgeführt werden sollen, unterstützt (true) oder nicht unterstützt (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenBroadcast, hasScreenBroadcast
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System die Entwicklung von Bildschirm-Broadcast-Anwendungen, die über Flash Media Server ausgeführt werden sollen, unterstützt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht unterstützt (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">SB</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenPlayback:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenPlayback</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System die Wiedergabe von Bildschirm-Broadcast-Anwendungen unterstützt (true) oder nicht unterstützt (false), die über Flash Media Server ausgeführt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenPlayback, hasScreenPlayback
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System die Wiedergabe von Bildschirm-Broadcast-Anwendungen unterstützt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht unterstützt (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>), die über Flash Media Server ausgeführt werden. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">SP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System Streamingsound wiedergeben kann (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingAudio, hasStreamingAudio, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System Streamingsound wiedergeben kann (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">SA</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System Streaming-Video wiedergeben kann (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingVideo, hasStreamingVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System Streaming-Video wiedergeben kann (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">SV</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasTLS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasTLS</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System native SSL-Sockets über NetConnection unterstützt werden (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasTLS, hasTLS, TLS 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System native SSL-Sockets über NetConnection unterstützt werden (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">TLS</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connectedProxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connectedProxyType</linktext></link><link href="flash.net.xml#NetConnection/proxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.proxyType</linktext></link><link href="flash.net.xml#NetConnection/usingTLS" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.usingTLS</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasVideoEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasVideoEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob das System einen Videostream, der beispielsweise von einer Webkamera stammt, kodieren (true) oder nicht kodieren (false) kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasVideoEncoder, hasVideoEncoder
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob das System einen Videostream, der beispielsweise von einer Webkamera stammt, kodieren (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht kodieren (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) kann. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">VE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isDebugger:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDebugger</apiName><shortdesc class="- topic/shortdesc "> 
	 Gibt an, ob es sich bei dem System um eine spezielle Debugging-Version (true) oder um eine offiziell freigegebene Version (false) handelt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isDebugger, isDebugger, debugging 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Gibt an, ob es sich bei dem System um eine spezielle Debugging-Version (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder um eine offiziell freigegebene Version (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) handelt. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">DEB</codeph>. Diese Eigenschaft ist mit <codeph class="+ topic/ph pr-d/codeph ">true</codeph> belegt, wenn die Ausführung <ph class="- topic/ph ">in der Debug-Version des Flash Player oder</ph> im AIR Debug Launcher (ADL) erfolgt.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isEmbeddedInAcrobat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isEmbeddedInAcrobat</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob die Flash-Laufzeitumgebung in eine PDF-Datei eingebettet ist, die in Acrobat 9.0 oder höher geöffnet ist (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.127.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isEmbeddedInAcrobat, isEmbeddedInAcrobat, Acrobat
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob die Flash-Laufzeitumgebung in eine PDF-Datei eingebettet ist, die in Acrobat 9.0 oder höher geöffnet ist (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:languages:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">languages</apiName><shortdesc class="- topic/shortdesc ">
		 Ein Array mit Strings, die Informationen über die im Betriebssystem festgesetzten bevorzugten Sprachen des Benutzers für Benutzeroberflächen enthalten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein Array mit Strings, die Informationen über die im Betriebssystem festgesetzten bevorzugten Sprachen des Benutzers für Benutzeroberflächen enthalten. Die Strings enthalten Sprachtags (und Skript- und regionale Informationen, sofern zutreffend), die in RFC4646 (<xref href="http://www.ietf.org/rfc/rfc4646.txt" scope="external" class="- topic/xref ">http://www.ietf.org/rfc/rfc4646.txt</xref>) definiert sind, und verwenden Bindestriche als Trennzeichen (z. B. <codeph class="+ topic/ph pr-d/codeph ">"en-US"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"ja-JP"</codeph>). Sprachen werden im Array in der bevorzugten Reihenfolge aufgelistet, die von den Betriebssystemeinstellungen bestimmt wird. 
		 
		 <p class="- topic/p ">Je nach Betriebssystem werden von den Gebietsschemastrings unterschiedliche regionale Informationen zurückgegeben. Ein Betriebssystem könnte z. B. <codeph class="+ topic/ph pr-d/codeph ">"en-us"</codeph> zurückgeben, während ein anderes <codeph class="+ topic/ph pr-d/codeph ">"en"</codeph> zurückgeben könnte.</p>
		 
		 <p class="- topic/p ">Der erste Eintrag im zurückgegebenen Array hat im Allgemeinen die gleiche primäre Sprach-ID wie die <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>-Eigenschaft. Wenn <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> z. B. auf <codeph class="+ topic/ph pr-d/codeph ">"en-US"</codeph> gesetzt ist, dann ist die <codeph class="+ topic/ph pr-d/codeph ">language</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">"en"</codeph> gesetzt. Wenn aber die <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">"xu"</codeph> (eine unbekannte Sprache) gesetzt ist, ist das erste Element in diesem Array anders. Aus diesem Grund kann <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> genauer als <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> sein.</p>
		 
		 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">LS</codeph>.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:language:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">language</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt den Sprachcode des Systems an, auf dem der Inhalt ausgeführt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.language, language
	 
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt den Sprachcode des Systems an, auf dem der Inhalt ausgeführt wird. Die Sprache wird als ein aus zwei Kleinbuchstaben bestehender Sprachcode nach ISO 639-1 angegeben. Bei Chinesisch unterscheidet ein zusätzlicher aus zwei Großbuchstaben bestehender Ländercode nach ISO 3166 zwischen vereinfachtem und traditionellem Chinesisch. Die Sprachcodes beruhen auf der englischen Bezeichnung der jeweiligen Sprache: mit <codeph class="+ topic/ph pr-d/codeph ">hu</codeph> wird beispielsweise Ungarisch (englisch: Hungarian) angegeben.
	 
	 <p class="- topic/p ">In englischen Systemen gibt diese Eigenschaft nur den Sprachcode (<codeph class="+ topic/ph pr-d/codeph ">en</codeph>), nicht jedoch den Ländercode zurück. In Microsoft Windows-Systemen gibt diese Eigenschaft die in der Benutzeroberfläche bei allen Menüs, Dialogfeldern, Fehlermeldungen und Hilfedateien verwendete Sprache zurück. In der folgenden Tabelle sind die möglichen Werte aufgelistet:
	 
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Sprache</entry><entry align="left" class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Tschechisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cs</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Dänisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">da</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Niederländisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">nl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Englisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">de</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Finnisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fi</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Französisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fr</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Deutsch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">de</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Ungarisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Italienisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">it</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Japanisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ja</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Koreanisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ko</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Norwegisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">no</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Andere/unbekannt</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">xu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Polnisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Portugiesisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pt</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Russisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ru</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Chinesisch (VRC)</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-CN</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Spanisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">es</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Schwedisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sv</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Chinesisch (Taiwan)</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-TW</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Türkisch</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tr</codeph></entry></row></tbody></tgroup></adobetable>
	 </p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Als Wert für die <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>-Eigenschaft sind nur Werte aus dieser Liste erlaubt. Aufgrund dieser Einschränkung sollten Adobe AIR-Anwendungen das erste Element im <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages</codeph>-Array verwenden, um die primäre Benutzeroberflächensprache für das System zu ermitteln. </p>
	 
	 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">L</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_languageExample.as" class="- topic/example "> Im folgenden Beispiel ist der angezeigte Inhalt von der Sprache des Betriebssystems auf dem Computer des Benutzers abhängig.
 
 <p class="- topic/p ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> gibt den Sprachcode gemäß ISO 639-1 zurück (zum Beispiel „en“ für Englisch). Die Anweisung <codeph class="+ topic/ph pr-d/codeph ">switch</codeph> überprüft den Sprachcode und legt den Inhalt des Textfelds <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> auf eine Begrüßung in der entsprechenden Sprache fest. Wenn der Sprachcode nicht unterstützt wird, wird ein Standardfehlerstring zurückgegeben.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.system.Capabilities;

    public class Capabilities_languageExample extends Sprite {

        public function Capabilities_languageExample()  {
            var myTextField:TextField = new TextField();         
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.background = true;
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            
            var greetingEnglish:String = "Hello World";
            var greetingGerman:String = "Hallo Welt";
            var greetingFrench:String = "Bonjour Monde";
            var greetingSpanish:String = "Hola Mundo";

            var lang:String = Capabilities.language;
                         
            switch (lang) {
                case "en":
                    myTextField.text = greetingEnglish;
                    break;
                case "de":
                    myTextField.text = greetingGerman;
                    break;
                case "fr":
                    myTextField.text = greetingFrench;
                    break;
                case "es":
                    myTextField.text = greetingSpanish;
                    break;
                default:
                    myTextField.text = "Sorry your system's language is not supported at this time.";               
            }
             
            this.addChild(myTextField);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/languages" class="- topic/link "><linktext class="- topic/linktext ">languages</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:localFileReadDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localFileReadDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob der Lesezugriff auf die Festplatte des Benutzers vom Administrator verweigert (true) oder zugelassen (false) wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.localFileReadDisable, localFileReadDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob der Lesezugriff auf die Festplatte des Benutzers vom Administrator verweigert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder zugelassen (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) wurde. Für Inhalt in Adobe AIR gilt diese Eigenschaft nur für Inhalt in Sicherheitssandboxen, bei denen es sich nicht um die Sicherheitssandbox der Anwendung handelt. (Inhalt in der Sicherheitssandbox der Anwendung kann vom Dateisystem immer gelesen werden.) <ph class="- topic/ph ">Wenn diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, kann Flash Player keine Dateien (einschließlich der ersten Datei, mit der Flash Player gestartet wird) auf der Festplatte des Benutzers lesen.</ph> Wenn diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, kann AIR-Inhalt außerhalb der Sicherheitssandbox der Anwendung keine Dateien von der Festplatte des Benutzers lesen. So schlagen beispielsweise Versuche fehl, eine Datei auf der Festplatte des Benutzers mit Lademethoden zu lesen, wenn diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist.
	 
	 <p class="- topic/p ">Darüber hinaus sind auch freigegebene Laufzeitbibliotheken gesperrt, wenn diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist. Das Lesen freigegebener lokaler Objekte ist jedoch unabhängig vom Wert dieser Eigenschaft möglich.</p>
	 
	 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">LFD</codeph>.</p>
	 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:manufacturer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manufacturer</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt den Hersteller der ausgeführten Version des Flash Player oder der AIR-Laufzeitumgebung im Format „Adobe Betriebssystemname“ an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.manufacturer, manufacturer
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt den Hersteller der <ph class="- topic/ph ">ausgeführten Version des Flash Player oder der </ph>AIR-Laufzeitumgebung im Format <codeph class="+ topic/ph pr-d/codeph ">„Adobe</codeph> <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">Betriebssystemname</i>“</codeph> an. Der Wert für <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">Betriebssystemname</i></codeph> kann <codeph class="+ topic/ph pr-d/codeph ">"Windows"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"Macintosh"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"Linux"</codeph> oder der Name eines anderen Betriebssystems sein. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">M</codeph>.
	 
	 <p class="- topic/p ">Verwenden Sie <i class="+ topic/ph hi-d/i ">nicht</i> <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph>, um eine betriebssystemspezifische Funktionalität zu ermitteln, wenn es eine spezifischere Funktionalitätseigenschaft gibt. Die Funktionalität auf dem Betriebssystem basieren zu lassen, wird nicht empfohlen, da dies zu Problemen führt, wenn eine Anwendung nicht alle möglichen Zielbetriebssysteme berücksichtigt. Verwenden Sie stattdessen die Eigenschaft, die der von Ihnen zu testenden Funktionalität entspricht. Weitere Informationen finden Sie in der Beschreibung der Capabilities-Klasse.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:maxLevelIDC:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxLevelIDC</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die höchste H.264 Level IDC ab, die von der Hardware des Clients unterstützt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.maxLevelIDC, maxLevelIDC
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die höchste H.264 Level IDC ab, die von der Hardware des Clients unterstützt wird. Medien, die auf dieser Stufe ausgeführt werden, können garantiert ausgeführt werden, während Medien, die auf der höchsten Stufe ausgeführt werden, u. U. nicht mit der höchsten Qualität ausgeführt werden. Diese Eigenschaft ist für Server nützlich, die versuchen, die Funktionalität eines Clients zu emulieren. Mit dieser Eigenschaft kann ein Server die Grafikqualität ermitteln, die an den Client gesendet werden kann.
     
     <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">ML</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:os:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">os</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt das aktuelle Betriebssystem an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.os, os
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt das aktuelle Betriebssystem an. Die <codeph class="+ topic/ph pr-d/codeph ">os</codeph>-Eigenschaft kann die folgenden Strings zurückgeben:
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Betriebssystem</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Windows 7</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 7"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Vista</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Vista"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Home Server</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Home Server"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP 64</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server XP 64"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows XP"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 98</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 98"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 95</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 95"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows NT</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows NT"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 2000</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 2000"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows ME</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows ME"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CE</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CE"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows SmartPhone</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows SmartPhone"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows PocketPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows PocketPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CEPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CEPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Mobile</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Mobile"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Mac OS</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Mac OS X.Y.Z"</codeph> (wobei X.Y.Z die Versionsnummer ist, zum Beispiel: <codeph class="+ topic/ph pr-d/codeph ">"Mac OS 10.5.2"</codeph>)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Linux</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Linux"</codeph> (Flash Player fügt die Linux-Version an, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"Linux 2.6.15-1.2054_FC5smp"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">iPhone OS 4.1</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"iPhone3,1"</codeph></entry></row></tbody></tgroup></adobetable>
	
	 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">OS</codeph>.</p>
	 
	 <p class="- topic/p ">Verwenden Sie <i class="+ topic/ph hi-d/i ">nicht</i> <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>, um eine betriebssystemspezifische Funktionalität zu ermitteln, wenn es eine spezifischere Funktionalitätseigenschaft gibt. Die Funktionalität auf dem Betriebssystem basieren zu lassen, wird nicht empfohlen, da dies zu Problemen führt, wenn eine Anwendung nicht alle möglichen Zielbetriebssysteme berücksichtigt. Verwenden Sie stattdessen die Eigenschaft, die der von Ihnen zu testenden Funktionalität entspricht. Weitere Informationen finden Sie in der Beschreibung der Capabilities-Klasse.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:pixelAspectRatio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pixelAspectRatio</apiName><shortdesc class="- topic/shortdesc "> 
	 Gibt das Pixelseitenverhältnis des Bildschirms an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.pixelAspectRatio, pixelAspectRatio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Gibt das Pixelseitenverhältnis des Bildschirms an. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">AR</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:playerType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">playerType</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt den Typ der Laufzeitumgebung an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.playerType, playerType
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt den Typ der Laufzeitumgebung an. Diese Eigenschaft weist einen der folgenden Werte auf:
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">„ActiveX“</codeph> für das in Microsoft Internet Explorer verwendete Flash Player-ActiveX-Steuerelement</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">„Desktop“</codeph> für die Adobe AIR-Laufzeitumgebung (mit Ausnahme von SWF-Inhalten, die von einer HTML-Seite geladen werden, wobei <codeph class="+ topic/ph pr-d/codeph ">Capabilities.playerType</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">„PlugIn“</codeph> gesetzt ist)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"External"</codeph><ph outputclass="flashonly" class="- topic/ph "> für den externen Flash Player oder im Testmodus</ph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"PlugIn"</codeph> für das Flash Player-Browser-Zusatzmodul (und für SWF-Inhalte, die von einer HTML-Seite in einer AIR-Anwendung geladen werden)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"StandAlone"</codeph> für den eigenständigen Flash Player</li></ul>
	 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">PT</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenColor</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt die Bildschirmfarbe an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenColor, screenColor
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt die Bildschirmfarbe an. Dieser Eigenschaft können die Werte <codeph class="+ topic/ph pr-d/codeph ">"color"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"gray"</codeph> (Graustufen) oder <codeph class="+ topic/ph pr-d/codeph ">"bw"</codeph> (schwarzweiß) zugeordnet werden. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">COL</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenDPI:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenDPI</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt den dpi-Wert der Bildschirmauflösung in Pixeln an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenDPI, screenDPI
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt den dpi-Wert der Bildschirmauflösung in Pixeln an. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">DP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionX</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt die maximale horizontale Auflösung des Bildschirms an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionX, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt die maximale horizontale Auflösung des Bildschirms an. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (und gibt die Breite und Höhe des Bildschirms zurück). Diese Eigenschaft wird nicht mit der Bildschirmauflösung des Benutzers aktualisiert und gibt stattdessen lediglich an, welche Auflösung beim Starten einer <ph class="- topic/ph ">Flash Player- oder </ph> Adobe AIR-Anwendung verwendet wurde. Außerdem gibt der Wert nur die Auflösung des primären Bildschirms an.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionY</apiName><shortdesc class="- topic/shortdesc "> 
	 Gibt die maximale vertikale Auflösung des Bildschirms an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionY, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Gibt die maximale vertikale Auflösung des Bildschirms an. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (und gibt die Breite und Höhe des Bildschirms zurück). Diese Eigenschaft wird nicht mit der Bildschirmauflösung des Benutzers aktualisiert und gibt stattdessen lediglich an, welche Auflösung beim Starten einer <ph class="- topic/ph ">Flash Player- oder </ph> Adobe AIR-Anwendung verwendet wurde. Außerdem gibt der Wert nur die Auflösung des primären Bildschirms an.
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> Das folgende Beispiel ist ein einfacher Test, der die aktuelle Bildschirmauflösung und die Version des Betriebssystems anzeigt. Klicken Sie beim Testen dieses Beispiels auf das Textfeld, um die Eigenschaftswerte zu sehen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:serverString:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverString</apiName><shortdesc class="- topic/shortdesc "> 
	 Ein URL-kodierter String, der die Werte für jede Capabilities-Eigenschaft angibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.serverString, serverString
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Ein URL-kodierter String, der die Werte für jede Capabilities-Eigenschaft angibt.
	 
	 <p class="- topic/p ">Im folgenden Beispiel ist ein URL-kodierter String dargestellt:
	 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
	 SB=f&amp;DEB=t&amp;V=WIN%208%2C5%2C0%2C208&amp;M=Adobe%20Windows&amp;
	 R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
	 L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f</pre></p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports32BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports32BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob das System das Ausführen von 32-Bit-Prozessen unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports32BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob das System die Ausführung von 32-Bit-Prozessen unterstützt. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">PR32</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports64BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports64BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob das System die Ausführung von 64-Bit-Prozessen unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports64BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob das System die Ausführung von 64-Bit-Prozessen unterstützt. Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">PR64</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:touchscreenType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">touchscreenType</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt den Typ des unterstützten Touchscreens an, falls vorhanden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt den Typ des unterstützten Touchscreens an, falls vorhanden. Werte sind in der flash.system.TouchscreenType-Klasse definiert.
	 
	 </apiDesc><example conref="examples\Capabilities_touchScreenType.as" class="- topic/example "> Das folgende Beispiel ist ein einfacher Test, der den aktuellen Touchscreentyp anzeigt. Klicken Sie beim Testen dieses Beispiels auf ein Textfeld, um die Eigenschaftswerte zu sehen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.system.Capabilities;
import flash.text.TextField;

var capabilitiesTouchScreenTypeTxt:TextField = new TextField();
capabilitiesTouchScreenTypeTxt.width = 300;
capabilitiesTouchScreenTypeTxt.border = true;

addChild(capabilitiesTouchScreenTypeTxt);

addEventListener(MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    capabilitiesTouchScreenTypeTxt.text= "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#TouchscreenType" class="- topic/link "><linktext class="- topic/linktext ">TouchscreenType-Klasse</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:version:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">version</apiName><shortdesc class="- topic/shortdesc "> 
	 Gibt die Flash Player- oder Adobe&amp;#xAE; AIR&amp;#xAE;-Plattform. sowie Versionsinformationen an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.version, version
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Gibt die Flash Player- oder Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>-Plattform sowie Versionsinformationen an. Das Format der Versionsnummer sieht folgendermaßen aus: <i class="+ topic/ph hi-d/i ">Plattform majorVersion, minorVersion, buildNumber, internalBuildNumber</i>. Mögliche Werte für <i class="+ topic/ph hi-d/i ">platform</i> sind <codeph class="+ topic/ph pr-d/codeph ">"WIN"</codeph>, ` <codeph class="+ topic/ph pr-d/codeph ">"MAC"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"LNX"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"AND"</codeph>. Es folgen einige Beispiele für die Versionsangabe:
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 WIN 9,0,0,0  // Flash Player 9 for Windows
	 MAC 7,0,25,0   // Flash Player 7 for Macintosh
	 LNX 9,0,115,0  // Flash Player 9 for Linux
	 AND 10,2,150,0 // Flash Player 10 for Android
	 </pre>
	 
	 <p class="- topic/p ">Verwenden Sie <i class="+ topic/ph hi-d/i ">nicht</i> <codeph class="+ topic/ph pr-d/codeph ">Capabilities.version</codeph>, um eine betriebssystemspezifische Funktionalität zu ermitteln, wenn es eine spezifischere Funktionalitätseigenschaft gibt. Die Funktionalität auf dem Betriebssystem basieren zu lassen, wird nicht empfohlen, da dies zu Problemen führt, wenn eine Anwendung nicht alle möglichen Zielbetriebssysteme berücksichtigt. Verwenden Sie stattdessen die Eigenschaft, die der von Ihnen zu testenden Funktionalität entspricht. Weitere Informationen finden Sie in der Beschreibung der Capabilities-Klasse.</p>
	 
	 <p class="- topic/p ">Der Serverstring ist <codeph class="+ topic/ph pr-d/codeph ">V</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> Das folgende Beispiel ist ein einfacher Test, der die aktuelle Bildschirmauflösung und die Version des Betriebssystems anzeigt. Klicken Sie beim Testen dieses Beispiels auf das Textfeld, um die Eigenschaftswerte zu sehen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiOperation id="globalOperation:flash.system:fscommand" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">fscommand</apiName><shortdesc class="- topic/shortdesc ">
 Ermöglicht die Kommunikation zwischen der SWF-Datei und Flash Player oder dem Programm, in dem Flash Player ausgeführt wird, beispielsweise ein Webbrowser.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample><p class="- topic/p ">In the following example, the <code>fscommand()</code> function sets Flash Player to 
 scale the SWF file to the full monitor screen size when the <code>fullscreen_btn</code> button or 
 <code>unfullscreen_btn</code> is released:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">this.fullscreen_btn.onRelease = function() {
   fscommand("fullscreen", true);
 };
 this.unfullscreen_btn.onRelease = function() {
   fscommand("fullscreen", false);
 };
 </pre>
 
 <p class="- topic/p ">The following example uses the <code>fscommand()</code> function applied to a button in Flash to 
 open a JavaScript message box in an HTML page. The message itself is sent to JavaScript as the 
 <code>fscommand</code> parameter. </p>
 
 <p class="- topic/p ">You must add a function to the HTML page that contains the SWF file. This function, 
 <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand</code>, sits in the HTML page and waits for an 
 <code>fscommand()</code> function in Flash. When an <code>fscommand</code> is triggered in Flash 
 (for example, when a user presses the button), the <code>command</code> and <code>args</code> strings 
 are passed to the <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand </code>function. You can use the 
 passed strings in your JavaScript or VBScript code in any way you like. In this example, the function 
 contains a conditional <code>if</code> statement that checks to see if the command string is 
 "<code>messagebox</code>". If it is, a JavaScript alert box (or "message box") opens 
 and displays the contents of the <code>args</code> string.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">function myDocument_DoFSCommand(command, args) {
   if (command == "messagebox") {
      alert(args);
   }
 
 </pre>
 
 <p class="- topic/p ">In the Flash document, add the <code>fscommand()</code> function to a button:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "This is a message box called from within Flash.")
 </pre>
 
 <p class="- topic/p ">You can also use expressions for the <code>fscommand()</code> function and parameters, as in the 
 following example:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "Hello, " + name + ", welcome to our website!")
 </pre>
 
 <p class="- topic/p ">To test the SWF file, select File > Publish Preview > HTML.</p>
 
 <p class="- topic/p "><strong>Note: </strong>If you publish your SWF file using the Flash with FSCommand template in the 
 HTML 
 tab of the Publish Settings dialog box, the <code>myDocument_DoFSCommand</code> function is inserted 
 automatically. The SWF file's <code>NAME</code> and <code>ID</code> attributes will be the filename. 
 For example, for the file myDocument.fla, the attributes would be set to <code>myDocument</code>.</p>
 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Funktion nicht als Antwort auf eine Benutzeraktion wie z. B. ein Maus- oder ein Tastendruckereignis aufgerufen wird.
 
 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein zur beliebigen Verwendung für die Hostanwendung übergebener String oder ein an Flash Player übergebener Befehl.
 
 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">args</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein zur beliebigen Verwendung für die Hostanwendung übergebener String oder ein an Flash Player übergebener Wert.
 
 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ermöglicht die Kommunikation zwischen der SWF-Datei und Flash Player oder dem Programm, in dem Flash Player ausgeführt wird, beispielsweise ein Webbrowser. Mithilfe der Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> können Sie zudem Meldungen an Director, Visual Basic, Visual C++ und andere Programme übergeben, die als Hosts für ActiveX-Steuerelemente verwendet werden können.
 
  
 <p class="- topic/p ">Die Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> ermöglicht einer SWF-Datei die Kommunikation mit einem Skript auf einer Webseite. Der Zugriff auf das Skript wird jedoch auf der Webseite durch die Einstellung <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> gesteuert. (Sie setzen dieses Attribut in dem HTML-Code, in den die SWF-Datei eingebettet ist. In Internet Explorer ist dies das <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph>-Tag, in Netscape Navigator das <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph>-Tag.) </p>
  <ul class="- topic/ul "><li class="- topic/li "> Wenn <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">"sameDomain"</codeph> (Standardeinstellung) gesetzt ist, ist Skripting nur von SWF-Dateien erlaubt, die in der gleichen Domäne wie die Webseite sind. </li><li class="- topic/li "> Wenn <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">"always"</codeph> gesetzt ist, kann die SWF-Datei mit der HTML-Seite kommunizieren, in der sie eingebettet ist, selbst wenn die SWF-Datei aus einer anderen Domäne als die HTML-Seite stammt. </li><li class="- topic/li ">Wenn <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">"never"</codeph> gesetzt ist, kann die SWF-Datei nicht mit HTML-Seiten kommunizieren. Bitte beachten Sie, dass dieser Wert veraltet ist und nicht empfohlen wird und nicht notwendig sein sollte, wenn Sie nur vertrauenswürdige SWF-Dateien von Ihrer eigenen Domäne bereitstellen. Falls Sie nicht vertrauenswürdige SWF-Dateien bereitstellen müssen, empfiehlt es sich, eine separate Unterdomäne zu erstellen und alle nicht vertrauenswürdigen Inhalte dort abzulegen. </li></ul>
 
 <p class="- topic/p ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen. </p>
 
 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph>-Funktion ist nicht erlaubt, wenn die aufrufende SWF-Datei in der lokalen Sandbox des Dateisystems oder in der Netzwerk-Sandbox befindet und die enthaltende HTML-Datei eine nicht vertrauenswürdige Sandbox ist.</p>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 <p class="- topic/p ">Verwendung 1: Um mithilfe von <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> eine Meldung an Flash Player zu senden, müssen Sie vordefinierte Befehle und Parameter verwenden. Die folgende Tabelle enthält die Werte, die Sie in der Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> für die Parameter <codeph class="+ topic/ph pr-d/codeph ">command</codeph> und <codeph class="+ topic/ph pr-d/codeph ">args</codeph> einsetzen können. Diese Werte steuern SWF-Dateien, die in Flash Player wiedergegeben werden, einschließlich Projektoren. (Ein <i class="+ topic/ph hi-d/i ">projector</i> ist eine SWF-Datei, die in einem Format gespeichert wurde, das als eigenständige Anwendung, d. h. ohne Flash Player, ausgeführt werden kann.)</p>
 
              <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Befehl</entry><entry class="- topic/entry ">Parameter (args)</entry><entry class="- topic/entry ">Zweck</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">quit</codeph></entry><entry class="- topic/entry ">Keine</entry><entry class="- topic/entry ">Schließt den Projektor.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fullscreen</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">true</codeph> wird Flash Player in den Vollbildmodus gesetzt. Mit <codeph class="+ topic/ph pr-d/codeph ">false</codeph> wird der Player auf die normale Menüansicht zurückgesetzt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">false</codeph> wird der Player angewiesen, die SWF-Datei immer in ihrer ursprünglichen Größe darzustellen und nicht zu skalieren. Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">true</codeph> wird die SWF-Datei exakt in der vollen Größe des Players dargestellt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">showmenu</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">true</codeph> werden sämtliche Kontextmenüelemente aktiviert. Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">false</codeph> werden alle Elemente des Kontextmenüs mit Ausnahme von „Einstellungen“ und „Flash Player“ ausgeblendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">exec</codeph></entry><entry class="- topic/entry ">Pfad der Anwendung </entry><entry class="- topic/entry ">Führt eine Anwendung im Projektor aus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">trapallkeys</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Bei Angabe von <codeph class="+ topic/ph pr-d/codeph ">true</codeph> werden alle Tastenereignisse, einschließlich Tastaturbefehle, an die Prozedur <codeph class="+ topic/ph pr-d/codeph ">onClipEvent(keyDown/keyUp)</codeph>in Flash Player gesendet. </entry></row></tbody></tgroup></adobetable>
 <p class="- topic/p ">Nicht alle in der Tabelle aufgeführten Befehle sind in allen Anwendungen verfügbar: 
 <ul class="- topic/ul "><li class="- topic/li ">In Web-Playern sind keine dieser Befehle verfügbar.</li><li class="- topic/li ">Alle Befehle sind in eigenständigen Projektoranwendungen verfügbar.</li><li class="- topic/li ">AIR-Anwendungen müssen die flash.desktop.NativeApplication-Klasse für ähnliche Funktionen verwenden, z. B. <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.exit()</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">fscommand("quit")</codeph>.</li><li class="- topic/li ">In Test-Movie-Playern sind nur die Befehle <codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph> und <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> verfügbar.</li></ul>
 </p>
 
 <p class="- topic/p ">Im Befehl <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> können nur die Zeichen A-Z, a-z, 0-9, Punkt (.) und Unterstrich (_) verwendet werden. Der Befehl <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> wird nur im Unterordner „fscommand“ ausgeführt. Mit anderen Worten: Wenn Sie mit dem Befehl <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> eine Anwendung aufrufen, muss sich die Anwendung in einem Unterordner mit der Bezeichnung „fscommand“ befinden. Der Befehl <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> kann nur innerhalb einer Flash-Projektordatei ausgeführt werden.</p>
 
 <p class="- topic/p ">Verwendung 2: Wenn Sie mit <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> eine Meldung an eine Skriptsprache in einem Webbrowser (z. B. JavaScript) senden, können Sie zwei beliebige Parameter in den Parametern <codeph class="+ topic/ph pr-d/codeph ">command</codeph> und <codeph class="+ topic/ph pr-d/codeph ">args</codeph> übergeben. Bei diesen Parametern kann es sich um Strings oder Ausdrücke in einer JavaScript-Funktion handeln, mit der die Funktion <i class="+ topic/ph hi-d/i ">fscommand()</i> <codeph class="+ topic/ph pr-d/codeph ">abgefangen</codeph> wird. </p>
 
 <p class="- topic/p ">In einem Webbrowser ruft <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> die JavaScript-Funktion <codeph class="+ topic/ph pr-d/codeph ">moviename_DoFScommand</codeph> auf der Webseite mit der SWF-Datei auf. Dabei ist <codeph class="+ topic/ph pr-d/codeph ">moviename</codeph> der Name des Flash-Objekts, das mit dem Attribut <codeph class="+ topic/ph pr-d/codeph ">NAME</codeph> des Tags <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> bzw. mit der Eigenschaft „ID“ des Tags <codeph class="+ topic/ph pr-d/codeph ">OBJECT</codeph> zugewiesen wurde. Wenn Sie der SWF-Datei den Namen „myMovie“ zuweisen, wird die JavaScript-Funktion <codeph class="+ topic/ph pr-d/codeph ">myMovie_DoFScommand</codeph> aufgerufen. </p>
 
 <p class="- topic/p ">Setzen Sie in der Webseite, die die SWF-Datei enthält, das <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph>-Attribut, um es der SWF-Datei wie oben beschrieben zu erlauben oder zu verbieten, auf die Webseite zuzugreifen. (Sie setzen dieses Attribut in dem HTML-Code, in den die SWF-Datei eingebettet ist. In Internet Explorer ist dies das <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph>-Tag, in Netscape Navigator das <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph>-Tag.) </p>
 
 <p class="- topic/p ">Wenn Flash Player 10 oder eine spätere Version im Browser ausgeführt wird, kann diese Methode eventuell nicht programmgesteuert verwendet werden, um ein Popupfenster zu öffnen. Verschiedene Browser (und Browserkonfigurationen) blocken eventuell Popupfenster. Es kann daher nicht sichergestellt werden, dass Popupfenster eingeblendet werden. Den größten Erfolg verspricht diese Methode zum Öffnen eines Popupfensters, und zwar aufgrund von Code, der als direktes Ergebnis einer Benutzeraktion ausgeführt wird, z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis.</p>
 
 <p class="- topic/p ">Verwendung 3: Über die Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> können Meldungen an Director (Macromedia Director von Adobe) gesendet werden. Diese Meldungen werden von Lingo (Director-Skriptsprache) als Strings, Ereignisse oder ausführbarer Lingo-Code interpretiert. Wenn es sich bei einer Meldung um einen String oder ein Ereignis handelt, müssen Sie entsprechenden Lingo-Code erstellen, der die Meldungen der Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> empfängt und in Director eine Aktion aufruft. Weitere Informationen finden Sie im Director Support Center unter <xref href="http://www.adobe.com/support/director/" scope="external" class="- topic/xref ">www.adobe.com/support/director/</xref>.</p>
 
 <p class="- topic/p ">Verwendung 4: In VisualBasic, Visual C++ und anderen Programmen, in denen ActiveX-Steuerelemente ausgeführt werden können, sendet die Funktion <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> ein VB-Ereignis mit zwei Strings, die in der Programmiersprache der Umgebung verarbeitet werden können. Weitere Informationen erhalten Sie, indem Sie das Flash Support Center unter <xref href="http://www.adobe.com/support/flash/" scope="external" class="- topic/xref ">www.adobe.com/support/flash/</xref> nach dem Schlüsselwort „Flash-Methode“ durchsuchen.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die ExternalInterface-Klasse stellt bessere Funktionen für die Kommunikation zwischen JavaScript und ActionScript (Verwendung 2) und zwischen ActionScript und VisualBasic, Visual C++ oder anderen Programmen bereit, die ActiveX-Steuerelemente (Verwendung 4) hosten können. Verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> weiterhin, um Meldungen an Flash Player (Verwendung 1) und Director (Verwendung 3) zu senden.</p>
 
 </apiDesc><example conref="examples\FSCommandExample.as" class="- topic/example "> Das folgende Beispiel zeigt, wie Sie Flash Player mit <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> veranlassen können, in den Vollbildmodus zu wechseln und keine Skalierung zu gestatten. Anschließend wird der Bühne mithilfe von <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> ein orangefarbenes Feld hinzugefügt. Zu <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> wird ein <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis-Listener mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> hinzugefügt, der auf <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignisse reagiert, indem Flash Player durch einen weiteren Aufruf von <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> veranlasst wird, die Ausführung zu beenden.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Dieses Beispiel sollte in einem eigenständigen Flash Player und nicht in einem Webbrowser ausgeführt werden.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.system.fscommand;
    import flash.events.MouseEvent;

    public class FSCommandExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function FSCommandExample() {
            fscommand("fullscreen", "true");
            fscommand("allowscale", "false");
            draw();
        }

        private function clickHandler(event:MouseEvent):void {
            fscommand("quit");
            trace("clickHandler");
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;
            addEventListener(MouseEvent.CLICK, clickHandler);

            var label:TextField = new TextField();
            label.text = "quit";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            addChild(child);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></apiOperation><apiClassifier languages="" id="flash.system:IME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IME</apiName><shortdesc class="- topic/shortdesc ">
 Mit der IME-Klasse können Sie den Eingabemethoden-Editor (Input Method Editor, IME) des Betriebssystems mithilfe einer auf einem Client-Computer ausgeführten Flash-Laufzeitanwendung direkt bearbeiten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Hiermit können Sie den Eingabemethoden-Editor (IME) des Betriebssystems direkt bearbeiten.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der IME-Klasse können Sie den Eingabemethoden-Editor (Input Method Editor, IME) des Betriebssystems mithilfe einer auf einem Client-Computer ausgeführten Flash-Laufzeitanwendung direkt bearbeiten. Dabei können Sie bestimmen, ob ein IME installiert ist, ob dieser aktiviert oder deaktiviert ist, und um welchen IME es sich handelt. Sie können den IME in der Anwendung aktivieren oder deaktivieren und je nach Betriebssystem weitere eingeschränkte Funktionen ausführen.
 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird unter Desktopbetriebssystemen unterstützt, aber nicht auf allen mobilen Geräten. Bei Geräten mit AIR für TV wird sie ebenfalls nicht unterstützt. Mit der <codeph class="+ topic/ph pr-d/codeph ">IME.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">Benutzer können mithilfe von Eingabemethoden-Editoren ASCII-fremde Textzeichen in Multibyte-Sprachen wie Chinesisch, Japanisch oder Koreanisch eingeben. Weitere Informationen zur Verwendung von Eingabemethoden-Editoren finden Sie in der Dokumentation des Betriebssystems, für das Sie Anwendungen entwickeln. Weitere Ressourcen finden Sie auf den folgenden Websites:
 <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.microsoft.com/globaldev/default.mspx" scope="external" class="- topic/xref ">http://www.microsoft.com/globaldev/default.mspx</xref></li><li class="- topic/li "><xref href="http://developer.apple.com/documentation/" scope="external" class="- topic/xref ">http://developer.apple.com/documentation/</xref></li><li class="- topic/li "><xref href="http://java.sun.com" scope="external" class="- topic/xref ">http://java.sun.com</xref></li></ul>
  </p>
 
 <p class="- topic/p ">Wenn ein IME auf dem Computer des Benutzers deaktiviert ist, treten mit Ausnahme von <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph> beim Aufrufen von IME-Methoden oder IME-Eigenschaften Fehler auf. Nach dem Aktivieren eines IME werden ActionScript-Aufrufe von IME-Methoden und IME-Eigenschaften wie erwartet durchgeführt. Wenn Sie beispielsweise einen IME für Japanisch verwenden, muss dieser aktiviert werden, bevor IME-Methoden oder IME-Eigenschaften aufgerufen werden können.</p>
 
 <p class="- topic/p ">In der folgenden Tabelle sind die Plattformen aufgeführt, auf denen diese Klasse unterstützt wird:</p>
 
 
 <adobetable class="innertable"><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Funktion</entry><entry class="- topic/entry ">Windows</entry><entry class="- topic/entry ">Mac OS X</entry><entry class="- topic/entry ">Linux</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Feststellen, ob ein IME installiert ist <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph></entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry></row><row class="- topic/row "><entry class="- topic/entry ">IME aktivieren/deaktivieren <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry></row><row class="- topic/row "><entry class="- topic/entry ">Feststellen, ob der IME aktiviert bzw. deaktiviert ist <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja</entry></row><row class="- topic/row "><entry class="- topic/entry ">Abrufen oder Festlegen des IME-Konvertierungsmodus <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph></entry><entry class="- topic/entry ">Ja</entry><entry class="- topic/entry ">Ja ~~~~</entry><entry class="- topic/entry ">Nein</entry></row><row class="- topic/row "><entry class="- topic/entry ">Zu konvertierenden String an IME senden <codeph class="+ topic/ph pr-d/codeph ">IME.setCompositionString()</codeph></entry><entry class="- topic/entry ">Ja ~~</entry><entry class="- topic/entry ">Nein</entry><entry class="- topic/entry ">Nein</entry></row><row class="- topic/row "><entry class="- topic/entry ">Den Originalstring vor der Konvertierung vom IME abrufen <codeph class="+ topic/ph pr-d/codeph ">System.ime.addEventListener()</codeph></entry><entry class="- topic/entry ">Ja ~~</entry><entry class="- topic/entry ">Nein</entry><entry class="- topic/entry ">Nein</entry></row><row class="- topic/row "><entry class="- topic/entry ">Anforderung für die Konvertierung an IME senden <codeph class="+ topic/ph pr-d/codeph ">IME.doConversion()</codeph></entry><entry class="- topic/entry ">Ja ~~</entry><entry class="- topic/entry ">Nein</entry><entry class="- topic/entry ">Nein</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">~~ Diese Vorgänge werden nicht in allen Windows-IMEs unterstützt. Der einzige IME, der alle Vorgänge unterstützt, ist der IME für Japanisch.</p>
 
 <p class="- topic/p ">~~~~ Auf Macintosh-Systemen werden diese Methoden nur im IME für Japanisch unterstützt, bei IMEs von Drittanbietern werden sie dagegen nicht unterstützt.</p>
 <p class="- topic/p ">Die ActionScript 3.0-Version dieser Klasse unterstützt nicht Macintosh Classic.</p>
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.system:IME_flash.events.IMEEvent.IME_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Benutzer die Eingabe in einem Eingabemethoden-Editor (IME) abgeschlossen hat und der Lesestring verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IMEEvent.IME_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IMEEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Benutzer die Eingabe in einem Eingabemethoden-Editor (IME) abgeschlossen hat und der Lesestring verfügbar ist. IMEs werden in der Regel zur Eingabe von Text für Sprachen mit Ideogrammen anstelle von Buchstaben verwendet, beispielsweise Japanisch, Chinesisch und Koreanisch.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.system:IME:compositionAbandoned" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionAbandoned</apiName><shortdesc class="- topic/shortdesc ">
	  Veranlasst die Laufzeitumgebung, alle Satzvorgänge („Composition“), die zurzeit ausgeführt werden, abzubrechen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Veranlasst die Laufzeitumgebung, alle Satzvorgänge („Composition“), die zurzeit ausgeführt werden, abzubrechen. Rufen Sie diese Methode auf, wenn der Benutzer auf eine Stelle außerhalb des Satzbereichs klickt oder wenn das interaktive Objekt, das en Fokus hat, gelöscht oder zurückgesetzt wird. Die Laufzeitumgebung bestätigt den Satz, indem sie im Client <codeph class="+ topic/ph pr-d/codeph ">confirmComposition()</codeph> aufruft. Die Laufzeitumgebung setzt auch den IME zurück, um das Betriebssystem darüber zu informieren, dass der Satz abgebrochen wurde. 
	   
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:compositionSelectionChanged" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionSelectionChanged</apiName><shortdesc class="- topic/shortdesc ">
	  Rufen Sie diese Methode auf, wenn die Auswahl innerhalb des Satzes entweder interaktiv oder programmgesteuert aktualisiert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">start</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt in Bytes den Offset zum Anfang der Auswahl fest.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">end</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt in Bytes den Offset zum Ende der Auswahl fest.
	   
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Rufen Sie diese Methode auf, wenn die Auswahl innerhalb des Satzes entweder interaktiv oder programmgesteuert aktualisiert wurde.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:doConversion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">doConversion</apiName><shortdesc class="- topic/shortdesc ">
	 Weist den IME an, den ersten Kandidaten für den aktuellen Eingabestring auszuwählen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufruf war nicht erfolgreich.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Weist den IME an, den ersten Kandidaten für den aktuellen Eingabestring auszuwählen.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:setCompositionString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setCompositionString</apiName><shortdesc class="- topic/shortdesc ">
	 Legt den IME-Eingabestring fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Need some examples of valid values for the param composition.
	 </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufruf ist nicht erfolgreich.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">composition</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der an den IME zu sendende String.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Legt den IME-Eingabestring fest. Wenn dieser String festgelegt ist, kann der Benutzer die IME-Kandidaten auswählen, bevor das Ergebnis an das Textfeld mit dem aktuellen Eingabefokus übergeben wird.
	 <p class="- topic/p ">Wenn kein Textfeld mit Fokus vorhanden ist, schlägt die Methode fehl, und ein Fehler wird ausgegeben.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:IME:conversionMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">conversionMode</apiName><shortdesc class="- topic/shortdesc ">
	 Der Konvertierungsmodus des aktuellen IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Festlegung wurde nicht erfolgreich ausgeführt.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Konvertierungsmodus des aktuellen IME. Mögliche Werte sind folgende IME-Modusstringkonstanten, die den Konvertierungsmodus angeben:
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">CHINESE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_HIRAGANA</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">KOREAN</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">UNKNOWN</codeph> (schreibgeschützter Wert, der nicht festgelegt werden kann)</li></ul>
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/CHINESE" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.CHINESE</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_HIRAGANA" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_HIRAGANA</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/KOREAN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.KOREAN</linktext></link><link href="flash.system.xml#IMEConversionMode/UNKNOWN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.UNKNOWN</linktext></link></related-links></apiValue><apiValue id="flash.system:IME:enabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">enabled</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob der System-IME aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Festlegung wurde nicht erfolgreich ausgeführt.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob der System-IME aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Ein aktivierter IME führt Multibyte-Eingaben durch, ein deaktivierter IME führt alphanumerische Eingaben durch. 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:IME:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Die isSupported-Eigenschaft hat den Wert „true“, wenn die IME-Klasse auf der aktuellen Plattform verfügbar ist, andernfalls hat sie den Wert „false“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph>-Eigenschaft hat den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die IME-Klasse auf der aktuellen Plattform verfügbar ist, andernfalls hat sie den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:System" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">System</apiName><shortdesc class="- topic/shortdesc ">
 Die System-Klasse enthält Eigenschaften, die mit lokalen Einstellungen und Vorgängen zusammenhängen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die System-Klasse enthält Eigenschaften, die mit lokalen Einstellungen und Vorgängen zusammenhängen. Dazu gehören <ph class="- topic/ph ">Einstellungen für Kameras und Mikrofone, Operationen mit freigegebenen Objekten und </ph> die Verwendung der Zwischenablage.
 
 <p class="- topic/p ">Weitere Eigenschaften und Methoden befinden sich in den folgenden anderen Klassen des flash.system-Pakets: in der Capabilities-Klasse<ph class="- topic/ph ">, der IME-Klasse </ph> und der Security-Klasse.</p>
 
 <p class="- topic/p ">Diese Klasse enthält lediglich statische Methoden und Eigenschaften. Sie können keine neuen Instanzen der System-Klasse erstellen.</p>
 
 </apiDesc><example conref="examples\SystemExample.as" class="- topic/example "> Dieses Beispiel veranschaulicht, wie Sie Angaben zum Gesamtarbeitsspeicher des Systems in die Systemzwischenablage mit einem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph> in einem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">System.setClipboard()</codeph>-Methode kopieren.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.system.System;

    public class SystemExample extends Sprite {
        public function SystemExample() {
            System.setClipboard("System.totalMemory: " + System.totalMemory);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security</linktext></link><link href="flash.events.xml#IMEEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent</linktext></link></related-links><apiOperation id="flash.system:System:disposeXML" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">disposeXML</apiName><shortdesc class="- topic/shortdesc ">
	 Macht das angegebene XML-Objekt sofort für die Speicherbereinigung verfügbar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">node</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">XML</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">XML-Referenz, die für die Speicherbereinigung verfügbar gemacht werden soll.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Macht das angegebene XML-Objekt sofort für die Speicherbereinigung verfügbar. Diese Methode entfernt über- und untergeordnete Verbindungen zwischen allen Knoten für den angegebenen XML-Knoten.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc "> 
     Schließt Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.exit(), exit()             
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">code</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert, der an das Betriebssystem übergeben wird. Wenn der Prozess normal beendet wurde, ist dieser Wert normalerweise 0.
	 
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Schließt Flash Player.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Nur für die Debugger-Version des eigenständigen Flash Player.</i></p> 
	 
     <p class="- topic/p ">AIR-Anwendungen sollten die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.exit()</codeph>-Methode aufrufen, um die Anwendung zu beenden.</p> 
	 
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/exit()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exit()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:gc" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">gc</apiName><shortdesc class="- topic/shortdesc ">
     Erzwingt den Garbagekollektor-Prozess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erzwingt den Garbagekollektor-Prozess.
	 
     <p class="- topic/p "><ph class="- topic/ph "><i class="+ topic/ph hi-d/i ">Nur für die Debugger-Version von Flash Player und AIR-Anwendungen.</i></ph> In AIR-Anwendungen ist die <codeph class="+ topic/ph pr-d/codeph ">System.gc()</codeph>-Methode nur in Inhalt aktiviert, der im AIR Debug Launcher (ADL) ausgeführt wird, bzw. in installierten Anwendungen in Inhalt in der Sicherheitssandbox der Anwendung.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:pause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">pause</apiName><shortdesc class="- topic/shortdesc "> 
     Hält den Flash Player oder den AIR Debug Launcher (ADL) an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.pause(), pause()   
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Hält <ph class="- topic/ph ">den Flash Player oder </ph>den AIR Debug Launcher (ADL) an. Nach dem Aufrufen dieser Methode wird in der Anwendung nichts fortgesetzt abgesehen von der Weitergabe von Socket-Ereignissen.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Nur für die Debugger-Version des Flash Player oder den AIR Debug Launcher (ADL).</i></p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:resume" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resume</apiName><shortdesc class="- topic/shortdesc "> 
     Nimmt die Anwendung nach dem Aufrufen von System.pause() wieder auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.resume(), resume()        
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Nimmt die Anwendung nach dem Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">System.pause()</codeph> wieder auf.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Nur für die Debugger-Version des Flash Player oder den AIR Debug Launcher (ADL).</i></p>  
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:setClipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setClipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Ersetzt den Inhalt der Zwischenablage durch den angegebenen Textstring.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.setClipboard, setClipboard
	  
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String mit Klartextzeichen, der in der Zwischenablage des Systems abgelegt wird und den aktuellen Inhalt (sofern vorhanden) ersetzt.
	 
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ersetzt den Inhalt der Zwischenablage durch den angegebenen Textstring.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ersetzt den Inhalt der Zwischenablage durch den angegebenen Textstring. Diese Methode funktioniert von jedem Sicherheitskontext, wenn sie als Ergebnis des Benutzerereignisses (z. B. eine Tastatur- Eingabegerät-Ereignisprozedur) aufgerufen wird.
	 
	 <p class="- topic/p ">Diese Methode wird für SWF-Inhalt bereitgestellt, der in Flash Player 9 ausgeführt wird. Sie erlaubt nur das Hinzufügen von Stringinhalt zur Zwischenablage.</p> 
	 
	 <p class="- topic/p ">Flash Player 10-Inhalt und Inhalt in der Sicherheitssandbox der Anwendung in einer AIR-Anwendung können die <codeph class="+ topic/ph pr-d/codeph ">Clipboard.setData()</codeph>-Methode aufrufen.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links></apiOperation><apiValue id="flash.system:System:freeMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">freeMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Der Speicherbetrag (in Byte), der Adobe&amp;#xAE; Flash&amp;#xAE; Player oder Adobe&amp;#xAE; AIR&amp;#xAE; zugewiesen wurde und der nicht genutzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Speicherbetrag (in Byte), der <ph class="- topic/ph ">Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player oder</ph> Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> zugewiesen wurde und der nicht genutzt wird. Dieser nicht genutzte Teil des zugewiesenen Speichers (<codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>) ändert sich, wenn Garbage Collection (Speicherbereinigung) stattfindet. Verwenden Sie diese Eigenschaft, um die Garbage Collection zu überwachen.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:ime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ime</apiName><shortdesc class="- topic/shortdesc ">
	 Der derzeit installierte System-IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:IME</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der derzeit installierte System-IME. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> für diese Instanz auf, um imeComposition-Ereignisse zu registrieren.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode" class="- topic/link "><linktext class="- topic/linktext ">IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:System:privateMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">privateMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Der gesamte Speicher (in Byte), der von einer Anwendung genutzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der gesamte Speicher (in Byte), der von einer Anwendung genutzt wird. Dies ist der Betrag des residenten privaten Speichers für den gesamten Prozess.
	 
	 <p class="- topic/p ">AIR-Entwickler sollten diese Eigenschaft verwenden, um den gesamten Speicherverbrauch einer Anwendung zu ermitteln.</p>
	 
	 <p class="- topic/p ">Bei Flash Player gehört dazu auch der Speicher, der von der Containeranwendung, zum Beispiel vom Browser, verwendet wird.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemoryNumber:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemoryNumber</apiName><shortdesc class="- topic/shortdesc ">
	Die Größe des zurzeit genutzten Speichers (in Byte), der direkt von Flash Player oder AIR zugewiesen wurde. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Größe des zurzeit genutzten Speichers (in Byte), der direkt von <ph class="- topic/ph ">Flash Player oder </ph>AIR zugewiesen wurde.   
	
	<p class="- topic/p ">Diese Eigenschaft wird als Typ „Number“ ausgedrückt, wodurch höhere Werte möglich sind als mit der <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>-Eigenschaft, die den Typ „int“ aufweist.</p>
	
	<p class="- topic/p ">Diese Eigenschaft gibt nicht den <i class="+ topic/ph hi-d/i ">gesamten</i> Speicher zurück, der von einer Adobe AIR-Anwendung <ph class="- topic/ph ">oder von der Anwendung, die den Flash Player-Inhalt enthält (zum Beispiel ein Browser)</ph> genutzt wird. Durch <ph class="- topic/ph ">den Browser oder </ph>das Betriebssystem kann zusätzlicher Speicher belegt werden. Die <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph>-Eigenschaft gibt den <i class="+ topic/ph hi-d/i ">gesamten</i> Speicher an, der von einer Anwendung genutzt wird.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemory</apiName><shortdesc class="- topic/shortdesc ">
	Die Größe des zurzeit genutzten Speichers (in Byte), der direkt von Flash Player oder AIR zugewiesen wurde. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Größe des zurzeit genutzten Speichers (in Byte), der direkt von <ph class="- topic/ph ">Flash Player oder </ph>AIR zugewiesen wurde.   
	
	<p class="- topic/p ">Diese Eigenschaft gibt nicht den <i class="+ topic/ph hi-d/i ">gesamten</i> Speicher zurück, der von einer Adobe AIR-Anwendung <ph class="- topic/ph ">oder von der Anwendung, die den Flash Player-Inhalt enthält (zum Beispiel ein Browser)</ph> genutzt wird. Durch <ph class="- topic/ph ">den Browser oder </ph>das Betriebssystem kann zusätzlicher Speicher belegt werden. Die <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph>-Eigenschaft gibt den <i class="+ topic/ph hi-d/i ">gesamten</i> Speicher an, der von einer Anwendung genutzt wird.</p>
	
	<p class="- topic/p ">Wenn der Wert des zugewiesenen Speichers größer als der Höchstwert für ein uint-Objekt (<codeph class="+ topic/ph pr-d/codeph ">uint.MAX_VALUE</codeph>, oder 4.294.967.295) ist, wird diese Eigenschaft auf 0 gesetzt. Die <codeph class="+ topic/ph pr-d/codeph ">System.totalMemoryNumber</codeph>-Eigenschaft lässt größere Werte zu.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:useCodePage:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCodePage</apiName><shortdesc class="- topic/shortdesc ">
	 Ein boolescher Wert, der bestimmt, welche Codepage in Flash Player zur Erkennung externer Textdateien verwendet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.useCodepage, useCodepage, Unicode, code page
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein boolescher Wert, der bestimmt, welche Codepage in Flash Player zur Erkennung externer Textdateien verwendet werden soll. Wenn die Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat, werden externe Textdateien als Unicode interpretiert. (Diese Dateien müssen beim Speichern als Unicode kodiert werden.) Wenn die Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, werden externe Textdateien mit der herkömmlichen Codepage des Betriebssystems interpretiert, unter dem die Anwendung ausgeführt wird. Der Standardwert <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 <p class="- topic/p ">Text, den Sie als eine externe Datei laden (mit <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, der URLLoader-Klasse oder URLStream), muss als Unicode gespeichert worden sein, damit die Anwendung ihn als Unicode erkennt. Wenn Sie externe Dateien als Unicode kodieren möchten, müssen Sie die Dateien in einer Anwendung speichern, die Unicode unterstützt, beispielsweise Notepad unter Windows.</p>
	 
	 <p class="- topic/p ">Wenn Sie externe Textdateien laden, die nicht als Unicode kodiert sind, setzen Sie <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Fügen Sie Folgendes als erste Codezeile der Datei, die die Daten lädt, hinzu (für Flash Professional, fügen Sie es dem ersten Bild hinzu):</p>
	 
	 <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">System.useCodePage = true;</codeph></pre>
	 
	 <p class="- topic/p ">Wenn dieser Code vorhanden ist, werden externe Textdateien von der Anwendung mit der Standard-Codepage des Betriebssystems interpretiert. Unter einem deutschen Windows-Betriebssystem ist dies zum Beispiel im Allgemeinen CP1252, unter einem japanischen Betriebssystem Shift-JIS.</p> 
	 
	 <p class="- topic/p "><ph class="- topic/ph ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, wird Text in Flash Player 6 und aktuelleren Versionen wie in Flash Player 5 behandelt. (In Flash Player 5 wird Text so behandelt, als ob die herkömmliche Codepage des Betriebssystems verwendet wird, unter dem Flash Player ausgeführt wird.)</ph></p>
	 
	 <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, müssen Sie darauf achten, dass die Standard-Codepage des Betriebssystems, unter dem die Anwendung ausgeführt wird, die in der externen Textdatei verwendeten Zeichen enthält, damit der Text angezeigt werden kann. Wenn Sie beispielsweise eine externe Textdatei mit chinesischen Zeichen laden, werden die Zeichen unter einem System mit der Codepage CP1252 nicht angezeigt, da diese Codepage keine chinesischen Zeichen enthält.</p>
	 
	 <p class="- topic/p ">Sie können sicherstellen, dass die externen Textdateien in Ihrer Anwendung auf allen Plattformen angezeigt werden, indem Sie alle externen Textdateien als Unicode kodieren und <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt lassen. Somit wird der Text von der Anwendung (<ph class="- topic/ph ">Flash Player 6 und höher oder AIR)</ph> als Unicode erkannt.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityDomain</apiName><shortdesc class="- topic/shortdesc ">
	Die SecurityDomain-Klasse gibt die aktuelle Sicherheitssandbox an, die auch als Sicherheitsdomäne bezeichnet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die SecurityDomain-Klasse gibt die aktuelle Sicherheitssandbox an, die auch als Sicherheitsdomäne bezeichnet wird. Durch Übergeben einer Instanz dieser Klasse für <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> können Sie festlegen, dass geladene Medien in einer bestimmten Sandbox platziert werden.
	</apiDesc></apiClassifierDetail><apiValue id="flash.system:SecurityDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
		Ruft die aktuelle Sicherheitsdomäne ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Ruft die aktuelle Sicherheitsdomäne ab. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
	 
	 Die SystemUpdater-Klasse ermöglicht Ihnen die Aktualisierung der Flash Player-Module, zum Beispiel DRM-Modul für Flash Access sowie von Flash Player selbst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
	 Die SystemUpdater-Klasse ermöglicht Ihnen die Aktualisierung der Flash Player-Module, zum Beispiel DRM-Modul für Flash Access sowie von Flash Player selbst. Verfügbare Module sind in der SystemUpdaterType-Klasse aufgeführt.
	 
	 <p class="- topic/p ">Flash Player identifiziert das Erfordernis eines Flash-Access-Modulupdates, indem ein NetStatusEvent-Ereignis abgesetzt wird. Das Ereignis hat eine <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft mit dem Wert <codeph class="+ topic/ph pr-d/codeph ">"DRM.UpdateNeeded"</codeph>. Für Updates des Flash Access-Moduls ist keine Benutzerzustimmung erforderlich. Warten Sie auf das Ereignis und initiieren Sie das Update, indem Sie <codeph class="+ topic/ph pr-d/codeph ">update("DRM")</codeph> aufrufen.</p>
	 
	 <p class="- topic/p ">Flash Player identifiziert das Erfordernis eines Player-Updates, indem ein StatusEvent-Ereignis abgesetzt wird, mit verschiedenen möglichen Werten für die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft (siehe das <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Ereignis). Für Updates des Players ist das Einverständnis des Benutzers erforderlich. Warten Sie auf das Ereignis und geben Sie dem Benutzer die Möglichkeit, das Update auszuführen. Der Benutzer muss dem Update zustimmen und es, zum Beispiel durch Klicken auf eine Schaltfläche, einleiten. Sie können das Update des Players dann direkt in ActionScript initiieren, indem Sie <codeph class="+ topic/ph pr-d/codeph ">update("SYSTEM")</codeph> aufrufen.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die SystemUpdater-API wird auf allen Desktopplattformen unterstützt.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
	 Wird abgesetzt, wenn ein Update des Players vom Benutzer abgebrochen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird abgesetzt, wenn ein Update des Players vom Benutzer abgebrochen wird. Dieses Ereignis wird nur dann abgesetzt, wenn ein Update des Typs <codeph class="+ topic/ph pr-d/codeph ">SystemUpdaterType.SYSTEM</codeph> angefordert wird und der Benutzer das Update abbricht.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
	 Wird abgesetzt, wenn das Update abgeschlossen ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird abgesetzt, wenn das Update abgeschlossen ist.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
	 Wird beim Auftreten eines Sicherheitsfehlers abgesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird beim Auftreten eines Sicherheitsfehlers abgesetzt. Ein Sicherheitsfehler, der diese Ereignis auslösen kann, tritt zum Beispiel auf, wenn der Player versucht, ein Update auszuführen, dies von der Sicherheitsrichtlinie jedoch nicht zugelassen wird.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
	 Wird beim Auftreten eines E/A-Fehlers abgesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird beim Auftreten eines E/A-Fehlers abgesetzt. Ein Fehler, der dieses Ereignis auslösen kann, ist zum Beispiel eine unterbrochene Internetverbindung.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
	 Wird abgesetzt, um den Fortschritt des Downloads anzuzeigen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird abgesetzt, um den Fortschritt des Downloads anzuzeigen. Dieses Ereignis entspricht dem <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignis in den Loader- und URLLoader-Klassen.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
	  Wird abgesetzt, wenn der Download fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Wird abgesetzt, wenn der Download fehlschlägt. Ein Update kann aus einem der folgenden Gründe fehlschlagen:
	  <p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">Der Aufrufer wird auf einer nicht unterstützten Plattform oder Architektur ausgeführt. In diesem Fall hat die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft den Wert „DRM.UpdateFailedNotSupported“ und die <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft hat den Wert „error“.</li><li class="- topic/li ">Das angeforderte Updatepaket wurde auf dem Server nicht gefunden. In diesem Fall hat die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft den Wert „DRM.UpdateFailedNotCurrentlyAvailable“ und die <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft hat den Wert „error“.</li><li class="- topic/li ">Das Flash Access-Modul ist nicht installiert. Dieser Fehler ähnelt dem „DRM.UpdateNeeded“-Code, der von NetStatusEvent abgesetzt wird. In diesem Fall muss jedoch zunächst eine neuere Version von Flash Player heruntergeladen werden. In diesem Fall hat die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft den Wert „DRM.UpdateNeededButIncompatible“ und die <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft hat den Wert „error“. Um ein Update von Flash Player auszuführen, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update(SystemUpdaterType.SYSTEM)</codeph> auf.</li><li class="- topic/li ">Das neue DRM-Modul konnte nicht heruntergeladen werden. In diesem Fall hat die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft den Wert „DRM.UpdateFailed“ und die <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft hat den Wert „error“.</li></ul></p>
	  
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
	 Wird abgesetzt, wenn ein Update beginnt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird abgesetzt, wenn ein Update beginnt. Das Update ist abgeschlossen, wenn ein „complete“-Ereignis gesendet wird, oder wenn ein IOErrorEvent, SecurityErrorEvent oder StatusEvent gesendet wird.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.system:SystemUpdater:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
		 Konstruktor.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Konstruktor.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:SystemUpdater:cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
		Bricht ein aktives Update ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Bricht ein aktives Update ab.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:SystemUpdater:update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><shortdesc class="- topic/shortdesc ">
		Beginnt mit einem Update eines gegebenen Typs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Beginnt mit einem Update eines gegebenen Typs. Updatetypen sind in der SystemUpdaterType-Klasse definierte Stringkonstanten. In allen Browsern ist jeweils nur ein Update gleichzeitig zulässig. 
		<p class="- topic/p ">Warten Sie nach Beginn des Updates auf die in dieser Klasse definierten Ereignisse. Die folgenden Ereignisse geben das Ende eines Updates an und lassen ein neues Update bzw. einen neuen Updateversuch zu, zum Beispiel durch Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Funktion:</p>
		<p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">complete</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">cancel</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></li></ul></p>
		
		</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links></apiOperation></apiClassifier></apiPackage>