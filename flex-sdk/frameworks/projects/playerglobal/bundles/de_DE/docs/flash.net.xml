<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.net" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.net</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.net:XMLSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">XMLSocket</apiName><shortdesc class="- topic/shortdesc ">
 
 Die XMLSocket-Klasse implementiert Client-Sockets, die der Flash Player- oder AIR-Anwendung die Kommunikation mit einem Server ermöglichen, der durch eine IP-Adresse oder einen Domänennamen identifiziert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">XMLsocket, XMLsocket object, built-in class
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Die XMLSocket-Klasse implementiert Client-Sockets, die der <ph class="- topic/ph ">Flash Player- oder </ph>AIR-Anwendung die Kommunikation mit einem Server ermöglichen, der durch eine IP-Adresse oder einen Domänennamen identifiziert wird. Die XMLSocket-Klasse ist für Client-Server-Anwendungen nützlich, die geringe Latenzzeiten erfordern, beispielsweise Echtzeit-Chat-Systeme. Eine herkömmliche HTTP-Chat-Lösung fragt den Server in kurzen Abständen ab und lädt neue Nachrichten mithilfe einer HTTP-Anforderung. Im Gegensatz dazu unterhält eine XMLSocket-basierte Chat-Lösung eine offene Verbindung zum Server, damit dieser neu eingegangene Nachrichten sofort und ohne Anforderung vom Client senden kann. Um die XMLSocket-Klasse verwenden zu können, muss auf dem Servercomputer ein Daemon ausgeführt werden, der das von der XMLSocket-Klasse verwendete Protokoll verarbeiten kann. Das Protokoll wird in der folgenden Liste beschrieben: 
 <ul class="- topic/ul "><li class="- topic/li ">XML-Nachrichten werden über eine TCP/IP-Streaming-Socket-Verbindung im Vollduplexmodus gesendet.</li><li class="- topic/li ">Jede XML-Nachricht ist ein vollständiges XML-Dokument, das mit einem Null-Byte (0) abgeschlossen wird.</li><li class="- topic/li ">Es kann eine unbegrenzte Anzahl von XML-Nachrichten über eine einzelne XMLSocket-Verbindung gesendet und empfangen werden.</li></ul>
 
 <p class="- topic/p ">Die Einrichtung eines Servers zur Kommunikation mit einem XMLSocket-Objekt ist oft recht anspruchsvoll. Wenn Ihre Anwendung keine Interaktionen in Echtzeit erfordert, verwenden Sie die URLLoader-Klasse anstelle der XMLSocket-Klasse. </p>
 
 <p class="- topic/p ">Um die Methoden der XMLSocket-Klasse zu verwenden, verwenden Sie zuerst den Konstruktor <codeph class="+ topic/ph pr-d/codeph ">new XMLSocket</codeph>, um ein XMlSocket-Objekt zu erstellen.</p>
 
 <p class="- topic/p ">SWF-Dateien in der lokalen Dateisystem-Sandbox dürfen keine Sockets verwenden.</p>
      
  <p class="- topic/p "> Die <i class="+ topic/ph hi-d/i ">Socket-Richtliniendateien</i> auf dem Ziel-Host legen sowohl den Host fest, von dem SWF-Dateien Socket-Verbindungen herstellen können, als auch die Ports, für welche die Verbindungen erstellt werden. Die Sicherheitsanforderungen für Socket-Richtliniendateien wurden in den letzten Versionen von Flash Player verschärft. Adobe empfiehlt für alle Versionen von Flash Player die Verwendung von Socket-Richtliniendateien. In einigen Fällen ist eine Socket-Richtliniendatei unbedingt erforderlich. Deshalb sollten Sie beim Verwenden von XML-Socket-Objekten sicherstellen, dass der Ziel-Host ggf. eine Socket-Richtliniendatei bereitstellt. </p>
 
  <p class="- topic/p ">Die folgende Liste fasst die Anforderungen für Socket-Richtliniendateien für die verschiedenen Versionen von Flash Player zusammen:</p>
 
  <ul class="- topic/ul "><li class="- topic/li "> In Flash Player 9.0.124.0 und höher sind für XMLSocket-Verbindungen Socket-Richtliniendateien erforderlich. Das heißt, dass eine Socket-Richtliniendatei für den Ziel-Host erforderlich ist, unabhängig von dem für die Verbindung ausgewählten Port. Sie ist sogar dann erforderlich, wenn Sie eine Verbindung zu einem Port auf dem gleichen Host herstellen, der die SWF-Dateien bereitstellt. </li><li class="- topic/li "> Wenn Sie unter Flash Player Version 9.0.115.0 und früher eine Verbindung zu einer Portnummer kleiner als 1024 herstellen möchten, ist eine Socket-Richtliniendatei erforderlich. Das Gleiche gilt, wenn Sie eine Verbindung zu einem anderem Host herstellen möchten als dem, der die SWF-Dateien bereitstellt. </li><li class="- topic/li "> Selbst wenn keine Socket-Richtliniendatei erforderlich ist, wird in Flash Player 9.0.115.0 während der Verwendung des Flash Debug Players eine Warnung angezeigt, wenn der Ziel-Host keine Socket-Richtliniendatei bereitstellt. </li></ul>
 
 <p class="- topic/p ">In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph ">der Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 </apiDesc><example conref="examples\XMLSocketExample.as" class="- topic/example "> Im folgenden Beispiel wird die XMLSocketExample-Klasse verwendet, um Daten über eine XMLSocket-Verbindung zu senden und bei XMLSocket-Ereignissen Informationen auszugeben. Dies wird in den folgenden Schritten erreicht:
 <ol class="- topic/ol "><li class="- topic/li ">Der XMLSocketExample-Konstruktor erstellt eine XMLSocket-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">socket</codeph>, übergibt <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> an <codeph class="+ topic/ph pr-d/codeph ">ConfigureListeners()</codeph> (siehe unten) und ruft dann die Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> für die XMLSocket-Verbindung auf, wobei der Hostname „localhost“ und die Portnummer <codeph class="+ topic/ph pr-d/codeph ">8080</codeph> verwendet werden.</li><li class="- topic/li ">Daraufhin wird die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> aufgerufen, die für jedes unterstützte XMLSocket-Ereignis Listener hinzufügt:
  <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">closeHandler()</codeph>: Listener für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, das nach dem Schließen der Netzwerkverbindung ausgelöst wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">connectHandler()</codeph>: Listener für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>, das nach dem Herstellen der Netzwerkverbindung ausgelöst wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">dataHandler()</codeph>: Listener für die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Ereignisse, die jedes Mal ausgelöst werden, wenn über die XMLSocket-Verbindung neue Daten empfangen werden.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph>: Listener für die <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignisse, die beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> und während des Sendevorgangs ausgelöst werden.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph>: Listener für <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignisse, die bei dem Versuch ausgelöst werden, mit der falschen Sicherheitseinstellung für die lokale Wiedergabe oder über einen Port mit einer niedrigeren Nummer als 1024 auf den XMLSocket-Server zuzugreifen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph>: Listener für <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignisse, die ausgelöst werden, wenn das Senden oder Empfangen von Daten fehlschlägt.</li></ul></li></ol>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b>
 <ul class="- topic/ul "><li class="- topic/li ">Sie müssen zur Kompilierung der SWF-Datei die Option „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf Netzwerk zugreifen“ setzen.</li><li class="- topic/li ">Damit dieses Beispiel funktioniert, benötigen Sie einen Server, der in Ihrer Domäne über Port 8080 läuft.</li><li class="- topic/li ">Wenn Sie Flash Player 9.0.124.0 oder höher ausführen, müssen Sie auf Ihrem Server eine Socket-Richtliniendatei ablegen, die Socket-Verbindungen von Ihrer Domäne zu Port 8080 zulässt. Informationen zum Bereitstellen von Socket-Richtliniendateien finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html" scope="external" class="- topic/xref "> Einrichten eines Servers für Socket-Richtliniendateien</xref>.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.XMLSocket;

    public class XMLSocketExample extends Sprite {
        private var hostName:String = "localhost";
        private var port:uint = 8080;
        private var socket:XMLSocket;

        public function XMLSocketExample() {
            socket = new XMLSocket();
            configureListeners(socket);
            if (hostName &amp;&amp; port) {
                socket.connect(hostName, port);
            }
        }

        public function send(data:Object):void {
            socket.send(data);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CLOSE, closeHandler);
            dispatcher.addEventListener(Event.CONNECT, connectHandler);
            dispatcher.addEventListener(DataEvent.DATA, dataHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        }

        private function closeHandler(event:Event):void {
            trace("closeHandler: " + event);
        }

        private function connectHandler(event:Event):void {
            trace("connectHandler: " + event);
        }

        private function dataHandler(event:DataEvent):void {
            trace("dataHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.load()</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader</linktext></link></related-links><adobeApiEvent id="flash.net:XMLSocket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn mit einem Aufruf der Methode „XMLSocket.connect()“ versucht wird, eine Verbindung zu einem Server außerhalb der Sicherheitssandbox des Aufrufers oder zu einem Port mit einer niedrigeren Nummer als 1024 herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn mit einem Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> versucht wird, eine Verbindung zu einem Server außerhalb der Sicherheitssandbox des Aufrufers oder zu einem Port mit einer niedrigeren Nummer als 1024 herzustellen.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">XMLSocket.connect()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Sende- oder Empfangsvorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Sende- oder Empfangsvorgang fehlschlägt. 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.DataEvent.DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
 Wird nach dem Senden oder Empfangen von unformatierten Daten ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DataEvent.DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird nach dem Senden oder Empfangen von unformatierten Daten ausgelöst.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Wird nach dem erfolgreichen Aufruf der Methode „XMLSocket.connect()“ ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird nach dem erfolgreichen Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> ausgelöst.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph> wird nur ausgelöst, wenn der Server die Verbindung schließt. Es wird nicht ausgelöst, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.close()</codeph> aufrufen.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:XMLSocket:XMLSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">XMLSocket</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein neues XMLSocket-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein vollständig qualifizierter DNS-Domänenname oder eine IP-Adresse im Format <i class="+ topic/ph hi-d/i ">.222.333.444</i>. In Flash Player 9.0.115.0, AIR 1.0 und späteren Versionen können Sie IPv6-Adressen festlegen, z. B. rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]. Sie können auch <codeph class="+ topic/ph pr-d/codeph ">null</codeph> angeben, um eine Verbindung zum Hostserver herzustellen, auf dem die SWF-Datei gespeichert ist. Wenn die aufrufende SWF-Datei in einem Webbrowser ausgeführt wird, muss sich der <codeph class="+ topic/ph pr-d/codeph ">host</codeph> in derselben Domäne befinden wie die SWF-Datei.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zur Herstellung einer Verbindung verwendete TCP-Portnummer auf dem Ziel-Host. In Flash Player 9.0.124.0 und späteren Versionen muss der Ziel-Host eine Socket-Richtliniendatei bereitstellen, die festlegt, dass Socket-Verbindungen zum festgelegten Port vom Host zugelassen sind, der die SWF-Datei bereitstellt. In älteren Versionen von Flash Player ist eine Socket-Richtliniendatei nur erforderlich, wenn Sie eine Verbindung zu einer Portnummer kleiner 1024 herstellen möchten oder wenn Sie eine Verbindung mit einem Host herstellen möchten, der nicht der gleiche ist, der auch die SWF-Datei bereitstellt.
    
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein neues XMLSocket-Objekt. Wenn keine Parameter angegeben werden, wird ein Socket mit getrennter Verbindung erstellt. Wenn Parameter angegeben werden, wird versucht, eine Verbindung zu dem angegebenen Host und Port herzustellen.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Es wird unbedingt empfohlen, das Konstruktor-Formular <b class="+ topic/ph hi-d/b ">ohne Parameter</b> zu verwenden, danach die Ereignis-Listener hinzuzufügen und danach die <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Methode mit <codeph class="+ topic/ph pr-d/codeph ">host</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">port</codeph>-Parametern aufzurufen. Diese Abfolge stellt sicher, dass alle Ereignis-Listener ordnungsgemäß funktionieren.</p>
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:XMLSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt die durch das XMLSocket-Objekt angegebene Verbindung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.close, close
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt die durch das XMLSocket-Objekt angegebene Verbindung. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph> wird nur ausgelöst, wenn der Server die Verbindung schließt. Es wird nicht ausgelöst, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> aufrufen.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:XMLSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Stellt über den angegebenen TCP-Port eine Verbindung zum angegebenen Internet-Host her.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.connect, connect
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige Dateien kann keine Verbindung mit dem Internet hergestellt werden. Umgehen Sie diese Beschränkung, indem Sie die Datei neu als lokal mit Netzwerk oder als vertrauenswürdig klassifizieren.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sie können für eine Socketverbindung keinen Port mit einer höheren Nummer als 65535 angeben.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein vollständig qualifizierter DNS-Domänenname oder eine IP-Adresse im Format <i class="+ topic/ph hi-d/i ">111.222.333.444</i>. Sie können auch <codeph class="+ topic/ph pr-d/codeph ">null</codeph> angeben, um eine Verbindung zum Hostserver herzustellen, auf dem die SWF-Datei gespeichert ist. Wenn die aufrufende Datei eine SWF-Datei ist, die in einem Webbrowser ausgeführt wird, muss <codeph class="+ topic/ph pr-d/codeph ">host</codeph> in der gleichen Domäne wie die Datei sein.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zur Herstellung einer Verbindung verwendete TCP-Portnummer auf dem Ziel-Host. In Flash Player 9.0.124.0 und späteren Versionen muss der Ziel-Host eine Socket-Richtliniendatei bereitstellen, die festlegt, dass Socket-Verbindungen zum festgelegten Port vom Host zugelassen sind, der die SWF-Datei bereitstellt. In älteren Versionen von Flash Player ist eine Socket-Richtliniendatei nur erforderlich, wenn Sie eine Verbindung zu einer Portnummer kleiner 1024 herstellen möchten oder wenn Sie eine Verbindung mit einem Host herstellen möchten, der nicht der gleiche ist, der auch die SWF-Datei bereitstellt.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt über den angegebenen TCP-Port eine Verbindung zum angegebenen Internet-Host her.
     
     <p class="- topic/p ">Wenn Sie für den Parameter <codeph class="+ topic/ph pr-d/codeph ">host</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> angeben, wird der Host kontaktiert, auf dem die Datei gespeichert ist, die <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> aufgerufen hat. Wenn die aufrufende Datei z. B. von www.adobe.com heruntergeladen wurde und für den host-Parameter <codeph class="+ topic/ph pr-d/codeph ">null</codeph> angegeben wurde, bedeutet das, dass Sie eine Verbindung zu www.adobe.com herstellen.</p>
     
     
     <p class="- topic/p ">Sie können eine Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</p>
     
     <p class="- topic/p ">Weitere Informationen finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/CONNECT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.CONNECT</linktext></link></related-links><adobeApiEvent id="flash.net:XMLSocket:connect_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bei einem Verbindungsvorgang wurde versucht, eine Verbindung zu einem Host außerhalb der Sicherheitssandbox des Aufrufers oder zu einem Port, der eine Socket-Richtliniendatei erfordert, herzustellen. Umgehen Sie diese Probleme, indem Sie auf dem Ziel-Host eine Socket-Richtliniendatei verwenden.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Bei einem Verbindungsvorgang wurde versucht, eine Verbindung zu einem Host außerhalb der Sicherheitssandbox des Aufrufers oder zu einem Port, der eine Socket-Richtliniendatei erfordert, herzustellen.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket:connect_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird beim Empfang von unformatierten Daten ausgelöst.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird beim Empfang von unformatierten Daten ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde. 
      
      </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:XMLSocket:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Wandelt das mit dem Parameter „object“ angegebene XML-Objekt bzw. die angegebenen Daten in einen String um und übermittelt diesen gefolgt von einem Null-Byte (0) an den Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.send, send
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das XMLSocket-Objekt ist nicht mit dem Server verbunden.
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein XML-Objekt oder andere Daten zur Übermittlung an den Server.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wandelt das mit dem Parameter <codeph class="+ topic/ph pr-d/codeph ">object</codeph> angegebene XML-Objekt bzw. die angegebenen Daten in einen String um und übermittelt diesen gefolgt von einem Null-Byte (0) an den Server. Wenn es sich bei <codeph class="+ topic/ph pr-d/codeph ">object</codeph> um ein XML-Objekt handelt, enthält der String die XML-Textdarstellung des XML-Objekts. Die send-Operation ist asynchron; es erfolgt zwar sofort eine Rückgabe, die Daten werden aber möglicherweise zu einem späteren Zeitpunkt gesendet. Die Methode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.send()</codeph> gibt keinen Wert zurück, der angibt, ob die Daten erfolgreich übermittelt wurden.
     
     <p class="- topic/p ">Wenn Sie das XMLSocket-Objekt nicht über <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> mit dem Server verbinden, schlägt der <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.send()</codeph>-Vorgang fehl.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiOperation><apiValue id="flash.net:XMLSocket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob dieses XMLSocket-Objekt zurzeit verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob dieses XMLSocket-Objekt zurzeit verbunden ist. Sie können sich auch für die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> und <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph> registrieren, um zu überprüfen, ob die Verbindung erfolgreich hergestellt werden konnte.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">connect</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">ioError</linktext></link></related-links></apiValue><apiValue id="flash.net:XMLSocket:timeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeout</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Anzahl der Millisekunden an, die auf eine Verbindung gewartet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Anzahl der Millisekunden an, die auf eine Verbindung gewartet werden soll.
     
     <p class="- topic/p ">Wenn die Verbindung nicht innerhalb der festgelegten Zeit hergestellt werden kann, schlägt der Verbindungsaufbau fehl. Der Standardwert ist 20.000 (zwanzig Sekunden).</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:IPVersion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IPVersion</apiName><shortdesc class="- topic/shortdesc ">
	 Die IPVersion-Klasse definiert Konstanten, die die unterschiedlichen Familien von IP-Adressen repräsentieren.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die IPVersion-Klasse definiert Konstanten, die die unterschiedlichen Familien von IP-Adressen repräsentieren.
	 
 	 </apiDesc></apiClassifierDetail><apiValue id="flash.net:IPVersion:IPV4" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IPV4</apiName><shortdesc class="- topic/shortdesc ">
		 Eine Adresse im Format Internet Protocol Version 4 (IPv4).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">IPv4</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Eine Adresse im Format Internet Protocol Version 4 (IPv4).
		 
		 <p class="- topic/p ">IPv192,0.2.0-Adressen werden in ActionScript als ein String in Dezimalpunktschreibweise angegeben, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"192.0.2.0"</codeph>.</p> 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:IPVersion:IPV6" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IPV6</apiName><shortdesc class="- topic/shortdesc ">
		 Eine Adresse im Format Internet Protocol Version 6 (IPv6).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">IPv6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Eine Adresse im Format Internet Protocol Version 6 (IPv6).
		 
		 <p class="- topic/p ">IPv6-Adressen werden in ActionScript als ein String in Hexadezimal-Doppelpunkt-Schreibweise ausgedrückt und in eckige Klammern gesetzt, zum Beispiel: <codeph class="+ topic/ph pr-d/codeph ">"[2001:db8:ccc3:ffff:0:444d:555e:666f]"</codeph>.</p>
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:Socket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Socket</apiName><shortdesc class="- topic/shortdesc ">
 Die Socket-Klasse ermöglicht es, dass Code TCP-Socketverbindungen (Transport Control Protocol) zum Senden und Empfangen von Binärdaten herstellt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.utils:IDataInput</apiBaseInterface><apiBaseInterface>flash.utils:IDataOutput</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die Socket-Klasse ermöglicht es, dass Code TCP-Socketverbindungen (Transport Control Protocol) zum Senden und Empfangen von Binärdaten herstellt.
 
 <p class="- topic/p ">Die Socket-Klasse eignet sich gut für die Arbeit mit Servern, die Binärprotokolle verwenden.</p>
 
 <p class="- topic/p ">Um die Methoden der Socket-Klasse zu verwenden, verwenden Sie zuerst den Konstruktor <codeph class="+ topic/ph pr-d/codeph ">new Socket</codeph>, um ein Socket-Objekt zu erstellen.</p>
 
 <p class="- topic/p ">Ein Socket sendet und empfängt Daten asynchron. </p>
 
 <p class="- topic/p ">Bei einigen Betriebssystemen wird flush() zwischen Ausführungsbildern automatisch aufgerufen, bei anderen Betriebssystemen, zum Beispiel Windows, werden die Daten nie gesendet, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> nicht ausdrücklich aufrufen. Um sicherzustellen, dass Ihre Anwendung sich unter allen Betriebssystemen zuverlässig verhält, sollten Sie die <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph>-Methode nach dem Schreiben jeder Nachricht (oder zusammenhängender Datengruppen) an den Socket aufrufen.</p>
 
 <p class="- topic/p ">In Adobe AIR werden Socket-Objekte auch erstellt, wenn ein wartendes ServerSocket eine Verbindung von einem externen Prozess empfängt. Das Socket-Objekt, das die Verbindung repräsentiert, wird in einem ServerSocketConnectEvent abgesetzt. Ihre Anwendung ist zuständig dafür, einen Verweis auf dieses Socket-Objekt zu verwalten. Andernfalls wird das Socket-Objekt bei der Speicherbereinigung (Garbage Collection) berücksichtig und kann zu Laufzeit ohne Warnung gelöscht werden.</p>
 
 <p class="- topic/p ">SWF-Inhalt, der in „local-with-filesystem“-Sicherheitssandboxen ausgeführt wird, kann keine Sockets verwenden.</p>
 
  <p class="- topic/p "> Die <i class="+ topic/ph hi-d/i ">Socket-Richtliniendateien</i> auf dem Ziel-Host legen sowohl den Host fest, von dem SWF-Dateien Socket-Verbindungen herstellen können, als auch die Ports, für welche die Verbindungen erstellt werden. Die Sicherheitsanforderungen für Socket-Richtliniendateien wurden in den letzten Versionen von Flash Player verschärft. Adobe empfiehlt für alle Versionen von Flash Player die Verwendung von Socket-Richtliniendateien. In einigen Fällen ist eine Socket-Richtliniendatei unbedingt erforderlich. Deshalb sollten Sie beim Verwenden von Socket-Objekten sicherstellen, dass der Ziel-Host ggf. eine Socketrichtliniendatei bereitstellt. </p>
 
  <p class="- topic/p ">Die folgende Liste fasst die Anforderungen für Socket-Richtliniendateien für die verschiedenen Versionen von Flash Player zusammen:</p>
 
  <ul class="- topic/ul "><li class="- topic/li "> In Flash Player 9.0.124.0 und höher sind für Socketverbindungen Socketrichtliniendateien erforderlich. Das heißt, dass eine Socket-Richtliniendatei für den Ziel-Host erforderlich ist, unabhängig von dem für die Verbindung ausgewählten Port. Sie ist sogar dann erforderlich, wenn Sie eine Verbindung zu einem Port auf dem gleichen Host herstellen, der die SWF-Dateien bereitstellt. </li><li class="- topic/li "> Wenn Sie unter Flash Player Version 9.0.115.0 und früher eine Verbindung zu einer Portnummer kleiner als 1024 herstellen möchten, ist eine Socket-Richtliniendatei erforderlich. Das Gleiche gilt, wenn Sie eine Verbindung zu einem anderem Host herstellen möchten als dem, der die SWF-Dateien bereitstellt. </li><li class="- topic/li "> Selbst wenn keine Socket-Richtliniendatei erforderlich ist, wird in Flash Player 9.0.115.0 während der Verwendung des Flash Debug Players eine Warnung angezeigt, wenn der Ziel-Host keine Socket-Richtliniendatei bereitstellt. </li><li class="- topic/li ">In AIR ist für Inhalte, die in der Sicherheitssandbox der Anwendung ausgeführt werden, keine Socketrichtliniendatei erforderlich. Socketrichtliniendateien sind erforderlich für Socketverbindungen, die von Inhalt hergestellt werden, der außerhalb der Sicherheitssandbox der AIR-Anwendung ausgeführt wird.</li></ul>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.
 </p>
 
 </apiDesc><example conref="examples\SocketExample.as" class="- topic/example "> Im folgenden Beispiel werden Socket-Daten gelesen und geschrieben sowie die bei Socket-Ereignissen übertragenen Informationen ausgegeben. Wichtige Beispielauszüge:
 <ol class="- topic/ol "><li class="- topic/li ">Der Konstruktor erstellt eine <codeph class="+ topic/ph pr-d/codeph ">CustomSocket</codeph>-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> und übergibt den Hostnamen <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> und Port 80 als Argumente. Da <codeph class="+ topic/ph pr-d/codeph ">CustomSocket</codeph> Socket erweitert, ruft <codeph class="+ topic/ph pr-d/codeph ">super()</codeph> den Konstruktor des Sockets auf.</li><li class="- topic/li ">Danach wird die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> aufgerufen, die Listener für Socket-Ereignisse hinzufügt.</li><li class="- topic/li ">Zum Schluss wird die Socket-Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> mit <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> als Hostname und 80 als Portnummer aufgerufen.</li></ol>
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweis:</b> Zur Ausführung des Beispiels muss in der Domäne, in der sich die SWF-Datei befindet (in diesem Beispiel <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>), ein Server ausgeführt werden, der Port 80 überwacht.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;

    public class SocketExample extends Sprite {

        public function SocketExample() {
            var socket:CustomSocket = new CustomSocket("localhost", 80);
        }
    }
}

import flash.errors.*;
import flash.events.*;
import flash.net.Socket;

class CustomSocket extends Socket {
    private var response:String;

    public function CustomSocket(host:String = null, port:uint = 0) {
        super();
        configureListeners();
        if (host &amp;&amp; port)  {
            super.connect(host, port);
        }
    }

    private function configureListeners():void {
        addEventListener(Event.CLOSE, closeHandler);
        addEventListener(Event.CONNECT, connectHandler);
        addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        addEventListener(ProgressEvent.SOCKET_DATA, socketDataHandler);
    }

    private function writeln(str:String):void {
        str += "\n";
        try {
            writeUTFBytes(str);
        }
        catch(e:IOError) {
            trace(e);
        }
    }

    private function sendRequest():void {
        trace("sendRequest");
        response = "";
        writeln("GET /");
        flush();
    }

    private function readResponse():void {
        var str:String = readUTFBytes(bytesAvailable);
        response += str;
    }

    private function closeHandler(event:Event):void {
        trace("closeHandler: " + event);
        trace(response.toString());
    }

    private function connectHandler(event:Event):void {
        trace("connectHandler: " + event);
        sendRequest();
    }

    private function ioErrorHandler(event:IOErrorEvent):void {
        trace("ioErrorHandler: " + event);
    }

    private function securityErrorHandler(event:SecurityErrorEvent):void {
        trace("securityErrorHandler: " + event);
    }

    private function socketDataHandler(event:ProgressEvent):void {
        trace("socketDataHandler: " + event);
        readResponse();
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">DatagramSocket</linktext></link></related-links><adobeApiEvent id="flash.net:Socket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn ein Aufruf von Socket.connect() versucht, eine Verbindung zu einem Server, der von der Sicherheitssandbox des Aufrufers verboten ist, oder zu einem Port unter 1024 herzustellen und keine Socketrichtliniendatei vorhanden ist, die eine solche Verbindung zulässt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird ausgeführt, wenn ein Sicherheitsfehler auftritt.
  
  </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> versucht, eine Verbindung zu einem Server, der von der Sicherheitssandbox des Aufrufers verboten ist, oder zu einem Port unter 1024 herzustellen und keine Socketrichtliniendatei vorhanden ist, die eine solche Verbindung zulässt.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> In einer AIR-Anwendung kann Inhalt, der in der Sicherheitssandbox der Anwendung ausgeführt wird, zu jedem Server und zu jeder Portnummer eine Verbindung herstellen, ohne dass eine Socketrichtliniendatei erforderlich ist.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">Socket.connect()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.ProgressEvent.SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Socket Daten empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Socket Daten empfangen hat.
 
 <p class="- topic/p ">Die vom Socket empfangenen Daten verbleiben im Socket, bis sie gelesen wurden. Sie brauchen nicht alle Daten zu lesen, die während der Prozedur für dieses Ereignis verfügbar sind.</p>
 
 <p class="- topic/p ">Für Ereignisse vom Typ <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph> wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.bytesTotal</codeph> nicht verwendet.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Sende- oder Ladevorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Sende- oder Ladevorgang fehlschlägt.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt.
 
 <p class="- topic/p ">Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph> wird nur ausgelöst, wenn der Server die Verbindung schließt. Es wird nicht ausgelöst, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">Socket.close()</codeph> aufrufen.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:Socket:Socket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Socket</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein neues Socket-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS determine if all above events are accurate, and which ones also apply
     </internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt in SWF-Inhalten <ph class="- topic/ph "> aus den folgenden Gründen auf:</ph>
     
     <ul class="- topic/ul "><li class="- topic/li ">Über lokale Dateisystem-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können dies umgehen, indem Sie die entsprechende SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren. Diese Einschränkung gilt nicht für AIR-Anwendungsinhalt in der Sicherheitssandbox der Anwendung.</li><li class="- topic/li ">Sie können für eine Socketverbindung keinen Port mit einer höheren Nummer als 65535 angeben.</li></ul>
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein vollständig qualifizierter DNS-Domänenname oder eine IP-Adresse. IPv4-Adressen werden in der Punktdezimalschreibweise angegeben, zum Beispiel <i class="+ topic/ph hi-d/i ">192.0.2.0</i>. In Flash Player 9.0.115.0 sowie und AIR 1.0 und höher können Sie IPv6-Adressen in Hexadezimal-Doppelpunkt-Schreibweise festlegen, z. B. <i class="+ topic/ph hi-d/i ">2001:db8:ccc3:ffff:0:444d:555e:666f</i>. Sie können auch <codeph class="+ topic/ph pr-d/codeph ">null</codeph> angeben, um eine Verbindung zum Hostserver herzustellen, auf dem die SWF-Datei gespeichert ist. Wenn die aufrufende SWF-Datei in einem Webbrowser ausgeführt wird, muss sich <codeph class="+ topic/ph pr-d/codeph ">host</codeph> in der Domäne befinden, aus der die SWF-Datei stammt.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zur Herstellung einer Verbindung verwendete TCP-Portnummer auf dem Ziel-Host. In Flash Player 9.0.124.0 und späteren Versionen muss der Ziel-Host eine Socket-Richtliniendatei bereitstellen, die festlegt, dass Socket-Verbindungen zum festgelegten Port vom Host zugelassen sind, der die SWF-Datei bereitstellt. In älteren Versionen von Flash Player ist eine Socket-Richtliniendatei nur erforderlich, wenn Sie eine Verbindung zu einer Portnummer kleiner 1024 herstellen möchten oder wenn Sie eine Verbindung mit einem Host herstellen möchten, der nicht der gleiche ist, der auch die SWF-Datei bereitstellt.
    
    
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein neues Socket-Objekt. Wenn keine Parameter angegeben werden, wird ein Socket mit getrennter Verbindung erstellt. Wenn Parameter angegeben werden, wird versucht, eine Verbindung zu dem angegebenen Host und Port herzustellen.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Es wird unbedingt empfohlen, das Konstruktor-Formular <b class="+ topic/ph hi-d/b ">ohne Parameter</b> zu verwenden, danach die Ereignis-Listener hinzuzufügen und danach die <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Methode mit <codeph class="+ topic/ph pr-d/codeph ">host</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">port</codeph>-Parametern aufzurufen. Diese Abfolge stellt sicher, dass alle Ereignis-Listener ordnungsgemäß funktionieren.</p>
    
    </apiDesc></apiConstructorDetail><adobeApiEvent id="flash.net:Socket:Socket_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:Socket_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den die Verbindung fehlschlägt.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den die Verbindung fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:Socket_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Wird ausgelöst, wenn beim Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> versucht wird, eine Verbindung zu einem Server herzustellen, der keine Socket-Richtliniendatei bereitstellt, bzw. zu einem Server, dessen Richtliniendatei dem aufrufenden Host keinen Zugriff auf den angegebenen Port gewährt. Weitere Informationen zu Richtliniendateien finden Sie unter „Websitesteuerungen (Richtliniendateien)“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i> und im Flash Player Developer Center im Artikel: <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</ph>
     
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dieser Fehler tritt in SWF-Inhalt auf. Wird ausgelöst, wenn ein Aufruf an Socket.connect() versucht, eine Verbindung mit einem Server herzustellen, der entweder keine Socket-Richtliniendatei bereitstellt oder dessen Richtliniendatei dem aufrufenden Host keinen Zugriff auf den festgelegten Port erlaubt.</shortdesc></adobeApiEvent></apiConstructor><apiOperation id="flash.net:Socket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Socket konnte nicht geschlossen werden, oder der Socket war nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt den Socket. Nach dem Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> können keine Daten mehr gelesen oder geschrieben werden.
     
     <p class="- topic/p ">Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph> wird nur ausgelöst, wenn der Server die Verbindung schließt. Es wird nicht ausgelöst, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> aufrufen.</p>
     
     <p class="- topic/p ">Sie können das Socket-Objekt wieder verwenden, indem Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> erneut aufrufen.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Stellt eine Socketverbindung mit dem angegebenen Host und Port her.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS compare this entire description with XMLSocket.connect() and make consistent
      
      </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde kein Host angegeben, und die Verbindung konnte nicht erstellt werden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt in SWF-Inhalten <ph class="- topic/ph "> aus den folgenden Gründen auf:</ph>
     
          <ul class="- topic/ul "><li class="- topic/li ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können diese Beschränkung umgehen, indem Sie die Datei neu als lokal mit Netzwerk oder als vertrauenswürdig klassifizieren.</li><li class="- topic/li ">Sie können für eine Socketverbindung keinen Port mit einer höheren Nummer als 65535 angeben.</li><li class="- topic/li ">Auf der HTML-Seite, die das SWF-Objekt enthält, ist der <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph>-Parameter der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph> gesetzt.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name oder die IP-Adresse des Hosts, zu dem eine Verbindung hergestellt werden soll. Wenn kein Host angegeben wurde, wird der Host der aufrufenden Datei verwendet. Verwenden Sie in diesem Fall einen Ereignis-Listener, um zu ermitteln, ob die Verbindung erfolgreich hergestellt werden konnte.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Portnummer für die herzustellende Verbindung.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt eine Socketverbindung mit dem angegebenen Host und Port her.
     
     <p class="- topic/p ">Wenn die Verbindung unmittelbar fehlschlägt, wird ein Ereignis oder ein Ausnahmefehler ausgelöst: Ein Fehlerereignis wird ausgelöst, wenn ein Host angegeben wurde, ein Ausnahmefehler wird ausgelöst, wenn kein Host angegeben wurde. Andernfalls wird der Verbindungsstatus durch ein Ereignis ausgegeben. Wenn bereits eine Socketverbindung besteht, wird die vorhandene Verbindung zunächst geschlossen.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:Socket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:connect_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Host angegeben wurde und ein I/O-Fehler auftritt, durch den die Verbindung fehlschlägt.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Host angegeben wurde und ein I/O-Fehler auftritt, durch den die Verbindung fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:connect_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn beim Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> versucht wird, eine Verbindung zu einem Server herzustellen, der keine Socket-Richtliniendatei bereitstellt, bzw. zu einem Server, dessen Richtliniendatei dem aufrufenden Host keinen Zugriff auf den angegebenen Port gewährt. Weitere Informationen zu Richtliniendateien finden Sie unter „Websitesteuerungen (Richtliniendateien)“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i> und im Flash Player Developer Center im Artikel: <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Aufruf an Socket.connect() versucht, eine Verbindung mit einem Server herzustellen, der entweder keine Socket-Richtliniendatei bereitstellt oder dessen Richtliniendatei dem aufrufenden Host keinen Zugriff auf den festgelegten Port erlaubt.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:Socket:flush" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flush</apiName><shortdesc class="- topic/shortdesc ">
     Gibt alle Daten im Ausgabepuffer des Sockets aus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt alle Daten im Ausgabepuffer des Sockets aus.
     
	 <p class="- topic/p ">Bei einigen Betriebssystemen wird flush() zwischen Ausführungsbildern automatisch aufgerufen, bei anderen Betriebssystemen, zum Beispiel Windows, werden die Daten nie gesendet, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> nicht ausdrücklich aufrufen. Um sicherzustellen, dass Ihre Anwendung sich unter allen Betriebssystemen zuverlässig verhält, sollten Sie die <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph>-Methode nach dem Schreiben jeder Nachricht (oder zusammenhängender Datengruppen) an den Socket aufrufen.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen booleschen Wert aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert ist <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn das Byte ungleich 0 ist, oder andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen booleschen Wert aus dem Socket. Nach dem Lesen eines einzelnen Byte gibt die Methode <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurück, wenn das Byte ungleich null ist, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein Byte mit Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von -128 bis 127.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein Byte mit Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBytes</apiName><shortdesc class="- topic/shortdesc ">
     Liest die Anzahl der im Parameter „length“ angegebenen Datenbyte aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das ByteArray-Objekt, in das die Daten gelesen werden.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Offset im Bytearray, ab dem das Lesen der Daten beginnt.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der zu lesenden Byte. Der Standardwert 0 bewirkt, dass alle verfügbaren Daten gelesen werden.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest die Anzahl der im Parameter „length“ angegebenen Datenbyte aus dem Socket. Die Byte werden in das angegebene Bytearray gelesen, wobei an der mit <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> angegebenen Position begonnen wird.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readDouble</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readFloat</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readInt</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von -2147483648 bis 2147483647.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen Multibyte-String unter Verwendung des angegebenen Zeichensatzes aus dem Bytestream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Socket, Socket.readMultiByte, readMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein UTF-8-kodierter String.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der aus dem Bytestream zu lesenden Byte.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String, der den zum Interpretieren der Byte zu verwendenden Zeichensatz angibt. Mögliche Zeichensatz-Strings sind u. a. <codeph class="+ topic/ph pr-d/codeph ">"shift_jis"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CN-GB"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"iso-8859-1"</codeph>. Eine vollständige Liste finden Sie unter <xref href="../../charset-codes.html" class="- topic/xref ">Unterstützte Zeichensätze</xref>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wird der Wert des <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph>-Parameters vom aktuellen System nicht erkannt, verwendet die Anwendung die Standard-Codepage des Systems als Zeichensatz. Beispielsweise kann ein Wert des Parameters <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph> wie bei <codeph class="+ topic/ph pr-d/codeph ">myTest.readMultiByte(22, "iso-8859-01")</codeph>, wo <codeph class="+ topic/ph pr-d/codeph ">01</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">1</codeph> eingesetzt wird, auf Ihrem Entwicklungsrechner funktionieren, aber auf keinem anderen Rechner. Auf anderen Rechnern greift die Anwendung auf die Standard-Codepage des Systems zurück.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen Multibyte-String unter Verwendung des angegebenen Zeichensatzes aus dem Bytestream.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readObject</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein Objekt aus dem Socket, das im serialisierten AMF-Format kodiert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das deserialisierte Objekt.
     
     </apiDesc><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein Objekt aus dem Socket, das im serialisierten AMF-Format kodiert ist.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link><link href="../../flash/net/package.html#registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:readShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readShort</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von -32768 bis 32767.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Liest die mit dem Parameter „length“ angegebene Anzahl UTF-8-Byte aus dem Socket und gibt einen String zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein UTF-8-String.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der zu lesenden Byte.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest die mit dem Parameter <codeph class="+ topic/ph pr-d/codeph ">length</codeph> angegebene Anzahl UTF-8-Byte aus dem Socket und gibt einen String zurück.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTF</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen UTF-8-String aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein UTF-8-String.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen UTF-8-String aus dem Socket. Es wird davon ausgegangen, dass dem String eine short-Ganzzahl ohne Vorzeichen mit der Länge in Byte vorangestellt ist.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein Byte ohne Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von 0 bis 255.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein Byte ohne Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 32-Bit-Ganzzahl ohne Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von 0 bis 4294967295.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 32-Bit-Ganzzahl ohne Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedShort</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 16-Bit-Ganzzahl ohne Vorzeichen aus dem Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert im Bereich von 0 bis 65535.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 16-Bit-Ganzzahl ohne Vorzeichen aus dem Socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:writeBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt einen booleschen Wert in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll: 1 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder 0 (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt einen booleschen Wert in den Socket. Mit dieser Methode wird ein einzelnes Byte mit dem Wert 1 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder 0 (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) geschrieben.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeByte</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt ein Byte in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll. Die unteren 8 Bit des Werts werden verwendet, die oberen 24 Bit werden ignoriert.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt ein Byte in den Socket.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeBytes</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine Anzahl an Byte aus dem angegebenen Bytearray.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> größer als die Länge des ByteArray wie in <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> angegeben ist, oder wenn die Menge der zu schreibenden Daten wie in <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> plus <codeph class="+ topic/ph pr-d/codeph ">length</codeph> angegeben die verfügbaren Daten überschreitet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das ByteArray-Objekt, aus dem die Daten gelesen werden.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der auf null basierende Offset im ByteArray-Objekt <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph>, ab dem der Schreibvorgang beginnt.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der zu schreibenden Byte. Beim Standardwert 0 wird der gesamte Pufferinhalt ab dem durch den Parameter <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> angegebenen Byte geschrieben.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine Anzahl an Byte aus dem angegebenen Bytearray. Der Schreibvorgang beginnt an der mit <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> angegebenen Position.
     
     <p class="- topic/p ">Wenn Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">length</codeph> nicht angeben, wird der Standardwert 0 verwendet, sodass alle Daten beginnend ab der mit <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> festgelegten Position geschrieben werden.</p>
     
     <p class="- topic/p ">Wenn Sie auch den Parameter <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> nicht angeben, wird der gesamte Pufferinhalt geschrieben.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDouble</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeFloat</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeInt</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine 32-Bit-Ganzzahl mit Vorzeichen in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine 32-Bit-Ganzzahl mit Vorzeichen in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt einen Multibyte-String unter Verwendung des angegebenen Zeichensatzes aus dem Bytestream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Socket, Socket.writeMultiByte, writeMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String-Wert, der geschrieben werden soll.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String, der den zum Interpretieren der Byte zu verwendenden Zeichensatz angibt. Mögliche Zeichensatz-Strings sind u. a. <codeph class="+ topic/ph pr-d/codeph ">"shift_jis"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CN-GB"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"iso-8859-1"</codeph>. Eine vollständige Liste finden Sie unter <xref href="../../charset-codes.html" class="- topic/xref ">Unterstützte Zeichensätze</xref>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt einen Multibyte-String unter Verwendung des angegebenen Zeichensatzes aus dem Bytestream.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeObject</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt ein Objekt im serialisierten AMF-Format in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu serialisierende Objekt
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt ein Objekt im serialisierten AMF-Format in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link><link href="../../flash/net/package.html#registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeShort</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine 16-Bit-Ganzzahl in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine 16-Bit-Ganzzahl in den Socket. Die Byte werden wie folgt geschrieben:
     
     <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">(v >> 8) &amp; 0xff v &amp; 0xff</codeph></pre>
     
     <p class="- topic/p ">Die unteren 16 Bit des Parameters werden verwendet, die oberen 16 Bit werden ignoriert.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt einen UTF-8-String in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt einen UTF-8-String in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUTF</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt die folgenden Daten in den Socket: Eine 16-Bit-Ganzzahl ohne Vorzeichen, die die Länge des angegebenen UTF-8-Strings in Byte angibt, gefolgt von dem eigentlichen String.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Länge überschreitet 65535.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String, der in den Socket geschrieben werden soll.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt die folgenden Daten in den Socket: Eine 16-Bit-Ganzzahl ohne Vorzeichen, die die Länge des angegebenen UTF-8-Strings in Byte angibt, gefolgt von dem eigentlichen String.
     
     <p class="- topic/p ">Bevor der String geschrieben wird, berechnet die Methode die Anzahl der Byte, die zur Darstellung aller Zeichen des Strings benötigt werden.</p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt eine 32-Bit-Ganzzahl ohne Vorzeichen in den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Socket aufgetreten, oder der Socket ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der in den Socket geschrieben werden soll.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt eine 32-Bit-Ganzzahl ohne Vorzeichen in den Socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiValue id="flash.net:Socket:bytesAvailable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesAvailable</apiName><shortdesc class="- topic/shortdesc ">
     Die Byteanzahl der zum Lesen verfügbaren Daten im Eingabepuffer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Byteanzahl der zum Lesen verfügbaren Daten im Eingabepuffer.
     
     <p class="- topic/p ">In Ihrem Code muss <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> aufgerufen werden, um sicherzustellen, dass genügend Daten verfügbar sind, bevor diese mit einer der <codeph class="+ topic/ph pr-d/codeph ">read</codeph>-Methoden gelesen werden.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:Socket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob dieses Socket-Objekt zurzeit verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob dieses Socket-Objekt zurzeit verbunden ist. Beim Aufruf dieser Eigenschaft wird der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgegeben, wenn der Socket verbunden ist, oder andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:Socket:endian:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">endian</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Byte-Reihenfolge der Daten an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>Endian.BIG_ENDIAN
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Bytereihenfolge für die Daten an. Mögliche Werte sind Konstanten der flash.utils.Endian-Klasse, <codeph class="+ topic/ph pr-d/codeph ">Endian.BIG_ENDIAN</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">Endian.LITTLE_ENDIAN</codeph>.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Endian" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Endian</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse, an die dieser Socket auf dem lokalen Computer gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse, an die dieser Socket auf dem lokalen Computer gebunden ist.

     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Der Port, an den dieser Socket auf dem lokalen Computer gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Port, an den dieser Socket auf dem lokalen Computer gebunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Steuert die beim Schreiben oder Lesen eines Objekts verwendete AMF-Version.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Steuert die beim Schreiben oder Lesen eines Objekts verwendete AMF-Version.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding-Klasse</linktext></link><link href="flash.net.xml#Socket/readObject()" class="- topic/link "><linktext class="- topic/linktext ">readObject()</linktext></link><link href="flash.net.xml#Socket/writeObject()" class="- topic/link "><linktext class="- topic/linktext ">writeObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:remoteAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remoteAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse des Remotecomputers, mit der dieser Socket verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse des Remotecomputers, mit der dieser Socket verbunden ist.
     
     <p class="- topic/p ">Sie können diese Eigenschaft verwenden, um die IP-Adresse eines Client-Sockets zu bestimmen, der in einem ServerSocketConnectEvent von einem ServerSocket-Objekt abgesetzt wird. Verwenden Sie die DNSResolver-Klasse, um eine IP-Adresse in einen Domänennamen zu konvertieren, falls gewünscht.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">ServerSocketConnectEvent</linktext></link><link href="flash.net.dns.xml#DNSResolver" class="- topic/link "><linktext class="- topic/linktext ">DNSResolver</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:remotePort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remotePort</apiName><shortdesc class="- topic/shortdesc ">
     Der Port des Remotecomputers, mit dem dieser Socket verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Port des Remotecomputers, mit dem dieser Socket verbunden ist.
     
     <p class="- topic/p ">Sie können diese Eigenschaft verwenden, um die Portnummer eines Client-Sockets zu bestimmen, der in einem ServerSocketConnectEvent von einem ServerSocket-Objekt abgesetzt wird.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">ServerSocketConnectEvent</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:timeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeout</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Anzahl der Millisekunden an, die auf eine Verbindung gewartet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Anzahl der Millisekunden an, die auf eine Verbindung gewartet werden soll.
     
     <p class="- topic/p ">Wenn die Verbindung nicht innerhalb der festgelegten Zeit hergestellt werden kann, schlägt der Verbindungsaufbau fehl. Der Standardwert ist 20.000 (zwanzig Sekunden).</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:ObjectEncoding" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
 Mit der ObjectEncoding-Klasse werden Serialisierungseinstellungen in Klassen definiert, die zur Serialisierung von Objekten dienen (zum Beispiel FileStream, NetStream, NetConnection, SharedObject und ByteArray), um mit früheren Versionen von ActionScript arbeiten zu können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">ObjectEncoding, ObjectEncoding object, built-in class, AMF, Action Message Format
 
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der ObjectEncoding-Klasse werden Serialisierungseinstellungen in Klassen definiert, die zur Serialisierung von Objekten dienen (zum Beispiel FileStream, NetStream, NetConnection, SharedObject und ByteArray), um mit früheren Versionen von ActionScript arbeiten zu können.
 
 <p class="- topic/p ">Mit der Objektkodierung wird die AMF-Version (Action Message Format) der Objekte gesteuert. Flash Player verwendet AMF, um eine effiziente Kommunikation zwischen einer Anwendung und einem Remote-Server zu ermöglichen. AMF kodiert Remote Procedure Calls in kompakte Binärdaten, die über HTTP/HTTPS oder das von Flash Media Server verwendete RTMP/RTMPS-Protokoll übertragen werden können. Objekte und Datenwerte werden in dieses Binärformat serialisiert, das in der Regel kompakter ist als andere Darstellungsformen wie XML.</p>
 
 <p class="- topic/p ">Adobe AIR und Flash Player 9 unterstützen die Serialisierung in zwei verschiedene Formate: AMF3 und AMF0. Das für ActionScript 3.0 entwickelte Standardformat AMF3 bietet im Vergleich zu dem für ActionScript 1.0 und 2.0 verwendeten Format AMF0 mehrere Vorteile. Die Datenübertragung über das Netzwerk erfolgt mit AMF3 effizienter als mit AMF0. <ph class="- topic/ph ">AMF3 unterstützt das Senden von <codeph class="+ topic/ph pr-d/codeph ">int</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">uint</codeph>-Objekten als Ganzzahlen sowie Datentypen, die nur in ActionScript 3.0 verfügbar sind, wie z. B. ByteArray, XML und IExternalizable. Dieses Format ist nur in ActionScript 3.0 und für Server verfügbar, die die AMF3-Kodierung verwenden, wie Flex 2.</ph></p>
 
 <p class="- topic/p ">Die Klassen ByteArray, NetConnection, NetStream, <ph class="- topic/ph ">SharedObject, </ph>Socket und URLStream enthalten die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft , der mit der ObjectEncoding-Klasse eine Konstante zugewiesen wird. Das Verhalten der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> hängt davon ab, um welches Objekt es sich handelt. In den Beschreibungen zur Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> der jeweiligen Klassen wird näher darauf eingegangen.</p>
 
 
 </apiDesc></apiClassifierDetail><apiValue id="flash.net:ObjectEncoding:AMF0" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AMF0</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass Objekte mit der AMF-Version für ActionScript 1.0 und 2.0 serialisiert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass Objekte mit der AMF-Version für ActionScript 1.0 und 2.0 serialisiert werden.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:AMF3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AMF3</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass Objekte mit der AMF-Version für ActionScript 3.0 serialisiert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass Objekte mit der AMF-Version für ActionScript 3.0 serialisiert werden.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt das Standardformat (neuestes Format) der aktuellen Laufzeitumgebung an (entweder Flash Player oder AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt das Standardformat (neuestes Format) der aktuellen Laufzeitumgebung an (entweder Flash Player oder AIR). Da die Steuerung der Objektkodierung nur in Flash Player 9 und neueren Versionen und in Adobe AIR verfügbar ist, können nur Formate ab der AMF-Version für ActionScript 3.0 verwendet werden.
	 
	 <p class="- topic/p ">Wenn für ein Objekt die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.DEFAULT</codeph> eingestellt ist, wird die AMF3-Kodierung verwendet. Wenn in Zukunft in einer neueren Version von Flash Player oder Adobe AIR eine neue AMF-Version eingeführt wird und Sie Ihre Inhalte neu veröffentlichen, wird die neue AMF-Version verwendet. Verwenden Sie diese Konstante nur, wenn Sie keinen Wert auf die Interoperabilität mit älteren Versionen legen.</p>
     
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:dynamicPropertyWriter:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dynamicPropertyWriter</apiName><shortdesc class="- topic/shortdesc ">
	 Ermöglicht eine bessere Steuerung der Serialisierung der dynamischen Eigenschaften dynamischer Objekte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:IDynamicPropertyWriter</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ermöglicht eine bessere Steuerung der Serialisierung der dynamischen Eigenschaften dynamischer Objekte. Wenn diese Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist (Standardwert), werden dynamische Eigenschaften mit systemeigenem Code serialisiert, der alle dynamischen Eigenschaften schreibt, mit Ausnahme der Eigenschaften, die als Wert eine Funktion aufweisen.
     <p class="- topic/p ">Dieser Wert wird nur für Eigenschaften eines dynamischen Objekts aufgerufen (d. h. ein Objekt, das innerhalb einer dynamischen Klasse deklariert wurden) oder für Objekte die mithilfe des <codeph class="+ topic/ph pr-d/codeph ">new</codeph>-Operators deklariert wurden.</p>
	 
	 <p class="- topic/p ">Sie können diese Eigenschaft verwenden, um Eigenschaften dynamischer Objekte aus der Serialisierung auszuschließen, um Eigenschaften dynamischer Objekte Werte zuzuweisen und um neue Eigenschaften für dynamische Objekte zu erstellen. Stellen Sie hierzu für die Eigenschaft auf ein Objekt ein, das die Schnittstelle „IDynamicPropertyWriter“ implementiert. Weitere Informationen hierzu finden Sie im Abschnitt zur Schnittstelle „IDynamicPropertyWriter“.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamAppendBytesAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamAppendBytesAction</apiName><shortdesc class="- topic/shortdesc ">

Die NetStreamAppendBytesAction-Klasse ist eine Aufzählung der Konstanten, die Sie an die NetStream.appendBytesAction()-Methode übergeben können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">

Die NetStreamAppendBytesAction-Klasse ist eine Aufzählung der Konstanten, die Sie an die <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytesAction()</codeph>-Methode übergeben können.

<p class="- topic/p ">Zwei der Konstanten zeigen eine Diskontinuität der Zeitskala an. Jedes FLV-Tag hat einen Zeitstempel, der seine Position auf der Zeitskala angibt. Zeitstempel synchronisieren die Wiedergabe von Video, Audio und Skriptdaten. Zeitstempel für FLV-Tags desselben Typs (Video, Audio, Skriptdaten) dürfen im Verlauf des FLV-Fortschritts nicht kleiner werden.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytesAction()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.appendBytesAction()</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.appendBytes()</linktext></link></related-links><apiValue id="flash.net:NetStreamAppendBytesAction:END_SEQUENCE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END_SEQUENCE</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, dass die Medienstreamdaten vollständig sind. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">endSequence</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, dass die Medienstreamdaten vollständig sind. Bei einigen Codecs, zum Beispiel H.264, wartet der Byte-Parser, bis der Puffer bis zu einem bestimmten Punkt gefüllt ist, bevor die Wiedergabe beginnt. Übergeben Sie <codeph class="+ topic/ph pr-d/codeph ">END_SEQUENCE</codeph>, um dem Byte-Parser mitzuteilen, dass die Wiedergabe sofort beginnen soll.
    
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamAppendBytesAction:RESET_BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET_BEGIN</apiName><shortdesc class="- topic/shortdesc ">
    
    Zeigt eine Diskontinuität der Zeitskala an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resetBegin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
    Zeigt eine Diskontinuität der Zeitskala an. Leert den FIFO (der aus einem unvollständigen FLV-Tag besteht) und setzt die Zeitskala zurück, um am Zeitstempel der nächsten angehängten Nachricht zu beginnen. Beim nächsten Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> erwartet der Byte-Parser einen Datei-Header und beginnt am Anfang einer Datei.
    
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamAppendBytesAction:RESET_SEEK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET_SEEK</apiName><shortdesc class="- topic/shortdesc ">
    Zeigt eine Diskontinuität der Zeitskala an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resetSeek</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Zeigt eine Diskontinuität der Zeitskala an. Leert den FIFO (der aus einem unvollständigen FLV-Tag besteht) und setzt die Zeitskala zurück, um am Zeitstempel der nächsten angehängten Nachricht zu beginnen. Beim nächsten Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> erwartet der Byte-Parser den Anfang eines FLV-Tags, als ob Sie gerade einen Suchlauf zu einer Stelle in derselben FLV-Datei an einer Tag-Begrenzung ausgeführt hätten.
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupReplicationStrategy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupReplicationStrategy</apiName><shortdesc class="- topic/shortdesc ">
Die NetGroupReplicationStrategy-Klasse ist eine Aufzählung von Konstantenwerten, die zur Einstellung der replicationStrategy-Eigenschaft in der NetGroup-Klasse verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Eine Aufzählung von Konstantenwerten, die zur Einstellung der replicationStrategy-Eigenschaft in der NetGroup-Klasse verwendet werden.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetGroupReplicationStrategy-Klasse ist eine Aufzählung von Konstantenwerten, die zur Einstellung der <codeph class="+ topic/ph pr-d/codeph ">replicationStrategy-Eigenschaft</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">NetGroup</codeph>-Klasse verwendet werden.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/replicationStrategy" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.replicationStrategy</linktext></link></related-links><apiValue id="flash.net:NetGroupReplicationStrategy:LOWEST_FIRST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOWEST_FIRST</apiName><shortdesc class="- topic/shortdesc "> 
    Legt fest, dass beim Abrufen von Objekten von einem Nachbarn zur Erfüllung einer Anforderung die Objekte mit der niedrigsten Indexnummer zuerst angefordert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lowestFirst</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Legt fest, dass beim Abrufen von Objekten von einem Nachbarn zur Erfüllung einer Anforderung die Objekte mit der niedrigsten Indexnummer zuerst angefordert werden.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupReplicationStrategy:RAREST_FIRST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RAREST_FIRST</apiName><shortdesc class="- topic/shortdesc "> 
    Legt fest, dass beim Abrufen von Objekten von einem Nachbarn zur Erfüllung einer Anforderung die Objekte mit den wenigsten Replikaten unter allen Nachbarn zuerst angefordert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rarestFirst</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Legt fest, dass beim Abrufen von Objekten von einem Nachbarn zur Erfüllung einer Anforderung die Objekte mit den wenigsten Replikaten unter allen Nachbarn zuerst angefordert werden.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">NetGroup.addWantObjects()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLLoader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLLoader</apiName><shortdesc class="- topic/shortdesc ">
 Die URLLoader-Klasse lädt die Daten von einer URL als Text, Binärdaten oder URL-kodierte Variablen herunter.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die URLLoader-Klasse lädt die Daten von einer URL als Text, Binärdaten oder URL-kodierte Variablen herunter. Sie eignet sich gut zum Download von Textdateien, XML-Daten oder anderen Informationen, die in einer dynamischen, datengesteuerten Anwendung verwendet werden sollen.
 
 <p class="- topic/p ">Ein URLLoader-Objekt lädt erst alle Daten von einer URL herunter und macht sie dann für Code in den Anwendungen verfügbar. Das Objekt sendet Benachrichtigungen über den Fortschritt des Download-Vorgangs, den Sie mit den Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph> und <codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph> und mit ausgelösten Ereignissen verfolgen können.</p>
 
 <p class="- topic/p ">Wenn sehr große Videodateien wie z. B. FLV-Dateien geladen werden, können Fehler aufgrund von unzureichendem Speicher zurückgegeben werden.
 </p>
 

 
 <p class="- topic/p ">Wenn Sie diese Klasse <ph class="- topic/ph ">in Flash Player und </ph>in AIR-Anwendungsinhalten in anderen Sicherheitssandboxen als in der Sicherheitssandbox der Anwendung verwenden, sollten Sie folgendes Sicherheitsmodell in Betracht ziehen:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Eine SWF-Datei innerhalb der lokalen Dateisystem-Sandbox kann keine Daten aus einer Ressource in der Network-Sandbox laden bzw. keine Daten für diese Ressource bereitstellen. </li><li class="- topic/li "> Standardmäßig müssen die aufrufende SWF-Datei und die von Ihnen geladene URL in genau der gleichen Domäne sein. Eine SWF-Datei unter www.adobe.com kann beispielsweise nur Daten laden, die sich ebenfalls unter www.adobe.com befinden. Legen Sie eine URL-Richtliniendatei auf dem Server ab, der die Daten hostet, um Daten aus einer anderen Domäne zu laden.</li></ul>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 
 </apiDesc><example conref="examples\URLLoaderExample.as" class="- topic/example "> Im folgenden Beispiel werden die in einer lokalen Textdatei gefundenen Daten geladen und angezeigt. Des Weiteren werden Ereignisverarbeitungsinformationen erfasst.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Legen Sie zur Ausführung des Beispiels eine Datei mit dem Namen „urlLoaderExample.txt“ in dem Verzeichnis ab, in dem sich die SWF-Datei befindet. Diese Datei darf nur die folgende Textzeile enthalten: <codeph class="+ topic/ph pr-d/codeph ">answer=42&amp;question=unknown</codeph>
 </p>
 <p class="- topic/p ">Der Beispielcode führt folgende Schritte aus:</p>
 <ol class="- topic/ol "><li class="- topic/li ">Die Konstruktorfunktion erstellt eine URLLoader-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> und eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, wobei es sich um den Standort und den Namen der zu ladenden Datei handelt.</li><li class="- topic/li ">Das Objekt <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> wird an die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> übergeben, die für jedes unterstützte URLLoader-Ereignis Listener hinzufügt.</li><li class="- topic/li ">Dann wird das Objekt <codeph class="+ topic/ph pr-d/codeph ">request</codeph> an die Methode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph> übergeben, die die Textdatei lädt.</li><li class="- topic/li ">Nach Abschluss des Ladevorgangs wird das <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Ereignis ausgelöst, das wiederum die Methode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> auslöst. Die Methode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> erstellt ein URLVariables-Objekt aus dem aus der Datei geladenen Text. Das URLVariables-Objekt konvertiert URL-kodierte Name/Wert-Paare in ActionScript-Eigenschaften, um die Bearbeitung der geladenen Daten zu vereinfachen.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLLoaderExample extends Sprite {
        public function URLLoaderExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("urlLoaderExample.txt");
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
    
            var vars:URLVariables = new URLVariables(loader.data);
            trace("The answer is " + vars.answer);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link><link href="flash.net.xml#URLStream" class="- topic/link "><linktext class="- topic/linktext ">URLStream</linktext></link></related-links><adobeApiEvent id="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Aufruf der load()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Aufruf der load()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Aufruf von URLLoader.load() versucht, über HTTP auf Daten zuzugreifen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Aufruf von URLLoader.load() versucht, über HTTP auf Daten zuzugreifen. <ph class="- topic/ph ">Bei Inhalt, der in Flash Player ausgeführt wird, wird dieses Ereignis nur ausgelöst, wenn die aktuelle Flash Player-Umgebung den Statuscode für die Anforderung erkennen und zurückgeben kann. (Diese Informationen können in einigen Browser-Umgebungen möglicherweise nicht bereitgestellt werden.)</ph> Beachten Sie, dass das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> (falls vorhanden) vor (und zusätzlich zu) jedem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis gesendet wird.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein URLLoader.load()-Aufruf versucht, Daten von einem Server außerhalb der Sicherheitssandbox zu laden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein URLLoader.load()-Aufruf versucht, Daten von einem Server außerhalb der Sicherheitssandbox zu laden. Wird auch aufgelöst, wenn bei einem <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>-Aufruf versucht wird, eine SWZ-Datei zu laden und das Zertifikat ungültig ist oder der Digest-String nicht mit der Komponente übereinstimmt.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn bei einem URLLoader.load()-Aufruf ein schwerwiegender Fehler auftritt und der Download abgebrochen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn bei einem URLLoader.load()-Aufruf ein schwerwiegender Fehler auftritt und der Download abgebrochen wird.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden.
 
 <p class="- topic/p ">Beachten Sie, dass Sie bei Verwendung eines URLLoader-Objekts erst dann auf die Daten zugreifen können, wenn der Ladevorgang abgeschlossen ist. In diesem Fall dient das progress-Ereignis lediglich zur Benachrichtigung über den Fortschritt des Download-Vorgangs. Verwenden Sie ein URLStream-Objekt, um vor Abschluss des Ladevorgangs auf die Daten zuzugreifen. </p>
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, nachdem alle empfangenen Daten dekodiert und in der Eigenschaft „data“ des URLLoader-Objekts abgelegt wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, nachdem alle empfangenen Daten dekodiert und in der Eigenschaft „data“ des URLLoader-Objekts abgelegt wurden. Nach der Auslösung dieses Ereignisses können Sie auf die empfangenen Daten zugreifen.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Download-Vorgang nach dem Aufruf der Methode URLLoader.load() gestartet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird abgesetzt, wenn der Downloadvorgang beginnt.
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Download-Vorgang nach dem Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph> gestartet wird.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:URLLoader:URLLoader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLLoader</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein URLLoader-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URLRequest-Objekt, das die herunterzuladende URL angibt. Ohne diesen Parameter kann der Ladevorgang nicht gestartet werden. Wenn dieser Parameter angegeben wird, beginnt der Ladevorgang unmittelbar (weitere Informationen finden Sie im Abschnitt zu <codeph class="+ topic/ph pr-d/codeph ">load</codeph>).
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein URLLoader-Objekt.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:URLLoader:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
    
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Listener-Funktion, die das Ereignis verarbeitet. Diese Funktion muss ein Ereignisobjekt als einzigen Parameter akzeptieren und darf keinen Wert zurückgeben<ph class="- topic/ph ">, wie das nachfolgende Beispiel zeigt:</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Der Name der Funktion ist beliebig.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Bestimmt, ob der Listener in der Erfassungsphase oder in der Ziel- und Bubbling-Phase arbeitet. Ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, so verarbeitet der Listener das Ereignis nur während der Erfassungsphase und nicht während der Ziel- oder Bubbling-Phase. Hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> hingegen den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, verarbeitet der Listener das Ereignis nur während der Ziel- oder Bubbling-Phase. Um auf das Ereignis in allen drei Phasen zu warten, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> zweimal auf; einmal ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, und beim zweiten Mal hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Prioritätsstufe des Ereignis-Listeners. Die Priorität wird durch eine vorzeichenbehaftete 32-Bit-Ganzzahl zugewiesen. Je höher die Zahl, desto höher die Priorität. Alle Listener mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> werden vor Listenern mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> -1 verarbeitet. Wenn zwei oder mehr Listener die gleiche Priorität aufweisen, werden sie in der Reihenfolge verarbeitet, in der sie hinzugefügt wurden. Die Standardpriorität ist 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob der Verweis auf den Listener stark oder schwach ist. Ein starker Verweis (der Standard) verhindert, dass der Listener von einem Garbage Collector entfernt wird. Ein schwacher Verweis hingegen nicht. <p class="- topic/p ">Funktionen von Mitgliedern auf Klassenebene werden nicht vom Garbagekollektor entfernt. Daher können Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> für Mitgliedsfunktionen auf Klassenebene auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, ohne dass sie vom Garbagekollektor entfernt werden. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen bei einem Listener, der eine verschachtelte innere Funktion ist, wird die Funktion vom Garbagekollektor entfernt. Indem Sie Verweise auf die innere Funktion erstellen (d. h sie in einer anderen Variable speichern), umgehen Sie die Garbage Collection, sodass die Funktion permanent gespeichert bleibt.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird. <ph class="- topic/ph ">Sie können Ereignis-Listener bei allen Knoten in der Anzeigeliste für eine bestimmte Art von Ereignis, Phase oder Priorität registrieren.</ph>
	
	
	
	<p class="- topic/p ">Nachdem Sie einen Ereignis-Listener erfolgreich registriert haben, können Sie seine Priorität nicht durch weitere Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ändern. Um die Priorität eines Listeners zu ändern, müssen Sie zunächst <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph> aufrufen. Anschließend können Sie den Listener mit der neuen Prioritätsstufe erneut aufrufen. </p>
	
	<p class="- topic/p ">Nach der Registrierung des Listeners haben nachfolgende Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> mit einem anderen <codeph class="+ topic/ph pr-d/codeph ">type</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph>-Wert eine separate Listener-Registrierung zur Folge. <ph class="- topic/ph ">Wenn Sie beispielsweise zuerst einen Listener registrieren, für den <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird dieser nur während der Aufnahmephase aktiv sein. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> für dasselbe Listener-Objekt erneut aufrufen, diesmal aber <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, werden zwei separate Listener angelegt: einer, der während der Aufnahmephase aktiv ist und ein zweiter, der während der Ziel- und Bubbling-Phase aktiv ist.</ph>
	</p>
	
	<p class="- topic/p ">Sie können einen Ereignis-Listener nicht nur für die Ziel- oder Bubbling-Phase registrieren. Die beiden Phasen hängen während der Registrierung immer zusammen, da Bubbling nur für übergeordnete Elemente des Zielknotens gilt.</p>
	
	<p class="- topic/p ">Wenn Sie einen Ereignis-Listener nicht mehr brauchen, entfernen sie ihn, indem Sie <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> aufrufen. Andernfalls könnte es zu Speicherproblemen kommen. Ereignis-Listener werden nicht automatisch aus dem Speicher entfernt, da der Garbage Collector den Listener nicht entfernt, solange das auslösende Objekt vorhanden ist (sofern der <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist).</p>
		
	<p class="- topic/p ">Beim Kopieren einer EventDispatcher-Instanz werden zugewiesene Ereignis-Listener nicht kopiert. (Wenn ein neu angelegter Knoten einen Ereignis-Listener benötigt, müssen Sie den Listener nach dem Erstellen des Knotens zuweisen.) Wenn Sie jedoch eine EventDispatcher-Instanz verschieben, werden zugewiesene Ereignis-Listener ebenfalls verschoben.</p>
	
	
	<p class="- topic/p ">Wenn der Ereignis-Listener bei einem Knoten registriert wird, während mit diesem Knoten ein Ereignis durchgeführt wird, so wird der Ereignis-Listener während der aktuellen Phase nicht ausgelöst, kann aber während einer späteren Phase im Ereignisablauf ausgelöst werden, etwa während der Bubbling-Phase.</p>
	
	<p class="- topic/p ">Wird ein Ereignis-Listener von einem Knoten entfernt, während mit dem Knoten ein Ereignis durchgeführt wird, so wird er von den aktuellen Aktionen immer noch ausgelöst. Nachdem er entfernt worden ist, wird der Ereignis-Listener nicht wieder aufgerufen (es sei denn er wird für spätere Verarbeitungsvorgänge erneut aufgerufen). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLLoader:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt den laufenden Ladevorgang.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt den laufenden Ladevorgang. Alle laufenden Ladevorgänge werden sofort beendet. Wenn kein URL-Stream ausgeführt wird, wird ein Fehler ausgegeben.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLLoader:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
     Sendet und lädt Daten von der angegebenen URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmte nicht zulässige HTTP-Anforderungsheader sind möglicherweise in <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeader</codeph>-Objekten nicht enthalten. Weitere Informationen finden Sie in der Beschreibung der URLRequestHeader-Klasse.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann folgende Ursachen haben: 1) <ph class="- topic/ph ">Flash Player oder </ph>AIR kann den <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph>-Parameter nicht von UTF8 in MBCS konvertieren. Dieser Fehler trifft zu, wenn das an <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Vorgangs eingestellt ist und wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist. 2) <ph class="- topic/ph ">Flash Player oder</ph> AIR kann <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> keinen Speicher zuweisen. Dieser Fehler trifft zu, wenn das an <codeph class="+ topic/ph pr-d/codeph ">load</codeph> übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgangs eingestellt ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können dies umgehen, indem Sie die entsprechende Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren.
     
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sie versuchen, eine Verbindung mit einem normalerweise reservierten Port herzustellen. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert des request-Parameters oder der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> des übergebenen URLRequest-Objekts ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URLRequest-Objekt, das die herunterzuladende URL angibt.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet und lädt Daten von der angegebenen URL. Die Daten können als Text, unformatierte Binärdaten oder URL-kodierte Variablen empfangen werden, je nachdem, welchen Wert Sie für die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> festlegen. Beachten Sie, dass „Text“ der Standardwert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> ist. Wenn Sie Daten an die angegebene URL senden möchten, können Sie die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> im URLRequest-Objekt festlegen.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Enthält eine geladene Datei Nicht-ASCII-Zeichen (wie z. B. in vielen Sprachen außerhalb des englischen Sprachraums), wird empfohlen, dass Sie die Datei im Format UTF-8 oder UTF-16 und nicht in einem Unicode-fremden Format (z. B. ASCII) speichern.</p>
     
     <p class="- topic/p "> Eine SWF-Datei innerhalb der lokalen Dateisystem-Sandbox kann keine Daten aus einer Ressource in der Network-Sandbox laden bzw. keine Daten für diese Ressource bereitstellen.</p>
     
     <p class="- topic/p "> Standardmäßig müssen die aufrufende SWF-Datei und die von Ihnen geladene URL in genau der gleichen Domäne sein. Eine SWF-Datei unter www.adobe.com kann beispielsweise nur Daten laden, die sich ebenfalls unter www.adobe.com befinden. Legen Sie eine URL-Richtliniendatei auf dem Server ab, der die Daten hostet, um Daten aus einer anderen Domäne zu laden.</p>
     
     <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     <p class="- topic/p "> Wenn Sie in Flash Player 10 oder höher einen Multipart-Content-Type verwenden (z. B. „multipart/form-data“), der einen Upload enthält (gekennzeichnet durch einen „filename“-Parameter in einem „content-disposition“-Header innerhalb des POST-Body), so unterliegt die POST-Methode den Sicherheitsregeln für Uploads:</p>
     <ul class="- topic/ul "><li class="- topic/li ">Der POST-Vorgang muss als Reaktion auf eine durch den Benutzer initiierte Aktion, z. B. Mausklick oder Tastendruck, erfolgen.</li><li class="- topic/li ">Ist die POST-Methode domänenübergreifend (das POST-Ziel befindet sich auf einem anderen Server als die SWF-Datei, die die POST-Anforderung sendet), so muss der Zielserver eine URL-Richtliniendatei bereitstellen, die den domänenübergreifenden Zugriff erlaubt.</li></ul>
     <p class="- topic/p ">Für alle mehrteiligen Content-Typen muss ebenfalls die Syntax nach Standard RFC2046 gültig sein. Scheint die Syntax ungültig zu sein, so unterliegt die POST-Methode den Sicherheitsregeln für Uploads.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     
     </apiDesc><example conref="examples\URLLoader_loadExample.as" class="- topic/example "> Im folgenden Beispiel wird eine XML-Datei geladen und der Inhalt der jeweils ersten Argumente der Elemente wird in einem Textfeld angezeigt.
 
 <p class="- topic/p ">Es wird ein <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph>-Objekt erstellt, um den Speicherort der XML-Datei anzugeben, die sich in diesem Beispiel im selben Verzeichnis wie die SWF-Datei befindet. Die Datei wird in einen <codeph class="+ topic/ph pr-d/codeph ">try...catch</codeph>-Block geladen, um Fehler abzufangen, die möglicherweise auftreten. (Hier werden <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Fehler abgefangen.) Wenn ein <codeph class="+ topic/ph pr-d/codeph ">IO_ERROR</codeph>-Ereignis eintritt, wird die <codeph class="+ topic/ph pr-d/codeph ">errorHandler()</codeph>-Methode aufgerufen, die eine Fehlermeldung in das Textfeld <codeph class="+ topic/ph pr-d/codeph ">xmlTextField</codeph> schreibt. Nachdem die Daten aus der XML-Datei empfangen wurden und in der data-Eigenschaft des URLLoader-Objekts <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> platziert wurden, wird das <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Ereignis ausgelöst, und die <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph>-Methode wird aufgerufen.</p>
 
 <p class="- topic/p ">In der <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph>-Methode wird ein <codeph class="+ topic/ph pr-d/codeph ">try...catch</codeph>-Block verwendet, um ggf. Parsingfehler, die beim Konvertieren der geladenen Daten aus der Datei in ein XML-Objekt auftreten, abzufangen. Die <codeph class="+ topic/ph pr-d/codeph ">readNodes()</codeph>-Methode geht rekursiv durch alle Elemente in den Knoten des XML-Dokuments und hängt das Textfeld <codeph class="+ topic/ph pr-d/codeph ">xmlTextField</codeph> mit einer Liste der ersten Attribute aller Elemente an.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.xml.*;
    import flash.events.IOErrorEvent;
  
    public class URLLoader_loadExample extends Sprite {
        private var xmlTextField:TextField = new TextField();
        private var externalXML:XML;    
        private var loader:URLLoader;

        public function URLLoader_loadExample() {
            var request:URLRequest = new URLRequest("xmlFile.xml");

            loader = new URLLoader();
            
            try {
                loader.load(request);
            }
            catch (error:SecurityError)
            {
                trace("A SecurityError has occurred.");
            }

             loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);

            xmlTextField.x = 10;
            xmlTextField.y = 10;
            xmlTextField.background = true;
            xmlTextField.autoSize = TextFieldAutoSize.LEFT;

            addChild(xmlTextField);
        }

        private function loaderCompleteHandler(event:Event):void {

                try {
                    externalXML = new XML(loader.data);
                    readNodes(externalXML);    
                } catch (e:TypeError) {
                    trace("Could not parse the XML file.");
                }
        }

        private function readNodes(node:XML):void {

                for each (var element:XML in node.elements()) {
                    xmlTextField.appendText(element.attributes()[0] + "\n");

                    readNodes(element);
                }    
        }

        private function errorHandler(e:IOErrorEvent):void {
            xmlTextField.text = "Had problem loading the XML File.";
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link><link href="flash.net.xml#URLRequest/requestHeaders" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.requestHeaders</linktext></link><link href="flash.net.xml#URLRequest/data" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.data</linktext></link><link href="flash.net.xml#URLRequest/digest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.digest</linktext></link></related-links><adobeApiEvent id="flash.net:URLLoader:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird nach dem erfolgreichen Laden von Daten ausgelöst.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird nach dem erfolgreichen Laden von Daten ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Zugriff über HTTP erfolgt und die aktuelle Flash Player-Umgebung den Empfang von Statuscodes unterstützt, werden diese Ereignisse möglicherweise zusätzlich zu allen <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>Ereignissen empfangen.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wenn der Zugriff über HTTP erfolgt und die aktuelle Flash Player-Umgebung den Empfang von Statuscodes unterstützt, werden diese Ereignisse möglicherweise zusätzlich zu allen complete- oder error-Ereignissen empfangen.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ladevorgang konnte nicht abgeschlossen werden.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Der Ladevorgang konnte nicht abgeschlossen werden.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bei einem Ladevorgang wurde versucht, Daten von einem Server außerhalb der Sicherheitssandbox der aufrufenden Funktion abzurufen. Sie können dies umgehen, indem Sie eine Richtliniendatei auf dem Server verwenden.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Bei einem Ladevorgang wurde versucht, Daten von einem Server außerhalb der Sicherheitssandbox der aufrufenden Funktion abzurufen.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Ladevorgang versuchte, eine SWZ-Datei (Adobe-Plattformkomponente) zu laden, aber das Zertifikat ist entweder ungültig oder der Digest stimmt nicht mit der Komponente überein.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Ein Ladevorgang versuchte, eine SWZ-Datei (Adobe-Plattformkomponente) zu laden, aber das Zertifikat ist entweder ungültig oder der Digest stimmt nicht mit der Komponente überein.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird beim Start eines Ladevorgangs ausgelöst.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird beim Start eines Ladevorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Aufruf der load()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:URLLoader:bytesLoaded" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Anzahl der Byte an, die bereits geladen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Anzahl der Byte an, die bereits geladen wurden.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoader:bytesTotal" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Gesamtanzahl der Byte der heruntergeladenen Daten an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Gesamtanzahl der Byte der heruntergeladenen Daten an. Diese Eigenschaft weist während des Ladevorgangs den Wert 0 auf und wird nach Abschluss des Vorgangs mit dem entsprechenden Wert gefüllt. Ein fehlender Content-Length-Header führt dazu, dass bytesTotal unbestimmt ist.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoader:dataFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataFormat</apiName><shortdesc class="- topic/shortdesc ">
     Steuert, ob die heruntergeladenen Daten als Text (URLLoaderDataFormat.TEXT), unformatierte Binärdaten (URLLoaderDataFormat.BINARY) oder URL-kodierte Variablen (URLLoaderDataFormat.VARIABLES) empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>URLLoaderDataFormat.TEXT
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Steuert, wie die heruntergeladenen Daten empfangen werden.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Steuert, ob die heruntergeladenen Daten als Text (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph>), unformatierte Binärdaten (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph>) oder URL-kodierte Variablen (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph>) empfangen werden.
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph> aufweist, wird ein String empfangen, der den Text aus der geladenen Datei enthält.</p>
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph> aufweist, werden die Daten als ByteArray-Objekt empfangen, das unformatierte Binärdaten enthält.</p>
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph> aufweist, werden die Daten als URLVariables-Objekt empfangen, das URL-kodierte Variablen enthält.</p>
     
     </apiDesc><example conref="examples\URLLoader_dataFormat.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie externe Textdateien laden können. Verwenden Sie die URLRequest- und URLLoader-Klassen und warten Sie auf das complete-Ereignis. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/02/26/loading-text-files-using-the-urlloader-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var PATH:String = "lorem.txt";
var urlRequest:URLRequest = new URLRequest(PATH);
var urlLoader:URLLoader = new URLLoader();
urlLoader.dataFormat = URLLoaderDataFormat.TEXT; // default
urlLoader.addEventListener(Event.COMPLETE, urlLoader_complete);
urlLoader.load(urlRequest);
 
function urlLoader_complete(evt:Event):void {
    textArea.text = urlLoader.data;
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoaderDataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoaderDataFormat</linktext></link></related-links></apiValue><apiValue id="flash.net:URLLoader:data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Die bei dem Ladevorgang empfangenen Daten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die bei dem Ladevorgang empfangenen Daten. Dieser Eigenschaft werden nur dann Werte zugewiesen, wenn der Ladevorgang abgeschlossen wurde. Das Format der Daten hängt von der Einstellung der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> ab:
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph> gesetzt ist, wird ein String empfangen, der den Text aus der geladenen Datei enthält.</p>
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph> gesetzt ist, werden die Daten als ByteArray-Objekt empfangen, das unformatierte Binärdaten enthält.</p>
     
     <p class="- topic/p ">Wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph> gesetzt ist, werden die Daten als URLVariables-Objekt empfangen, das URL-kodierte Variablen enthält.</p>
     
     </apiDesc><example conref="examples\URLLoader_data.as" class="- topic/example "> Das folgende Beispiel zeigt, wie Sie eine externe Textdatei mit URL-kodierten Variablen in ein ActionScript 3.0-Dokument laden. Dazu wird die URLLoader-Klasse verwendet und die dataFormat-Eigenschaft auf die URLLoaderDataFormat.VARIABLES-Konstante ("variables") gesetzt. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/02/27/loading-url-encoded-variables-into-a-flash-application-using-the-urlloader-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
//params.txt is a local file that includes: firstName=Tom&amp;lastName=Jones
var lbl:TextField = new TextField();
var urlRequest:URLRequest = new URLRequest("params.txt");
var urlLoader:URLLoader = new URLLoader();
urlLoader.dataFormat = URLLoaderDataFormat.VARIABLES;
urlLoader.addEventListener(Event.COMPLETE, urlLoader_complete);
urlLoader.load(urlRequest);
 
function urlLoader_complete(evt:Event):void {
    lbl.text = urlLoader.data.lastName + "," + urlLoader.data.firstName;
    addChild(lbl);
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoaderDataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoaderDataFormat</linktext></link><link href="flash.net.xml#URLLoader/dataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.dataFormat</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:IDynamicPropertyOutput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IDynamicPropertyOutput</apiName><shortdesc class="- topic/shortdesc ">
	 Diese Schnittstelle steuert die Serialisierung der dynamischen Eigenschaften dynamischer Objekte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Diese Schnittstelle steuert die Serialisierung der dynamischen Eigenschaften dynamischer Objekte. Sie verwenden diese Schnittstelle mit der IDynamicPropertyWriter-Schnittstelle und der <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph>-Eigenschaft.
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links><apiOperation id="flash.net:IDynamicPropertyOutput:flash.net:IDynamicPropertyOutput:writeDynamicProperty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDynamicProperty</apiName><shortdesc class="- topic/shortdesc ">
		 Fügt der Binärausgabe eines serialisierten Objekts eine dynamische Eigenschaft hinzu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der Eigenschaft. Sie können diesen Parameter verwenden, um einer vorhandenen Eigenschaft des dynamischen Objekts einen Namen zuzuweisen oder um eine neue Eigenschaft zu erstellen.  
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert, der für die angegebene Eigenschaft festgelegt werden soll.
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Fügt der Binärausgabe eines serialisierten Objekts eine dynamische Eigenschaft hinzu. Wenn das Objekt danach gelesen wird (mit einer Methode wie <codeph class="+ topic/ph pr-d/codeph ">readObject</codeph>), enthält es die neue Eigenschaft. Sie können diese Methode verwenden, um Eigenschaften dynamischer Objekte aus der Serialisierung auszuschließen, um Eigenschaften dynamischer Objekte Werte zuzuweisen und um neue Eigenschaften für dynamische Objekte zu erstellen.
		 
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamPlayOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayOptions</apiName><shortdesc class="- topic/shortdesc ">
 
 Die NetStreamPlayOptions-Klasse legt die verschiedenen Optionen fest, die an die NetStream.play2()-Methode übergeben werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die NetStreamPlayOptions-Klasse legt die verschiedenen Optionen fest, die an die NetStream.play2()-Methode übergeben werden können.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Die NetStreamPlayOptions-Klasse legt die verschiedenen Optionen fest, die an die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Methode übergeben werden können. Sie übergeben ein NetStreamPlayOptions-Objekt an <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph> und die Eigenschaften der Klasse legen die verschiedenen Optionen fest. Der primäre Zweck dieser Klasse ist, dynamisch Übergänge zwischen Streams zu implementieren, entweder, um zu Streams mit anderen Bitraten und Größen zu wechseln oder um anderen Inhalt in einer Wiedergabeliste auszuwählen.
 
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.net:NetStreamPlayOptions:NetStreamPlayOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayOptions</apiName><shortdesc class="- topic/shortdesc ">
     
     Erstellt ein NetStreamPlayOptions-Objekt, um die Optionen festzulegen, die an die NetStream.play2()-Methode übergeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Erstellt ein NetStreamPlayOptions-Objekt, um die Optionen festzulegen, die an die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Methode übergeben werden. 
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiConstructor><apiValue id="flash.net:NetStreamPlayOptions:len" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">len</apiName><shortdesc class="- topic/shortdesc ">
    Die Wiedergabedauer in Sekunden für den Stream, der in streamName festgelegt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die Wiedergabedauer in Sekunden für den Stream, der in streamName festgelegt wird.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Wiedergabedauer in Sekunden für den Stream, der in <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> festgelegt wird. Der Standardwert ist -1. Hiermit spielt Flash Player entweder einen Live-Stream ab, bis er nicht mehr verfügbar ist, oder einen aufgenommenen Stream, bis er endet. Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">len</codeph>0 angeben, spielt Flash Player den einen Frame ab, der sich <codeph class="+ topic/ph pr-d/codeph ">start</codeph>-Sekunden vom Anfang eines aufgenommenen Streams befindet (angenommen, dass <codeph class="+ topic/ph pr-d/codeph ">start</codeph> gleich oder größer als 0 ist).
    <p class="- topic/p ">Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">len</codeph> eine positive Zahl eingeben, spielt Flash Player <codeph class="+ topic/ph pr-d/codeph ">len</codeph>-Sekunden lang eine Live-Stream ab, nachdem er verfügbar wird, oder <codeph class="+ topic/ph pr-d/codeph ">len</codeph>-Sekunden lang einen aufgenommenen Stream ab. (Wenn ein Stream vor den <codeph class="+ topic/ph pr-d/codeph ">len</codeph>-Sekunden endet, endet die Wiedergabe, wenn der Stream endet.)</p> 
    <p class="- topic/p ">Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">len</codeph> eine andere negative Zahl als -1 eingeben, interpretiert Flash Player den Wert so, als wäre er -1.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/start" class="- topic/link "><linktext class="- topic/linktext ">start</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:offset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offset</apiName><shortdesc class="- topic/shortdesc ">
     Der Zeitpunkt nach Sekunden in der Streamwiedergabe, bei dem der Wechsel zu einem neuen Stream erfolgen soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Zeitpunkt nach Sekunden in der Streamwiedergabe, bei dem der Wechsel zu einem neuen Stream erfolgen soll. Der <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>-Parameter wird verwendet, wenn ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Aufruf mit dem Übergangsmodus <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTransitions.SWITCH</codeph> erfolgt. Flash Media Server sucht nach dem nächsten Wechselpunkt nach der angegebenen Offset-Zeit und beginnt ab diesem Punkt mit dem Streamen des neuen Streams. 
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Schneller Wechsel</b></p>
     
     <p class="- topic/p ">Wenn diese Eigenschaft angegeben wird, leert Flash Media Server den aktuellen Stream und beginnt sofort mit dem Streamen des neuen Streams ab der angegebenen Indexposition, ohne auf ein Schlüsselbild zu warten. Alle Daten nach dem Offset, die bereits aus einem vorherigen Stream gepuffert wurden, werden entfernt. Mit dieser Technik erfolgt der Wechsel zu einem neuen Stream schneller als mit der Standardvorgehensweise, da die gepufferten Daten aus dem älteren Stream nicht erst abgespielt werden müssen. </p>
     
     <p class="- topic/p ">Der Standardwert von <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> ist -1, was den schnellen Wechsel angibt. In diesem Modus erfolgt der Wechsel im ersten verfügbaren Schlüsselbild nach <codeph class="+ topic/ph pr-d/codeph ">netstream.time + 3</codeph>, was ungefähr 3 Sekunden später als der Wiedergabepunkt ist.</p>
     
     <p class="- topic/p ">Der Offset-Wert muss höher als die aktuelle Wiedergabezeit (<codeph class="+ topic/ph pr-d/codeph ">Netstream.time</codeph>). Wenn der Wert geringer ist, wird ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph>-Statusereignis gesendet.</p>
     
     <p class="- topic/p ">Weitere Informationen finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_fastswitch_en" scope="external" class="- topic/xref ">„Fast switching between streams“</xref> im <i class="+ topic/ph hi-d/i ">Adobe Flash Media Server Developer's Guide</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/start" class="- topic/link "><linktext class="- topic/linktext ">start</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">NetStream.time</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions/SWITCH" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions.SWITCH</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:oldStreamName" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">oldStreamName</apiName><shortdesc class="- topic/shortdesc ">
    Der Name des alten Streams oder des Streams, von dem aus der Übergang stattfinden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Name des alten Streams oder des Streams, von dem aus der Übergang stattfinden soll. Wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> verwendet wird, um nur einen Stream abzuspielen (und keinen Übergang durchzuführen), muss der Wert dieser Eigenschaft entweder null oder undefiniert sein. Geben Sie andernfalls den Stream an, von dem der Übergang erfolgen soll.   
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">streamName</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
    Die Startzeit für streamName in Sekunden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die Startzeit für streamName in Sekunden.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Startzeit für <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> in Sekunden. Gültige Werte sind -2, -1 und 0.
    
    <p class="- topic/p ">Der Standardwert für <codeph class="+ topic/ph pr-d/codeph ">start</codeph> ist -2. Bei diesem Wert versucht Flash Player zuerst, den in <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> angegebenen Live-Stream abzuspielen. Wenn kein Live-Stream mit diesem Namen gefunden wird, spielt Flash Player den in <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> angegebenen aufgenommenen Stream ab. Wenn weder ein Live- noch ein aufgenommener Stream gefunden wird, öffnet Flash Player einen Live-Stream mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>, obgleich niemand etwas auf diesem Stream veröffentlicht hat. Wenn jemand beginnt, auf diesem Stream zu veröffentlichen, beginnt Flash Player, diesen Stream abzuspielen.</p>
    
    <p class="- topic/p ">Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">start</codeph> eingeben, spielt Flash Player nur den in <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> angegebenen Live-Stream ab. Wenn kein Live-Stream gefunden wird, wartet Flash Player unendlich lange auf ihn, sofern <codeph class="+ topic/ph pr-d/codeph ">len</codeph> auf -1 gesetzt ist. Ist <codeph class="+ topic/ph pr-d/codeph ">len</codeph> auf einen anderen Wert gesetzt, wartet Flash Player <codeph class="+ topic/ph pr-d/codeph ">len</codeph>-Sekunden, bevor es beginnt, den nächsten Stream in der Wiedergabeliste abzuspielen.</p>
    
    <p class="- topic/p "> Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">start</codeph> eine 0 oder eine positive Zahl eingeben, spielt Flash Player nur einen aufgenommenen Stream mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> ab und beginnt bei <codeph class="+ topic/ph pr-d/codeph ">start</codeph>-Sekunden vom Beginn des Streams. Wenn kein aufgenommener Stream gefunden wird, beginnt Flash Player, sofort den nächsten Stream in der Wiedergabeliste abzuspielen.</p>
    
    <p class="- topic/p ">Wenn Sie für <codeph class="+ topic/ph pr-d/codeph ">start</codeph> eine andere negative Zahl als -1 oder -2 eingeben, interpretiert Flash Player den Wert so, als wäre er -2.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/len" class="- topic/link "><linktext class="- topic/linktext ">len</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:streamName" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">streamName</apiName><shortdesc class="- topic/shortdesc ">
    Der Name des neuen Streams, zu welchem der Übergang stattfinden soll oder der wiedergegeben werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Name des neuen Streams, zu welchem der Übergang stattfinden soll oder der wiedergegeben werden soll. Wenn <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> 0 oder undefiniert ist, beginnt <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> einfach mit der Wiedergabe von<codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Wenn <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> angegeben ist und <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> aufgerufen wird, geht <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> zu <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> (über den in der <codeph class="+ topic/ph pr-d/codeph ">transition</codeph>-Eigenschaft angegebenen Übergangsmodus) über. 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">oldStreamName</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:transition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">transition</apiName><shortdesc class="- topic/shortdesc ">
    Der Modus, in dem streamName wiedergegeben wird oder in welchem zu streamName übergegangen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Modus, in dem streamName wiedergegeben wird oder in welchem zu streamName übergegangen wird.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Modus, in dem streamName wiedergegeben wird oder in welchem zu <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> übergegangen wird. Mögliche Werte sind Konstanten von der NetStreamPlayTransitions-Klasse. Der Übergangsmodus resultiert abhängig davon, ob <codeph class="+ topic/ph pr-d/codeph ">Netstream.play2()</codeph> zur Wiedergabe oder zum Übergang eines Streams aufgerufen wird, in unterschiedlichen Verhaltensweisen. Weitere Informationen zu Übergangsmodi finden Sie unter „NetStreamPlayTransitions-Klasse“.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamMulticastInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamMulticastInfo</apiName><shortdesc class="- topic/shortdesc ">
Die NetStreamMulticastInfo-Klasse gibt verschiedene QoS-Statistiken (Quality of Service, Dienstgüte) an, die mit dem zugrundeliegenden RTMFP-Peer-to-Peer- und IP-Multicast-Streamtransport eines NetStream-Objekts zusammenhängen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetStreamMulticastInfo-Klasse gibt verschiedene QoS-Statistiken (Quality of Service, Dienstgüte) an, die mit dem zugrundeliegenden RTMFP-Peer-to-Peer- und IP-Multicast-Streamtransport eines NetStream-Objekts zusammenhängen. Ein NetStreamMulticastInfo-Objekt wird von der <codeph class="+ topic/ph pr-d/codeph ">NetStream.multicastInfo</codeph>-Eigenschaft zurückgegeben.

<p class="- topic/p ">Eigenschaften, die Zahlen zurückgeben, repräsentieren Gesamtsummen, die ab dem Anfang des Multicaststreams berechnet werden. Diese Eigenschaftentypen schließen die Anzahl der gesendeten Medienbytes oder die Anzahl der empfangenen Medienfragmentmeldungen mit ein. Eigenschaften, die Raten sind, repräsentieren eine Momentaufnahme der aktuellen Rate in Form des Durchschnittswerts von einigen Sekunden. Diese Eigenschaftentypen schließen die Rate mit ein, mit der ein lokaler Knoten Daten empfängt. </p>

<p class="- topic/p ">Um eine Liste der Werte anzuzeigen, die im NetStreamMulticastInfo-Objekt enthalten sind, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStreamMulticastInfo.toString()</codeph>-Methode.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/toString()" class="- topic/link "><linktext class="- topic/linktext ">toString()</linktext></link><link href="flash.net.xml#NetStream/multicastInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.multicastInfo</linktext></link></related-links><apiOperation id="flash.net:NetStreamMulticastInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der die Eigenschaften des NetStreamMulticastInfo-Objekts auflistet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die Werte der Eigenschaften des NetStreamMulticastInfo-Objekts enthält
    
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der die Eigenschaften des NetStreamMulticastInfo-Objekts auflistet.
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetStreamMulticastInfo:bytesPushedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPushedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die proaktiv von Peers gesendet und vom lokalen Knoten empfangen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die proaktiv von Peers gesendet und vom lokalen Knoten empfangen wurden.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesPushedToPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPushedToPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten proaktiv an Peers gesendet hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten proaktiv an Peers gesendet hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesReceivedFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesReceivedFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten über IP-Multicast empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten über IP-Multicast empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesReceivedFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesReceivedFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten vom Server empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten vom Server empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesRequestedByPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesRequestedByPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten an Peers gesendet hat, um auf Anforderungen von diesen Peers nach bestimmten Fragmenten zu antworten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten an Peers gesendet hat, um auf Anforderungen von diesen Peers nach bestimmten Fragmenten zu antworten.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesRequestedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesRequestedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten angefordert und von Peers empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienbytes an, die der lokale Knoten angefordert und von Peers empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsPushedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsPushedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die proaktiv von Peers gesendet und vom lokalen Knoten empfangen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die proaktiv von Peers gesendet und vom lokalen Knoten empfangen wurden.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsPushedToPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsPushedToPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten proaktiv an Peers gesendet hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten proaktiv an Peers gesendet hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsReceivedFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten über IP-Multicast empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten über IP-Multicast empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsReceivedFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten vom Server empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten vom Server empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsRequestedByPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsRequestedByPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten an Peers gesendet hat, um auf Anforderungen von diesen Peers nach bestimmten Fragmenten zu antworten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten an Peers gesendet hat, um auf Anforderungen von diesen Peers nach bestimmten Fragmenten zu antworten.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsRequestedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsRequestedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten angefordert und von Peers empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die Anzahl der Medienfragmentnachrichten an, die der lokale Knoten angefordert und von Peers empfangen hat.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen von Peers empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen von Peers empfängt.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecondFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Daten über IP-Multicast empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Daten über IP-Multicast empfängt.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecondFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Daten vom Server empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Daten vom Server empfängt.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Mediendaten von Peers, vom Server und über IP-Multicast empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Mediendaten von Peers, vom Server und über IP-Multicast empfängt.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecondToServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendControlBytesPerSecondToServer</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen an den Server sendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen an den Server sendet.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen an Peers und an den Server sendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Steuerungsauslastungsmeldungen an Peers und an den Server sendet.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecondToServer" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecondToServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der Mediendaten vom lokalen Knoten an Peers gesendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt in Byte pro Sekunde die Rate an, mit der Mediendaten vom lokalen Knoten an Peers gesendet werden.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecondToServer" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecondToServer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetworkInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetworkInfo</apiName><shortdesc class="- topic/shortdesc ">
 Die NetworkInfo-Klasse stellt Informationen zu den Netzwerkschnittstellen eines Computers bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NetworkInfo-Klasse stellt Informationen zu den Netzwerkschnittstellen eines Computers bereit. 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird unter allen Desktopbetriebssystemen und auf Geräten mit AIR für TV unterstützt, jedoch nicht auf mobilen Geräten. Mit der <codeph class="+ topic/ph pr-d/codeph ">NetworkInfo.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">Das NetworkInfo-Objekt ist ein Singleton. Um das einzelne NetworkInfo-Objekt abzurufen, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetworkInfo.networkInfo</codeph>-Eigenschaft. Rufen Sie nicht den Klassenkonstruktor, <codeph class="+ topic/ph pr-d/codeph ">new NetworkInfo()</codeph>, auf.</p>
 
 <p class="- topic/p ">Die meisten Computer verfügen über eine oder mehrere Schnittstellen, zum Beispiel eine kabelgebundene und eine drahtlose Netzwerkschnittstelle. Möglicherweise gib es noch weitere Schnittstellen wie VPN-, Loopback- oder virtuelle Schnittstellen.</p>
 
 <p class="- topic/p ">Ein NetworkInfo-Objekt setzt ein Wechselereignis ab, wenn die verfügbaren Schnittstellen geändert werden. Rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">findInterfaces()</codeph>-Methode auf, um die aktuellen Netzwerkinformationen anzuzeigen.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Das NativeApplication-Objekt setzt auch Netzwerkänderungsereignisse ab.</p>
 
 </apiDesc><example conref="examples\NetInfoExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInterface" class="- topic/link "><linktext class="- topic/linktext ">NetworkInterface-Klasse</linktext></link><link href="flash.net.xml#InterfaceAddress" class="- topic/link "><linktext class="- topic/linktext ">InterfaceAddress-Klasse</linktext></link></related-links><adobeApiEvent id="flash.net:NetworkInfo_flash.events.Event.NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn sich die Netzwerkschnittstellen geändert haben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn sich die Netzwerkschnittstellen geändert haben.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:NetworkInfo:findInterfaces" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findInterfaces</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Liste der Netzwerkschnittstellen zurück, mit diesem Computer verknüpft sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array von NetworkInterface- Objekten
     
     </apiDesc><apiType value="Vector$flash.net:NetworkInterface" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Liste der Netzwerkschnittstellen zurück, mit diesem Computer verknüpft sind. 
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetworkInfo:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, das Clientsystem den Zugriff auf Netzwerkschnittstelleninformationen unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><language>3.0 
	 </language></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, das Clientsystem den Zugriff auf Netzwerkschnittstelleninformationen unterstützt.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInfo:networkInfo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">networkInfo</apiName><shortdesc class="- topic/shortdesc ">
	 Die Singleton-Instanz des NetworkInfo-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetworkInfo</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn Inhalt, der außerhalb der Sicherheitssandbox der AIR-Anwendung ausgeführt wird, auf diese Eigenschaft zugreift.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Singleton-Instanz des NetworkInfo-Objekts.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLVariables" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLVariables</apiName><shortdesc class="- topic/shortdesc ">
 
 Mit der URLVariables-Klasse können Sie Variablen zwischen einer Anwendung und einem Server übertragen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, constructor
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Mit der URLVariables-Klasse können Sie Variablen zwischen einer Anwendung und einem Server übertragen. Verwenden Sie URLVariables-Objekte mit Methoden der URLLoader-Klasse, mit der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft der URLRequest-Klasse und mit flash.net-Paketfunktionen.
 
 </apiDesc><example conref="examples\URLVariablesExample.as" class="- topic/example "> Im folgenden Beispiel wird die Remote-Anwendung unter http://www.[yourDomain].com/application.jsp in einem neuen Browserfenster geöffnet, und in einem URLVariables-Objekt erfasste Daten zu einer Benutzersitzung werden an die Anwendung übergeben. 
  
 <p class="- topic/p ">Wichtige Beispielauszüge:</p>
 <ol class="- topic/ol "><li class="- topic/li ">Die Konstruktorfunktion erstellt eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, wobei die URL der Remote-Anwendung als Parameter verwendet wird.</li><li class="- topic/li ">Ein URLVariables-Objekt wird erstellt, und zwei seiner Eigenschaften werden Werte zugewiesen.</li><li class="- topic/li ">Das URLVariables-Objekt wird der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des URLRequest-Objekts zugewiesen.</li><li class="- topic/li ">Das Beispiel ruft <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph> auf, wodurch ein neues Browserfenster mit der URL der Remote-Anwendung geöffnet wird.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweis:</b> Zur Ausführung des Beispiels muss die URL der Remote-Anwendung durch eine gültige URL ersetzt werden. Darüber hinaus benötigen Sie Servercode, um die von Flash Player im URLVariables-Objekt erfassten Informationen auszuführen.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class URLVariablesExample extends Sprite {

        public function URLVariablesExample() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link></related-links><apiConstructor id="flash.net:URLVariables:URLVariables" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLVariables</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein neues URLVariables-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URL-kodierter String mit Name/Wert-Paaren.
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein neues URLVariables-Objekt. Sie übergeben URLVariables-Objekte an die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft von URLRequest-Objekten.
	 
	 <p class="- topic/p ">Wenn Sie den URLVariables-Konstruktor mit einem String aufrufen, wird automatisch die <codeph class="+ topic/ph pr-d/codeph ">decode()</codeph>-Methode zur Konvertierung der Zeichenfolge in Eigenschaften des URLVariables-Objekts aufgerufen.</p>
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:URLVariables:decode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">decode</apiName><shortdesc class="- topic/shortdesc ">
	 Wandelt den Variablenstring in Eigenschaften des angegebenen URLVariables-Objekts um.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, URLVariables.decode, decode
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Quellparameter muss ein URL-kodierter Abfragestring mit Name/Wert-Paaren sein.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URL-kodierter Abfragestring mit Name/Wert-Paaren.	 
	 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wandelt den Variablenstring in Eigenschaften des angegebenen URLVariables-Objekts um.
	 <p class="- topic/p ">Diese Methode wird intern von den URLVariables-Ereignissen verwendet. Die meisten Benutzer müssen diese Methode nicht direkt aufrufen.</p>
	 
	 </apiDesc><example conref="examples\URLVariables_decode.as" class="- topic/example "> Die folgenden Beispiele zeigen, wie Sie URL-kodierte Strings analysieren können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/02/27/decoding-url-encoded-strings-in-a-flash-application-using-the-urlvariables-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// The first method passes the string to be decoded to the URLVariables class constructor:
var urlVariables:URLVariables = new URLVariables("firstName=Tom&amp;lastName=Jones");
lbl.text = urlVariables.lastName + "," + urlVariables.firstName;

// The second method uses the decode() method to parse the URL encoded string:
var urlVariables:URLVariables = new URLVariables();
urlVariables.decode("firstName=Tom&amp;lastName=Jones");
lbl.text = urlVariables.lastName + "," + urlVariables.firstName;
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLVariables:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt einen String mit allen aufzählbaren Variablen im MIME-Inhaltskodierungsformat „application/x-www-form-urlencoded“ zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, URLVariables.toString, toString
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URL-kodierter String mit Name/Wert-Paaren.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt einen String mit allen aufzählbaren Variablen im MIME-Inhaltskodierungsformat <i class="+ topic/ph hi-d/i ">application/x-www-form-urlencoded</i> zurück.
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:IDynamicPropertyWriter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IDynamicPropertyWriter</apiName><shortdesc class="- topic/shortdesc ">
     Diese Schnittstelle wird zusammen mit der Schnittstelle „IDynamicPropertyOutput“ zur Steuerung der Serialisierung von dynamischen Eigenschaften dynamischer Objekte verwendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Diese Schnittstelle wird zusammen mit der Schnittstelle „IDynamicPropertyOutput“ zur Steuerung der Serialisierung von dynamischen Eigenschaften dynamischer Objekte verwendet. Weisen Sie zur Verwendung dieser Schnittstelle ein Objekt zu, das die Schnittstelle „IDynamicPropertyWriter“ in der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph> implementiert.
      
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyOutput" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyOutput</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links><apiOperation id="flash.net:IDynamicPropertyWriter:flash.net:IDynamicPropertyWriter:writeDynamicProperties" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDynamicProperties</apiName><shortdesc class="- topic/shortdesc ">
         Schreibt Name und Wert eines IDynamicPropertyOutput-Objekts in ein Objekt mit dynamischen Eigenschaften.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">obj</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Objekt, in das geschrieben wird.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">output</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:IDynamicPropertyOutput</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das IDynamicPropertyOutput-Objekt, das den Namen und den Wert enthält, die dynamisch in das Objekt geschrieben werden.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Schreibt Name und Wert eines IDynamicPropertyOutput-Objekts in ein Objekt mit dynamischen Eigenschaften. Wenn <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph> eingestellt ist, wird diese Methode für jedes Objekt mit dynamischen Eigenschaften aufgerufen. 
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyOutput" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyOutput</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:DatagramSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocket</apiName><shortdesc class="- topic/shortdesc ">
 Die DatagramSocket-Klasse ermöglicht es, dass Code UDP-Pakete (Universal Datagram Protocol) senden und empfangen kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die DatagramSocket-Klasse ermöglicht es, dass Code UDP-Pakete (Universal Datagram Protocol) senden und empfangen kann. 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Mit der <codeph class="+ topic/ph pr-d/codeph ">DatagramSocket.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">Datagram-Pakete werden einzeln zwischen Quelle und Ziel übertragen. Pakete kommen nicht unbedingt in der Reihenfolge an, in der sie gesendet wurden. Pakete, die bei der Übertragung verloren gehen, werden nicht erneut übertragen oder erkannt.</p>
 
 <p class="- topic/p ">Daten, die unter Verwendung eines Datagram-Sockets gesendet werden, werden nicht automatisch in Pakete übertragbarer Größe zerlegt. Wenn Sie ein UDP-Paket senden, das die Größe der maximalen Übertragungseinheit (maximum transmission unit, MTU) überschreitet, wird das Paket (ohne Warnung) verworfen. Die beschränkende MTU ist die kleinste MTU der am Übertragungsweg beteiligten Schnittstellen, Switches oder Router. Mithilfe der NetworkInterface-Klasse können Sie die MTU der lokalen Schnittstelle bestimmen, andere Knoten im Netzwerk können jedoch andere MTU-Werte aufweisen.</p>
 
 <p class="- topic/p ">Die Socket-Klasse verwendet TCP, welches garantierte Paketzustellung bietet und große Pakete automatisch zerlegt und wieder zusammensetzt. TCP ermöglicht auch eine bessere Verwaltung der Netzwerkbandbreite. Diese Merkmale bedeuten, dass Daten, die mittels TCP-Socket gesendet werden, zwar eine höhere Latenzzeit haben; die Vorteile von TCP wiegen in den meisten Fällen jedoch weit mehr als die höheren Kosten. Meistens sollte in der Netzwerkkommunikation die Socket-Klasse anstatt der DatagramSocket-Klasse verwendet werden.</p>
 
 <p class="- topic/p ">Die DatagramSocket-Klasse ist hilfreich bei der Arbeit mit Anwendungen, bei denen eine kurze Übertragungsverzögerung wichtig ist und Paketverluste tolerierbar sind. Netzwerkvorgänge in VoIP-Anwendungen und Echtzeit-Multiplayer-Spielen können zum Beispiel häufig von UDP profitieren. Die DatagramSocket-Klasse eignet sich auch für bestimmte serverseitige Anwendungen. Da UDP ein verbindungsloses Protokoll ist, kann ein Server mehr Anfragen von mehr Clients verarbeiten als dies bei TCP der Fall ist.</p>
 
 <p class="- topic/p ">Die DatagramSocket-Klasse kann nur in Adobe AIR-Anwendungen und nur in der Sicherheitssandbox der Anwendung verwendet werden.</p>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 </apiDesc><example conref="examples\DatagramSocketExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.DatagramSocketDataEvent;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.events.TimerEvent;
    import flash.net.DatagramSocket;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFieldType;
    import flash.utils.ByteArray;
    import flash.utils.Timer;
    
    public class DatagramSocketExample extends Sprite
    {
        private var datagramSocket:DatagramSocket = new DatagramSocket();;

        private var localIP:TextField;
        private var localPort:TextField;
        private var logField:TextField;
        private var targetIP:TextField;
        private var targetPort:TextField;
        private var message:TextField;
        
        public function DatagramSocketExample()
        {
            setupUI();
        }

        private function bind( event:Event ):void
        {
            if( datagramSocket.bound ) 
            {
                datagramSocket.close();
                datagramSocket = new DatagramSocket();
                
            }
            datagramSocket.bind( parseInt( localPort.text ), localIP.text );
            datagramSocket.addEventListener( DatagramSocketDataEvent.DATA, dataReceived );
            datagramSocket.receive();
            log( "Bound to: " + datagramSocket.localAddress + ":" + datagramSocket.localPort );
        }
        
        private function dataReceived( event:DatagramSocketDataEvent ):void
        {
            //Read the data from the datagram
            log("Received from " + event.srcAddress + ":" + event.srcPort + "> " + 
                event.data.readUTFBytes( event.data.bytesAvailable ) );
        }
        
        private function send( event:Event ):void
        {
            //Create a message in a ByteArray
            var data:ByteArray = new ByteArray();
            data.writeUTFBytes( message.text );
            
            //Send a datagram to the target
            try
            {
                datagramSocket.send( data, 0, 0, targetIP.text, parseInt( targetPort.text )); 
                log( "Sent message to " + targetIP.text + ":" + targetPort.text );
            }
            catch ( error:Error )
            {
                log( error.message );
            }
        }
        
        private function log( text:String ):void
        {
            logField.appendText( text + "\n" );
            logField.scrollV = logField.maxScrollV;
            trace( text );
        }
        private function setupUI():void
        {
            targetIP = createTextField( 10, 10, "Target IP:", "192.168.0.1" );
            targetPort = createTextField( 10, 35, "Target port:", "8989" );
            message = createTextField( 10, 60, "Message:", "Lucy can't drink milk." );
            localIP = createTextField( 10, 85, "Local IP", "0.0.0.0");
            localPort = createTextField( 10, 110, "Local port:", "0" );
            createTextButton( 250, 135, "Bind", bind );
            createTextButton( 300, 135, "Send", send );
            logField = createTextField( 10, 160, "Log:", "", false, 200 )
                
            this.stage.nativeWindow.activate();
        }
        
        private function createTextField( x:int, y:int, label:String, defaultValue:String = '', editable:Boolean = true, height:int = 20 ):TextField
        {
            var labelField:TextField = new TextField();
            labelField.text = label;
            labelField.type = TextFieldType.DYNAMIC;
            labelField.width = 180;
            labelField.x = x;
            labelField.y = y;
            
            var input:TextField = new TextField();
            input.text = defaultValue;
            input.type = TextFieldType.INPUT;
            input.border = editable;
            input.selectable = editable;
            input.width = 280;
            input.height = height;
            input.x = x + labelField.width;
            input.y = y;
            
            this.addChild( labelField );
            this.addChild( input );
            
            return input;
        }
        
        private function createTextButton( x:int, y:int, label:String, clickHandler:Function ):TextField
        {
            var button:TextField = new TextField();
            button.htmlText = "&lt;u>&lt;b>" + label + "&lt;/b>&lt;/u>";
            button.type = TextFieldType.DYNAMIC;
            button.selectable = false;
            button.width = 180;
            button.x = x;
            button.y = y;
            button.addEventListener( MouseEvent.CLICK, clickHandler );
            
            this.addChild( button );
            return button;
            
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="http://tools.ietf.org/html/rfc768" class="- topic/link "><linktext class="- topic/linktext ">RFC 768</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Socket-Klasse</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">XMLSocket-Klasse</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket-Klasse</linktext></link></related-links><adobeApiEvent id="flash.net:DatagramSocket_flash.events.IOErrorEvent.IOERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn dieser Socket einen E/A-Fehler empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IOERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird abgesetzt, wenn dieser Socket einen E/A-Fehler empfängt.
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn dieser Socket einen E/A-Fehler empfängt.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:DatagramSocket_flash.events.DatagramSocketDataEvent.DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn dieser Socket ein Datenpaket empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DatagramSocketDataEvent.DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DatagramSocketDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn dieser Socket ein Datenpaket empfängt.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:DatagramSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn das Betriebssystem diesen Socket schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn das Betriebssystem diesen Socket schließt.
  
 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis wird nicht abgesetzt, wenn die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode von DatagramSocket aufgerufen wird.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:DatagramSocket:DatagramSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocket</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein DatagramSocket-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn Inhalt außerhalb der Sicherheitssandbox der AIR-Anwendung versucht, ein DatagramSocket-Objekt zu erstellen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein DatagramSocket-Objekt.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:DatagramSocket:bind" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bind</apiName><shortdesc class="- topic/shortdesc ">
     Bindet diesen Socket an die angegebene lokale Adresse und den angegebenen Port.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> kleiner als 0 oder größer als 65535 ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> keine syntaktisch gut strukturierte Adresse ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn der Socket nicht gebunden werden kann, zum Beispiel wenn:
     <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">locallPort</codeph> bereits von einem anderen Socket verwendet wird.</li><li class="- topic/li ">Wenn das Benutzerkonto, unter dem die Anwendung ausgeführt wird, keine ausreichenden Systemberechtigungen zum Binden an den angegebenen Port hat. (Berechtigungsprobleme treten typischerweise auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localPort &lt; 1024</codeph>.)</li><li class="- topic/li ">Dieses DatagramSocket-Objekt ist bereits gebunden. </li><li class="- topic/li ">Dieses DatagramSocket-Objekt wurde geschlossen.</li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> keine gültige lokale Adresse ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Nummer des Ports, zu dem auf dem lokalen Computer eine Bindung hergestellt werden soll. Wenn <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> auf 0 (Standardeinstellung) gesetzt ist, wird der nächste verfügbare Systemport gebunden. Die Berechtigung für die Verbindung mit einer Portnummer unter 1024 wird von der Sicherheitsrichtlinie des Systems geregelt. Bei Mac- und Linux-Systemen muss die Anwendung zum Beispiel mit Root-Berechtigung ausgeführt werden, damit Verbindungen zu Ports unter 1014 hergestellt werden können.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0.0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IP-Adresse auf dem lokalen Computer, zu der eine Bindung hergestellt werden soll. Diese Adresse kann eine IPv4- oder IPv6-Adresse sein. Wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> (die Standardeinstellung) gesetzt ist, wartet der Socket an allen verfügbaren IPv4-Adressen. Um an allen verfügbaren IPv6-Adressen zu warten, müssen Sie "::" als <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph>-Argument angeben. Um eine IPv6-Adresse zu verwenden, müssen der Computer und das Netzwerk so konfiguriert sein, dass sie IPv6 unterstützen. Ein an eine IPv4-Adresse gebundener Socket kann keine Verbindung zu einem Socket mit einer IPv6-Adresse herstellen. Entsprechend kann ein an eine IPv6-Adresse gebundener Socket keine Verbindung zu einem Socket mit einer IPv4-Adresse herstellen. Der Adresstyp muss übereinstimmen. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bindet diesen Socket an die angegebene lokale Adresse und den angegebenen Port.
     
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph>-Methode wird synchron ausgeführt. Der Bindungsvorgang wird abgeschlossen, bevor die nächste Codezeile ausgeführt wird.</p>
     
	 </apiDesc><example conref="examples\DatagramSocket.bind.1.as" class="- topic/example "> Das folgende Beispiel veranschaulicht verschiedene Möglichkeiten, ein DatagramSocket-Objekt zu binden:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

udpSocket.bind(); //bind to any available port, listen on all IPv4 addresses
udpSocket.bind( 0, "0.0.0.0" ); //same as above
udpSocket.bind( 0, "127.0.0.1" ); //any available port on the localhost address
udpSocket.bind( 8989, "192.168.0.1" ); //port 8989 on a particular IPv4 address
udpSocket.bind( 0, "::" ); //any available port on all IPv6 address
udpSocket.bind( 8989, "::1" ); //port 8989 on the IPv6 localhost address
udpSocket.bind( 8989, "2001:1890:110b:1e19:f06b:72db:7026:3d7a" ); //port 8989 on a particular IPv6 address
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt den Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Socket nicht geschlossen werden kann (wegen eines internen, Netzwerk- oder Betriebssystemfehlers) oder wenn der Socket nicht geöffnet ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt den Socket. 
     
     <p class="- topic/p ">Der Socket wird vom Remotecomputer getrennt und die Bindung mit dem lokalen Computer wird aufgehoben. Ein geschlossener Socket kann nicht wiederverwendet werden.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Verbindet den Socket mit einer angegebenen Remoteadresse und einem angegebenen Port.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> kleiner als 1 oder größer als 65535 ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> keine syntaktisch gültige Adresse ist. Oder wenn eine Standard-Route-Adresse ('0.0.0.0' oder '::') verwendet wird.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn der Socket nicht verbunden werden kann, zum Beispiel wenn <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> nicht vor dem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> aufgerufen wurde und die Standardbindung an die Remote-Adressfamilie nicht möglich ist. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remoteAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IP-Adresse des Remotecomputers, zu dem eine Verbindung hergestellt werden soll. Diese Adresse kann eine IPv4- oder IPv6-Adresse sein. Wenn <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> nicht aufgerufen wurde, wird die Adressfamilie der <codeph class="+ topic/ph pr-d/codeph ">remoteAddress</codeph>, IPv4 oder IPv6, beim Aufruf des Standard-<codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> verwendet.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remotePort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zur Herstellung einer Verbindung verwendete Portnummer auf dem Remotecomputer. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Verbindet den Socket mit einer angegebenen Remoteadresse und einem angegebenen Port. 
     
     <p class="- topic/p ">Wenn ein Datagram-Socket „verbunden“ ist, können Datagram-Pakete nur an das angegebene Ziel gesendet bzw. von diesem empfangen werden. Pakete von anderen Quellen werden ignoriert. Die Verbindung mit einem Datagram-Socket ist nicht erforderlich. Durch das Herstellen einer Verbindung kann die Notwendigkeit, fremde Pakete von anderen Quellen herauszufiltern, entfallen. Eine UDP-Socketverbindung ist jedoch keine beständige Netzwerkverbindung (wie dies bei einer TCP-Verbindung der Fall ist). Es ist sogar möglich, dass das Remote-Ende des Sockets gar nicht vorhanden ist.</p>
     
     <p class="- topic/p ">Wenn die <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph>-Methode nicht aufgerufen wurde, wird der Socket automatisch an die Standardadresse und den Standardport gebunden.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:receive" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receive</apiName><shortdesc class="- topic/shortdesc ">
     Ermöglicht diesem DatagramSocket-Objekt, ankommende Pakete an der gebundenen IP-Adresse und Port zu empfangen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ermöglicht diesem DatagramSocket-Objekt, ankommende Pakete an der gebundenen IP-Adresse und Port zu empfangen.
     
     <p class="- topic/p ">Die Funktion liefert sofort eine Rückgabe. Das DatagramSocket-Objekt setzt ein <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Ereignis ab, wenn ein Paket empfangen wird.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:DatagramSocket:receive_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DatagramSocketDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn ein UDP-Paket empfangen wird.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">wenn ein UDP-Paket empfangen wird.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:DatagramSocket:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Sendet ein Paket mit den Bytes im ByteArray über UDP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">port</codeph> kleiner als 1 oder größer als 65535 ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Socket nicht verbunden und <codeph class="+ topic/ph pr-d/codeph ">address</codeph> keine korrekte IP-Adresse ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf:
     <ol class="- topic/ol "><li class="- topic/li ">Wenn <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> nicht aufgerufen wurde und wenn die Standardbindung zur Zieladressfamilie nicht möglich ist.</li><li class="- topic/li ">Unter einigen Betriebssystemen wird ein IOError ausgegeben, falls die <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode aufgerufen wird, wenn bereits eine ICMP-Meldung „Ziel nicht erreichbar“ vom Zielhost empfangen wurde. (Somit wird der Fehler beim zweiten erfolglosen Versuch, Daten zu senden, ausgegeben, nicht beim ersten.) Andere Betriebssysteme, zum Beispiel Windows, ignorieren diese ICMP-Meldungen, sodass kein Fehler ausgegeben wird. </li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn der <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph>-Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> größer als die Länge des ByteArray wie in <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> angegeben ist, oder wenn die Menge der zu schreibenden Daten wie in <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> plus <codeph class="+ topic/ph pr-d/codeph ">length</codeph> angegeben die verfügbaren Daten überschreitet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Parameter <codeph class="+ topic/ph pr-d/codeph ">address</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">port</codeph> angegeben werden, wenn bereits eine Verbindung zum Socket besteht.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ein ByteArray, der die Paketdaten enthält.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der auf null basierende Offset im <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph>-ByteArray-Objekt, bei dem das Paket anfängt.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der Byte im Paket. Beim Standardwert 0 wird der gesamte ByteArray ab dem durch den Parameter <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> angegebenen Wert gesendet.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IPv4- oder IPv6-Adresse des Remotecomputers. Eine Adresse ist erforderlich, falls noch keine mit der <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode angegeben wurde.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Portnummer auf dem Remotecomputer. Ein Wert größer als 0 und kleiner als 65536 ist erforderlich, wenn der Port nicht bereits mit der <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode angegeben wurde.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet ein Paket mit den Bytes im ByteArray über UDP. 
     
     <p class="- topic/p ">Wenn eine Verbindung zum Socket hergestellt wurde, wird das Paket an die Remoteadresse und den Port gesendet, die in der <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode angegeben wurden, und Ziel-IP-Adresse und Port können nicht festgelegt werden. Wenn keine Verbindung zum Socket hergestellt wurde, wird das Paket an die angegebene Adresse und den angegebenen Port gesendet und Sie müssen gültige Werte für <codeph class="+ topic/ph pr-d/codeph ">address</codeph> und <codeph class="+ topic/ph pr-d/codeph ">port</codeph> angeben. Wenn die <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph>-Methode nicht aufgerufen wurde, wird der Socket automatisch an die Standardadresse und den Standardport gebunden.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Das Senden von Daten an eine Broadcastadresse wird nicht unterstützt.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:DatagramSocket:bound:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bound</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob dieses Socketobjekt zurzeit an eine lokale Adresse und einen Port gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob dieses Socketobjekt zurzeit an eine lokale Adresse und einen Port gebunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob dieses Socketobjekt zurzeit mit einer Remoteadresse und einem Port verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob dieses Socketobjekt zurzeit mit einer Remoteadresse und einem Port verbunden ist.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> bedeutet nicht, dass ein Remotecomputer an der verbundenen Adresse und dem Port wartet. Er gibt lediglich an, dass dieses DataGramSocket-Objekt nur an diese Adresse und diesen Port Daten sendet bzw. von dort empfängt.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob DatagramSocket-Funktionen in der Laufzeitumgebung unterstützt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob DatagramSocket-Funktionen in der Laufzeitumgebung unterstützt werden.
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:DatagramSocket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse, an die dieser Socket auf dem lokalen Computer gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse, an die dieser Socket auf dem lokalen Computer gebunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Der Port, an den dieser Socket auf dem lokalen Computer gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Port, an den dieser Socket auf dem lokalen Computer gebunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:remoteAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remoteAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse des Remotecomputers, mit der dieser Socket verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse des Remotecomputers, mit der dieser Socket verbunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:remotePort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remotePort</apiName><shortdesc class="- topic/shortdesc ">
     Der Port des Remotecomputers, mit dem dieser Socket verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Port des Remotecomputers, mit dem dieser Socket verbunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupSendResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupSendResult</apiName><shortdesc class="- topic/shortdesc ">
Die NetGroupSendResult-Klasse ist eine Aufzählung von Konstantenwerten, die für den Rückgabewert der Directed-Routing-Methoden, die mit einer NetGroup-Instanz verknüpft sind, verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetGroupSendResult-Klasse ist eine Aufzählung von Konstantenwerten, die für den Rückgabewert der Directed-Routing-Methoden, die mit einer NetGroup-Instanz verknüpft sind, verwendet werden.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links><apiValue id="flash.net:NetGroupSendResult:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, dass beim Verwenden einer Directed-Routing-Methode ein Fehler aufgetreten ist (zum Beispiel fehlende Berechtigung).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, dass beim Verwenden einer Directed-Routing-Methode ein Fehler aufgetreten ist (zum Beispiel fehlende Berechtigung).
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendResult:NO_ROUTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NO_ROUTE</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, dass kein Nachbar gefunden wurde, der die Meldung an das angeforderte Ziel weiterleitet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">no route</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, dass kein Nachbar gefunden wurde, der die Meldung an das angeforderte Ziel weiterleitet.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendResult:SENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SENT</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, dass eine Route für die Meldung gefunden und sie an das Ziel weitergeleitet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, dass eine Route für die Meldung gefunden und sie an das Ziel weitergeleitet wurde.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestDefaults" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestDefaults</apiName><shortdesc class="- topic/shortdesc ">
 Die URLRequestDefaults-Klasse enthält statische Eigenschaften, die Sie festlegen können, um Standardwerte für die Eigenschaften der URLRequest-Klasse zu definieren.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die URLRequestDefaults-Klasse enthält statische Eigenschaften, die Sie festlegen können, um Standardwerte für die Eigenschaften der URLRequest-Klasse zu definieren. Sie enthält auch eine statische Methode, <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph>, mit der Sie Standardauthentifizierungsdetails für Anforderungen definieren können. Die URLRequest-Klasse definiert die Informationen, die in einer HTTP-Anforderung verwendet werden. 
 
 <p class="- topic/p ">Alle in einem URLRequest-Objekt festgelegten Eigenschaften überschreiben diese statischen Eigenschaften, die für die URLRequestDefaults-Klasse festgelegt sind.</p>
 
 <p class="- topic/p ">URLRequestDefault-Einstellungen gelten nur für Inhalt in der Anwendungsdomäne des Aufrufers, mit einer Ausnahme: Einstellungen, die durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph> vorgenommen werden, gelten für alle Anwendungsdomänen in der zurzeit ausgeführten Anwendung.</p>
 
 <p class="- topic/p ">Nur Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>-Inhalt, der in der Sicherheitssandbox der Anwendung ausgeführt wird, kann die URLRequestDefaults-Klasse verwenden. Andere Inhalte lösen einen SecurityError aus, wenn auf die Mitglieder oder Eigenschaften dieser Klasse zugegriffen wird.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link></related-links><apiOperation id="flash.net:URLRequestDefaults:setLoginCredentialsForHost" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setLoginCredentialsForHost</apiName><shortdesc class="- topic/shortdesc ">
	Legt Benutzer- und Kennwortdaten für einen ausgewählten Host fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">hostname</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Hostname, auf den der Benutzername und das Kennwort angewendet werden. Dies kann eine Domäne sein, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"</codeph> oder eine Domäne und eine Portnummer, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"www.example.com:80"</codeph>. Beachten Sie, dass <codeph class="+ topic/ph pr-d/codeph ">"example.com"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"sales.example.com"</codeph> jeweils als eindeutige Hosts angesehen werden. 
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">user</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Standardbenutzername, der bei Anforderungsauthentifizierungen für den angegebenen Host verwendet wird.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Standardkennwort, das bei Anforderungsauthentifizierungen für den angegebenen Host verwendet wird.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Legt Benutzer- und Kennwortdaten für einen ausgewählten Host fest. Diese Einstellungen beziehen sich auf URLRequest-Objekte in allen Anwendungsdomänen der Anwendung, also nicht nur auf die in der Anwendungsdomäne des Objekts, das diese Methode aufruft (die statischen Eigenschaften der URLRequest-Klasse beziehen sich im Gegensatz hierzu nur auf die Anwendungsdomäne des Aufrufers). Auf diese Weise kann Inhalt in der gesamten Anwendung (unabhängig von der Anwendungsdomäne des Inhalts) angemeldet sein, wenn ein anderer Teil der Anmeldung angemeldet wird.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis für Anwendungen, die unter Mac OS ausgeführt werden:</i> Wenn Sie diese Methode unter Mac OS aufrufen, verwendet die Anwendung diese Anmeldedaten für den angegebenen Host, bis die Anwendung geschlossen wird, selbst wenn Sie anschließend <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph> für den gleichen Host aufrufen. Wenn ein Server jedoch die von dieser Methode angegebenen Anmeldedaten ablehnt, werden nachfolgende Aufrufe der <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph>-Methode (für denselben Host) erkannt.</p>
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Diese Methode gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:URLRequestDefaults:authenticate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticate</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die authenticate-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">authenticate</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">authenticate</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/authenticate" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:cacheResponse:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cacheResponse</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die cacheResponse-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">cacheResponse</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">cacheResponse</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> verwendet die AIR-Anwendung standardmäßig den HTTP-Cache des Betriebssystems. Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/cacheResponse" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:followRedirects:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">followRedirects</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die followRedirects-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">followRedirects</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">followRedirects</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung. Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/followRedirects" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.followRedirects</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:idleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleTimeout</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die idleTimeout-Eigenschaft des URLRequest-Objekts und des HTMLLoader-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der idleTimeout-Wert ist negativ.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiDefaultValue>0
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph>-Eigenschaft des URLRequest-Objekts und des HTMLLoader-Objekts. 
	
	<p class="- topic/p ">Die Leerlaufzeitsperre ist die Zeitspanne (in Millisekunden), die der Client nach dem Herstellen der Verbindung auf eine Antwort vom Server wartet, bevor die Anforderung abgebrochen wird.</p>
	
	<p class="- topic/p ">Hiermit wird die Standardleerlaufzeitsperre definiert, die vom URLRequest- oder HTMLLoader-Objekt verwendet wird. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph>-Eigenschaft in einem URLRequest-Objekt oder einem HTMLLoader-Objekt wird diese Standardeinstellung überschrieben.</p>
	
	<p class="- topic/p ">Wenn diese Eigenschaft auf 0 (Standardwert) gesetzt ist, verwendet die Laufzeitumgebung den Standardwert für die Leerlaufzeitsperre, die vom Betriebssystem definiert ist. Der Standardwert für die Leerlaufzeitsperre variiert zwischen den verschiedenen Betriebssystemen (z. B. Mac OS, Linux, Windows) und den verschiedenen Versionen der Betriebssysteme.</p>
	
	<p class="- topic/p ">Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">HTMLLoader.idleTimeout</linktext></link><link href="flash.net.xml#URLRequest/idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.idleTimeout</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:manageCookies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manageCookies</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die manageCookies-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/manageCookies" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:useCache:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCache</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die useCache-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">useCache</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">useCache</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung. Diese Einstellung gilt nicht für URLRequest-Objekte, die bei Datei-Upload- oder RTMP-Anforderungen verwendet werden.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/useCache" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.useCache</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:userAgent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userAgent</apiName><shortdesc class="- topic/shortdesc ">
	Die Standardeinstellung für die userAgent-Eigenschaft von URLRequest-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Standardeinstellung für die <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph>-Eigenschaft von URLRequest-Objekten. Durch das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph>-Eigenschaft in einem URLRequest-Objekt überschreibt diese Standardeinstellung.
	
	<p class="- topic/p ">Dies ist auch der Standard-Benutzer-Agent-String für alle HTMLLoader-Objekte (verwendet, wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode des HTMLLoader-Objekts aufrufen). Das Festlegen der <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph>-Eigenschaft des HTMLLoader-Objekts überschreibt die <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.userAgent</codeph>-Einstellung.</p>
	
	<p class="- topic/p ">Dieser Standardwert variiert je nach dem Laufzeitbetriebssystem (wie z. B. Mac OS, Linux oder Windows), der Laufzeitsprache und der Laufzeitversion (siehe folgende Beispiele):</p>
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/526.9+ (KHTML, wie Gecko) AdobeAIR/1.5"</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (Windows; U; en) AppleWebKit/526.9+ (KHTML, wie Gecko) AdobeAIR/1.5"</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/526.9+ (KHTML, wie Gecko) AdobeAIR/1.5"</codeph></li></ul>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest.userAgent</linktext></link><link href="../../flash/html/HTMLLoader.html#userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.userAgent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroup</apiName><shortdesc class="- topic/shortdesc ">
Instanzen der NetGroup-Klasse repräsentieren die Mitgliedschaft in einer RTMFP-Gruppe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Instanzen der NetGroup-Klasse repräsentieren die Mitgliedschaft in einer RTMFP-Gruppe. Verwenden Sie diese Klasse für die folgenden Aufgaben:

<ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Überwachen der Dienstgüte (Quality of Service, QoS)</b>. Die <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Eigenschaft enthält ein NetGroupInfo-Objekt, dessen Eigenschaften QoS-Statistiken für diese Gruppe bereitstellen.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Posting</b>. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">post()</codeph> auf, um ActionScript-Meldungen an alle Mitglieder einer Gruppe als Broadcast zu senden.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Direktes Weiterleiten</b>. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">sendToNearest()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">sendToNeighbor()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">sendToAllNeighbors()</codeph> auf, um eine kurze Datenmeldung an ein bestimmtes Mitglied einer Peer-to-Peer-Gruppe zu senden. Die Quelle und das Ziel müssen keine direkte Verbindung haben.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Objektreplikation</b>. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeHaveObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">addWantObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeWantObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">writeRequestedObject()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">denyRequestedObject()</codeph> auf, um große Daten in Portionen aufzuteilen und für alle Knoten in einer Peer-to-Peer-Gruppe zu replizieren.</li></ul>

<p class="- topic/p ">In der clientseitigen NetGroup-Klasse setzt NetConnection die folgenden Ereignisse ab:</p>

<ul class="- topic/ul "><li class="- topic/li ">NetGroup.Connect.Success</li><li class="- topic/li ">NetGroup.Connect.Failed</li><li class="- topic/li ">NetGroup.Connect.Rejected</li></ul>

<p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph>-Eigenschaft des Ereignisobjekts enthält einen Verweis auf die Ereignisquelle (die NetGroup). Die NetGroup setzt alle anderen Ereignisse ab. In der serverseitigen NetGroup-Klasse setzt die NetGroup alle Ereignisse ab.</p>

<p class="- topic/p ">Informationen zum Peer-Assisted-Networking finden Sie unter <xref href="http://www.flashrealtime.com/basics-of-p2p-in-flash/" scope="external" class="- topic/xref "> Basics of P2P in Flash</xref> von Adobe-Evangelist Tom Krcha. Informationen zur Verwendung von Gruppen mit Peer-Assisted-Networking mit finden Sie unter <xref href="http://tv.adobe.com/watch/max-2009-develop/social-media-experiences-with-flash-media-and-rtmfp/" scope="external" class="- topic/xref ">Social Media Experiences with Flash Media and RTMFP</xref>, ebenfalls von Tom Krcha.</p>

<p class="- topic/p ">Informationen zu den technischen Details von Peer-Assisted-Networking finden Sie unter <xref href="http://tv.adobe.com/watch/max-2009-develop/p2p-on-the-flash-platform-with-rtmfp" scope="external" class="- topic/xref ">P2P on the Flash Platform with RTMFP</xref> von Adobe Computer Scientist Matthew Kaufman.</p>

</apiDesc><example conref="examples\NetGroupExample.as" class="- topic/example "> Dies ist eine einfache Videochatanwendung, die Peer-to-Peer-Networking verwendet. Die Anwendung stellt über RTMFP eine Verbindung zu Flash Media Server her. Der Server bewahrt die Fingerabdrücke der Clientanwendung auf und verwaltet die Peer-Gruppen, wenn Clients die Verbindung herstellen. Alle Daten werden jedoch zwischen den Clients (Peers) übertragen - es werden keine Daten zurück an den Server gesendet.
 <p class="- topic/p ">Wenn Sie die Anwendung ausführen, können Sie einen beliebigen Gruppennamen in das Texteingabefeld eingeben. Die GroupSpecifier-Klasse verwendet den Namen (zusammen mit ggf. von Ihnen festgelegten GroupSpecifier-Eigenschaften), um einen String zu erstellen, der der ständige eindeutige Namen der Gruppe ist. Um einen anderen Client mit der Gruppe zu verbinden, muss dieser Client denselben Gruppennamen verwenden. Wenn zum Beispiel Client A den Gruppennamen „firstmesh“ verwendet, müssen andere Clients, die mit Client A kommunizieren möchten, auch den Gruppennamen „firstmesh“ verwenden. Wenn Client B den Gruppennamen „kite“ verwendet, wird zwar erfolgreich eine Verbindung hergestellt, es wird jedoch eine neue Gruppe erstellt und die Kommunikation mit Client A oder einem anderen Client in der Gruppe „firstmesh“ ist nicht möglich.</p>

 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">


&lt;?xml version="1.0" encoding="utf-8"?>
&lt;mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="100%" height="100%" applicationComplete="OnApplicationComplete()">
    &lt;mx:Script>
        &lt;![CDATA[
            private var netConnection:NetConnection = null;
            private var netStream:NetStream = null;
            private var netGroup:NetGroup = null;
            private var video:Video = null;
            private var sequenceNumber:uint = 0;
            private var resizeTimer:Timer = null;

            private const SERVER:String = "rtmfp://fms.example.com/someapp";

            [Bindable] private var connected:Boolean = false;
            [Bindable] private var joinedGroup:Boolean = false;

            private function OnApplicationComplete():void
            {
                userName.text = "user " + int(Math.random() * 65536);

                groupName.text = "channel" + (int(Math.random() * 899) + 101);

                resizeTimer = new Timer(2000.0);
                resizeTimer.addEventListener(TimerEvent.TIMER, DoResizeVideo);
                resizeTimer.start();
            }

            private function StatusMessage(msg:Object):void
            {
                statusLog.text += msg;
                statusLog.verticalScrollPosition = statusLog.textHeight;
                statusLog.validateNow();
            }

            private function NetStatusHandler(e:NetStatusEvent):void
            {
                StatusMessage(e.info.code);
                switch(e.info.code)
                {
                case "NetConnection.Connect.Success":
                    OnConnect();
                    break;

                case "NetConnection.Connect.Closed":
                case "NetConnection.Connect.Failed":
                case "NetConnection.Connect.Rejected":
                case "NetConnection.Connect.AppShutdown":
                case "NetConnection.Connect.InvalidApp":
                    OnDisconnect();
                    break;

                case "NetStream.Connect.Success": // e.info.stream
                    OnNetStreamConnect();
                    break;

                case "NetStream.Connect.Rejected": // e.info.stream
                case "NetStream.Connect.Failed": // e.info.stream
                    DoDisconnect();
                    break;

                case "NetGroup.Connect.Success": // e.info.group
                    OnNetGroupConnect();
                    break;

                case "NetGroup.Connect.Rejected": // e.info.group
                case "NetGroup.Connect.Failed": // e.info.group
                    DoDisconnect();
                    break;

                case "NetGroup.Posting.Notify": // e.info.message, e.info.messageID
                    OnPosting(e.info.message);
                    break;


                case "NetStream.MulticastStream.Reset":
                case "NetStream.Buffer.Full":
                    DoResizeVideo();
                    break;

                case "NetGroup.SendTo.Notify": // e.info.message, e.info.from, e.info.fromLocal
                case "NetGroup.LocalCoverage.Notify": //
                case "NetGroup.Neighbor.Connect": // e.info.neighbor
                case "NetGroup.Neighbor.Disconnect": // e.info.neighbor
                case "NetGroup.MulticastStream.PublishNotify": // e.info.name
                case "NetGroup.MulticastStream.UnpublishNotify": // e.info.name
                case "NetGroup.Replication.Fetch.SendNotify": // e.info.index
                case "NetGroup.Replication.Fetch.Failed": // e.info.index
                case "NetGroup.Replication.Fetch.Result": // e.info.index, e.info.object
                case "NetGroup.Replication.Request": // e.info.index, e.info.requestID
                default:
                    break;
                }
            }

            private function DoConnect():void
            {
                StatusMessage("Connecting to \"" + SERVER + "\" ...\n");
                netConnection = new NetConnection();
                netConnection.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);
                netConnection.connect(SERVER);
            }

            private function OnConnect():void
            {
                var groupSpecifier:GroupSpecifier;

                StatusMessage("Connected\n");
                connected = true;

                groupSpecifier = new GroupSpecifier("max2009lab/" + groupName.text);
                groupSpecifier.multicastEnabled = true;
                groupSpecifier.postingEnabled = true;
                groupSpecifier.serverChannelEnabled = true;

                netStream = new NetStream(netConnection, groupSpecifier.groupspecWithAuthorizations());
                netStream.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

                netGroup = new NetGroup(netConnection, groupSpecifier.groupspecWithAuthorizations());
                netGroup.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

                StatusMessage("Join \"" + groupSpecifier.groupspecWithAuthorizations() + "\"\n");
            }

            private function OnNetStreamConnect():void
            {
                netStream.client = this;

                var mic:Microphone = Microphone.getMicrophone();
                if(mic)
                {
                    mic.codec = SoundCodec.SPEEX;
                    mic.setSilenceLevel(0);

                    netStream.attachAudio(mic);

                    StatusMessage("got microphone\n");
                }

                var camera:Camera = Camera.getCamera();
                if(camera)
                {
                    camera.setMode(320, 240, 10);
                    camera.setQuality(30000, 0);
                    camera.setKeyFrameInterval(15);

                    videoDisplay.attachCamera(camera);
                    videoDisplay.maintainAspectRatio = true;

                    netStream.attachCamera(camera);

                    StatusMessage("got camera\n");
                }

                netStream.publish("stream");
            }

            private function OnNetGroupConnect():void
            {
                joinedGroup = true;
            }

            private function DoDisconnect():void
            {
                if(netConnection)
                    netConnection.close();
                videoDisplay.attachCamera(null);
            }

            private function OnDisconnect():void
            {
                StatusMessage("Disconnected\n");
                netConnection = null;
                netStream = null;
                netGroup = null;
                connected = false;
                joinedGroup = false;
            }

            private function ClearChatText():void
            {
                chatText.text = "";
            }

            private function DoPost():void
            {
                var message:Object = new Object;

                message.user = userName.text;
                message.text = chatText.text;
                message.sequence = sequenceNumber++;
                message.sender = netConnection.nearID;

                netGroup.post(message);

                StatusMessage("==> " + chatText.text + "\n");

                chatText.callLater(ClearChatText);
            }

            private function OnPosting(message:Object):void
            {
                StatusMessage("&lt;" + message.user + "> " + message.text + "\n");
            }

            private function DoResizeVideo(ignored:* = null):void
            {
                if(video)
                {
                    if( (0 == video.videoHeight)
                     || (0 == video.videoWidth)
                    )
                    {
                        video.height = videoDisplay.height;
                        video.width = videoDisplay.width;
                        video.x = 0;
                        video.y = 0;
                    }
                    else
                    {
                        var videoAspect:Number = Number(video.videoWidth) / Number(video.videoHeight);
                        var displayAspect:Number = Number(videoDisplay.width) / Number(videoDisplay.height);
                        var adjustFactor:Number;

                        if(videoAspect >= displayAspect) // video is wider than display
                        {
                            adjustFactor = Number(video.videoWidth) / Number(videoDisplay.width);
                            video.width = videoDisplay.width;
                            video.height = int(Number(video.videoHeight) / adjustFactor);
                            video.x = 0;
                            video.y = int((videoDisplay.height - video.height) / 2);
                        }
                        else
                        {
                            adjustFactor = Number(video.videoHeight) / Number(videoDisplay.height);
                            video.height = videoDisplay.height;
                            video.width = int(Number(video.videoWidth) / adjustFactor);
                            video.x = int((videoDisplay.width - video.width) / 2);
                            video.y = 0;
                        }
                    }
                }
            }

            public function onPlayStatus(info:Object):void {}
            public function onMetaData(info:Object):void {}
            public function onCuePoint(info:Object):void {}
            public function onTextData(info:Object):void {}

            public function ValidateConnectAllowed(isConnected:Boolean, groupNameText:String):Boolean
            {
                return (!isConnected) &amp;&amp; (groupNameText.length > 0);
            }
        ]]&gt;
    &lt;/mx:Script>

    &lt;mx:VBox top="10" right="10" left="10" bottom="10" verticalGap="6">
        &lt;mx:HBox width="100%">
            &lt;mx:Text text="Group:"/>
            &lt;mx:TextInput id="groupName" width="100%" text="default" enabled="{!connected}"/>
            &lt;mx:Button label="Connect" click="DoConnect()" enabled="{ValidateConnectAllowed(connected, groupName.text)}" />
            &lt;mx:Button label="Disconnect" click="DoDisconnect()" enabled="{connected}" />
        &lt;/mx:HBox>
        &lt;mx:VideoDisplay id="videoDisplay" width="320" height="240" resize="DoResizeVideo()"/>
        &lt;mx:TextArea id="statusLog" width="100%" height="100%"/>
        &lt;mx:HBox width="100%">
            &lt;mx:TextInput id="userName" width="160" />
            &lt;mx:TextInput id="chatText" width="100%" enabled="{joinedGroup}" enter="DoPost()"/>
        &lt;/mx:HBox>
    &lt;/mx:VBox>

&lt;/mx:Application>
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent info.Codewerte, die mit "NetGroup" beginnen</linktext></link></related-links><adobeApiEvent id="flash.net:NetGroup_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn der Status oder die Fehlerbedingung eines NetGroup-Objekts protokolliert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn der Status oder die Fehlerbedingung eines NetGroup-Objekts protokolliert wird. Das <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis enthält eine <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Eigenschaft. Die <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Eigenschaft ist ein Objekt mit Informationen über das Ereignis, z. B., ob ein Verbindungsversuch erfolgreich war oder fehlgeschlagen ist.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:NetGroup:NetGroup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetGroup</apiName><shortdesc class="- topic/shortdesc ">
     Konstruiert eine NetGroup für das angegebene NetConnection-Objekt und fügt es der von groupspec angegebenen Gruppe hinzu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetGroup, constructor
     </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die NetConnection-Instanz ist nicht verbunden.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die groupspec ist ungültig.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein NetConnection-Objekt.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupspec</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die RTMFP-Peer-to-Peer-Gruppe, der beigetreten werden soll, angibt, einschließlich Name, Fähigkeiten, Einschränkungen und Autorisierung dieses Mitglieds.
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     new NetGroup(myConnection, myGroupSpecifier.groupspecWithAuthorizations());
     </codeblock>
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruiert eine neue NetGroup für das angegebene NetConnection-Objekt und fügt es der angegebenen Gruppe hinzu.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Konstruiert eine NetGroup für das angegebene NetConnection-Objekt und fügt es der von <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> angegebenen Gruppe hinzu.
     
     <p class="- topic/p ">In den meisten Fällen hat eine <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> das Potenzial zur Verwendung des Netzwerk-Uplinks im lokalen System. Wenn ein NetStream- oder NetGroup-Objekt mit einem groupspec konstruiert wird, zeigt Flash Player ein Dialogfeld zum Datenschutz an. In diesem Dialogfeld wird gefragt, ob Flash Player die Verbindung nutzen kann, um Daten für die Peers des Benutzers freizugeben. Wenn der Benutzer auf „Für diese Domäne zulassen“ klickt, wird das Dialogfeld das nächste Mal, wenn der Benutzer eine Verbindung zu dieser Anwendung herstellt, nicht mehr angezeigt. Wenn ein Benutzer Peer-Assisted-Networking nicht zulässt, sind alle Peer-Funktionen innerhalb der Gruppe (Posting, direkte Weiterleitung und Objektreplikation) deaktiviert. Wird diese Berechtigung gewährt, wird ein NetStatusEvent an den Ereignis-Listener der NetConnection mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Success</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekts gesendet. Wird die Berechtigung verweigert, hat die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Rejected</codeph>. Bis ein <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Success</codeph>-Ereignis empfangen wird, wird eine Ausnahme ausgegeben, wenn Sie versuchen, eine Methode des NetGroup-Objekts aufzurufen.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn ein Client einen Native-IP-Multicast-Stream abonniert, wird das Sicherheitsdialogfeld nicht angezeigt.</p>
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Connect_Success" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Connect.Success"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Connect_Rejected" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Connect.Rejected"</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetGroup:addHaveObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addHaveObjects</apiName><shortdesc class="- topic/shortdesc ">
     Fügt Objekte von startIndex bis endIndex zu den Objekten hinzu, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zahl, die an diese Methode übergeben wird, ist kleiner als 0 oder größer als 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anfang des Bereichs der Objektindizes, die dem Have-Satz hinzugefügt werden sollen.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ende des Bereichs der Objektindizes, die dem Have-Satz hinzugefügt werden sollen.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Fügt Objekte zu den Objekten hinzu, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt Objekte von <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> bis <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> zu den Objekten hinzu, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt. Standardmäßig ist der Have-Satz leer. Indizes müssen ganze Zahlen von 0 bis 9007199254740992 sein.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Diese Methode sendet ein NetStatusEvent an den Ereignis-Listener der NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Request"</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekts. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/removeHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">removeHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">writeRequestedObject()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">denyRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addMemberHint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addMemberHint</apiName><shortdesc class="- topic/shortdesc ">
     Fügt manuell einen Datensatz hinzu, der angibt, dass peerID ein Mitglied der Gruppe ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TRUE bei Erfolg, FALSE bei Fehlschlagen.
     
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die peerID, die dem Satz der potenziellen Nachbarn hinzugefügt wird.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Fügt manuell einen Datensatz hinzu, der angibt, dass peerID ein Mitglied der Gruppe ist, stellt aber nicht notwendigerweise sofort eine Verbindung her.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt manuell einen Datensatz hinzu, der angibt, dass <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> ein Mitglied der Gruppe ist. Es wird nur versucht, sofort eine Verbindung herzustellen, wenn dies für die Topologie erforderlich ist.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addNeighbor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addNeighbor</apiName><shortdesc class="- topic/shortdesc ">
     Fügt manuell einen Nachbarn hinzu, indem sofort eine direkte Verbindung zu der angegebenen peerID hergestellt wird, die sich bereits in dieser Gruppe befinden muss.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TRUE bei Erfolg, FALSE bei Fehlschlagen.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die peerID, zu der sofort eine Verbindung hergestellt werden soll.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Fügt manuell einen Nachbarn hinzu, indem direkt eine Verbindung zur angegebenen peerID hergestellt wird.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt manuell einen Nachbarn hinzu, indem sofort eine direkte Verbindung zu der angegebenen <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> hergestellt wird, die sich bereits in dieser Gruppe befinden muss. Diese direkte Verbindung kann später aufgegeben werden, wenn sie nicht mehr für die Topologie erforderlich ist.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">addMemberHint()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addWantObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addWantObjects</apiName><shortdesc class="- topic/shortdesc ">
     Fügt Objekte von startIndex bis endIndex zum Satz der abzurufenden Objekte hinzu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zahl, die an diese Methode übergeben wird, ist kleiner als 0 oder größer als 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anfang des Bereichs der Objektindizes, die dem Want-Satz hinzugefügt werden sollen.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ende des Bereichs der Objektindizes, die dem Want-Satz hinzugefügt werden sollen.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Fügt dem Satz der abzurufenden Objekte weitere Objekte hinzu.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt Objekte von <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> bis <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> zum Satz der abzurufenden Objekte hinzu. Indizes müssen ganze Zahlen von 0 bis 9007199254740992 sein. Standardmäßig ist der Want-Satz leer.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Diese Methode sendet ein NetStatusEvent an den Ereignis-Listener von NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.SendNotify</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>-Eigenschaft hinzu. Diesem Ereignis folgt ein <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.Failed</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.Result</codeph>-Ereignis.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/removeWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">removeWantObjects()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_SendNotify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.SendNotify"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_Failed" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.Failed"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_Result" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.Result"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Trennt die Verbindung zur Gruppe und schließt diese NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Trennt die Verbindung zur Gruppe und schließt diese NetGroup. Diese NetGroup ist nach dem Aufruf dieser Methode nicht verwendbar.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetGroup:convertPeerIDToGroupAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">convertPeerIDToGroupAddress</apiName><shortdesc class="- topic/shortdesc ">
     Konvertiert eine peerID in eine Gruppenadresse, die sich für die Verwendung mit der sendToNearest()-Methode eignet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Gruppenadresse für die peerID.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zu konvertierende peerID.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konvertiert eine peerID in eine Gruppenadresse, die sich für die Verwendung mit der sendToNearest()-Methode eignet.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Konvertiert eine peerID in eine Gruppenadresse, die sich für die Verwendung mit der <codeph class="+ topic/ph pr-d/codeph ">sendToNearest()</codeph>-Methode eignet.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/farID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.farID</linktext></link><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.nearID</linktext></link><link href="flash.net.xml#NetStream/farID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.farID</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:denyRequestedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">denyRequestedObject</apiName><shortdesc class="- topic/shortdesc ">
     Lehnt eine Anforderung ab, die in NetStatusEvent NetGroup.Replication.Request für ein zuvor mit addHaveObjects() angebotenes Objekt empfangen wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anforderungsbezeichner wie im <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>-Ereignis angegeben.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Lehnt eine Anforderung für ein zuvor angebotenes Objekt ab.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lehnt eine Anforderung ab, die in NetStatusEvent <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph> für ein zuvor mit <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph> angebotenes Objekt empfangen wurde. Der Anforderer kann dieses Objekt erneut anfordern, sofern es nicht aus dem Have-Satz entfernt wird.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">writeRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:post" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">post</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine Nachricht an alle Mitglieder einer Gruppe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die messageID der Nachricht, falls sie gepostet wurde, oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph> bei einem Fehler. Die messageID ist der Hexadezimalwert des SHA256 der Grundbytes der Serialisierung der Nachricht.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Nachricht, die an alle anderen Mitglieder der Gruppe gesendet werden soll.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine Nachricht an alle Mitglieder einer Gruppe. Um diese Methode aufzurufen, muss die <codeph class="+ topic/ph pr-d/codeph ">GroupSpecifier.postingEnabled</codeph>-Eigenschaft in der groupspec, die an den NetGroup-Konstruktor übergeben wird, auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt sein. Weitere Informationen finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_post_en" class="- topic/xref ">„Post messages to a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.
     
     <p class="- topic/p ">Alle Nachrichten müssen eindeutig sein. Eine Nachricht, die mit einer zuvor geposteten identisch ist, wird möglicherweise nicht weitergegeben. Verwenden Sie eine laufende Nummer, damit die Nachricht eindeutig ist.</p>
     
     <p class="- topic/p ">Die Nachrichtenzustellung erfolgt nicht geordnet. Die Nachrichtenzustellung ist nicht garantiert.</p>
     
     <p class="- topic/p ">Nachrichten werden in AMF serialisiert. Die Nachricht kann einen der folgenden Typen aufweisen: Object, int, Number oder String. Die Nachricht kann kein MovieClip sein.</p>
     
     <p class="- topic/p ">Diese Methode sendet ein NetStatusEvent an den Ereignis-Listener von NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>-Eigenschaft. Das <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph>-Ereignis wird an die NetGroup auf dem Client und auf dem Server abgesetzt.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc><example conref="examples\NetGroupPostExample.as" class="- topic/example "> Dies ist eine einfache Text-Chatanwendung, die Peer-to-Peer-Networking verwendet. Die Anwendung stellt über RTMFP eine Verbindung zu Flash Media Server her. Der Server bewahrt die Fingerabdrücke der Clientanwendung auf und verwaltet die Peer-Gruppen, wenn Clients die Verbindung herstellen. Alle Daten werden jedoch zwischen den Clients (Peers) übertragen - es werden keine Daten zurück an den Server gesendet.
 <p class="- topic/p ">Wenn Sie die Anwendung ausführen, können Sie einen beliebigen Gruppennamen in das Texteingabefeld eingeben. Die GroupSpecifier-Klasse verwendet den Namen (zusammen mit ggf. von Ihnen festgelegten GroupSpecifier-Eigenschaften), um einen String zu erstellen, der der ständige eindeutige Namen der Gruppe ist. Um einen anderen Client mit der Gruppe zu verbinden, muss dieser Client denselben Gruppennamen verwenden. Wenn zum Beispiel Client A den Gruppennamen „firstmesh“ verwendet, müssen andere Clients, die mit Client A kommunizieren möchten, auch den Gruppennamen „firstmesh“ verwenden. Wenn Client B den Gruppennamen „kite“ verwendet, wird zwar erfolgreich eine Verbindung hergestellt, es wird jedoch eine neue Gruppe erstellt und die Kommunikation mit Client A oder einem anderen Client in der Gruppe „firstmesh“ ist nicht möglich.</p>
 <p class="- topic/p ">Um dieses Beispiel auszuführen, fügen Sie der Bibliothek in Flash Pro eine Button-, eine Label-, eine TextInput- und eine TextArea-Komponente hinzu.</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">



package  {

    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.events.MouseEvent;
    import flash.events.NetStatusEvent;
    import fl.events.ComponentEvent;
    import fl.controls.Label;
    import fl.controls.Button;
    import fl.controls.TextInput;
    import fl.controls.TextArea;
    import flash.text.TextFieldAutoSize;
    import flash.net.*;

    public class NetGroupPostExample extends Sprite{

        private var connectButton:Button;
        private var disconnectButton:Button;
        private var groupNameText:TextInput;
        private var userNameText:TextInput;
        private var chatText:TextInput;
        private var statusLog:TextArea;
        private var groupLabel:Label;
        private var userLabel:Label;

        private var netConnection:NetConnection = null;
        private var netGroup:NetGroup = null;
        private var sequenceNumber:uint = 0;
        private var connected:Boolean = false;
        private var joinedGroup:Boolean = false;

        private const SERVER:String = "rtmfp://fms.example.com/someapp";

        public function NetGroupPostExample() {
            DoUI();
        }

        // Writes messages to the TextArea.
        private function StatusMessage(msg:Object):void{
            statusLog.text += msg;
            statusLog.verticalScrollPosition = statusLog.textHeight;
            statusLog.validateNow();
        }

        // Handles all NetStatusEvents for the NetConnection and the NetGroup.
        // This code includes cases it doesn't handle so you can see the cases
        // and their info objects for learning purposes.
        private function NetStatusHandler(e:NetStatusEvent):void{
            StatusMessage(e.info.code + "\n");
            switch(e.info.code){
                case "NetConnection.Connect.Success":
                    connectButton.enabled = false;
                    disconnectButton.enabled = true;
                    OnConnect();
                    break;

                case "NetConnection.Connect.Closed":
                    OnDisconnect();
                    break;

                case "NetGroup.Connect.Success": // e.info.group
                    OnNetGroupConnect();
                    break;

                case "NetGroup.Connect.Rejected": // e.info.group
                case "NetGroup.Connect.Failed": // e.info.group
                    break;

                case "NetGroup.Posting.Notify": // e.info.message, e.info.messageID
                    OnPosting(e.info.message);
                    break;

                case "NetStream.MulticastStream.Reset":
                case "NetStream.Buffer.Full":
                    break;

                case "NetGroup.SendTo.Notify": // e.info.message, e.info.from, e.info.fromLocal
                case "NetGroup.LocalCoverage.Notify": //
                case "NetGroup.Neighbor.Connect": // e.info.neighbor
                case "NetGroup.Neighbor.Disconnect": // e.info.neighbor
                case "NetGroup.MulticastStream.PublishNotify": // e.info.name
                case "NetGroup.MulticastStream.UnpublishNotify": // e.info.name
                case "NetGroup.Replication.Fetch.SendNotify": // e.info.index
                case "NetGroup.Replication.Fetch.Failed": // e.info.index
                case "NetGroup.Replication.Fetch.Result": // e.info.index, e.info.object
                case "NetGroup.Replication.Request": // e.info.index, e.info.requestID
                default:
                    break;
                }
            }
        // Creates a NetConnection to Flash Media Server if the app isn't already connected
        // and if there's a group name in the TextInput field.
        private function DoConnect(e:MouseEvent):void{
            if(!connected &amp;&amp; (groupNameText.length > 0)){
                StatusMessage("Connecting to \"" + SERVER + "\" ...\n");
                netConnection = new NetConnection();
                netConnection.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);
                // To connect to Flash Media Server, pass the server name.
                netConnection.connect(SERVER);
            }
            else
            {
                StatusMessage("Enter a group name");
            }
        }

        // Called in the "NetConnection.Connect.Success" case in the NetStatusEvent handler.
        private function OnConnect():void{

            StatusMessage("Connected\n");
            connected = true;

            // Create a GroupSpecifier object to pass to the NetGroup constructor.
            // The GroupSpecifier determines the properties of the group
            var groupSpecifier:GroupSpecifier;
            groupSpecifier = new GroupSpecifier("aslrexample/" + groupNameText.text);
            groupSpecifier.postingEnabled = true;
            groupSpecifier.serverChannelEnabled = true;

            netGroup = new NetGroup(netConnection, groupSpecifier.groupspecWithAuthorizations());
            netGroup.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

            StatusMessage("Join \"" + groupSpecifier.groupspecWithAuthorizations() + "\"\n");

        }

        private function OnNetGroupConnect():void{
            joinedGroup = true;
        }

        private function DoDisconnect(e:MouseEvent):void{
            if(netConnection){
                netConnection.close();
            }
        }

        private function OnDisconnect():void{
            StatusMessage("Disconnected\n");
            netConnection = null;
            netGroup = null;
            connected = false;
            joinedGroup = false;
            connectButton.enabled = true;
            disconnectButton.enabled = false;
        }

        private function ClearChatText():void{
            chatText.text = "";
        }

        // Called when you the chatText field has focus and you press Enter.
        private function DoPost(e:ComponentEvent):void{
            if(joinedGroup){
                var message:Object = new Object;
                message.user = userNameText.text;
                message.text = chatText.text;
                message.sequence = sequenceNumber++;
                message.sender = netConnection.nearID;

                netGroup.post(message);
                StatusMessage("==> " + chatText.text + "\n");
            } else {
                StatusMessage("Click Connect before sending a chat message");
            }
            ClearChatText();
        }

        private function OnPosting(message:Object):void{
            StatusMessage("&lt;" + message.user + "> " + message.text + "\n");
        }

        private function DoUI():void {

            groupLabel = new Label();
            groupLabel.move(20, 10);
            groupLabel.autoSize = TextFieldAutoSize.LEFT
            groupLabel.text = "Group name:"
            addChild(groupLabel);

            groupNameText = new TextInput();
            groupNameText.move(90, 10);
            groupNameText.text = "channel" + (int(Math.random() * 899) + 101);
            addChild(groupNameText);

            connectButton = new Button();
            connectButton.addEventListener(MouseEvent.CLICK, DoConnect);
            connectButton.move(205, 10);
            connectButton.label = "Connect";
            addChild(connectButton);

            disconnectButton = new Button();
            disconnectButton.addEventListener(MouseEvent.CLICK, DoDisconnect);
            disconnectButton.move(310, 10);
            disconnectButton.label = "Disconnect";
            disconnectButton.enabled = false;
            addChild(disconnectButton);

            statusLog = new TextArea();
            statusLog.move(30, 38);
            statusLog.width = 360;
            statusLog.height = 215;
            statusLog.editable = false;
            addChild(statusLog);

            userLabel = new Label();
            userLabel.move(20, 270);
            userLabel.autoSize = TextFieldAutoSize.LEFT
            userLabel.text = "User name:"
            addChild(userLabel);

            userNameText = new TextInput();
            userNameText.move(80, 270);
            userNameText.text = "user " + int(Math.random() * 65536);
            addChild(userNameText);

            chatText = new TextInput();
            chatText.addEventListener(ComponentEvent.ENTER, DoPost);
            chatText.move(185, 270);
            chatText.maxChars = 255;
            chatText.width = 215;
            addChild(chatText);

        }

        public function onPlayStatus(info:Object):void {}
        public function onMetaData(info:Object):void {}
        public function onCuePoint(info:Object):void {}
        public function onTextData(info:Object):void {}

    }

}




</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Posting_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Posting.Notify"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:removeHaveObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeHaveObjects</apiName><shortdesc class="- topic/shortdesc ">
     Entfernt Objekte von startIndex bis endIndex von den Objekten, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zahl, die an diese Methode übergeben wird, ist kleiner als 0 oder größer als 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anfang des Bereichs der Objektindizes, die aus dem Have-Satz entfernt werden sollen.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ende des Bereichs der Objektindizes, die aus dem Have-Satz entfernt werden sollen.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Entfernt Objekte von den Objekten, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Entfernt Objekte von <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> bis <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> von den Objekten, die dieser Knoten den Nachbarn als Objekte anbietet, für die er Anforderungen erfüllt. Indizes müssen ganze Zahlen von 0 bis 9007199254740992 sein.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:removeWantObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeWantObjects</apiName><shortdesc class="- topic/shortdesc ">
     Entfernt Objekte von startIndex bis endIndex aus dem Satz der abzurufenden Objekte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zahl, die an diese Methode übergeben wird, ist kleiner als 0 oder größer als 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anfang des Bereichs der Objektindizes, die aus dem Want-Satz entfernt werden sollen.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ende des Bereichs der Objektindizes, die aus dem Want-Satz entfernt werden sollen.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Entfernt Objekte aus dem Satz der abzurufenden Objekte.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Entfernt Objekte von <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> bis <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> aus dem Satz der abzurufenden Objekte. Indizes müssen ganze Zahlen von 0 bis 9007199254740992 sein.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">addWantObjects()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToAllNeighbors" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToAllNeighbors</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine Meldung an alle Nachbarn.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Eigenschaft der Aufzählungsklasse NetGroupSendResult, die angibt, ob der Sendevorgang erfolgreich war oder fehlgeschlagen ist.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zu sendende Meldung.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine Meldung an alle Nachbarn. Gibt <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> zurück, wenn mindestens ein Nachbar ausgewählt wurde.
     
     <p class="- topic/p ">Weitere Informationen zum Weiterleiten von Nachrichten finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">„Route messages directly to a peer“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Wenn ein Knoten eine Nachricht empfängt, wird ein NetStatusEvent an den Ereignis-Listener von NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekts gesendet. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">sendToNeighbor()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToNearest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToNearest</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine Meldung an den Nachbarn (oder lokalen Knoten), der der angegebenen Gruppenadresse am nächsten ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Eigenschaft der Aufzählungsklasse NetGroupSendResult, die angibt, ob der Sendevorgang erfolgreich war oder fehlgeschlagen ist.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zu sendende Meldung.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Gruppenadresse, an die die Nachricht geleitet werden soll.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine Meldung an den Nachbarn (oder lokalen Knoten), der der angegebenen Gruppenadresse am nächsten ist. Berücksichtigt Nachbarn aus dem gesamten Ring. Gibt <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> zurück, wenn die Nachricht erfolgreich an ihr Ziel gesendet wurde. 
     
     <p class="- topic/p ">Weitere Informationen zum Weiterleiten von Nachrichten finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">„Route messages directly to a peer“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Wenn ein Knoten eine Nachricht empfängt, wird ein NetStatusEvent an den Ereignis-Listener von NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekts gesendet. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/convertPeerIDToGroupAddress()" class="- topic/link "><linktext class="- topic/linktext ">convertPeerIDToGroupAddress()</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToNeighbor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToNeighbor</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine Nachricht an den Nachbarn, der vom sendMode-Parameter angegeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Eigenschaft der Aufzählungsklasse NetGroupSendResult, die angibt, ob der Sendevorgang erfolgreich war oder fehlgeschlagen ist.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zu sendende Meldung.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sendMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Eigenschaft der Aufzählungsklasse NetGroupSendMode, die den Nachbarn angibt, an den die Nachricht gesendet werden soll.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Sendet eine Meldung an den Nachbarn, der vom sendMode-Parameter angegeben wird.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine Nachricht an den Nachbarn, der vom <codeph class="+ topic/ph pr-d/codeph ">sendMode</codeph>-Parameter angegeben wird. Gibt <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> zurück, wenn die Nachricht erfolgreich an das angeforderte Ziel gesendet wurde.
     
     <p class="- topic/p ">Weitere Informationen zum Weiterleiten von Nachrichten finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">„Route messages directly to a peer“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Wenn ein Knoten eine Nachricht empfängt, wird ein NetStatusEvent an den Ereignis-Listener von NetGroup mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekts gesendet. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">sendToAllNeighbors()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link><link href="flash.net.xml#NetGroupSendMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendMode</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:writeRequestedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeRequestedObject</apiName><shortdesc class="- topic/shortdesc ">
     Erfüllt die Anforderung als von NetStatusEvent NetGroup.Replication.Request empfangen für ein Objekt, das zuvor mit der addHaveObjects()-Methode angeboten wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Anforderungsbezeichner wie im <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>-Ereignis angegeben.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Objekt, das dem Index entspricht, der im <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>-Ereignis angegeben wurde.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Erfüllt die Anforderung eines zuvor angebotenen Objekts.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erfüllt die Anforderung wie von NetStatusEvent <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph> empfangen für ein Objekt, das zuvor mit der <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph>-Methode angeboten wurden. Das <codeph class="+ topic/ph pr-d/codeph ">Objekt</codeph> kann einen der folgenden Typen aufweisen: Object, int, Number oder String. Das <codeph class="+ topic/ph pr-d/codeph ">Objekt</codeph> kann kein MovieClip sein.
     
     <p class="- topic/p ">Weitere Informationen zur Objektreplizierung finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">„Replicate an object within a group“</xref> im <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Prüfen Sie auf das <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis, bevor Sie diese Methode aufrufen.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">denyRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetGroup:estimatedMemberCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">estimatedMemberCount</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die geschätzte Anzahl der Mitglieder der Gruppe an, basierend auf der Dichte der lokalen Nachbarschaft und davon ausgehend, dass die Gruppenadressen gleichmäßig verteilt sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Q for dev: why would someone use this instead of neighborcount? --brs
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt die geschätzte Anzahl der Mitglieder der Gruppe an.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die geschätzte Anzahl der Mitglieder der Gruppe an, basierend auf der Dichte der lokalen Nachbarschaft und davon ausgehend, dass die Gruppenadressen gleichmäßig verteilt sind.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/neighborCount" class="- topic/link "><linktext class="- topic/linktext ">neighborCount</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Gibt ein NetGroupInfo-Objekt zurück, dessen Eigenschaften Statistiken zur Dienstgüte in Bezug auf den RTMFP-Peer-to-Peer-Datentransport dieser NetGroup bereitstellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetGroupInfo</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt ein NetGroupInfo-Objekt zurück, dessen Eigenschaften Statistiken zur Dienstgüte bereitstellen.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt ein NetGroupInfo-Objekt zurück, dessen Eigenschaften Statistiken zur Dienstgüte in Bezug auf den RTMFP-Peer-to-Peer-Datentransport dieser NetGroup bereitstellen.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroupInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:localCoverageFrom:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localCoverageFrom</apiName><shortdesc class="- topic/shortdesc ">
     Legt den Beginn des Bereichs der Gruppenadressen fest, für die dieser Knoten der „nächste“ und zuständig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt den Beginn des Bereichs der Gruppenadressen fest, für die dieser Knoten der „nächste“ und zuständig ist. Der Bereich wird in aufsteigender Richtung entlang des Gruppenadressrings mod 2<sup class="+ topic/ph hi-d/sup ">256</sup> angegeben.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageTo" class="- topic/link "><linktext class="- topic/linktext ">localCoverageTo</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_LocalCoverage_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.LocalCoverage.Notify"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:localCoverageTo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localCoverageTo</apiName><shortdesc class="- topic/shortdesc ">
     Gibt das Ende des Bereichs der Gruppenadressen an, für die dieser Knoten der „nächste“ und zuständig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt das Ende des Bereichs der Gruppenadressen an, für die dieser Knoten der „nächste“ und zuständig ist. Der Bereich wird in aufsteigender Richtung entlang des Gruppenadressrings mod 2<sup class="+ topic/ph hi-d/sup ">256</sup> angegeben.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageFrom" class="- topic/link "><linktext class="- topic/linktext ">localCoverageFrom</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_LocalCoverage_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.LocalCoverage.Notify"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:neighborCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">neighborCount</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Anzahl der Gruppenmitglieder fest, mit denen dieser Knoten direkt verbunden ist. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Legt die Anzahl der Gruppenmitglieder fest, mit denen dieser Knoten direkt verbunden ist. 
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Anzahl der Gruppenmitglieder fest, mit denen dieser Knoten direkt verbunden ist. 
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">addNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/estimatedMemberCount" class="- topic/link "><linktext class="- topic/linktext ">estimatedMemberCount</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Neighbor_Connect" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Neighbor.Connect"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Neighbor_Disconnect" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Neighbor.Disconnect"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:receiveMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveMode</apiName><shortdesc class="- topic/shortdesc ">
     Gibt den Routing-Empfangsmodus dieses Knotens als einen der Werte in der NetGroupReceiveMode-Aufzählungsklasse an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt den Routing-Empfangsmodus dieses Knotens als einen der Werte in der NetGroupReceiveMode-Aufzählungsklasse an.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageFrom" class="- topic/link "><linktext class="- topic/linktext ">localCoverageFrom</linktext></link><link href="flash.net.xml#NetGroup/localCoverageTo" class="- topic/link "><linktext class="- topic/linktext ">localCoverageTo</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.net.xml#NetGroupReceiveMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupReceiveMode</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:replicationStrategy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">replicationStrategy</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Abrufstrategie für die Objektreplikation fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Abrufstrategie für die Objektreplikation fest. Der Wert ist einer der aufgezählten Werte in der NetGroupReplicationStrategy-Klasse.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroupReplicationStrategy" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupReplicationStrategy</linktext></link></related-links></apiValue></apiClassifier><apiOperation id="globalOperation:flash.net:getClassByAlias" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getClassByAlias</apiName><shortdesc class="- topic/shortdesc ">
     Sucht nach einer Klasse, für die mit dem Aufruf der Methode „registerClassAlias()“ ein Alias registriert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\GetClassByAliasExample.as -noswf
      
      </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Alias wurde nicht registriert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die mit dem gegebenen Alias verknüpfte Klasse. Falls die Suche nach der Klasse nicht erfolgreich ist, wird eine Ausnahme ausgelöst.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Class</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">aliasName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der zu suchende Alias.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sucht nach einer Klasse, für die mit dem Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph> ein Alias registriert wurde.
     <p class="- topic/p ">Es erfolgt keine Interaktion zwischen dieser Methode und der Methode <codeph class="+ topic/ph pr-d/codeph ">flash.utils.getDefinitionByName()</codeph>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#/registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:navigateToURL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">navigateToURL</apiName><shortdesc class="- topic/shortdesc ">
     Öffnet oder ersetzt ein Fenster in der Anwendung mit dem Flash Player-Container (in der Regel ein Browser).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws IOError The "digest" and "importToSandbox" properties of URLRequest
     are not supported by URLLoader.navigate.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die <codeph class="+ topic/ph pr-d/codeph ">digest</codeph>-Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">request</codeph>-Objekts ist nicht <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Sie sollten nur die <codeph class="+ topic/ph pr-d/codeph ">digest</codeph>-Eigenschaft eines zu verwendenden URLRequest-Objekts festlegen, das die <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>-Methode beim Laden einer SWZ-Datei (einer Adobe-Plattformkomponente) aufruft.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">In Flash Player (und in anwendungsfremden Sandboxinhalt in Adobe AIR), wird dieser Fehler in den folgenden Situationen zurückgegeben:
     <ul class="- topic/ul "><li class="- topic/li ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können diese Situation vermeiden, indem Sie die entsprechende SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren.</li><li class="- topic/li ">Mit einem Navigationsvorgang wurde versucht, die Pseudo-URL eines Skripts zu evaluieren, das zugehörige Dokument (in der Regel ein HTML-Dokument in einem Browser) befindet sich jedoch in einer Sandbox, auf die Sie keinen Zugriff haben. Sie können diese Situation vermeiden, indem Sie im zugehörigen Dokument <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess="always"</codeph> angeben.</li><li class="- topic/li ">Sie können in den Fenstern <codeph class="+ topic/ph pr-d/codeph ">"_self"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"_top"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"_parent"</codeph> nicht navigieren, wenn Ihre SWF-Datei in einer HTML-Seite enthalten ist, für die <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> auf den Wert <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph> oder auf den Wert <codeph class="+ topic/ph pr-d/codeph ">"sameDomain"</codeph> gesetzt ist (wenn die Domänen der HTML-Datei und der SWF-Datei nicht übereinstimmen).</li><li class="- topic/li ">Sie können nicht von einer SWF-Datei in einer lokalen Dateisystem-Sandbox aus in einem Fenster mit einem nicht standardmäßigen Namen navigieren.</li><li class="- topic/li ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Methode wird nicht als Reaktion auf eine Benutzeraktion, z. B. ein Mausereignis oder Tastendruckereignis, aufgerufen. Diese Anforderung bezieht sich nur auf Inhalt in Flash Player und anwendungsfremden Sandboxinhalt in Adobe AIR.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URLRequest-Objekt, das die URL angibt, zu der navigiert werden soll.
     
     <p class="- topic/p "><ph class="- topic/ph ">Für Inhalt, der in Adobe AIR ausgeführt wird, gilt: </ph>Wenn die <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Funktion verwendet wird, behandelt die Laufzeit ein URLRequest-Objekt, das die POST-Methode verwendet (ein Objekt, dessen <codeph class="+ topic/ph pr-d/codeph ">method</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> eingestellt ist), so, als ob die GET-Methode verwendet wird.</p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">window</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Browserfenster oder der HTML-Frame, in dem das mit dem Parameter <codeph class="+ topic/ph pr-d/codeph ">request</codeph> angegebene Dokument angezeigt werden soll. Sie können den Namen eines bestimmten Fensters angeben oder einen der folgenden Werte verwenden:
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_self"</codeph> bezeichnet den aktuellen Frame im aktuellen Fenster.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_blank"</codeph> bezeichnet ein neues Fenster.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_parent"</codeph> bezeichnet den übergeordneten Frame des aktuellen Frames.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_top"</codeph> bezeichnet den obersten Frame im aktuellen Fenster.</li></ul>
     <p class="- topic/p ">Wenn Sie für diesen Parameter keinen Wert angeben, wird ein neues leeres Fenster erstellt. Im eigenständigen Player können Sie entweder ein neues Fenster (<codeph class="+ topic/ph pr-d/codeph ">"_blank"</codeph>) oder ein benanntes Fenster angeben. Die anderen Werte treffen nicht zu.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn eine SWF-Datei in der lokalen Dateisystem-Sandbox ausgeführt wird und mit einem Code, der sich in dieser SWF-Datei befindet, die Funktion <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> aufgerufen und ein benutzerdefinierter Fenstername für den Parameter <codeph class="+ topic/ph pr-d/codeph ">window</codeph> angegeben wird, wird der Fenstername in einen Zufallsnamen umgewandelt. Der Name hat die Form <codeph class="+ topic/ph pr-d/codeph ">"_flashXXXXXXXX"</codeph>, wobei jedes X eine zufällige hexadezimale Zahl darstellt. Wenn Sie innerhalb derselben Sitzung (bis zum Schließen des jeweiligen Browserfensters) die Funktion erneut aufrufen und denselben Namen für den Parameter <codeph class="+ topic/ph pr-d/codeph ">window</codeph> angeben, wird derselbe Zufalls-String verwendet.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Öffnet oder ersetzt ein Fenster in der Anwendung mit dem Flash Player-Container (in der Regel ein Browser). In Adobe AIR öffnet die Funktion eine URL im Standardwebbrowser des Systems</ph>
     
     
      <p class="- topic/p ">  <b class="+ topic/ph hi-d/b "><i class="+ topic/ph hi-d/i ">Wichtiger Sicherheitshinweis</i></b> </p>
      <p class="- topic/p ">Entwickler übergeben URL-Werte, die von externen Quellen wie z. B. FlashVars erhalten wurden, oft an die <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Funktion. Hacker können versuchen, die externen Quellen zu ändern, um Angriffe wie z. B. Cross-Site-Scripting durchzuführen. Aus diesem Grund sollten Entwickler alle URLs überprüfen, bevor sie sie an diese Funktion übergeben. </p>
      
     <p class="- topic/p ">Eine gute Datenprüfung für URLs kann je nach dem Verwendungszweck der URL in der gesamten Anwendung Verschiedenes bedeuten. Eine der häufigsten Datenprüfmethode besteht darin, zu prüfen, ob die URL dem jeweiligen Schema entspricht. Wenn z. B. unbeabsichtigt javascript:-URLs erlaubt werden, kann dies in Cross-Site-Scripting resultieren. Durch die Prüfung, ob die URL innerhalb Ihrer Domäne ist, kann gewährleistet werden, dass die SWF-Datei nicht als offene Umleitung durch Personen verwendet werden kann, die Phishing-Angriffe ausführen. Als zusätzliche Sicherheitsmaßnahme könnten Sie außerdem den Pfad der URL prüfen bzw. auch prüfen, ob die URL den RFC-Richtlinien entspricht.</p>
     
     <p class="- topic/p ">Der folgende Code ist ein einfaches Beispiel für eine Datenprüfung, bei der jede URL, die nicht mit http:// oder https:// beginnt, geblockt wird, und außerdem überprüft wird, ob sich die URL innerhalb Ihres Domänennamens befindet. Dieses Beispiel ist nicht unbedingt für alle Webanwendungen geeignet und Sie sollten sich überlegen, ob zusätzliche Prüfungen für URLs notwendig sind. </p>
     
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     // AS3 Regular expression pattern match for URLs that start with http:// and https:// plus your domain name.
     function checkProtocol (flashVarURL:String):Boolean {
        // Get the domain name for the SWF if it is not known at compile time.
        // If the domain is known at compile time, then the following two lines can be replaced with a hard coded string.
        var my_lc:LocalConnection = new LocalConnection();
        var domainName:String = my_lc.domain;
        // Build the RegEx to test the URL.
        // This RegEx assumes that there is at least one "/" after the
        // domain. http://www.mysite.com will not match.
        var pattern:RegExp = new RegExp("^http[s]?\:\\/\\/([^\\/]+)\\/");
        var result:Object = pattern.exec(flashVarURL);
        if (result == null || result[1] != domainName || flashVarURL.length >= 4096) {
          return (false);
        }
        return (true);
     }  
     
      </codeblock>
     <p class="- topic/p ">Für <i class="+ topic/ph hi-d/i ">local</i>-Inhalt, der in einem Browser ausgeführt wird, sind Aufrufe der <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Methode, die ein <codeph class="+ topic/ph pr-d/codeph ">"javascript:"</codeph>-Pseudoprotokoll (über ein <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph>-Objekt, das als erster Parameter übergeben wurde) nur zulässig, wenn sich die SWF-Datei und die enthaltende Webseite (sofern es eine gibt) in der lokal vertrauenswürdigen Sicherheitssandbox befinden. Einige Browser unterstützen das Javascript-Protokoll mit der <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Methode nicht. Ziehen Sie stattdessen einen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">call()</codeph>-Methode der <codeph class="+ topic/ph pr-d/codeph ">ExternalInterface</codeph>-API in Betracht, um JavaScript-Methoden innerhalb der umschließenden HTML-Seite aufzurufen.</p>
     
      <p class="- topic/p ">In Flash Player und anwendungsfremden Sandboxen in Adobe AIR können Sie keine Verbindung mit normalerweise reservierten Ports herstellen. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     <p class="- topic/p ">Wenn Flash Player 10 oder eine spätere Version im Browser ausgeführt wird, kann diese Methode eventuell nicht programmgesteuert verwendet werden, um ein Popupfenster zu öffnen. Verschiedene Browser (und Browserkonfigurationen) blocken eventuell Popupfenster. Es kann daher nicht sichergestellt werden, dass Popupfenster eingeblendet werden. Den größten Erfolg verspricht diese Methode zum Öffnen eines Popupfensters, und zwar aufgrund von Code, der als direktes Ergebnis einer Benutzeraktion ausgeführt wird, z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis.</p>
     
     <p class="- topic/p "> Wenn Sie in Flash Player 10 oder höher einen Multipart-Content-Type verwenden (z. B. „multipart/form-data“), der einen Upload enthält (gekennzeichnet durch einen „filename“-Parameter in einem „content-disposition“-Header innerhalb des POST-Body), so unterliegt die POST-Methode den Sicherheitsregeln für Uploads:</p>
     <ul class="- topic/ul "><li class="- topic/li ">Der POST-Vorgang muss als Reaktion auf eine durch den Benutzer initiierte Aktion, z. B. Mausklick oder Tastendruck, erfolgen.</li><li class="- topic/li ">Ist die POST-Methode domänenübergreifend (das POST-Ziel befindet sich auf einem anderen Server als die SWF-Datei, die die POST-Anforderung sendet), so muss der Zielserver eine URL-Richtliniendatei bereitstellen, die den domänenübergreifenden Zugriff erlaubt.</li></ul>
     <p class="- topic/p ">Für alle mehrteiligen Content-Typen muss ebenfalls die Syntax nach Standard RFC2046 gültig sein. Scheint die Syntax ungültig zu sein, so unterliegt die POST-Methode den Sicherheitsregeln für Uploads.</p>
     
     
     
     <p class="- topic/p ">In AIR werden auf mobilen Plattformen die URI-Schemas sms: und tel: unterstützt. Unter Android werden die URI-Schemas vipaccess:, connectpro: und market: unterstützt. Die URL-Syntax richtet sich nach den Plattformkonventionen. Unter Android muss das URI-Schema zum Beispiel in Kleinbuchstaben angegeben werden. Wenn Sie unter Verwendung eines dieser Schemas zu einer URL navigieren, öffnet die Laufzeitumgebung die URL in der Standardanwendung zur Verarbeitung dieses Schemas. Bei der Navigation zu <codeph class="+ topic/ph pr-d/codeph ">tel:+5555555555</codeph> wird zum Beispiel die Telefonwahl geöffnet, wobei die Nummer bereits eingetragen wurde. Damit die URL verarbeitet werden kann, muss eine separate Anwendung oder Utility verfügbar sein, zum Beispiel ein Telefonwählprogramm.</p>
     
     <p class="- topic/p ">Mit dem folgenden Code können Sie die Anwendungen VIP Access und Connect Pro unter Android aufrufen:</p>
     
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
       //Invoke the VIP Access Application.
       navigateToURL(new URLRequest("vipaccess://com.verisign.mvip.main?action=securitycode"));
     
       //Invoke the Connect Pro Application.
       navigateToURL(new URLRequest("connectpro://"));
     
      </codeblock>
     
     </apiDesc><example conref="examples\NavigateToURLExample.as" class="- topic/example "> Im folgenden Beispiel wird die URL http://www.adobe.com in einem neuen Browserfenster geöffnet, und in einem URLVariables-Objekt erfasste Daten zu einer Benutzersitzung werden an den Webserver übergeben.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class NavigateToURLExample extends Sprite {

        public function NavigateToURLExample() {
            var url:String = "http://www.adobe.com";
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "Your Name";
            var request:URLRequest = new URLRequest(url);
            request.data = variables;
            try {            
                navigateToURL(request);
            }
            catch (e:Error) {
                // handle error here
            }
        }
    }
}
</codeblock></example><example conref="examples\URLRequest_example.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie mit der navigateToURL()-Methode aus Flash Player neue Browserfenster öffnen können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/12/08/opening-urls-in-new-browser-windows-using-actionscript-30-and-actionscript-20/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Requires
// - Button symbol on Stage (or a display object, such as a MovieClip) with instance name "buttonSymbol"
//
buttonSymbol.addEventListener(MouseEvent.CLICK, buttonSymbol_click);
 
function buttonSymbol_click(evt:MouseEvent):void {
    var req:URLRequest = new URLRequest("http://www.adobe.com/");
    navigateToURL(req, "_blank");
}
</codeblock></example><example conref="examples\NavigateToURL.tel.1.as" class="- topic/example "> Das folgende Beispiel zeigt die Syntax zum Starten der Telefonwahl des Geräts mit der angegebenen Nummer.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "tel:+5555555555" );
navigateToURL( request );
</codeblock></example><example conref="examples\NavigateToURL.sms.1.as" class="- topic/example "> Das folgende Beispiel zeigt die Syntax zum Starten der Textnachricht-Anwendung des Geräts mit dem angegebenen Empfänger.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "sms:+5555555555" );
navigateToURL( request );
</codeblock></example><example conref="examples\NavigateToURL.market.1.as" class="- topic/example "> Das folgende Beispiel zeigt die Syntax zum Starten der Android Market-App. Der Suchparameter ist zum Suchen der Flash Player-App eingestellt.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "market://search?q=pname:com.adobe.flashplayer" );
navigateToURL( request );
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExternalInterface/call()" class="- topic/link "><linktext class="- topic/linktext ">flash.external.ExternalInterface.call()</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:registerClassAlias" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">registerClassAlias</apiName><shortdesc class="- topic/shortdesc ">
     Behält die Klasse (den Typ) eines Objekts bei, wenn dieses in Action Message Format (AMF) kodiert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn einer der Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">aliasName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der zu verwendende Alias.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">classObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Class</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die mit dem gegebenen Alias verknüpfte Klasse.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Behält die Klasse (den Typ) eines Objekts bei, wenn dieses in Action Message Format (AMF) kodiert wird. Bei der Kodierung eines Objekts in AMF speichert diese Funktion einen Alias für die Klasse des Objekts, sodass Sie die Klasse wiederherstellen können, wenn Sie das Objekt dekodieren. Wenn im Kontext der Kodierung kein Alias für eine Objektklasse registriert wird, erfolgt die Kodierung des Objekts als anonymes Objekt. Wenn im Kontext der Dekodierung nicht derselbe Alias registriert ist, wird für die dekodierten Daten ein anonymes Objekt erstellt.
     
     <p class="- topic/p ">LocalConnection, ByteArray, SharedObject, NetConnection und NetStream sind Beispiele für Klassen, die Objekte in AMF kodieren.</p>
     
     <p class="- topic/p ">Für den Kodierungs- und Dekodierungskontext muss nicht dieselbe Klasse für einen Alias verwendet werden. Die Klassen können geändert werden, vorausgesetzt, dass die Zielklasse alle Mitglieder enthält, die von der Quellklasse serialisiert werden.</p>
     
     </apiDesc><example conref="examples\RegisterClassAliasExample.as" class="- topic/example "> In diesem Beispiel wird die Funktion <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph> zur Registrierung eines Alias (<codeph class="+ topic/ph pr-d/codeph ">com.example.eg</codeph>) für die ExampleClass-Klasse verwendet. Die Registrierung eines Alias für die Klasse ermöglicht die Deserialisierung des Objekts als Instanz von ExampleClass, und der Code gibt den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> aus. Bei Entfernung des Aufrufs <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph> würde der Code den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> ausgeben. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.registerClassAlias;
    import flash.utils.ByteArray;

    public class RegisterClassAliasExample extends Sprite {
        public function RegisterClassAliasExample() {
            registerClassAlias("com.example.eg", ExampleClass);
            var eg1:ExampleClass = new ExampleClass();
            var ba:ByteArray = new ByteArray();
            ba.writeObject(eg1);
            ba.position = 0;
            var eg2:* = ba.readObject();
            trace(eg2 is ExampleClass); // true
        }
    }
}

class ExampleClass {}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding-Klasse</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:sendToURL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToURL</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine URL-Anforderung an einen Server, Antworten werden jedoch ignoriert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws IOError The "digest" and "importToSandbox" properties of URLRequest
     are not supported by URLLoader.send.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können diese Situation vermeiden, indem Sie die entsprechende SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
      
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URLRequest-Objekt, das die URL angibt, an die Daten gesendet werden sollen.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine URL-Anforderung an einen Server, Antworten werden jedoch ignoriert.
     <p class="- topic/p ">Verwenden Sie die Methode<codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>, wenn die Serverantwort überprüft werden soll.</p>
     
     <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     <p class="- topic/p ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</p>
     
     <p class="- topic/p "> Wenn Sie in Flash Player 10 oder höher einen Multipart-Content-Type verwenden (z. B. „multipart/form-data“), der einen Upload enthält (gekennzeichnet durch einen „filename“-Parameter in einem „content-disposition“-Header innerhalb des POST-Body), so unterliegt die POST-Methode den Sicherheitsregeln für Uploads:</p>
     <ul class="- topic/ul "><li class="- topic/li ">Der POST-Vorgang muss als Reaktion auf eine durch den Benutzer initiierte Aktion, z. B. Mausklick oder Tastendruck, erfolgen.</li><li class="- topic/li ">Ist die POST-Methode domänenübergreifend (das POST-Ziel befindet sich auf einem anderen Server als die SWF-Datei, die die POST-Anforderung sendet), so muss der Zielserver eine URL-Richtliniendatei bereitstellen, die den domänenübergreifenden Zugriff erlaubt.</li></ul>
     <p class="- topic/p ">Für alle mehrteiligen Content-Typen muss ebenfalls die Syntax nach Standard RFC2046 gültig sein. Scheint die Syntax ungültig zu sein, so unterliegt die POST-Methode den Sicherheitsregeln für Uploads.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc><example conref="examples\SendToURLExample.as" class="- topic/example "> Im folgenden Beispiel werden die in einem URLVariables-Objekt erfassten Daten zu einer Benutzersitzung an die Anwendung unter http://www.yourDomain.com/application.jsp übergeben.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.net.URLRequest;
    import flash.net.URLVariables;
    import flash.net.sendToURL;

    public class SendToURLExample extends Sprite {

        public function SendToURLExample() {
            var url:String = "http://www.yourDomain.com/application.jsp";
            var variables:URLVariables = new URLVariables();
            variables.sessionId = new Date().getTime();
            variables.userLabel = "Your Name";

            var request:URLRequest = new URLRequest(url);
            request.data = variables;
            trace("sendToURL: " + request.url + "?" + request.data);
            try {
                sendToURL(request);
            }
            catch (e:Error) {
                // handle error here
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiClassifier languages="" id="flash.net:NetGroupReceiveMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupReceiveMode</apiName><shortdesc class="- topic/shortdesc ">
Die NetGroupReceiveMode-Klasse ist eine Aufzählung von Konstantenwerten, die für die receiveMode-Eigenschaft der NetGroup-Klasse verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Eine Aufzählung von Konstantenwerten, die für die receiveMode-Eigenschaft in der NetGroup-Klasse verwendet werden.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetGroupReceiveMode-Klasse ist eine Aufzählung von Konstantenwerten, die für die <codeph class="+ topic/ph pr-d/codeph ">receiveMode</codeph>-Eigenschaft der NetGroup-Klasse verwendet werden.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links><apiValue id="flash.net:NetGroupReceiveMode:EXACT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXACT</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, dass dieser Knoten nur dann lokale Meldungen von Nachbarn akzeptiert, wenn die vom Nachbarn verwendete Adresse genau mit der Adresse des Knotens übereinstimmt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exact</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, dass dieser Knoten nur dann lokale Meldungen von Nachbarn akzeptiert, wenn die vom Nachbarn verwendete Adresse genau mit der Adresse des Knotens übereinstimmt. Das heißt, dass dieser Knoten sich selbst nur dann als den nächsten Knoten für jeden <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph>-Aufruf betrachtet, wenn der <codeph class="+ topic/ph pr-d/codeph ">groupAddress</codeph>-Parameter, der an <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph> übergeben wird, genau mit der Gruppenadresse dieses Knotens übereinstimmt. Dieser Wert ist die Standardeinstellung. 
    
    <p class="- topic/p ">Wenn Sie verteiltes Routingverhalten aktivieren möchten, stellen Sie diesen Wert auf <codeph class="+ topic/ph pr-d/codeph ">NetGroupReceiveMode.NEAREST</codeph> ein. Wenn dieser Wert gesetzt ist, wartet ein Knoten auf eine stabile Konnektivität, bevor er am Directed-Routing-Mesh teilnimmt.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupReceiveMode:NEAREST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEAREST</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, dass dieser Knoten lokale Meldungen von Nachbarn akzeptiert, die Meldungen an Gruppenadressen senden, die nicht genau mit der Adresse dieses Knotens übereinstimmen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nearest</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, dass dieser Knoten lokale Meldungen von Nachbarn akzeptiert, die Meldungen an Gruppenadressen senden, die nicht genau mit der Adresse dieses Knotens übereinstimmen. Nachrichten werden empfangen, wenn dieser Knoten unter allen Nachbarn, deren Empfangsmodus <codeph class="+ topic/ph pr-d/codeph ">NetGroupReceiveMode.NEAREST</codeph> ist, der nächste ist. Die Entfernung wird zwischen Adressen auf dem Ring mod 2<sup class="+ topic/ph hi-d/sup ">256</sup> ermittelt.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:Responder" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Responder</apiName><shortdesc class="- topic/shortdesc ">
 Die Responder-Klasse stellt ein Objekt bereit, das in „NetConnection.call()“ zur Verarbeitung der Rückgabewerte vom Server im Zusammenhang mit dem Erfolg oder Fehlschlagen von bestimmten Operationen verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die Responder-Klasse stellt ein Objekt bereit, das in <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> zur Verarbeitung der Rückgabewerte vom Server im Zusammenhang mit dem Erfolg oder Fehlschlagen von bestimmten Operationen verwendet wird. Beim Einsatz von <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> können Sie auf einen Fehler der Netzwerkoperation treffen, der speziell mit der aktuellen Operation zusammenhängt, oder auf einen Fehler, der sich auf den aktuellen Verbindungsstatus bezieht. Für unkompliziertere Fehlerbearbeitung haben Operationsfehler das Responder- anstelle des NetConnection-Objekts zum Ziel.
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/call()" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.call()</linktext></link></related-links><apiConstructor id="flash.net:Responder:Responder" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Responder</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein neues Responder-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">result</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Funktion, die aufgerufen wird, wenn der Aufruf an den Server erfolgreich war und ein Ergebnis zurückgegeben wird.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Funktion, die aufgerufen wird, wenn der Server einen Fehler zurückgibt.
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein neues Responder-Objekt. Sie übergeben das Responder-Objekt zur Verarbeitung der Rückgabewerte vom Server an <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>. Sie können für einen oder beide Parameter <codeph class="+ topic/ph pr-d/codeph ">null</codeph> übergeben.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestHeader</apiName><shortdesc class="- topic/shortdesc ">
 Ein URLRequestHeader-Objekt enthält einen einzelnen HTTP-Anforderungsheader und besteht aus einem Name/Wert-Paar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein URLRequestHeader-Objekt enthält einen einzelnen HTTP-Anforderungsheader und besteht aus einem Name/Wert-Paar. URLRequestHeader-Objekte werden in der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> der URLRequest-Klasse verwendet.
 
 <p class="- topic/p ">In Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> kann Inhalt in der Sicherheitssandbox der Anwendung (zum Beispiel Inhalt, der mit der AIR-Anwendung installiert wurde) beliebige Anforderungsheader ohne Fehler verwenden. Für Inhalt, der in Adobe AIR ausgeführt wird und sich in einer anderen Sicherheitssandbox befindet, <ph class="- topic/ph ">oder für Inhalt der in Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player ausgeführt wird,</ph> führt die Verwendung der folgenden Anforderungsheader zu einem Laufzeitfehler, und bei beschränkten Begriffen wird nicht zwischen Groß- und Kleinschreibung unterschieden (zum Beispiel sind <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">get</codeph> und <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> alle nicht zulässig): </p>
 
 <p class="- topic/p ">In Flash Player und in Adobe AIR-Inhalt außerhalb der Sicherheitssandbox der Anwendung können die folgenden Anforderungsheader nicht verwendet werden und bei beschränkten Begriffen wird nicht zwischen Groß- und Kleinschreibung unterschieden (zum Beispiel sind <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">get</codeph> und <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> alle nicht zulässig). Mit Bindestrich versehene Begriffe gelten, wenn ein Unterstrichzeichen verwendet wird (so ist es nicht zulässig, sowohl <codeph class="+ topic/ph pr-d/codeph ">Content-Length</codeph> und <codeph class="+ topic/ph pr-d/codeph ">Content_Length</codeph> zu verwenden): </p>
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">Accept-Charset</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Accept-Encoding</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Accept-Ranges</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Age</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Allow</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Allowed</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Authorization</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Charge-To</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Connect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Connection</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Length</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Location</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Cookie</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Date</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Delete</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ETag</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Expect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Head</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Host</codeph>, <codeph class="+ topic/ph pr-d/codeph ">If-Modified-Since</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Keep-Alive</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Last-Modified</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Location</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Max-Forwards</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Options</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Origin</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Post</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Authenticate</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Authorization</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Connection</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Public</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Put</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Referer</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Request-Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Retry-After</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Server</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Trace</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Trailer</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Transfer-Encoding</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Upgrade</codeph>, <codeph class="+ topic/ph pr-d/codeph ">URI</codeph>, <codeph class="+ topic/ph pr-d/codeph ">User-Agent</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Vary</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Via</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Warning</codeph>, <codeph class="+ topic/ph pr-d/codeph ">WWW-Authenticate</codeph>, <codeph class="+ topic/ph pr-d/codeph ">x-flash-version</codeph>.</p>
 
 <p class="- topic/p ">Für URLRequestHeader-Objekte gelten Längenbeschränkungen. Wenn die Gesamtlänge eines URLRequestHeader-Objekts (die Länge der <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Eigenschaft plus die Länge der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">value</codeph>) oder eines Arrays von URLRequestHeader-Objekten (verwendet in der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph>) die zulässige Länge überschreitet, wird eine Ausnahme ausgelöst.</p>
 
 <p class="- topic/p ">Inhalt, der in Adobe AIR ausgeführt wird, stellt den <codeph class="+ topic/ph pr-d/codeph ">ACCEPT</codeph>-Header auf Folgendes ein, sofern Sie nicht eine Einstellung für den <codeph class="+ topic/ph pr-d/codeph ">ACCEPT</codeph>-Header in der <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Eigenschaft der URLRequest-Klasse festlegen:</p>
 
 <codeph class="+ topic/ph pr-d/codeph ">text/xml, application/xml, application/xhtml+xml, text/html;q=0.9, text/plain;q=0.8, image/png, application/x-shockwave-flash, video/mp4;q=0.9, flv-application/octet-stream;q=0.8, video/x-flv;q=0.7, audio/mp4, ~~/~~;q=0.5</codeph>
 <p class="- topic/p ">Nicht alle Methoden, die URLRequest-Parameter akzeptieren, unterstützen die <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Eigenschaft. Informationen zu der von Ihnen aufgerufenen Methode finden Sie in der entsprechenden Dokumentation. Beispiel: Die <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>- und die <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-Methode unterstützen die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph>-Eigenschaft nicht.</p>
 <p class="- topic/p ">Aufgrund von Browsereinschränkungen werden benutzerdefinierte HTTP-Anforderungs-Header für <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderungen, aber nicht für <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Anforderungen unterstützt.</p>  
 
 </apiDesc><example conref="examples\URLRequestHeaderExample.as" class="- topic/example "> Im folgenden Beispiel wird dem Array für die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> ein einzelner HTTP-Anforderungsheader <codeph class="+ topic/ph pr-d/codeph ">header</codeph> hinzugefügt. Der Header gibt an, dass die Anwendung selbst dann die Anforderung an den Ursprungsserver weiterleiten sollte, wenn sie über eine zwischengespeicherte Kopie dessen verfügt, was angefordert wird.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.net.URLRequestHeader;
    import flash.net.URLRequestMethod;
    import flash.net.URLVariables;

    public class URLRequestHeaderExample extends Sprite {
        public function URLRequestHeaderExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var header:URLRequestHeader = new URLRequestHeader("pragma", "no-cache");
            var request:URLRequest = new URLRequest("http://www.[yourdomain].com/greeting.cfm");
            request.data = new URLVariables("name=John+Doe");
            request.method = URLRequestMethod.POST;
            request.requestHeaders.push(header);
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link></related-links><apiConstructor id="flash.net:URLRequestHeader:URLRequestHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestHeader</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein neues URLRequestHeader-Objekt, das einen einzelnen HTTP-Anforderungsheader umfasst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name eines HTTP-Anforderungsheaders (z. B. <codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">SOAPAction</codeph>).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">name</codeph> verknüpfte Wert (z. B. <codeph class="+ topic/ph pr-d/codeph ">text/plain</codeph>).
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein neues URLRequestHeader-Objekt, das einen einzelnen HTTP-Anforderungsheader umfasst. URLRequestHeader-Objekte werden in der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> der URLRequest-Klasse verwendet.
     
	 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.net:URLRequestHeader:name" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
	 Der Name eines HTTP-Anforderungsheaders (z. B. „Content-Type“ oder „SOAPAction“).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Name eines HTTP-Anforderungsheaders (z. B. <codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">SOAPAction</codeph>).
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestHeader:value" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">value</apiName><shortdesc class="- topic/shortdesc ">
	 Der mit der Eigenschaft „name“ verknüpfte Wert (z. B. „text/plain“).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">name</codeph> verknüpfte Wert (z. B. <codeph class="+ topic/ph pr-d/codeph ">text/plain</codeph>).
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestMethod" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestMethod</apiName><shortdesc class="- topic/shortdesc ">
 Die URLRequestMethod-Klasse stellt Werte bereit, die angeben, ob das URLRequest-Objekt beim Senden von Daten an den Server die POST- oder die GET-Methode verwenden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die URLRequestMethod-Klasse stellt Werte bereit, die angeben, ob das URLRequest-Objekt beim Senden von Daten an den Server die <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>- oder die <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Methode verwenden soll.
 
 </apiDesc><example conref="examples\URLRequestMethodExample.as" class="- topic/example "> Im folgenden Beispiel werden die in einer lokalen Textdatei gefundenen Daten geladen und angezeigt. Des Weiteren werden Ereignisverarbeitungsinformationen erfasst.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Legen Sie zur Ausführung des Beispiels eine Datei mit dem Namen „example.txt“ in dem Verzeichnis ab, in dem sich die SWF-Datei befindet. Hierbei muss es sich um eine einfache Textdatei mit ein paar Wörtern oder Textzeilen handeln.
 </p>
 <p class="- topic/p ">Der Beispielcode führt folgende Schritte aus:</p>
 <ol class="- topic/ol "><li class="- topic/li ">Die Konstruktorfunktion erstellt eine URLLoader-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>.</li><li class="- topic/li ">Das Objekt <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> wird an die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> übergeben, die für jedes unterstützte URLLoader-Ereignis Listener hinzufügt.</li><li class="- topic/li ">Es wird eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph> erstellt, die den Namen der zu ladenden Datei angibt.</li><li class="- topic/li ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">method</codeph> der Anforderung wird auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> gesetzt.</li><li class="- topic/li ">Dann wird das Objekt <codeph class="+ topic/ph pr-d/codeph ">request</codeph> an die Methode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph> übergeben, die die Textdatei lädt.</li><li class="- topic/li ">Nach Abschluss des Ladevorgangs wird das Ereignis <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> ausgelöst, das wiederum die Methode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> auslöst. Die Methode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> aus, d. h. den Inhalt der Textdatei.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">


package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLRequestMethodExample extends Sprite {

        public function URLRequestMethodExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("example.txt");
            
            request.method = URLRequestMethod.POST;
            loader.load(request);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link></related-links><apiValue id="flash.net:URLRequestMethod:DELETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DELETE</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass für das URLRequest-Objekt die DELETE-Methode verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">DELETE</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, dass für das URLRequest-Objekt die DELETE-Methode verwendet wird.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass für das URLRequest-Objekt die <codeph class="+ topic/ph pr-d/codeph ">DELETE</codeph>-Methode verwendet wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:GET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GET</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass für das URLRequest-Objekt die GET-Methode verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">GET</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, dass für das URLRequest-Objekt die GET-Methode verwendet wird.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass für das URLRequest-Objekt die <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Methode verwendet wird.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:HEAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HEAD</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass für das URLRequest-Objekt die HEAD-Methode verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">HEAD</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, dass für das URLRequest-Objekt die HEAD-Methode verwendet wird.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass für das URLRequest-Objekt die <codeph class="+ topic/ph pr-d/codeph ">HEAD</codeph>-Methode verwendet wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:OPTIONS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPTIONS</apiName><shortdesc class="- topic/shortdesc ">
	 Legt fest, dass das URLRequest-Objekt OPTIONS ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">OPTIONS</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Legt fest, dass das URLRequest-Objekt OPTIONS ist.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Legt fest, dass das URLRequest-Objekt <codeph class="+ topic/ph pr-d/codeph ">OPTIONS</codeph> ist.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:POST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">POST</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass für das URLRequest-Objekt die POST-Methode verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">POST</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, dass für das URLRequest-Objekt die POST-Methode verwendet wird.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass für das URLRequest-Objekt die <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Methode verwendet wird.
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> <ph class="- topic/ph ">Wenn Inhalt in Adobe AIR ausgeführt wird und wenn</ph> die <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Funktion verwendet wird, behandelt die Laufzeit einen URLRequest, der die POST-Methode benutzt (bei der die <codeph class="+ topic/ph pr-d/codeph ">method</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> gesetzt ist) so, als ob die GET-Methode verwendet wird.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:PUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUT</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass für das URLRequest-Objekt die PUT-Methode verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">PUT</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, dass für das URLRequest-Objekt die PUT-Methode verwendet wird.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass für das URLRequest-Objekt die <codeph class="+ topic/ph pr-d/codeph ">PUT</codeph>-Methode verwendet wird.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileReference" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileReference</apiName><shortdesc class="- topic/shortdesc ">
  Die FileReference-Klasse stellt eine Möglichkeit dar, Dateien zwischen dem Computer eines Benutzers und einem Server hoch- bzw. herunterzuladen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">FileReference, FileReference.browse, FileReference.download, FileReference.create, browse, download, create
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Die FileReference-Klasse stellt eine Möglichkeit dar, Dateien zwischen dem Computer eines Benutzers und einem Server hoch- bzw. herunterzuladen. Anhand eines Dialogfelds des Betriebssystems wird der Benutzer aufgefordert, eine hochzuladende Datei oder eine Position für den Download auszuwählen. Jedes FileReference-Objekt verweist auf eine Datei auf der Festplatte des Benutzercomputers und stellt Eigenschaften bereit, die die Größe der Datei, ihren Typ, den Namen, das Erstellungs- und das Änderungsdatum sowie bei Macintosh den Erstellertyp enthalten. 
  
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> In Adobe AIR bietet die File-Klasse, die die FileReference-Klasse erweitert, mehr Fähigkeiten und hat weniger Sicherheitseinschränkungen als die FileReference-Klasse.</p>
  
  <p class="- topic/p ">FileReference-Instanzen können auf die folgenden Weisen erstellt werden:</p>
  <ul class="- topic/ul "><li class="- topic/li ">Mit dem Operator <codeph class="+ topic/ph pr-d/codeph ">new</codeph> und dem FileReference-Konstruktor: <codeph class="+ topic/ph pr-d/codeph ">var myFileReference = new FileReference();</codeph></li><li class="- topic/li ">Durch Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, wodurch ein Array mit den FileReference-Objekten erstellt wird.</li></ul>
  
  <p class="- topic/p ">Bei einem Upload-Vorgang werden den Eigenschaften eines FileReference-Objekts durch Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>oder <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>-Werte zugewiesen. Bei einem Download-Vorgang wird der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">name</codeph> ein Wert zugewiesen, wenn das Ereignis <codeph class="+ topic/ph pr-d/codeph ">select</codeph> ausgelöst wird. Die Werte aller anderen Eigenschaften werden bei Auslösung des Ereignisses <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> zugewiesen.</p>
  
  <p class="- topic/p ">Mit der Methode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> wird ein Dialogfeld des Betriebssystems geöffnet, in dem der Benutzer zur Auswahl einer Datei für den Upload-Vorgang aufgefordert wird. Mithilfe der <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>-Methode kann ein Benutzer eine einzelne Datei auswählen. <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ermöglicht die Auswahl mehrerer Dateien. Nach einem erfolgreichen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>-Methode können Sie die <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>-Methode aufrufen, um jeweils eine Datei hochzuladen. Die <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-Methode fordert den Benutzer zur Eingabe eines Speicherorts für die Datei auf und startet den Download der Datei von einer anderen URL.</p>
  
  <p class="- topic/p ">Allerdings kann mit den Klassen FileReference und FileReferenceList der Standardspeicherort für das mit der Methode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> generierte Dialogfeld nicht festgelegt werden. Der im Dialogfeld angegebene Standardspeicherort ist der zuletzt durchsuchte Ordner, sofern dieser Speicherort festgestellt werden kann, oder der Desktop. Die Klassen ermöglichen keine Lese- bzw. Schreibvorgänge bei den übertragenen Dateien. Über die SWF-Datei, mit der der Upload- bzw. Download-Vorgang eingeleitet wurde, besteht kein Zugriff auf die hoch- oder heruntergeladene Datei bzw. deren Speicherort auf der Festplatte des Benutzers.</p>
  
  <p class="- topic/p ">Darüber hinaus gibt es bei den FileReference- und FileReferenceList-Klassen keine Authentifizierungsverfahren. Sollte ein Server also eine Authentifizierung erforderlich machen, können Sie Dateien zwar mit dem Browser-Plug-In von Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player herunterladen, mit dem eigenständigen oder externen Player jedoch nicht. Upload-Vorgänge sind mit keinem Player möglich. Mithilfe von FileReference-Ereignis-Listenern können Sie feststellen, ob ein Vorgang erfolgreich ausgeführt wurde, und gegebenenfalls Fehler beheben.</p>
  
  <p class="- topic/p ">Wenn <ph class="- topic/ph ">Inhalt in Flash Player oder</ph> außerhalb der Sicherheitssandbox der Anwendung in Adobe AIR ausgeführt wird, können Upload- und Download-Vorgänge nur auf Dateien in der eigenen Domäne und in Domänen, die in einer URL-Richtliniendatei angegeben sind, zugreifen. Wenn sich der Inhalt, mit dem die Upload- bzw. Download-Vorgänge gestartet werden, nicht in derselben Domäne befindet wie der Dateiserver, legen Sie eine entsprechende Richtliniendatei auf dem Dateiserver ab.</p>
  
  <p class="- topic/p ">Beachten Sie, dass aufgrund neuer zusätzlicher Funktionalität von Flash Player beim Veröffentlichen in Flash Player 10 immer nur einer der folgenden Vorgänge aktiv sein kann: <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Ansonsten gibt Flash Player einen Laufzeitfehler (Code 2174) aus. Stoppen Sie den laufenden Vorgang mithilfe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph>. Diese Einschränkung betrifft lediglich Flash Player 10. Ältere Versionen von Flash Player sind von den Einschränkungen bezüglich gleichzeitig ausgeführter Vorgänge nicht betroffen.</p>
  
  <p class="- topic/p ">Wenn eine <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-Methode aufgerufen wird, wird die Wiedergabe von SWF-Dateien in der eigenständigen und der externen Version von Flash Player und in AIR für Linux und Mac OS X 10.1 und früheren Versionen unterbrochen.</p>
  
  <p class="- topic/p ">Die folgende HTTP-<codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderung wird von Flash Player an ein serverseitiges Skript gesendet, wenn keine Parameter angegeben wurden:
  </p>
  
  <pre xml:space="preserve" class="- topic/pre ">
  POST /handler.cfm HTTP/1.1 
  Accept: text/~~
  Content-Type: multipart/form-data; 
  boundary=----------Ij5ae0ae0KM7GI3KM7 
  User-Agent: Shockwave Flash 
  Host: www.example.com 
  Content-Length: 421 
  Connection: Keep-Alive 
  Cache-Control: no-cache
  
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filename"
  
  MyFile.jpg
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filedata"; filename="MyFile.jpg"
  Content-Type: application/octet-stream
  
  FileDataHere
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Upload"
  
  Submit Query
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7--
  </pre>
  
  <p class="- topic/p ">Flash Player sendet die folgende HTTP-<codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderung, wenn der Benutzer die Parameter <codeph class="+ topic/ph pr-d/codeph ">"api_sig"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"api_key"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"auth_token"</codeph> angibt:
  </p>
  
  <pre xml:space="preserve" class="- topic/pre ">
  POST /handler.cfm HTTP/1.1 
  Accept: text/~~
  Content-Type: multipart/form-data; 
  boundary=----------Ij5ae0ae0KM7GI3KM7 
  User-Agent: Shockwave Flash 
  Host: www.example.com 
  Content-Length: 421 
  Connection: Keep-Alive 
  Cache-Control: no-cache
  
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filename"
  
  MyFile.jpg
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="api_sig"
  
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="api_key"
  
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="auth_token"
  
  XXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filedata"; filename="MyFile.jpg"
  Content-Type: application/octet-stream
  
  FileDataHere
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Upload"
  
  Submit Query
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7--
  </pre>
  </apiDesc><example conref="examples\FileReferenceExample.as" class="- topic/example "> Im folgenden Beispiel werden Informationen zu Datenformat und Status einer zur Laufzeit geladenen Datei angezeigt.  
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweis:</b> Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft „uploadURL.url“ so, dass sie auf eine tatsächliche URL verweist. Die URL muss auf eine Datei mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">yourUploadHandlerScript.cfm</codeph> im Stammverzeichnis des Webservers der angegebenen URL verweisen. Abhängig von der Konfiguration müssen Sie außerdem ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileFilter;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReferenceExample extends Sprite {
        private var uploadURL:URLRequest;
        private var file:FileReference;

        public function FileReferenceExample() {
            uploadURL = new URLRequest();
            uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
            file = new FileReference();
            configureListeners(file);
            file.browse(getTypes());
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
            dispatcher.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,uploadCompleteDataHandler);
        }

        private function getTypes():Array {
            var allTypes:Array = new Array(getImageTypeFilter(), getTextTypeFilter());
            return allTypes;
        }

        private function getImageTypeFilter():FileFilter {
            return new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg;*.jpeg;*.gif;*.png");
        }

        private function getTextTypeFilter():FileFilter {
            return new FileFilter("Text Files (*.txt, *.rtf)", "*.txt;*.rtf");
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function uploadCompleteDataHandler(event:DataEvent):void {
            trace("uploadCompleteData: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }
        
        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + uploadURL.url);
            file.upload(uploadURL);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReferenceList</linktext></link><link href="flash.filesystem.xml#File" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference_flash.events.DataEvent.UPLOAD_COMPLETE_DATA_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><shortdesc class="- topic/shortdesc ">
    Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Upload empfangen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DataEvent.UPLOAD_COMPLETE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Upload empfangen wurden. Das Ereignis wird nur ausgelöst, wenn Daten vom Server zurückgegeben werden.
    </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
     Wird ausgelöst, wenn ein Aufruf der upload()- oder uploadUnencoded()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">uploadUnencoded()</codeph>-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann. 
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">upload()</linktext></link><link href="flash.net.xml#FileReference/uploadUnencoded()" class="- topic/link "><linktext class="- topic/linktext ">uploadUnencoded()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
     Wird ausgelöst, wenn ein Upload-Vorgang fehlschlägt und HTTP-Statuscode zur Beschreibung des Fehlers verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wird ausgelöst, wenn ein Upload-Vorgang fehlschlägt und HTTP-Statuscode zur Beschreibung des Fehlers verfügbar ist. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> wird gefolgt von einem <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignis ausgelöst.
     
     <p class="- topic/p ">Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> wird nur bei Upload-Fehlern ausgelöst. Bei Inhalt, der im Flash Player ausgeführt wird, gilt dieses Ereignis nicht für fehlgeschlagene Downloads. Wenn ein Download mit einem HTTP-Fehler abbricht, wird dieser Fehler als I/O-Fehler gemeldet.</p>
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><shortdesc class="- topic/shortdesc ">
    Wird ausgelöst, wenn der Benutzer im Dialogfeld zum Suchen von Dateien eine Datei für einen Upload- oder Download-Vorgang auswählt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
    </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird ausgelöst, wenn der Benutzer im Dialogfeld zum Suchen von Dateien eine Datei für einen Upload- oder Download-Vorgang auswählt. (Dieses Dialogfeld wird beim Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> geöffnet.) Sobald ein Benutzer eine Datei auswählt und den Vorgang bestätigt (z. B. durch Klicken auf „OK“), werden die Eigenschaftenfelder des FileReference-Objekts mit Daten gefüllt.
    
    <p class="- topic/p ">Bei Inhalt, der <ph class="- topic/ph ">in Flash Player oder</ph>außerhalb der Sicherheitssandbox der Anwendung <ph class="- topic/ph ">in der Adobe AIR-Laufzeitumgebung</ph> ausgeführt wird, verhält sich das <codeph class="+ topic/ph pr-d/codeph ">select</codeph>-Ereignis je nachdem, welche Methode es aufgerufen hat, leicht unterschiedlich. Wenn das Ereignis <codeph class="+ topic/ph pr-d/codeph ">select</codeph> nach einem <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>-Aufruf ausgelöst wird, können sämtliche Eigenschaften des FileReference-Objekts von <ph class="- topic/ph ">Flash Player oder </ph>der AIR-Anwendung gelesen werden, da sich die vom Benutzer ausgewählte Datei im lokalen Dateisystem befindet. Wenn das Ereignis <codeph class="+ topic/ph pr-d/codeph ">select</codeph> nach einem <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>-Aufruf ausgelöst wird, kann <ph class="- topic/ph ">Flash Player oder </ph>die AIR-Anwendung lediglich die <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Eigenschaft lesen, da die Datei zu dem Zeitpunkt der Auslösung des <codeph class="+ topic/ph pr-d/codeph ">select</codeph>-Ereignisses noch nicht in das lokale Dateisystem heruntergeladen wurde. Nachdem die Datei heruntergeladen und das <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis ausgelöst wurde, können alle anderen Eigenschaften des FileReference-Objekts von <ph class="- topic/ph ">Flash Player oder </ph>der AIR-Anwendung gelesen werden.</p>
    
    </apiDesc><example conref="examples\FileReference_event_select.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">select</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">uploadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive Datei[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen. Damit Sie dieses Beispiel über Ihren Desktop ausführen können, müssen Sie auf dem Server eine crossdomain.xml-Datei ablegen. Wenn die Funktion <codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> ausgelöst wird, müssen Sie die bereitgestellte <codeph class="+ topic/ph pr-d/codeph ">uploadURL</codeph> ggf. durch eine gültige URL ersetzen, die für den Empfang von Uploads konfiguriert ist.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_select extends Sprite {
        private var uploadURL:URLRequest;
        private var file:FileReference;

        public function FileReference_event_select() {
            uploadURL = new URLRequest();
            uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
            file = new FileReference();
            file.addEventListener(Event.SELECT, selectHandler);
            file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            file.addEventListener(Event.COMPLETE, completeHandler);
            file.browse();
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + uploadURL.url);
            file.upload(uploadURL);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
     Wird ausgelöst, wenn mit einem Aufruf der Methode „FileReference.upload()“ oder „FileReference.download()“ versucht wird, eine Datei auf einen Server zu laden oder von einem Server herunterzuladen, der sich außerhalb der Sicherheitssandbox des Aufrufers befindet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
     
     </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wird ausgelöst, wenn mit einem Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> versucht wird, eine Datei auf einen Server zu laden oder von einem Server herunterzuladen, der sich außerhalb der Sicherheitssandbox des Aufrufers befindet. Der Wert der Texteigenschaft zur Beschreibung des aufgetretenen Fehlers ist in der Regel <codeph class="+ topic/ph pr-d/codeph ">"securitySandboxError"</codeph>. Mit der aufrufenden SWF-Datei wurde unter Umständen versucht, ohne entsprechende Berechtigung auf eine SWF-Datei außerhalb ihrer Domäne zuzugreifen. Sie können versuchen, diesen Fehler zu beheben, indem Sie eine URL-Richtliniendatei verwenden.
     
     <p class="- topic/p ">In Adobe AIR gelten diese Sicherheitseinschränkungen nicht für Inhalt in der Sicherheitssandbox der Anwendung.</p>
     
     <p class="- topic/p ">In Adobe AIR gelten diese Sicherheitseinschränkungen nicht für Inhalt in der Sicherheitssandbox der Anwendung.</p>
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
    Wird regelmäßig während des Upload- bzw. Download-Vorgangs ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
    </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird regelmäßig während des Upload- bzw. Download-Vorgangs ausgelöst. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> wird ausgelöst, während Flash Player Byte an einen Server sendet. Im Verlauf der Übertragung wird das Ereignis in regelmäßigen Abständen auch dann aufgerufen, wenn die Übertragung am Ende nicht erfolgreich abgeschlossen werden kann. Wenn Sie feststellen möchten, ob und zu welchem Zeitpunkt die Dateiübertragung erfolgreich abgeschlossen wird, verwenden Sie einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis.
    
    <p class="- topic/p ">In einigen Fällen werden keine <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignisse empfangen. Wenn die übertragene Datei beispielsweise sehr klein ist oder der Upload- bzw. Download-Vorgang in sehr kurzer Zeit erfolgt, wird möglicherweise kein <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignis ausgelöst.</p>
    
    <p class="- topic/p ">Bei Macintosh-Plattformen vor Version OS X 10.3 kann der Fortschritt von Upload-Vorgängen nicht festgestellt werden. Das <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignis wird zwar während des Upload-Vorgangs aufgerufen, die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph> weist jedoch stets den Wert -1 auf, was bedeutet, dass der Fortschritt nicht festgestellt werden kann.</p>
    
    </apiDesc><example conref="examples\FileReference_event_progress.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive URL http://www.[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_progress extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_progress() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            file.addEventListener(Event.COMPLETE, completeHandler);
            file.download(downloadURL, fileName);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }
        
        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
        
        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">FileReference.complete</linktext></link><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
    Wird beim Start eines Upload- bzw. Download-Vorgangs ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows the usage of the <code>open</code> event.
    It should be made clear that there is no way to actually track the progress
    of a download, just that it hasn't yet finished or failed.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onOpen = function(file:FileReference):void {
      trace("onOpen: " + file.name);
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird beim Start eines Upload- bzw. Download-Vorgangs ausgelöst.
    
    
    </apiDesc><example conref="examples\FileReference_download.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">download</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive URL http://www.[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;
    import flash.net.FileFilter;

    public class FileReference_download extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_download() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
    Wird ausgelöst, wenn der Upload- bzw. Download-Vorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows the usage of the <code>ioError</code> event. 
    Note that for simplicity, none of the other event types are used in this
    example.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onIOError = function(file:FileReference):void {
      trace("onIOError");
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    fileRef.download("http://www.adobe.com/NonExistentFile.pdf", "NonExistentFile.pdf");
    
    </listing>
    
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird ausgelöst, wenn der Upload- bzw. Download-Vorgang fehlschlägt. Das Fehlschlagen einer Dateiübertragung kann folgende Ursachen haben:
    
    <ul class="- topic/ul "><li class="- topic/li ">Während des Lese-, Schreib- oder Übertragungsvorgangs der Datei ist ein I/O-Fehler aufgetreten.</li><li class="- topic/li ">Die <ph class="- topic/ph ">SWF-Datei</ph> versucht, eine Datei auf einen Server hochzuladen, der eine Authentifizierung (z. B. anhand eines Benutzernamens und eines Kennworts) erfordert. Während des Uploads stellt <ph class="- topic/ph ">Flash Player bzw. </ph>die AIR-Anwendung keine Möglichkeit für die Eingabe von Kennwörtern durch die Benutzer bereit. Wenn <ph class="- topic/ph ">eine SWF-Datei</ph> versucht, eine Datei auf einen Server hochzuladen, der eine Authentifizierung erfordert, schlägt dieser Upload fehl.</li><li class="- topic/li ">Die <ph class="- topic/ph ">SWF-Datei</ph> versucht, im Standalone- oder externen Player eine Datei von einem Server herunterzuladen, der eine Authentifizierung erfordert. Während des Downloads stellt der eigenständige bzw. externe Player keine Möglichkeit für die Eingabe von Kennwörtern durch die Benutzer bereit. Wenn mit <ph class="- topic/ph ">einer SWF-Datei</ph> versucht wird, innerhalb dieser Player eine Datei von einem Server herunterzuladen, der eine Authentifizierung erfordert, schlägt dieser Download fehl. <ph class="- topic/ph ">Der Datei-Download kann nur in der ActiveX-Steuerung, in Browser-Plug-In-Playern und in der Adobe AIR-Laufzeitumgebung erfolgen.</ph></li><li class="- topic/li ">Der an den Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> in der Methode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> übergebene Wert enthält ein ungültiges Protokoll. Die zulässigen Protokolle sind HTTP und HTTPS.</li></ul>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtig:</b> Dialogfelder zur Eingabe eines Benutzernamens und Kennworts zur Benutzerauthentifizierung für anschließende Download-Vorgänge (und nichts anderes) können nur von Anwendungen, die in einem Browser ausgeführt werden (also Anwendungen, die das Browser-Zusatzmodul oder das ActiveX-Steuerelement verwenden) und von Inhalt angezeigt werden, der in Adobe AIR ausgeführt wird. Upload-Vorgänge mit der Zusatzmodul- oder ActiveX-Steuerelementversion bzw. Upload- und Download-Vorgänge mit dem eigenständigen oder externen Player schlagen fehl.</p>
    
    </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
    Wird ausgelöst, wenn der Download-Vorgang abgeschlossen ist oder wenn beim Upload-Vorgang der HTTP-Statuscode 200 generiert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows usage of the <code>complete</code> event 
    listener. It should be made clear that there is no way to actually track the progress
    of a download, just that it hasn't yet finished or failed.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onComplete = function(file:FileReference):void {
      trace("onComplete: " + file.name);
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird ausgelöst, wenn der Download-Vorgang abgeschlossen ist oder wenn beim Upload-Vorgang der HTTP-Statuscode 200 generiert wird. Bei Download-Vorgängen wird dieses Ereignis ausgelöst, wenn <ph class="- topic/ph ">Flash Player oder </ph>Adobe AIR den Download der gesamten Datei auf die Festplatte abgeschlossen hat. Bei Upload-Vorgängen wird dieses Ereignis ausgelöst, nachdem <ph class="- topic/ph ">Flash Player oder </ph>Adobe AIR vom empfangenden Server den HTTP-Statuscode 200 empfangen hat.
    
    </apiDesc><example conref="examples\FileReference_event_complete.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive URL http://www.[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_complete extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_complete() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
    Wird ausgelöst, wenn der Benutzer eine Upload- oder Download-Vorgang über das Dialogfeld zum Suchen von Dateien abbricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example traces a message if the user dismisses the file-
    browsing dialog box. This method
    is triggered only if the user selects Cancel or presses the escape key after
    the dialog box opens.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onCancel = function(file:FileReference):void {
      trace("onCancel");
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    if(!fileRef.download(url, "FlashPlatform.pdf")) {
      trace("dialog box failed to open.");
    }
    </listing>
    
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird ausgelöst, wenn der Benutzer eine Upload- oder Download-Vorgang über das Dialogfeld zum Suchen von Dateien abbricht. Flash Player löst dieses Ereignis nicht aus, wenn der Benutzer einen Upload bzw. Download auf andere Weise abbricht (durch Schließen des Browsers oder anhalten der aktuellen Anwendung).
    
    </apiDesc><example conref="examples\FileReference_event_cancel.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive URL http://www.[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_cancel extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_cancel() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            file.addEventListener(Event.CANCEL, cancelHandler);
            file.download(downloadURL, fileName);
        }
        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:FileReference:FileReference" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileReference</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein neues FileReference-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example creates a new <code>FileReference</code> object and 
    initiates the download of a pdf file.
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    listener.onComplete = function(file:FileReference) {
      trace("onComplete : " + file.name);
    }
    
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    
    </maelexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein neues FileReference-Objekt. Sobald dieses Objekt mit Daten versehen ist, wird ein FileReference-Objekt zu einer Datei auf der lokalen Festplatte eines Benutzers.
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:FileReference:browse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">browse</apiName><shortdesc class="- topic/shortdesc ">
    Zeigt ein Dialogfeld für die Dateisuche an, in dem der Benutzer eine Datei für einen Upload-Vorgang auswählen kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">browse, FileReference.browse
  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine FileReference- oder FileReferenceList-Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn das Array <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> falsch formatierte FileFilter-Objekte enthält, wird eine Ausnahme ausgelöst. Informationen zum gültigen Format für FileFilter-Objekte finden Sie im Abschnitt zur Klasse <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>.
  
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode nicht als Reaktion auf eine Benutzeraktion, z. B. Mausereignis oder Tastendruckereignis, aufgerufen wird.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurück, wenn die Parameter gültig sind und das Dialogfeld für die Dateisuche geöffnet wird.  
  
  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typeFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array mit FileFilter-Instanzen zur Filterung der im Dialogfeld angezeigten Dateien. Wenn Sie diesen Parameter weglassen, werden alle Dateien angezeigt. Weitere Informationen finden Sie im Abschnitt zur Klasse <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>.
    
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Zeigt ein Dialogfeld für die Dateisuche an, in dem der Benutzer eine Datei für einen Upload-Vorgang auswählen kann. Das Dialogfeld stammt aus dem Betriebssystem des Benutzers. Der Benutzer kann eine Datei aus dem lokalen System oder aus anderen Systemen auswählen, z. B. über einen UNC-Pfad (Windows).
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die in Adobe AIR verfügbare File-Klasse enthält Methoden für den Zugriff auf spezifischere Dialogfelder für die Auswahl von Systemdateien. Diese Methoden sind <codeph class="+ topic/ph pr-d/codeph ">File.browseForDirectory()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpen()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpenMultiple()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">File.browseForSave()</codeph>.</p>
    
    <p class="- topic/p ">Wenn diese Methode aufgerufen wird und der Benutzer erfolgreich eine Datei auswählt, werden die Eigenschaften dieses FileReference-Objekts mit den Eigenschaftendaten der Datei aktualisiert. Bei jedem nachfolgenden Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> werden die Eigenschaften des FileReference-Objekts auf die vom Benutzer im Dialogfeld ausgewählte Datei zurückgesetzt. Es kann immer nur eine <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>-Sitzung durchgeführt werden (da immer nur ein Dialogfeld aufgerufen werden kann).</p>
    
    <p class="- topic/p ">Mit dem Parameter <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> können Sie festlegen, welche Dateien im Dialogfeld angezeigt werden.</p>
    
    <p class="- topic/p ">In Flash Player 10 und Flash Player 9 mit Update 5 können Sie diese Methode nur als Reaktion auf ein Benutzerereignis erfolgreich aufrufen, z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis. Andernfalls führt das Aufrufen dieser Methode dazu, dass Flash Player einen Ausnahmefehler ausgibt.</p>
    
    <p class="- topic/p ">Beachten Sie, dass aufgrund neuer zusätzlicher Funktionalität von Flash Player beim Veröffentlichen in Flash Player 10 immer nur einer der folgenden Vorgänge aktiv sein kann: <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Ansonsten gibt Flash Player einen Laufzeitfehler (Code 2174) aus. Stoppen Sie den laufenden Vorgang mithilfe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph>. Diese Einschränkung betrifft lediglich Flash Player 10. Ältere Versionen von Flash Player sind von den Einschränkungen bezüglich gleichzeitig ausgeführter Vorgänge nicht betroffen.</p> 
 	
	<p class="- topic/p ">In Adobe AIR wird das Dialogfeld zur Dateiauswahl nicht immer vor Fenstern angezeigt, die „Eigentum“ eines anderen Fensters sind (Fenster, deren <codeph class="+ topic/ph pr-d/codeph ">owner</codeph>-Eigenschaft nicht null ist). Um Probleme mit der Anordnung von Fenstern zu vermeiden, blenden Sie Fenster aus, die Eigentum eines anderen Fensters sind, bevor Sie diese Methode aufrufen.</p>
	
  	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/event:select" class="- topic/link "><linktext class="- topic/linktext ">select-Ereignis</linktext></link><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">cancel-Ereignis</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForDirectory().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForDirectory()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForOpen().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForOpen()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForOpenMultiple().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForOpenMultiple()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForSave().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForSave()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:browse_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer erfolgreich ein Element aus der Dateiauswahl wählt.
  </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer erfolgreich ein Element aus der Dateiauswahl wählt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:browse_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer das Fenster zum Suchen einer Datei für den Upload-Vorgang schließt.
  
  </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer das Fenster zum Suchen einer Datei für den Upload-Vorgang schließt.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
  Bricht alle laufenden Upload- bzw. Download-Vorgänge dieses FileReference-Objekts ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">cancel, FileReference.cancel
  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Bricht alle laufenden Upload- oder Download-Vorgänge ab.
  </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Bricht alle laufenden Upload- bzw. Download-Vorgänge dieses FileReference-Objekts ab. Durch Aufruf dieser Methode wird nicht das Ereignis <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph> ausgelöst. Dieses Ereignis wird nur ausgelöst, wenn der Benutzer den Vorgang abbricht, indem er das Dialogfeld für den Upload- bzw. Download-Vorgang schließt.
  
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:FileReference:download" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">download</apiName><shortdesc class="- topic/shortdesc ">
    Öffnet ein Dialogfeld, mit dem der Benutzer eine Datei von einem Remote-Server herunterladen kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der an <codeph class="+ topic/ph pr-d/codeph ">request</codeph> übergebene Wert enthält keinen gültigen Pfad/kein gültiges Protokoll. 3) Der Name der für den Download-Vorgang ausgewählten Datei enthält unzulässige Zeichen. 4) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert.
    
        </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokalen nicht vertrauenswürdigen Inhalt kann keine Verbindung mit dem Internet hergestellt werden. Sie können dieses Problem vermeiden, indem Sie die SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren. Diese Ausnahme wird mit einer Meldung ausgelöst, die den Dateinamen und die URL enthält, auf die aufgrund der Sicherheitsbeschränkungen für lokale Dateien nicht zugegriffen werden kann.
    
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> den Typ „ByteArray“ aufweist, wird eine Ausnahme ausgelöst. Bei Verwendung mit den Methoden <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> sind für <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> nur die Typen „URLVariables“ und „String“ zulässig.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann folgende Ursachen haben: 1) Flash Player kann den Parameter <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> nicht von UTF8 in MBCS konvertieren. Dieser Fehler trifft zu, wenn das an die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines GET-Vorgangs eingestellt ist und wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist. 2) Flash Player kann <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Daten keinen Speicher zuweisen. Dieser Fehler trifft zu, wenn das an die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgangs eingestellt ist.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode nicht als Reaktion auf eine Benutzeraktion, z. B. Mausereignis oder Tastendruckereignis, aufgerufen wird.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das URLRequest-Objekt. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">url</codeph> des URLRequest-Objekts muss die URL der Datei enthalten, die auf den lokalen Computer heruntergeladen werden soll. Wenn dieser Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist, wird eine Ausnahme ausgelöst. Die <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Eigenschaft des URLRequest-Objekts wird ignoriert. Benutzerdefinierte HTTP-Anforderungs-Header werden in Uploads und Downloads nicht unterstützt. Um <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>- bzw. GET-Parameter an den Server zu senden, setzen Sie den Wert von <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> auf Ihre Parameter und <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> entweder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> oder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.
    
        <p class="- topic/p ">Bei einigen Browsern sind URL-Strings in ihrer Länge beschränkt. So können URLs mit über 256 Zeichen unter Umständen bei einigen Browsern oder Servern fehlschlagen.</p>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">defaultFileName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Standarddateiname der herunterzuladenden Datei, der im Dialogfeld angezeigt wird. Dieser String darf keines der folgenden Zeichen enthalten: / \ : ~~ ? " &lt; > | %
    <p class="- topic/p ">Wenn Sie diesen Parameter weglassen, wird der Dateiname der Remote-URL analysiert und als Standarddateiname verwendet. </p>
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Öffnet ein Dialogfeld, mit dem der Benutzer eine Datei von einem Remote-Server herunterladen kann. <ph class="- topic/ph ">In Flash Player ist kein Grenzwert für die Größe der Dateien für Upload- und Download-Vorgänge festgelegt. Offiziell unterstützt der Player Dateigrößen von bis zu 100 MB.</ph>
    
    <p class="- topic/p ">Mit der Methode <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> wird zunächst ein Dialogfeld des Betriebssystems geöffnet, in dem der Benutzer aufgefordert wird, einen Dateinamen einzugeben und einen Ordner zum Speichern der Datei auf dem lokalen Computer auszuwählen. Wenn der Benutzer den Speicherort auswählt und den Download-Vorgang bestätigt (z. B. durch Klicken auf „Speichern“), wird der Download vom Remote-Server gestartet. Listener erhalten Ereignisdaten und zeigen den Fortschritt, den Erfolg oder den Fehlschlag des Downloads an. Um den Status des Dialogfelds und des Download-Vorgangs nach dem <codeph class="+ topic/ph pr-d/codeph ">download</codeph>-Aufruf ermitteln zu können, muss der Code Listener für Ereignisse wie <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>, <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> und <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> enthalten.
    </p>
    
    <p class="- topic/p ">Die Funktionen <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> sind ungeblockt. Die Funktionsrückgaben erfolgen nach dem Aufruf vor Abschluss der Dateiübertragung. Wenn bei einem FileReference-Objekt der Gültigkeitsbereich verlassen wird, werden alle zu dem Zeitpunkt noch nicht abgeschlossenen Upload- bzw. Download-Vorgänge für dieses Objekt abgebrochen. Stellen Sie sicher, dass das FileReference-Objekt während der gesamten Dauer des Upload- bzw. Download-Vorgangs den Gültigkeitsbereich nicht verlässt.</p>
    
    <p class="- topic/p ">Nach erfolgreich abgeschlossenem Download-Vorgang werden die Eigenschaften des FileReference-Objekts mit den Eigenschaften der lokalen Datei aktualisiert. Bei erfolgreichem Abschluss des Download-Vorgangs wird das Ereignis <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ausgelöst.</p>
    
    <p class="- topic/p ">Es kann immer nur eine <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>-Sitzung durchgeführt werden (da immer nur ein Dialogfeld aufgerufen werden kann).</p>
    
    <p class="- topic/p ">Diese Methode unterstützt den Download jedes Dateityps mit HTTP oder HTTPS.</p>
    
    <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Wenn der Server eine Benutzerauthentifizierung erfordert, kann der Benutzer nur bei SWF-Dateien, die in einem Browser (also mit einem Browser-Plug-In oder einer ActiveX-Steuerung) ausgeführt werden, in einem Dialogfeld zur Eingabe eines Benutzernamens und eines Kennworts zur Authentifizierung aufgefordert werden. Dies gilt darüber hinaus nur für Download-Vorgänge. Upload-Vorgänge mit Plug-Ins oder ActiveX-Steuerelementen bzw. Upload- und Download-Vorgänge mit dem eigenständigen oder externen Player schlagen fehl.</p>
    
    <p class="- topic/p ">Bedenken Sie beim Einsatz dieser Methode das Sicherheitsmodell von <ph class="- topic/ph ">Flash Player</ph>: </p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Ladevorgänge sind nicht zulässig, wenn die aufrufende SWF-Datei sich in einer nicht vertrauenswürdigen lokalen Sandbox befindet.</li><li class="- topic/li ">Standardmäßig werden Sandbox-übergreifende Zugriffe nicht zugelassen. Eine Website kann den Zugriff auf eine Ressource durch das Hinzufügen einer URL-Richtliniendatei ermöglichen.</li><li class="- topic/li ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</li><li class="- topic/li ">In Flash Player 10 und Flash Player 9 mit Update 5 können Sie diese Methode nur als Reaktion auf ein Benutzerereignis erfolgreich aufrufen, z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis. Andernfalls führt das Aufrufen dieser Methode dazu, dass Flash Player einen Ausnahmefehler ausgibt.</li></ul>
    
    <p class="- topic/p "><ph class="- topic/ph ">In Adobe AIR</ph> dagegen ist Inhalt in der <codeph class="+ topic/ph pr-d/codeph ">Sicherheitssandbox der Anwendung</codeph> (mit der AIR-Anwendung installierter Inhalt) nicht durch diese Sicherheitseinschränkungen beschränkt.</p>
    
    <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
    
    
    <p class="- topic/p ">Wenn Sie eine Datei mit dieser Methode herunterladen, wird sie als heruntergeladen gekennzeichnet, sofern das Betriebssystem heruntergeladene Dateien kennzeichnet:</p>
           
    <ul class="- topic/ul "><li class="- topic/li ">Windows XP Service Pack 2 und höher und Windows Vista</li><li class="- topic/li ">Mac OS 10.5 und höher</li></ul>
           
    <p class="- topic/p ">Einige Betriebssysteme, zum Beispiel Linux, kennzeichnen heruntergeladene Dateien nicht.</p>
    
    <p class="- topic/p ">Beachten Sie, dass aufgrund neuer zusätzlicher Funktionalität von Flash Player beim Veröffentlichen in Flash Player 10 immer nur einer der folgenden Vorgänge aktiv sein kann: <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Ansonsten gibt Flash Player einen Laufzeitfehler (Code 2174) aus. Stoppen Sie den laufenden Vorgang mithilfe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph>. Diese Einschränkung betrifft lediglich Flash Player 10. Ältere Versionen von Flash Player sind von den Einschränkungen bezüglich gleichzeitig ausgeführter Vorgänge nicht betroffen.</p> 
    
 	
	<p class="- topic/p ">In Adobe AIR wird das Download-Dialogfeld nicht immer vor Fenstern angezeigt, die „Eigentum“ eines anderen Fensters sind (Fenster, deren <codeph class="+ topic/ph pr-d/codeph ">owner</codeph>-Eigenschaft nicht null ist). Um Probleme mit der Anordnung von Fenstern zu vermeiden, blenden Sie Fenster aus, die Eigentum eines anderen Fensters sind, bevor Sie diese Methode aufrufen.</p>
	 
    </apiDesc><example conref="examples\FileReference_download.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">download</codeph> gezeigt. Ändern Sie zur Ausführung dieses Beispiels die Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> so, dass sie auf eine tatsächliche Domäne und Datei anstatt auf die fiktive URL http://www.[yourDomain].com/SomeFile.pdf verweist. Außerdem müssen Sie ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;
    import flash.net.FileFilter;

    public class FileReference_download extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_download() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="../../flash/filesystem/File.html#downloaded" class="- topic/link "><linktext class="- topic/linktext ">File.downloaded</linktext></link><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReference/save()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.save()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:download_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Download-Vorgang gestartet wird.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Download-Vorgang gestartet wird.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird regelmäßig während des Download-Vorgangs ausgelöst.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird regelmäßig während des Download-Vorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Download einer Datei erfolgreich abgeschlossen wurde.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Download einer Datei erfolgreich abgeschlossen wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer das Dialogfeld abbricht.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer das Dialogfeld abbricht.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer in einem Dialogfeld eine Datei für einen Download-Vorgang auswählt. 
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer in einem Dialogfeld eine Datei für einen Download-Vorgang auswählt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Download-Vorgang aufgrund eines Sicherheitsfehlers abgebrochen wird.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Download-Vorgang aufgrund eines Sicherheitsfehlers abgebrochen wird.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird aus einem der folgenden Gründe ausgelöst:
    <ul class="- topic/ul "><li class="- topic/li ">Beim Lesen oder Übertragen der Datei tritt ein I/O-Fehler auf.</li><li class="- topic/li ">SWF-Inhalt in der eigenständigen oder in externen Version von Flash Player versucht, eine Datei von einem Server herunterzuladen, für den eine Authentifizierung erforderlich ist. Während des Downloads stellt der eigenständige bzw. externe Player keine Möglichkeit für die Eingabe von Kennwörtern durch die Benutzer bereit. Wenn mit einer SWF-Datei versucht wird, innerhalb dieser Player eine Datei von einem Server herunterzuladen, der eine Authentifizierung erfordert, schlägt dieser Download fehl. Der Download von Dateien funktioniert grundsätzlich nur bei einer ActiveX-Steuerung oder bei Plug-In-Playern von Browsern.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird aufgrund einer der folgenden Ursachen ausgelöst: Während des Lese- bzw. Übertragungsvorgangs der Datei ist ein I/O-Fehler aufgetreten. SWF-Inhalt in der eigenständigen oder in externen Version von Flash Player versucht, eine Datei von einem Server herunterzuladen, für den eine Authentifizierung erforderlich ist.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
    Startet das Laden einer lokalen Datei, die vom einem Benutzer ausgewählt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">load, FileReference.load
	</keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine FileReference- oder FileReferenceList-Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann auftreten, wenn die Anwendung keinen Speicher für die Datei zuordnen kann. Die Datei ist möglicherweise zu groß oder der verfügbare Speicherplatz reicht nicht aus.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Startet das Laden einer lokalen Datei.
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Startet das Laden einer lokalen Datei, die vom einem Benutzer ausgewählt wurde. <ph class="- topic/ph ">In Flash Player bestehen zwar keine Beschränkungen bezüglich der Größe von Dateien, die hochgeladen, heruntergeladen, geladen oder gespeichert werden können, aber das Programm unterstützt offiziell Größen von bis zu 100 MB. Für Inhalt, der in Flash Player ausgeführt wird, müssen Sie die <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>- oder die <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>-Methode aufrufen, bevor Sie die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode aufrufen. Inhalt, der in AIR in der Anwendungssandbox ausgeführt wird, kann jedoch die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode eines Dateiobjekts aufrufen, ohne zuerst die <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>-Methode aufzurufen. (Die AIR File-Klasse erweitert die FileReference-Klasse.)</ph>
    
    <p class="- topic/p ">Listener empfangen Ereignisse, um den Fortschritt, Erfolg oder Nichterfolg des Ladevorgangs anzuzeigen. Sie können zwar das FileReferenceList-Objekt verwenden, um Benutzer mehrere Dateien auswählen zu lassen, die geladen werden sollen, aber Sie müssen die Dateien einzeln laden. Um die Dateien einzeln zu laden, iterieren Sie durch das <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph>-Array der FileReference-Objekte.</p>
    
    <p class="- topic/p ">Adobe AIR enthält auch die FileStream-Klasse, die weitere Optionen zum Lesen von Dateien bereitstellt.</p>
    
    <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>-Funktionen sind nicht-blockierend. Die Funktionsrückgaben erfolgen nach dem Aufruf vor Abschluss der Dateiübertragung. Zusätzlich gilt: Wenn bei einem FileReference-Objekt der Gültigkeitsbereich verlassen wird, werden alle zu dem Zeitpunkt noch nicht abgeschlossenen Transaktionen für dieses Objekt abgebrochen. Stellen Sie sicher, dass das FileReference-Objekt während der gesamten Dauer des Upload-, Download-, Speicher- bzw. Ladevorgangs den Gültigkeitsbereich nicht verlässt.</p>
    
    <p class="- topic/p ">Wenn die Datei erfolgreich geladen wurde, wird ihr Inhalt als ein Bytearray in der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des FileReference-Objekts gespeichert.</p>
    
    <p class="- topic/p ">Bezüglich der Sicherheit sind folgende Punkte zu beachten:</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Ladevorgänge sind nicht zulässig, wenn die aufrufende SWF-Datei sich in einer nicht vertrauenswürdigen lokalen Sandbox befindet.</li><li class="- topic/li ">Standardmäßig werden Sandbox-übergreifende Zugriffe nicht zugelassen. Bei einer Website kann der Zugriff auf eine Ressource durch eine Cross-Domain-Richtliniendatei ermöglicht werden.</li><li class="- topic/li ">Sie können eine Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</li></ul>
    
    <p class="- topic/p ">Die genannten Punkte gelten nicht für AIR-Inhalt in der Anwendungssandbox.</p>
    
    <p class="- topic/p ">Hinweis: Wenn Sie eine Anwendung für Flash Player 10 oder AIR 1.5 veröffentlichen, kann jeweils nur eine der folgenden Methoden aktiv sein: <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Andernfalls gibt die Anwendung einen Laufzeitfehler zurück (Code 2174). Stoppen Sie den laufenden Vorgang mithilfe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph>. Diese Beschränkung bezieht sich nur auf Flash Player 10 und AIR 1.5. Für frühere Version von Flash Player oder AIR gilt diese Beschränkung bezüglich mehrerer Methoden nicht.</p>
    
 	
	<p class="- topic/p ">In Adobe AIR wird das Dialogfeld zur Dateiauswahl nicht immer vor Fenstern angezeigt, die „Eigentum“ eines anderen Fensters sind (Fenster, deren <codeph class="+ topic/ph pr-d/codeph ">owner</codeph>-Eigenschaft nicht null ist). Um Probleme mit der Anordnung von Fenstern zu vermeiden, blenden Sie Fenster aus, die Eigentum eines anderen Fensters sind, bevor Sie diese Methode aufrufen.</p>
	
    </apiDesc><example conref="examples\FileFilter.as" class="- topic/example "> Das folgende Beispiel lädt ein Bild aus Ihrem lokalen Dateisystem in das Stammanzeigeobjekt (in diesem Fall die Bühne). Beispiel bereitgestellt von <xref href="http://blog.andrevenancio.com/" scope="external" class="- topic/xref ">Andre Venancio</xref>.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var buttonShape:Shape = new Shape();
buttonShape.graphics.beginFill(0x336699);
buttonShape.graphics.drawCircle(50, 50, 25);
var button = new SimpleButton(buttonShape, buttonShape, buttonShape, buttonShape);
addChild(button);

var fileRef:FileReference= new FileReference();
button.addEventListener(MouseEvent.CLICK, onButtonClick);

function onButtonClick(e:MouseEvent):void {
fileRef.browse([new FileFilter("Images", "*.jpg;*.gif;*.png")]);
fileRef.addEventListener(Event.SELECT, onFileSelected);
}

function onFileSelected(e:Event):void {
fileRef.addEventListener(Event.COMPLETE, onFileLoaded);
fileRef.load();
}

function onFileLoaded(e:Event):void {
var loader:Loader = new Loader();
loader.loadBytes(e.target.data);
addChild(loader);
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/data" class="- topic/link "><linktext class="- topic/linktext ">FileReference.data</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/save()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.save()</linktext></link><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">FileStream</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird beim Start eines Ladevorgangs ausgelöst.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird beim Start eines Ladevorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird regelmäßig während des Ladevorgangs der Datei ausgelöst.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird regelmäßig während des Ladevorgangs der Datei ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Ladevorgang einer Datei erfolgreich abgeschlossen wurde.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Ladevorgang einer Datei erfolgreich abgeschlossen wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird aufgerufen, wenn das Laden wegen eines Input/Output-Fehlers fehlschlägt, während die Anwendung eine Datei liest oder schreibt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird aufgerufen, wenn das Laden wegen eines Input/Output-Fehlers fehlschlägt, während die Anwendung eine Datei liest oder schreibt.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:save" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">save</apiName><shortdesc class="- topic/shortdesc ">
    Öffnet ein Dialogfeld, das es dem Benutzer ermöglicht, eine Datei in ein lokales Dateisystem zu speichern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Name der für den Download-Vorgang ausgewählten Datei enthält unzulässige Zeichen. 3) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn <codeph class="+ topic/ph pr-d/codeph ">data</codeph> nicht auf den Typ „ByteArray“ gesetzt ist und keine <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>-Methode hat, wird ein Ausnahmefehler zurückgegeben. Wenn <codeph class="+ topic/ph pr-d/codeph ">data</codeph> nicht auf den Typ „XML“ gesetzt ist und keine <codeph class="+ topic/ph pr-d/codeph ">toXMLString()</codeph>-Methode hat, wird ein Ausnahmefehler zurückgegeben.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode nicht als Reaktion auf eine Benutzeraktion, z. B. Mausereignis oder Tastendruckereignis, aufgerufen wird.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann auftreten, wenn Flash Player keinen Speicher für die Datei zuordnen kann. Die Datei ist möglicherweise zu groß oder der verfügbare Speicherplatz reicht nicht aus.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Daten, die gespeichert werden sollen. Die Daten können in einem von mehreren Formaten vorliegen und werden entsprechend behandelt:
    <ul class="- topic/ul "><li class="- topic/li ">Wenn der Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, gibt die Anwendung einen ArgumentError-Ausnahmefehler zurück.</li><li class="- topic/li ">Wenn der Wert ein String ist, wird er als UTF-8-kodierte Textdatei gespeichert.</li><li class="- topic/li ">Wenn der Wert „XML“ ist, wird er in eine Textdatei im XML-Format geschrieben. Sämtliche Formatierungsdaten bleiben hierbei erhalten.</li><li class="- topic/li ">Wenn der Wert ein ByteArray-Objekt ist, wird er wortwörtlich in eine Datendatei geschrieben.</li><li class="- topic/li ">Wenn der Wert keiner der oben genannten ist, ruft die <codeph class="+ topic/ph pr-d/codeph ">save()</codeph>-Methode die <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>-Methode des Objekts auf, um die Daten in einen String umzuwandeln, und speichert die Daten dann als eine Textdatei. Wenn dies fehlschlägt, gibt die Anwendung einen ArgumentError-Ausnahmefehler zurück.</li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">defaultFileName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Standarddateiname, der im Dialogfeld für die zu speichernde Datei angezeigt wird. Dieser String darf keines der folgenden Zeichen enthalten: / \ : ~~ ? " &lt; > | %
    <p class="- topic/p ">
     Wenn ein File-Objekt diese Methode aufruft, ist der Dateiname der Name der Datei, auf den das File-Objekt verweist. (Die AIR File-Klasse erweitert die FileReference-Klasse.)</p>
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Öffnet ein Dialogfeld, das es dem Benutzer ermöglicht, eine Datei in ein lokales Dateisystem zu speichern. <ph class="- topic/ph ">In Flash Player bestehen zwar keine Beschränkungen bezüglich der Größe von Dateien, die hochgeladen, heruntergeladen, geladen oder gespeichert werden können, aber der Player unterstützt offiziell Größen von bis zu 100 MB.</ph>
    
    <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">save()</codeph>-Methode öffnet zuerst ein Betriebssystem-Dialogfeld, das den Benutzer zur Eingabe eines Dateinamens und zur Auswahl eines Ordners auf dem lokalen Computer auffordert, in dem die Datei gespeichert werden soll. Wenn der Benutzer einen Ordner auswählt und den Speichervorgang bestätigt (z. B. indem er auf „Speichern“ klickt), wird die Datei gespeichert. Listener empfangen Ereignisse, um den Fortschritt, Erfolg oder Nichterfolg des Speichervorgangs anzuzeigen. Um den Status des Dialogfelds und des Speichervorgangs nach dem Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">save()</codeph> ermitteln zu können, muss Ihr Code Ereignisse wie <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>, <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> und <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> überwachen.
    </p>
    
    <p class="- topic/p ">Adobe AIR enthält auch die FileStream-Klasse, die weitere Optionen zum lokalen Speichern von Dateien bereitstellt.</p>
    
    <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>-Funktionen sind nicht-blockierend. Die Funktionsrückgaben erfolgen nach dem Aufruf vor Abschluss der Dateiübertragung. Zusätzlich gilt: Wenn bei einem FileReference-Objekt der Gültigkeitsbereich verlassen wird, werden alle zu dem Zeitpunkt noch nicht abgeschlossenen Transaktionen für dieses Objekt abgebrochen. Stellen Sie sicher, dass das FileReference-Objekt während der gesamten Dauer des Upload-, Download-, Speicher- bzw. Ladevorgangs den Gültigkeitsbereich nicht verlässt.</p>
    
    <p class="- topic/p ">Wenn die Datei erfolgreich gespeichert wurde, werden die Eigenschaften des FileReference-Objekts mit den Eigenschaften der lokalen Datei gefüllt. Das <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis wird ausgelöst, wenn der Speichervorgang erfolgreich war.</p>
    
    <p class="- topic/p ">Es kann jeweils nur eine <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">save()</codeph>-Sitzung durchgeführt werden (weil jeweils nur ein Dialogfeld aufgerufen werden kann).</p>
    
    <p class="- topic/p ">In Flash Player können Sie diese Methode nur erfolgreich als Antwort auf ein Benutzerereignis (z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis) aufrufen. Andernfalls führt das Aufrufen dieser Methode dazu, dass Flash Player einen Ausnahmefehler ausgibt. Diese Beschränkung gilt nicht für AIR-Inhalt in der Anwendungssandbox.</p>
    
 	
	<p class="- topic/p ">In Adobe AIR wird das Speichern-Dialogfeld nicht immer vor Fenstern angezeigt, die „Eigentum“ eines anderen Fensters sind (Fenster, deren <codeph class="+ topic/ph pr-d/codeph ">owner</codeph>-Eigenschaft nicht null ist). Um Probleme mit der Anordnung von Fenstern zu vermeiden, blenden Sie Fenster aus, die Eigentum eines anderen Fensters sind, bevor Sie diese Methode aufrufen.</p>
	
    </apiDesc><example conref="examples\FileReference_save.as" class="- topic/example "> Im folgenden Beispiel wird der in ein Textfeld eingegebene Text in einer Datei gespeichert. Das Beispiel erstellt ein bearbeitbares Textfeld (<codeph class="+ topic/ph pr-d/codeph ">MyTextField</codeph>) sowie ein weiteres Textfeld, das nicht bearbeitet werden kann (<codeph class="+ topic/ph pr-d/codeph ">MyButtonField</codeph>) und als „Schaltfläche“ für Mausklicks dient. Ein Benutzer kann das erste Textfeld bearbeiten und auf die Schaltfläche klicken, um den Inhalt des Textfelds in einer lokalen Datei zu speichern. Die Mausklick-Ereignisprozedur <codeph class="+ topic/ph pr-d/codeph ">clickhandler</codeph> verwendet die <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>-Methode (für ein FileReference-Objekt mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">MyFileReference</codeph>), um ein Dialogfeld im aktuellen Betriebssystem des Benutzer zu öffnen, damit der Benutzer den Inhalt in einer lokalen Datei speichern kann, deren Namen er selbst eingibt.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var MyTextField:TextField = new TextField();
var MyButtonField:TextField = new TextField();
var MyFile:FileReference = new FileReference();

MyTextField.border = true;
MyTextField.type = TextFieldType.INPUT;

MyButtonField.background = true;
MyButtonField.backgroundColor = 0x339933;
MyButtonField.x = 150;
MyButtonField.height = 20;
MyButtonField.text = "Click here to save";

addChild(MyTextField);
addChild(MyButtonField);
MyButtonField.addEventListener(MouseEvent.CLICK, clickhandler);

function clickhandler(e:MouseEvent): void {
    MyFile.save(MyTextField.text);
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link><link href="flash.net.xml#FileReference/data" class="- topic/link "><linktext class="- topic/linktext ">FileReference.data</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">FileStream</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:save_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Download-Vorgang gestartet wird.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Download-Vorgang gestartet wird.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird regelmäßig während des Download-Vorgangs ausgelöst.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird regelmäßig während des Download-Vorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Download einer Datei erfolgreich abgeschlossen wurde.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Download einer Datei erfolgreich abgeschlossen wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer das Dialogfeld abbricht.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer das Dialogfeld abbricht.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer in einem Dialogfeld eine Datei für einen Download-Vorgang auswählt. 
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer in einem Dialogfeld eine Datei für einen Download-Vorgang auswählt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Input/Output-Fehler während des Lesens oder der Übertragung der Datei auftritt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Input/Output-Fehler während des Lesens oder der Übertragung der Datei auftritt.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:uploadUnencoded" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">uploadUnencoded</apiName><shortdesc class="- topic/shortdesc ">
    Leiten Sie das Hochladen einer Datei auf eine URL ohne Kodierung ein.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können dieses Problem vermeiden, indem Sie die SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren. Diese Ausnahme wird mit einer Meldung ausgelöst, die den Dateinamen und die URL enthält, auf die nicht zugegriffen werden kann.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine FileReference- oder FileReferenceList-Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Parameter „URL“ enthält keinen gültigen Pfad/kein gültiges Protokoll. Der Datei-Upload muss HTTP verwenden.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das URLRequest-Objekt. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">url</codeph> des URLRequest-Objekts muss die URL des Serverskripts enthalten, das für die Verarbeitung von Upload-Vorgängen über HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Aufrufe konfiguriert ist. Bei einigen Browsern sind URL-Strings in ihrer Länge beschränkt. So können URLs mit über 256 Zeichen unter Umständen bei einigen Browsern oder Servern fehlschlagen. Wenn dieser Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist, wird eine Ausnahme ausgelöst.  
     
    <p class="- topic/p ">Diese URL kann entweder eine HTTP- oder, aus Sicherheitsgründen, eine HTTPS-Adresse sein. Wenn HTTPS verwendet werden soll, setzen Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> auf eine HTTPS-Adresse. Wenn Sie im Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> keine Portnummer angeben, wird standardmäßig Port 80 für HTTP und Port 443 für HTTPS verwendet.</p>
    
    <p class="- topic/p ">Um <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Parameter an den Server zu senden, setzen Sie den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des URLRequest-Objekts auf Ihre Parameter und die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">method</codeph> entweder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> oder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.</p>
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Startet den Upload einer Datei auf einen Remote-Server ohne Kodierung. 
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Leiten Sie das Hochladen einer Datei auf eine URL ohne Kodierung ein. Während die <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph>-Methode die Datei in einem Formulardatenumschlag kodiert, übergibt die <codeph class="+ topic/ph pr-d/codeph ">uploadUnencoded()</codeph>-Methode den Dateiinhalt wie er ist im HTTP-Anforderungshauptteil. Verwenden Sie die uploadUnencoded()-Methode, wenn die Daten, die Sie senden möchten, bereits in einem Format kodiert sind, dass der empfangende Server akzeptiert. Normalerweise wird die <codeph class="+ topic/ph pr-d/codeph ">uploadeUnencoded()</codeph>-Methode mit der <codeph class="+ topic/ph pr-d/codeph ">HTTP/WebDAV PUT</codeph>-Methode.
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">upload()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang gestartet wird.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang gestartet wird.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird regelmäßig während des Upload-Vorgangs ausgelöst.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird regelmäßig während des Upload-Vorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Upload einer Datei erfolgreich abgeschlossen wurde.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Upload einer Datei erfolgreich abgeschlossen wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Datei-Upload empfangen wurden.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Datei-Upload empfangen wurden.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund einer Sicherheitsverletzung fehlschlägt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund einer Sicherheitsverletzung fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund eines HTTP-Fehlers fehlschlägt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund eines HTTP-Fehlers fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Upload-Vorgang wird erfolgreich abgeschlossen und der Server gibt eine Antwort-URL und Antwort-Header zurück.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Der Upload-Vorgang wird erfolgreich abgeschlossen und der Server gibt eine Antwort-URL und Antwort-Header zurück.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in den folgenden Situationen aufgerufen:
    <ul class="- topic/ul "><li class="- topic/li ">Der Upload schlägt fehl, weil ein I/O-Fehler aufgetreten ist, während Adobe AIR die Datei liest, schreibt oder überträgt.</li><li class="- topic/li ">Der Upload schlägt fehl, weil versucht wird, eine Datei auf einen Server hochzuladen, der eine Authentifizierung (z. B. anhand eines Benutzernamens und eines Kennworts) erfordert. Während des Uploads gibt es keine Möglichkeit für den Benutzer, Kennwörter einzugeben.</li><li class="- topic/li ">Der Upload schlägt fehl, da der <codeph class="+ topic/ph pr-d/codeph ">url</codeph>-Parameter ein ungültiges Protokoll enthält. <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> muss entweder HTTP oder HTTPS verwenden.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird in einem der folgenden Fälle aufgerufen: Der Upload schlägt fehl, weil während des Lese-, Schreib- bzw. Übertragungsvorgangs der Datei durch Adobe AIR ein I/O-Fehler aufgetreten ist. Der Upload schlägt fehl, weil versucht wird, eine Datei auf einen Server hochzuladen, der eine Authentifizierung (z. B. anhand eines Benutzernamens und eines Kennworts) erfordert.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:upload" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">upload</apiName><shortdesc class="- topic/shortdesc ">
    Startet den Upload der Datei auf einen Remote-Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">upload, FileReference.upload
    </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können dieses Problem vermeiden, indem Sie die SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren. Diese Ausnahme wird mit einer Meldung ausgelöst, die den Dateinamen und die URL enthält, auf die nicht zugegriffen werden kann.
    
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Es wird bereits eine FileReference- oder FileReferenceList-Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Parameter „URL“ enthält keinen gültigen Pfad/kein gültiges Protokoll. Für Upload-Vorgänge muss HTTP und für Download-Vorgänge FTP oder HTTP verwendet werden. 3) Der Parameter <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> weist den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf. 4) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in folgenden Situationen ausgelöst: 1) Der Parameter <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> ist ein leerer String. 2) <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> weist den Typ „ByteArray“ auf. Bei Verwendung mit den Methoden <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> sind für <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> nur die Typen „URLVariables“ und „String“ zulässig. 3) In der AIR-Laufzeitumgebung (in der Sicherheitssandbox der Anwendung) ist die Methode von URLRequest nicht GET oder POST (verwenden Sie stattdessen <codeph class="+ topic/ph pr-d/codeph ">uploadEncoded()</codeph>).
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann folgende Ursachen haben: 1) Flash Player kann den Parameter <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> nicht von UTF8 in MBCS konvertieren. Dieser Fehler trifft zu, wenn das an <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines GET-Vorgangs eingestellt ist und wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist. 2) Flash Player kann <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Daten keinen Speicher zuweisen. Dieser Fehler trifft zu, wenn das an <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgangs eingestellt ist.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das URLRequest-Objekt. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">url</codeph> des URLRequest-Objekts muss die URL des Serverskripts enthalten, das für die Verarbeitung von Upload-Vorgängen über HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Aufrufe konfiguriert ist. Bei einigen Browsern sind URL-Strings in ihrer Länge beschränkt. So können URLs mit über 256 Zeichen unter Umständen bei einigen Browsern oder Servern fehlschlagen. Wenn dieser Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist, wird eine Ausnahme ausgelöst. Die <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Eigenschaft des URLRequest-Objekts wird ignoriert. Benutzerdefinierte HTTP-Anforderungs-Header werden in Uploads und Downloads nicht unterstützt.
     
    <p class="- topic/p ">Diese URL kann entweder eine HTTP- oder, aus Sicherheitsgründen, eine HTTPS-Adresse sein. Wenn HTTPS verwendet werden soll, setzen Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> auf eine HTTPS-Adresse. Wenn Sie im Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> keine Portnummer angeben, wird standardmäßig Port 80 für HTTP und Port 443 für HTTPS verwendet.</p>
    
    <p class="- topic/p ">Um <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Parameter an den Server zu senden, setzen Sie den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des URLRequest-Objekts auf Ihre Parameter und die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">method</codeph> entweder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> oder auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.</p>
    
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">uploadDataFieldName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">Filedata</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Feldname, der den Dateidaten im Upload-Vorgang mit der <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Methode vorangestellt ist. Der Wert für <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> darf nicht null und kein leerer String sein. Standardmäßig weist <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">"Filedata"</codeph> auf, wie im folgenden Beispiel für eine <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderung gezeigt:
    <pre xml:space="preserve" class="- topic/pre ">
    Content-Type: multipart/form-data; boundary=AaB03x
    --AaB03x 
    Content-Disposition: form-data; name="Filedata"; filename="example.jpg" 
    Content-Type: application/octet-stream
    ... contents of example.jpg ... 
    --AaB03x-- 
    </pre>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">testUpload</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Einstellung für die Anforderung eines Test-Uploads. Wenn <codeph class="+ topic/ph pr-d/codeph ">testUpload</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird bei Dateien mit einer Größe über 10 KB ein Test-Upload mit der <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Methode durchgeführt, wobei der Wert für die Länge des Inhalts 0 ist (kein Inhalt). Mit dem Test-Upload wird überprüft, ob der tatsächliche Upload-Vorgang mit Serverauthentifizierung (falls erforderlich) erfolgreich abgeschlossen werden kann. Test-Upload-Vorgänge sind nur für Player unter Windows verfügbar.
    
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Startet den Upload einer Datei auf einen Remote-Server.
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Startet den Upload der Datei auf einen Remote-Server. <ph class="- topic/ph ">In Flash Player ist kein Grenzwert für die Größe der Dateien für Upload- und Download-Vorgänge festgelegt. Offiziell unterstützt der Player Dateigrößen von bis zu 100 MB.</ph> Vor dem Aufruf dieser Methode müssen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> aufrufen.
    
    <p class="- topic/p ">Für die File-Klassen von Adobe AIR, die die FileReference-Klasse erweitern, können Sie die <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph>-Methode zum Hochladen beliebiger Dateien verwenden. Bei der FileReference-Klasse (in Flash Player verwendet) muss der Benutzer zuerst eine Datei auswählen.</p>
    
    <p class="- topic/p ">Listener erhalten Ereignisdaten und zeigen den Fortschritt, den Erfolg oder den Fehlschlag des Uploads an. Sie können Benutzern mit dem Objekt „FileReferenceList“ zwar die Auswahl mehrerer Dateien zum Upload ermöglichen, die Dateien müssen jedoch einzeln hochgeladen werden. Verwenden Sie hierzu das Array <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph> der FileReferenceList-Objekte.</p>
    
    <p class="- topic/p ">Die Funktionen <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> sind ungeblockt. Die Funktionsrückgaben erfolgen nach dem Aufruf vor Abschluss der Dateiübertragung. Wenn bei einem FileReference-Objekt der Gültigkeitsbereich verlassen wird, werden alle zu dem Zeitpunkt noch nicht abgeschlossenen Upload- bzw. Download-Vorgänge für dieses Objekt abgebrochen. Stellen Sie sicher, dass das FileReference-Objekt während der gesamten Dauer des Upload- bzw. Download-Vorgangs den Gültigkeitsbereich nicht verlässt.</p>
    
    <p class="- topic/p ">Die betreffenden Dateien werden zu der im Parameter <codeph class="+ topic/ph pr-d/codeph ">url</codeph> angegebenen jeweiligen URL hochgeladen. Bei der URL sollte es sich um ein Serverskript handeln, das für Uploads konfiguriert ist. In Flash Player werden Dateien mit der HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Methode hochgeladen. Das den Upload verwaltende Serverskript sollte eine <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderung mit den folgenden Elementen erwarten:</p>
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> mit dem Wert <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Content-Disposition</codeph> mit einem standardmäßig auf <codeph class="+ topic/ph pr-d/codeph ">"Filedata"</codeph> gesetzten <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Attribut und einem <codeph class="+ topic/ph pr-d/codeph ">filename</codeph>-Attribut, das auf den Namen der ursprünglichen Datei gesetzt ist.</li><li class="- topic/li ">Die Binärdaten der Datei</li></ul>
    
     <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
    <p class="- topic/p ">Ein Beispiel für eine <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderung finden Sie in der Beschreibung zum Parameter <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph>. Sie können <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Parameter mit der Methode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> an den Server senden. Nähere Informationen finden Sie in der Beschreibung zum Parameter <codeph class="+ topic/ph pr-d/codeph ">request</codeph>.</p>
    
    <p class="- topic/p ">Wenn der Parameter <codeph class="+ topic/ph pr-d/codeph ">testUpload</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> aufweist und die hochzuladende Datei größer ist als etwa 10 KB, sendet Flash Player unter Windows vor dem Hochladen der tatsächlichen Datei zunächst einen Test-Upload ohne Inhalt mit der <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Methode, um sicherzustellen, dass die Übertragung erfolgreich durchgeführt werden kann. Anschließend wird ein zweiter <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgang mit dem tatsächlichen Dateiinhalt gesendet. Bei Dateien, die kleiner sind als 10 KB, führt Flash Player nur einen <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgang mit dem tatsächlichen Inhalt der hochzuladenden Datei durch. Auf Macintosh-Plattformen werden keine <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgänge für Test-Uploads durchgeführt.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Wenn der Server eine Benutzerauthentifizierung erfordert, kann der Benutzer nur bei SWF-Dateien, die in einem Browser (also mit einem Browser-Plug-In oder einer ActiveX-Steuerung) ausgeführt werden, in einem Dialogfeld zur Eingabe eines Benutzernamens und eines Kennworts zur Authentifizierung aufgefordert werden. Dies gilt darüber hinaus nur für Download-Vorgänge. Upload-Vorgänge mit Plug-Ins oder ActiveX-Steuerelementen bzw. Upload- und Download-Vorgänge mit dem eigenständigen oder externen Player schlagen fehl.</p>
    
    <p class="- topic/p ">Bedenken Sie beim Einsatz dieser Methode das Sicherheitsmodell von <ph class="- topic/ph ">Flash Player</ph>: </p>
    
    
    <ul class="- topic/ul "><li class="- topic/li ">Ladevorgänge sind nicht zulässig, wenn die aufrufende SWF-Datei sich in einer nicht vertrauenswürdigen lokalen Sandbox befindet.</li><li class="- topic/li ">Standardmäßig werden Sandbox-übergreifende Zugriffe nicht zugelassen. Eine Website kann den Zugriff auf eine Ressource durch das Hinzufügen einer URL-Richtliniendatei ermöglichen.</li><li class="- topic/li ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</li></ul>
    
    <p class="- topic/p ">In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph ">der Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
    
    <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
    
    <p class="- topic/p ">Beachten Sie, dass aufgrund neuer zusätzlicher Funktionalität von Flash Player beim Veröffentlichen in Flash Player 10 immer nur einer der folgenden Vorgänge aktiv sein kann: <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Ansonsten gibt Flash Player einen Laufzeitfehler (Code 2174) aus. Stoppen Sie den laufenden Vorgang mithilfe von <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph>. Diese Einschränkung betrifft lediglich Flash Player 10. Ältere Versionen von Flash Player sind von den Einschränkungen bezüglich gleichzeitig ausgeführter Vorgänge nicht betroffen.</p>
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:upload_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang gestartet wird.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang gestartet wird.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird regelmäßig während des Upload-Vorgangs ausgelöst.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird regelmäßig während des Upload-Vorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Upload einer Datei erfolgreich abgeschlossen wurde.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Upload einer Datei erfolgreich abgeschlossen wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Datei-Upload empfangen wurden.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, nachdem die Daten vom Server nach einem erfolgreichen Datei-Upload empfangen wurden.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund einer Sicherheitsverletzung fehlschlägt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund einer Sicherheitsverletzung fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund eines HTTP-Fehlers fehlschlägt.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Upload-Vorgang aufgrund eines HTTP-Fehlers fehlschlägt.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Upload-Vorgang wird erfolgreich abgeschlossen und der Server gibt eine Antwort-URL und Antwort-Header zurück.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Der Upload-Vorgang wird erfolgreich abgeschlossen und der Server gibt eine Antwort-URL und Antwort-Header zurück.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird in den folgenden Situationen aufgerufen:
    <ul class="- topic/ul "><li class="- topic/li ">Der Upload schlägt fehl, weil ein I/O-Fehler aufgetreten ist, während <ph class="- topic/ph ">Flash Player oder</ph> Adobe AIR die Datei liest, schreibt oder überträgt.</li><li class="- topic/li ">Der Upload schlägt fehl, weil versucht wird, eine Datei auf einen Server hochzuladen, der eine Authentifizierung (z. B. anhand eines Benutzernamens und eines Kennworts) erfordert. Während des Uploads gibt es keine Möglichkeit für den Benutzer, Kennwörter einzugeben.</li><li class="- topic/li ">Der Upload schlägt fehl, da der <codeph class="+ topic/ph pr-d/codeph ">url</codeph>-Parameter ein ungültiges Protokoll enthält. <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> muss entweder HTTP oder HTTPS verwenden.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird in einem der folgenden Fälle aufgerufen: Der Upload schlägt fehl, weil während des Lese-, Schreib- bzw. Übertragungsvorgangs der Datei durch Flash Player oder Adobe AIR ein I/O-Fehler aufgetreten ist. Der Upload schlägt fehl, weil versucht wird, eine Datei auf einen Server hochzuladen, der eine Authentifizierung (z. B. anhand eines Benutzernamens und eines Kennworts) erfordert.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:FileReference:creationDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">creationDate</apiName><shortdesc class="- topic/shortdesc ">
    Das Erstellungsdatum der Datei auf der lokalen Festplatte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">creationDate, FileReference.creationDate
    
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse() </codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war. In diesem Fall weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">creationDate</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn nicht auf die Dateidaten zugegriffen werden kann, wird eine Ausnahme mit einer Meldung ausgelöst, die einen I/O-Fehler angibt.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ruft das Erstellungsdatum der Datei als Date-Objekt ab.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das Erstellungsdatum der Datei auf der lokalen Festplatte. Falls das Objekt keine Daten enthält, gibt der Aufruf dieser Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:creator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">creator</apiName><shortdesc class="- topic/shortdesc ">
    Der Macintosh-Erstellertyp der Datei, der nur mit Mac OS-Versionen, die älter als Mac OS X sind, verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">creator, FileReference.creator
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war. In diesem Fall weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">creator</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Erstellertyp (auf Macintosh-Systemen).
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Macintosh-Erstellertyp der Datei, der nur in Mac OS-Versionen vor Mac OS X verwendet wird. In Windows oder Linux ist diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Falls das FileReference-Objekt noch keine Daten enthält, gibt der Aufruf dieser Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference/extension" class="- topic/link "><linktext class="- topic/linktext ">FileReference.extension</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
    Das ByteArray-Objekt, das die Daten aus der geladenen Datei nach einem erfolgreichen Aufruf der load()-Methode repräsentiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
    </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode nicht erfolgreich aufgerufen wurde, wird ein Ausnahmefehler mit der Meldung zurückgegeben, dass Funktionen in der falschen Reihenfolge aufgerufen wurden oder dass ein früherer Aufruf nicht erfolgreich war. In diesem Fall weist die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Datei nicht geöffnet oder gelesen werden kann oder beim Zugriff auf die Datei ein ähnlicher Fehler auftritt, wird eine Ausnahme mit einer Meldung ausgelöst, die einen I/O-Fehler angibt. In diesem Fall weist die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die geladenen Daten der Datei als ByteArray.
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das ByteArray-Objekt, das die Daten aus der geladenen Datei nach einem erfolgreichen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode repräsentiert.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:extension:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">extension</apiName><shortdesc class="- topic/shortdesc ">
     Die Dateinamenerweiterung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Verweis nicht initialisiert wurde.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Dateinamenerweiterung.
     
     <p class="- topic/p ">Eine Dateierweiterung ist der Teil des Namens, der hinter dem letzten Punkt („.“) steht. Der Punkt selbst gehört nicht zur Erweiterung. Wenn der Dateiname keinen Punkt enthält, ist die Erweiterung <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Sie sollte den Dateityp mit der <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Eigenschaft bestimmen; verwenden Sie nicht die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">creator</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">type</codeph>. Sie können die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">creator</codeph> und <codeph class="+ topic/ph pr-d/codeph ">type</codeph> als veraltet betrachten. Sie gelten für ältere Mac OS-Versionen.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileReference:modificationDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">modificationDate</apiName><shortdesc class="- topic/shortdesc ">
   Das Datum, an dem die Datei auf der lokalen Festplatte zuletzt geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">modificationDate, FileReference.modificationDate
   
   </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse() </codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war. In diesem Fall weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">modificationDate</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn nicht auf die Dateidaten zugegriffen werden kann, wird eine Ausnahme mit einer Meldung ausgelöst, die einen I/O-Fehler angibt.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ruft das Änderungsdatum der Datei als Date-Objekt ab.
   </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
   Das Datum, an dem die Datei auf der lokalen Festplatte zuletzt geändert wurde. Falls das FileReference-Objekt noch keine Daten enthält, gibt der Aufruf dieser Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück.
   
   </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:name:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
   Der Name der Datei auf der lokalen Festplatte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
   </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse() </codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ruft den Namen der Datei als String ab.
   </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
   Der Name der Datei auf der lokalen Festplatte. Wenn das FileReference-Objekt keine Daten enthält (aus einem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> oder <codeph class="+ topic/ph pr-d/codeph "> FileReference.browse()</codeph>), löst Flash Player einen Fehler aus, wenn Sie versuchen, den Wert diese Eigenschaft abzurufen.
   <p class="- topic/p ">Den Eigenschaften eines FileReference-Objekts werden durch einen Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> Werte zugewiesen. Im Unterschied zu anderen FileReference-Eigenschaften wird beim Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">name</codeph> erst bei Auslösung des Ereignisses <codeph class="+ topic/ph pr-d/codeph ">select</codeph> mit Daten aktualisiert.</p>
   
   </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:size:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">size</apiName><shortdesc class="- topic/shortdesc ">
  Die Größe der Datei auf der lokalen Festplatte in Byte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
  </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse() </codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Datei nicht geöffnet oder gelesen werden kann oder beim Zugriff auf die Datei ein ähnlicher Fehler auftritt, wird eine Ausnahme mit einer Meldung ausgelöst, die einen I/O-Fehler angibt.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die Größe der Datei in Byte.
  </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Die Größe der Datei auf der lokalen Festplatte in Byte. <ph class="- topic/ph ">Wenn <codeph class="+ topic/ph pr-d/codeph ">size</codeph> den Wert 0 aufweist, wird eine Ausnahme ausgelöst.</ph>
  
  <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> In der ersten Version von ActionScript 3.0 wurde die <codeph class="+ topic/ph pr-d/codeph ">size</codeph>-Eigenschaft als uint-Objekt definiert, das Dateigrößen bis zu ca. 4 GB unterstützt. Sie wird jetzt als Number-Objekt implementiert, um größere Dateien zu unterstützen. </p>
  
  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:type:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">type</apiName><shortdesc class="- topic/shortdesc ">
  Der Dateityp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">type, FileReference.type
  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse() </codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> nicht erfolgreich aufgerufen werden konnte, wird eine Ausnahme mit einer Meldung ausgelöst, die angibt, dass die Funktionen in der falschen Reihenfolge aufgerufen wurden oder ein vorhergehender Aufruf nicht erfolgreich war. In diesem Fall weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ruft den Typ bzw. die Erweiterung der Datei ab.
  </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Der Dateityp. 
  
  <p class="- topic/p ">In Windows oder Linux ist diese Eigenschaft die Dateierweiterung. Auf Macintosh-Systemen ist diese Eigenschaft der vierbuchstabige Dateityp, der nur in Mac OS-Versionen, die älter als Mac OS X sind, verwendet wird. Wenn das FileReference-Objekt keine Daten enthält, gibt ein Aufruf zum Abrufen des Werts diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück.</p>
    
    <p class="- topic/p ">Für Windows, Linux und Mac OS X die Dateierweiterung, also der Teil der <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Eigenschaft, der auf das letzte Vorkommen des Punkts (.) folgt. Zeichen - identifiziert den Dateityp.</p>
    
  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/extension" class="- topic/link "><linktext class="- topic/linktext ">FileReference.extension</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileReferenceList" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileReferenceList</apiName><shortdesc class="- topic/shortdesc ">
 Die FileReferenceList-Klasse ermöglicht Benutzern das Auswählen einer oder mehrerer Dateien für den Upload.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">FileReferenceList
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ermöglicht das Hochladen einer oder mehrerer Dateien.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die FileReferenceList-Klasse ermöglicht Benutzern das Auswählen einer oder mehrerer Dateien für den Upload. Dabei ist ein FileReferenceList-Objekt eine Gruppe lokal auf dem Computer des Benutzers gespeicherter Dateien, die als Array von FileReference-Objekten dargestellt wird. Weitere Informationen und wichtige Überlegungen zum Gebrauch von FileReference-Objekten und der FileReference-Klasse finden Sie im Abschnitt zur FileReference-Klasse.
 
 <p class="- topic/p ">So arbeiten Sie mit der FileReferenceList-Klasse:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Instanziieren der Klasse: <codeph class="+ topic/ph pr-d/codeph ">var myFileRef = new FileReferenceList();</codeph></li><li class="- topic/li ">Rufen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> auf. Dadurch wird ein Dialogfeld geöffnet, in dem der Benutzer eine oder mehrere Dateien für den Upload-Vorgang auswählen kann: <codeph class="+ topic/ph pr-d/codeph ">myFileRef.browse();</codeph></li><li class="- topic/li ">Nach dem erfolgreichen Aufruf von <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> des FileReferenceList-Objekts mit den Daten eines Arrays von FileReference-Objekten aktualisiert.</li><li class="- topic/li ">Rufen Sie danach für jedes Element des <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph>-Arrays <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> auf.</li></ul>
 
 <p class="- topic/p ">Zur FileReferenceList-Klasse gehören auch eine <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>-Methode und eine <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph>-Eigenschaft für das Arbeiten mit mehreren Dateien. Wenn eine <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>-Methode aufgerufen wird, wird die Wiedergabe von SWF-Dateien in der eigenständigen und der externen Version von Flash Player und in AIR für Linux und Mac OS X 10.1 und früheren Versionen unterbrochen.</p>
 
 </apiDesc><example conref="examples\FileReferenceListExample.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie mit Ereignissen den Upload mehrerer Dateien verwalten können. Die CustomFileReferenceList-Klasse erweitert FileReferenceList und enthält das Ereignis <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, das nach den Upload-Vorgängen der einzelnen Dateien im FileReferenceList-Objekt ausgelöst wird. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">LIST_COMPLETE</codeph> der FileReferenceListExample-Klasse wird ausgelöst, wenn alle Dateien im FileReferenceList-Objekt hochgeladen wurden.
 
 <p class="- topic/p ">Verwenden Sie zur Ausführung dieses Beispiels ein Skript, das den Upload einer Datei unter http://www.[yourDomain].com/yourUploadHandlerScript.cfm zulässt. Abhängig vom Speicherort Ihrer SWF-Datei und dem Upload-Ziel müssen Sie außerdem ggf. die SWF-Datei unter Verwendung der Einstellung „Nur auf Netzwerk zugreifen“ für die Option „Sicherheit bei lokaler Wiedergabe“ kompilieren oder die Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player-Sicherheitseinstellungen ändern, um den Netzwerkzugriff für diese Datei zuzulassen. Wenn das Upload-Ziel ein Remote-Server ist und Sie dieses Beispiel über Ihren Desktop-Computer ausführen, muss auf dem Server eine crossdomain.xml-Datei abgelegt sein.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.FileReferenceList;
 
    public class FileReferenceListExample extends Sprite {
        public static var LIST_COMPLETE:String = "listComplete";
        public function FileReferenceListExample() {
            initiateFileUpload();
        }

        private function initiateFileUpload():void {
            var fileRef:CustomFileReferenceList = new CustomFileReferenceList();
            fileRef.addEventListener(FileReferenceListExample.LIST_COMPLETE, listCompleteHandler);
            fileRef.browse(fileRef.getTypes());
        }

        private function listCompleteHandler(event:Event):void {
            trace("listCompleteHandler");
        }
    }
}
 
import flash.events.*;
import flash.net.FileReference;
import flash.net.FileReferenceList;
import flash.net.FileFilter;
import flash.net.URLRequest;
 
class CustomFileReferenceList extends FileReferenceList {
    private var uploadURL:URLRequest;
    private var pendingFiles:Array;

    public function CustomFileReferenceList() {
        uploadURL = new URLRequest();
        uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
        initializeListListeners();
    }

    private function initializeListListeners():void {
        addEventListener(Event.SELECT, selectHandler);
        addEventListener(Event.CANCEL, cancelHandler);
    }

    public function getTypes():Array {
        var allTypes:Array = new Array();
        allTypes.push(getImageTypeFilter());
        allTypes.push(getTextTypeFilter());
        return allTypes;
    }
 
    private function getImageTypeFilter():FileFilter {
        return new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg;*.jpeg;*.gif;*.png");
    }
 
    private function getTextTypeFilter():FileFilter {
        return new FileFilter("Text Files (*.txt, *.rtf)", "*.txt;*.rtf");
    }
 
    private function doOnComplete():void {
        var event:Event = new Event(FileReferenceListExample.LIST_COMPLETE);
        dispatchEvent(event);
    }
 
    private function addPendingFile(file:FileReference):void {
        trace("addPendingFile: name=" + file.name);
        pendingFiles.push(file);
        file.addEventListener(Event.OPEN, openHandler);
        file.addEventListener(Event.COMPLETE, completeHandler);
        file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
        file.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        file.upload(uploadURL);
    }
 
    private function removePendingFile(file:FileReference):void {
        for (var i:uint; i &lt; pendingFiles.length; i++) {
            if (pendingFiles[i].name == file.name) {
                pendingFiles.splice(i, 1);
                if (pendingFiles.length == 0) {
                    doOnComplete();
                }
                return;
            }
        }
    }
 
    private function selectHandler(event:Event):void {
        trace("selectHandler: " + fileList.length + " files");
        pendingFiles = new Array();
        var file:FileReference;
        for (var i:uint = 0; i &lt; fileList.length; i++) {
            file = FileReference(fileList[i]);
            addPendingFile(file);
        }
    }
 
    private function cancelHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("cancelHandler: name=" + file.name);
    }
 
    private function openHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("openHandler: name=" + file.name);
    }
 
    private function progressHandler(event:ProgressEvent):void {
        var file:FileReference = FileReference(event.target);
        trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
    }
 
    private function completeHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("completeHandler: name=" + file.name);
        removePendingFile(file);
    }
 
    private function httpErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("httpErrorHandler: name=" + file.name);
    }
 
    private function ioErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("ioErrorHandler: name=" + file.name);
    }
 
    private function securityErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("securityErrorHandler: name=" + file.name + " event=" + event.toString());
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link></related-links><adobeApiEvent id="flash.net:FileReferenceList_flash.events.Event.SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Benutzer im Dialogfeld zum Suchen von Dateien eine oder mehrere Dateien für einen Upload-Vorgang auswählt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example demonstrates the usage of the <code>select</code> event.
 <listing version="2.0">
 import flash.net.FileReferenceList;
 import flash.net.FileReference;
 
 var listener:Object = new Object();
 
 listener.onSelect = function(fileRefList:FileReferenceList) {
 	trace("onSelect");
 	var list:Array = fileRefList.fileList;
 	var item:FileReference;
 	for(var i:Number = 0; i &lt; list.length; i++) {
 		item = list[i];
 		trace("name: " + item.name);
 		trace(item.addListener(this));
 		item.upload("http://www.yourdomain.com/");
 	}
 }
 
 listener.onComplete = function(file:FileReference):void {
 	trace("onComplete: " + file.name);
 }
 
 var fileRef:FileReferenceList = new FileReferenceList();
 fileRef.addListener(listener);
 fileRef.browse();
 </listing>
 </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Benutzer im Dialogfeld zum Suchen von Dateien eine oder mehrere Dateien für einen Upload-Vorgang auswählt. (Dieses Dialogfeld wird beim Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> geöffnet.) Wenn der Benutzer eine Datei auswählt und den Vorgang bestätigt (z. B. durch Klicken auf „Speichern“), wird das <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList</codeph>-Objekt mit den Daten der FileReference-Objekte aktualisiert, die die vom Benutzer ausgewählten Dateien darstellen.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReferenceList_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Benutzer das Dialogfeld zum Suchen von Dateien abbricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
 </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Benutzer das Dialogfeld zum Suchen von Dateien abbricht. (Dieses Dialogfeld wird beim Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> geöffnet.)
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:FileReferenceList:FileReferenceList" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileReferenceList</apiName><shortdesc class="- topic/shortdesc ">
 	 Erstellt ein neues FileReferenceList-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example creates a new <code>FileReferenceList</code> object,
	 iterates over each selected file, and outputs their names.
	 <listing version="2.0">
	 import flash.net.FileReferenceList;
	 
	 var listener:Object = new Object();
	 listener.onSelect = function(fileRefList:FileReferenceList) {
	 	trace("onSelect");
	 	var arr:Array = fileRefList.fileList;
	 	for(var i:Number = 0; i &lt; arr.length; i++) {
	 		trace("name: " + arr[i].name);
	 	}
	 }
	 
	 var fileRef:FileReferenceList = new FileReferenceList();
	 fileRef.addListener(listener);
	 fileRef.browse();
	 </listing>
  	 
  	 </maelexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Erstellt ein neues FileReferenceList-Objekt. Ein FileReferenceList-Objekt enthält keine Werte, bis Sie dafür die Methode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> aufrufen und der Benutzer eine oder mehrere Dateien auswählt. Beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> für das FileReferenceList-Objekt wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> des Objekts mit einem Array von <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph>-Objekten aktualisiert.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:FileReferenceList:browse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">browse</apiName><shortdesc class="- topic/shortdesc ">
	 Zeigt ein Dialogfeld zum Suchen von Dateien an, in dem der Benutzer eine oder mehrere lokal gespeicherte Dateien für einen Upload-Vorgang auswählen kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample><pre xml:space="preserve" class="- topic/pre ">
	 // ask the user to choose an image file for upload
	 var fileRef = new FileReference();
	 if (fileRef.browse(["Images", "jpg;gif;png", "Flash Movies", "swf"])) {
	   trace("Opened " + fileRef.name);
	 } else {
	   trace("User canceled");
	 }
	 </pre>
	 
	 
	 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird aufgrund der folgenden Ursachen ausgelöst: 1) Es wird bereits eine FileReference- oder FileReferenceList-Suchsitzung ausgeführt. Es können nicht mehrere Suchsitzungen gleichzeitig ausgeführt werden. 2) Der Vorgang wird durch eine Einstellung in der Datei „mms.cfg“ des Benutzers verhindert. 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die FileFilter-Objekte im Array <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> nicht richtig formatiert sind, wird eine Ausnahme ausgelöst. Weitere Informationen über das richtige Filterformat finden Sie in der Dokumentation zu „FileFilter“.
	 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn die Methode nicht als Reaktion auf eine Benutzeraktion, z. B. Mausereignis oder Tastendruckereignis, aufgerufen wird.
     
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurück, wenn die Parameter gültig sind und das Dialogfeld für die Dateisuche geöffnet wird.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typeFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array mit FileFilter-Instanzen zur Filterung der im Dialogfeld angezeigten Dateien. Wenn Sie diesen Parameter weglassen, werden alle Dateien angezeigt. Weitere Informationen finden Sie im Abschnitt zur Klasse <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>. 
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Zeigt ein Dialogfeld zum Suchen von Dateien an, in dem der Benutzer lokale Dateien für einen Upload-Vorgang auswählen kann.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Zeigt ein Dialogfeld zum Suchen von Dateien an, in dem der Benutzer eine oder mehrere lokal gespeicherte Dateien für einen Upload-Vorgang auswählen kann. Das Dialogfeld stammt vom Betriebssystem des Benutzers.
	 
	 <p class="- topic/p ">In Flash Player 10 und höher können Sie diese Methode nur erfolgreich als Antwort auf ein Benutzerereignis (z. B. in einer Ereignisprozedur für ein Mausklick- oder Tastendruckereignis) aufrufen. Andernfalls wird beim Aufrufen dieser Methode in Flash Player ein Fehler zurückgegeben.</p>
	 
	 <p class="- topic/p ">Wenn diese Methode aufgerufen wird und ein Benutzer erfolgreich Dateien ausgewählt hat, wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> dieses FileReferenceList-Objekts mit einem Array von FileReference-Objekten aktualisiert (ein Objekt pro vom Benutzer ausgewählter Datei). Bei jedem nachfolgenden Aufruf der Methode „FileReferenceList.browse()“ wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph> auf die vom Benutzer im Dialogfeld ausgewählten Dateien zurückgesetzt.</p>
	 
	 <p class="- topic/p ">Mit dem Parameter <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> können Sie festlegen, welche Dateien im Dialogfeld angezeigt werden.</p>
	 
	 <p class="- topic/p ">Für ein FileReferenceList-Objekt kann immer nur jeweils eine <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>-Sitzung ausgeführt werden, da immer nur ein Dialogfeld geöffnet werden kann.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference-Klasse</linktext></link><link href="flash.net.xml#FileFilter" class="- topic/link "><linktext class="- topic/linktext ">FileFilter-Klasse</linktext></link></related-links><adobeApiEvent id="flash.net:FileReferenceList:browse_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn der Benutzer erfolgreich ein Element für den Upload-Vorgang aus dem Dialogfeld ausgewählt hat.
	 </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn der Benutzer erfolgreich ein Element für den Upload-Vorgang aus dem Dialogfeld ausgewählt hat.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReferenceList:browse_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird aufgerufen, wenn der Benutzer das Dialogfeld abbricht oder schließt.
	 
	 </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird aufgerufen, wenn der Benutzer das Dialogfeld abbricht oder schließt.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:FileReferenceList:fileList:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fileList</apiName><shortdesc class="- topic/shortdesc ">
	 Ein Array von FileReference-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example demonstrates the <code>fileList</code> property.
	 <listing version="2.0">
	 import flash.net.FileReferenceList;
	 import flash.net.FileReference;
	 
	 var listener:Object = new Object();
	 listener.onSelect = function(fileRefList:FileReferenceList) {
	 	trace("onSelect");
	 	var list:Array = fileRefList.fileList;
	 	var item:FileReference;
	 	for(var i:Number = 0; i &lt; list.length; i++) {
	 		item = list[i];
	 		trace("name: " + item.name);
	 	}
	 }
	 
	 var fileRef:FileReferenceList = new FileReferenceList();
	 fileRef.addListener(listener);
	 fileRef.browse();
	 </listing>
	 
	 </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ein Array von FileReference-Objekten.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein Array von <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph>-Objekten.
	 
	 <p class="- topic/p ">Wenn die Methode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> aufgerufen wurde und ein Benutzer mindestens eine Datei aus dem mit der Methode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> geöffneten Dialogfeld ausgewählt hat, wird diese Eigenschaft mit einem Array von FileReference-Objekten aktualisiert, die die vom Benutzer ausgewählten Dateien darstellen. Sie können dieses Array verwenden, um die einzelnen Dateien mit der Methode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> hochzuladen. Sie können nicht mehrere Dateien auf einmal hochladen.</p>
	 
	 <p class="- topic/p ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> wird bei jedem Aufruf von „browse()“ für das FileReferenceList-Objekt aktualisiert.</p>
	 
	 <p class="- topic/p ">Die Eigenschaften der <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph>-Objekte sind in der Dokumentation der FileReference-Klasse beschrieben.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetworkInterface" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetworkInterface</apiName><shortdesc class="- topic/shortdesc ">
 Die NetworkInterface-Klasse beschreibt eine Netzwerkschnittstelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NetworkInterface-Klasse beschreibt eine Netzwerkschnittstelle.
 
 <p class="- topic/p ">Sie können eine Liste der Netzwerkschnittstellen abrufen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">findInterfaces()</codeph>-Methode eines NetworkInfo-Objekts abrufen.</p>
 
 </apiDesc><example conref="examples\NetworkInterfaceExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInfo" class="- topic/link "><linktext class="- topic/linktext ">NetworkInfo</linktext></link><link href="flash.net.xml#InterfaceAddress" class="- topic/link "><linktext class="- topic/linktext ">InterfaceAddress</linktext></link></related-links><apiValue id="flash.net:NetworkInterface:active:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">active</apiName><shortdesc class="- topic/shortdesc ">
     Meldet, wenn diese Schnittstelle aktiv ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Meldet, wenn diese Schnittstelle aktiv ist.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:addresses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">addresses</apiName><shortdesc class="- topic/shortdesc ">
     Die Liste der Adressen, die an diese Netzwerkschnittstelle gebunden sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.net:InterfaceAddress" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Liste der Adressen, die an diese Netzwerkschnittstelle gebunden sind.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:displayName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">displayName</apiName><shortdesc class="- topic/shortdesc ">
     Der Anzeigename dieser Netzwerkschnittstelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Anzeigename dieser Netzwerkschnittstelle.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:hardwareAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hardwareAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die Hardwareadresse dieser Netzwerkschnittstelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Hardwareadresse dieser Netzwerkschnittstelle.
     
     <p class="- topic/p ">Die Hardwareadresse ist typischerweise die MAC-Adresse (Media Access Control) des Netzwerkadapters oder der Schnittstellenkarte.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:mtu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mtu</apiName><shortdesc class="- topic/shortdesc ">
     Die Maximum Transmission Unit (MTU) dieser Netzwerkschnittstelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Maximum Transmission Unit (MTU) dieser Netzwerkschnittstelle. 
     
     <p class="- topic/p ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">mtu</codeph>-Wert als <codeph class="+ topic/ph pr-d/codeph ">-1</codeph> gemeldet wird, ist die tatsächliche MTU unbekannt.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:name:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
     Der Name dieser Netzwerkschnittstelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Name dieser Netzwerkschnittstelle.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:parent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parent</apiName><shortdesc class="- topic/shortdesc ">
     Das NetworkInterface-Objekt, das die übergeordnete Schnittstelle repräsentiert (falls diese Schnittstelle eine übergeordnete Schnittstelle hat).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetworkInterface</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Das NetworkInterface-Objekt, das die übergeordnete Schnittstelle repräsentiert (falls diese Schnittstelle eine übergeordnete Schnittstelle hat).
     
     <p class="- topic/p ">Diese Schnittstelle könnte eine übergeordnete Schnittstelle haben, wenn es sich um eine Subschnittstelle handelt. Die <codeph class="+ topic/ph pr-d/codeph ">parent</codeph>-Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn diese Schnittstelle keine übergeordnete Schnittstelle hat.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:subInterfaces:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subInterfaces</apiName><shortdesc class="- topic/shortdesc ">
     Die Liste der Subschnittstellen, die mit dieser Netzwerkschnittstelle verbunden sind. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.net:NetworkInterface" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Liste der Subschnittstellen, die mit dieser Netzwerkschnittstelle verbunden sind. 
     
     <p class="- topic/p ">Subschnittstellen sind häufig virtuelle Schnittstellen. Die <codeph class="+ topic/ph pr-d/codeph ">subInterfaces</codeph>-Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn diese Schnittstelle keine Subschnittstellen hat.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SharedObjectFlushStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SharedObjectFlushStatus</apiName><shortdesc class="- topic/shortdesc ">
 Die SharedObjectFlushStatus-Klasse stellt Werte für den von einem Aufruf der SharedObject.flush()-Methode zurückgegebenen Code bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die SharedObjectFlushStatus-Klasse stellt Werte für den von einem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph>-Methode zurückgegebenen Code bereit.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links><apiValue id="flash.net:SharedObjectFlushStatus:FLUSHED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FLUSHED</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass die Ausgabe erfolgreich abgeschlossen wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">flushed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass die Ausgabe erfolgreich abgeschlossen wurde.
 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObjectFlushStatus:PENDING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PENDING</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass der Benutzer aufgefordert wird, zusätzlichen Speicherplatz für das gemeinsame Objekt zur Verfügung zu stellen, damit die Ausgabe ausgeführt werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pending</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass der Benutzer aufgefordert wird, zusätzlichen Speicherplatz für das gemeinsame Objekt zur Verfügung zu stellen, damit die Ausgabe ausgeführt werden kann.
 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SecureSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocket</apiName><shortdesc class="- topic/shortdesc ">
 Die SecureSocket-Klasse ermöglicht es dem Code, Socketverbindungen unter Verwendung der Protokolle Secure Sockets Layer (SSL) und Transport Layer Security herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.net:Socket</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die SecureSocket-Klasse ermöglicht es dem Code, Socketverbindungen unter Verwendung der Protokolle Secure Sockets Layer (SSL) und Transport Layer Security herzustellen. 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf allen Geräten mit AIR für TV. Bei mobilen Geräten wird sie nicht unterstützt. Mit der <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">Die SSL/TLS-Protokolle stellen eine Funktion bereit, mit der die Identität eines Hosts über sein Zertifikat authentifiziert werden kann, und bieten verschlüsselte Kommunikation über den Socket. Es werden SSLv3 und TLSv1 unterstützt. Die Validierung des Serverzertifikats wird mithilfe des Vertrauensspeichers und der Zertifikatvalidierungsunterstützung der Clientplattform ausgeführt.</p> 
 
 <p class="- topic/p ">Die SecureSocket-Klasse stellt nur zur Servern mit gültigen, vertrauenswürdigen Zertifikaten eine Verbindung her. Wenn es ein Problem mit dem Zertifikat eines Servers gibt, können Sie keine Verbindung zu diesem Server herstellen. Es gibt zum Beispiel keine Möglichkeit, eine Verbindung zu einem Server mit abgelaufenem Zertifikat oder mit einem Zertifikat, das nicht mit einem vertrauenswürdigen Stammzertifikat verkettet ist, herzustellen, selbst wenn das Zertifikat ansonsten gültig wäre.</p>
 
 <p class="- topic/p ">Die SecureSocket-Klasse ist für die verschlüsselte Kommunikation mit einem vertrauenswürdigen Server hilfreich. Ansonsten verhält sich ein SecureSocket-Objekt wie ein normales Socket-Objekt.</p>
 
 <p class="- topic/p ">Um die Methoden der SecureSocket-Klasse zu verwenden, verwenden Sie zuerst den Konstruktor <codeph class="+ topic/ph pr-d/codeph ">new SecureSocket</codeph>, um ein SecureSocket-Objekt zu erstellen. Wenn Sie eine Verbindung zu einem Server herstellen, wird das Serverzertifikat validiert. Wenn das Zertifikat gültig und vertrauenswürdig ist, wird die Verbindung eingerichtet und der Socket setzt ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis ab. Wenn das Zertifikat nicht validiert werden kann, setzt der Socket ein <codeph class="+ topic/ph pr-d/codeph ">IOError</codeph>-Ereignis ab.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtig:</b> Das Online Certificate Status Protocol (OCSP) wird nicht von allen Betriebssystemen unterstützt. Benutzer können die OCSP-Überprüfung auf einzelnen Computern deaktivieren. Wenn OCSP nicht unterstützt wird oder deaktiviert ist und ein Zertifikat nicht die erforderlichen Informationen zur Überprüfung der Zertifikatsperrung anhand einer Zertifikatsperrliste (Certificate Revocation List, CRL) enthält, wird die Zertifikatsperrung nicht überprüft. Wenn das Zertifikat ansonsten gültig ist, wird es akzeptiert. Dies kann dazu führen, dass ein Server ein gesperrtes Zertifikat verwendet.</p>
 
 </apiDesc><example conref="examples\SecureSocketExample.as" class="- topic/example "> Das folgende Beispiel zeigt das Erstellen und Verbinden eines SecureSocket-Objekts.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.errors.IOError;
    import flash.events.Event;
    import flash.events.IOErrorEvent;
    import flash.net.SecureSocket;
    
    public class SecureSocketExample extends Sprite
    {
        private var secureSocket:SecureSocket = new SecureSocket();
        
        public function SecureSocketExample()
        {
            secureSocket.addEventListener( Event.CONNECT, onConnect )
            secureSocket.addEventListener( IOErrorEvent.IO_ERROR, onError );
            
            try
            {
                secureSocket.connect( "208.77.188.166", 443 );
            }
            catch ( error:Error )
            {
                trace ( error.toString() );
            }
        }
        
        private function onConnect( event:Event ):void
        {
            trace("Connected.");
        }
        
        private function onError( error:IOErrorEvent ):void
        {
            trace( error.text + ", " + secureSocket.serverCertificateStatus );
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Socket-Klasse</linktext></link></related-links><adobeApiEvent id="flash.net:SecureSocket_flash.events.ProgressEvent.SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Socket Daten empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Socket Daten empfangen hat. Für Ereignisse vom Typ <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph> wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.bytesTotal</codeph> nicht verwendet. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines Eingabe- oder Ausgabefehlers ausgelöst, durch den ein Sende- oder Empfangsvorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines Eingabe- oder Ausgabefehlers ausgelöst, durch den ein Sende- oder Empfangsvorgang fehlschlägt.
 
 <p class="- topic/p ">Wenn ein Serverzertifikat nicht validiert werden kann, ist das abgesetzte Fehlerereignis ein IOError. In diesem Fall können Sie die <codeph class="+ topic/ph pr-d/codeph ">serverCertificateStatus</codeph>-Eigenschaft überprüfen, um die Ursache des Problems zu ermitteln.</p>
  
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Server die Socketverbindung schließt. 
 
 <p class="- topic/p ">Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">close</codeph> wird nur ausgelöst, wenn der Server die Verbindung schließt. Es wird nicht ausgelöst, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.close()</codeph> aufrufen.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:SecureSocket:SecureSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocket</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein neues SecureSocket-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn keine Unterstützung für SSLv3 oder TLSv1 verfügbar ist.
	
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein neues SecureSocket-Objekt.
	
	<p class="- topic/p ">Überprüfen Sie <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.isSupported</codeph>, bevor Sie versuchen, eine SecureSocket-Instanz zu erstellen. Wenn SSLv3- oder TLSv1-Sockets nicht unterstützt werden, gibt die Laufzeitumgebung einen IllegalOperationError aus.</p>
    
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:SecureSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Verbindet den Socket über SSL oder TLS mit dem angegebenen Host und Port.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS compare this entire description with XMLSocket.connect() and make consistent
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde kein Host angegeben, und die Verbindung konnte nicht erstellt werden.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn Sie einen Socket-Port unter null oder über 65535 angeben.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name oder die IP-Adresse des Hosts, zu dem eine Verbindung hergestellt werden soll.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Portnummer für die herzustellende Verbindung.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Verbindet den Socket über SSL oder TLS mit dem angegebenen Host und Port.
     
     <p class="- topic/p ">Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode aufrufen, wird das Serverzertifikat validiert. Wenn der SSL/TLS-Handshake gelingt und das Zertifikat gültig und vertrauenswürdig ist, wird die Verbindung hergestellt und der Socket setzt ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis ab. Wenn der Handshake fehlschlägt oder das Zertifikat nicht validiert werden kann, setzt der Socket ein <codeph class="+ topic/ph pr-d/codeph ">IOError</codeph>-Ereignis ab. Sie können das Ergebnis der Zertifikatvalidierung überprüfen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">serverCertificateStatus</codeph>-Eigenschaft lesen, nachdem eines dieser Ereignisse abgesetzt wurde. (Wenn ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis abgesetzt wird, ist der Zertifikatstatus immer <codeph class="+ topic/ph pr-d/codeph ">trusted</codeph>.)</p>
	 
     <p class="- topic/p ">Wenn bereits eine Socketverbindung besteht, wird die vorhandene Verbindung zunächst geschlossen.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:SecureSocket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn eine Netzwerkverbindung hergestellt wurde.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket:connect_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Host angegeben wurde und ein I/O-Fehler auftritt, durch den die Verbindung fehlschlägt. Dies schließt SSL/TLS-Handshake-Fehler sowie das Fehlschlagen der Validierung des Hostserverzertifikats ein.
	 
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Host angegeben wurde und ein I/O-Fehler auftritt, durch den die Verbindung fehlschlägt.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:SecureSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob sichere Sockets vom aktuellen System unterstützt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob sichere Sockets vom aktuellen System unterstützt werden.
     
     <p class="- topic/p ">Sichere Sockets werden nicht auf allen Plattformen unterstützt. Überprüfen Sie diese Eigenschaft, bevor Sie versuchen, eine neue SecureSocket-Instanz zu erstellen.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:SecureSocket:serverCertificateStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverCertificateStatus</apiName><shortdesc class="- topic/shortdesc ">
     Der Status des Serverzertifikats.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Status des Serverzertifikats.
     
     <p class="- topic/p ">Der Status ist <codeph class="+ topic/ph pr-d/codeph ">CertificateStatus.UNKNOWN</codeph>, bis der Socket versucht, eine Verbindung zu einem Server herzustellen. Nach der Validierung wird als Status einer der von der CertificateStatus-Klasse aufgezählten Strings angegeben. Die Verbindung wird nur dann erfolgreich hergestellt, wenn das Zertifikat gültig und vertrauenswürdig ist. Deshalb ist der Status nach einem <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis immer <codeph class="+ topic/ph pr-d/codeph ">trusted</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Nachdem das Zertifikat erfolgreich validiert oder abgelehnt wurde, wird der Status bis zum nächsten Aufruf der <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode nicht mehr aktualisiert. Durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> wird der Status nicht auf „unknown“ (unbekannt) zurückgesetzt.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.security.xml#CertificateStatus" class="- topic/link "><linktext class="- topic/linktext ">CertificateStatus-Klasse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:ServerSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocket</apiName><shortdesc class="- topic/shortdesc ">
 Die ServerSocket-Klasse ermöglicht es, dass Code als Server für TCP-Verbindungen (Transport Control Protocol) fungiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die ServerSocket-Klasse ermöglicht es, dass Code als Server für TCP-Verbindungen (Transport Control Protocol) fungiert. 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Mit der <codeph class="+ topic/ph pr-d/codeph ">ServerSocket.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">Ein TCP-Server wartet auf ankommende Verbindungen von Remoteclients. Wenn ein Client versucht, eine Verbindung herzustellen, setzt ServerSocket ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis ab. Das ServerSocketConnectEvent -Objekt, das für das Ereignis abgesetzt wurde, stellt ein Socket-Objekt bereit, das die TCP-Verbindung zwischen dem Server und dem Client repräsentiert. Verwenden Sie dieses Socket-Objekt für die nachfolgende Kommunikation mit dem verbundenen Client. Sie können die Clientadresse und den Port ggf. vom Socket-Objekt beziehen.</p> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Beachten Sie, dass Ihre Anwendung dafür zuständig ist, einen Verweis auf das Client-Socket-Objekt zu verwalten. Andernfalls wird dieses Objekt bei der Speicherbereinigung (Garbage Collection) berücksichtig und kann zur Laufzeit ohne Warnung gelöscht werden.</p>
 
 <p class="- topic/p ">Um ein ServerSocket-Objekt in den wartenden Zustand zu versetzen, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph>-Methode auf. Im wartenden Zustand setzt das ServerSocket-Objekt <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignisse ab, wenn ein Client, der TCP verwendet, versucht, eine Verbindung zu der gebundenen Adresse und dem Port herzustellen. Das ServerSocket-Objekt wartet auf weitere Verbindungen, bis Sie die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode aufrufen.</p>
 
 <p class="- topic/p ">TCP-Verbindungen sind beständig – sie sind vorhanden, bis eine Seite der Verbindung diese schließt (oder bis ein schwerwiegender Netzwerkfehler auftritt). Alle Daten, die über die Verbindung gesendet werden, werden in übertragbare Pakete zerlegt und am anderen Ende wieder zusammengesetzt. Alle Pakete kommen garantiert (in Grenzen) an; verloren gegangene Pakete werden erneut übertragen. Im Allgemeinen verwaltet das TCP-Protokoll die verfügbare Netzwerkbandbreite besser als das UDP-Protokoll. Die meisten AIR-Anwendungen, die Socketkommunikation benötigen, sollten eher die ServerSocket- und die Socket-Klasse verwenden als die DatagramSocket-Klasse.</p>
 
 <p class="- topic/p ">Die ServerSocket-Klasse kann nur in Adobe AIR-Anwendungen und nur in der Sicherheitssandbox der Anwendung verwendet werden.</p>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 </apiDesc><example conref="examples\ServerSocketExample.as" class="- topic/example "> Im folgenden Beispiel wird ein Socketserver erstellt. Um den Server zu verwenden, binden Sie den Socket an einen lokalen Port und stellen Sie dann von einer anderen Anwendung eine Verbindung zu diesem Port her. Der Server versteht nur UTF-8-Strings
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.events.ProgressEvent;
    import flash.events.ServerSocketConnectEvent;
    import flash.net.ServerSocket;
    import flash.net.Socket;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.utils.ByteArray;
        
    public class ServerSocketExample extends Sprite
    {
        private var serverSocket:ServerSocket = new ServerSocket();
        private var clientSocket:Socket;

        private var localIP:TextField;
        private var localPort:TextField;
        private var logField:TextField;
        private var message:TextField;

        public function ServerSocketExample()
        {
            setupUI();
        }
        
        private function onConnect( event:ServerSocketConnectEvent ):void
        {
            clientSocket = event.socket;
            clientSocket.addEventListener( ProgressEvent.SOCKET_DATA, onClientSocketData );
            log( "Connection from " + clientSocket.remoteAddress + ":" + clientSocket.remotePort );
        }
        
        private function onClientSocketData( event:ProgressEvent ):void
        {
            var buffer:ByteArray = new ByteArray();
            clientSocket.readBytes( buffer, 0, clientSocket.bytesAvailable );
            log( "Received: " + buffer.toString() );
        }

        private function bind( event:Event ):void
        {
            if( serverSocket.bound ) 
            {
                serverSocket.close();
                serverSocket = new ServerSocket();
                
            }
            serverSocket.bind( parseInt( localPort.text ), localIP.text );
            serverSocket.addEventListener( ServerSocketConnectEvent.CONNECT, onConnect );
            serverSocket.listen();
            log( "Bound to: " + serverSocket.localAddress + ":" + serverSocket.localPort );
        }
        
        private function send( event:Event ):void
        {
            try
            {
                if( clientSocket != null &amp;&amp; clientSocket.connected )
                {
                    clientSocket.writeUTFBytes( message.text );
                    clientSocket.flush(); 
                    log( "Sent message to " + clientSocket.remoteAddress + ":" + clientSocket.remotePort );
                }
                else log("No socket connection.");
            }
            catch ( error:Error )
            {
                log( error.message );
            }
        }

        private function log( text:String ):void
        {
            logField.appendText( text + "\n" );
            logField.scrollV = logField.maxScrollV;
            trace( text );
        }

        private function setupUI():void
        {
            localIP = createTextField( 10, 10, "Local IP", "0.0.0.0");
            localPort = createTextField( 10, 35, "Local port", "0" );
            createTextButton( 170, 60, "Bind", bind );
            message = createTextField( 10, 85, "Message", "Lucy can't drink milk." );
            createTextButton( 170, 110, "Send", send );
            logField = createTextField( 10, 135, "Log", "", false, 200 )
            
            this.stage.nativeWindow.activate();
        }
        
        private function createTextField( x:int, y:int, label:String, defaultValue:String = '', editable:Boolean = true, height:int = 20 ):TextField
        {
            var labelField:TextField = new TextField();
            labelField.text = label;
            labelField.type = TextFieldType.DYNAMIC;
            labelField.width = 100;
            labelField.x = x;
            labelField.y = y;
            
            var input:TextField = new TextField();
            input.text = defaultValue;
            input.type = TextFieldType.INPUT;
            input.border = editable;
            input.selectable = editable;
            input.width = 280;
            input.height = height;
            input.x = x + labelField.width;
            input.y = y;
            
            this.addChild( labelField );
            this.addChild( input );
            
            return input;
        }
        
        private function createTextButton( x:int, y:int, label:String, clickHandler:Function ):TextField
        {
            var button:TextField = new TextField();
            button.htmlText = "&lt;u>&lt;b>" + label + "&lt;/b>&lt;/u>";
            button.type = TextFieldType.DYNAMIC;
            button.selectable = false;
            button.width = 180;
            button.x = x;
            button.y = y;
            button.addEventListener( MouseEvent.CLICK, clickHandler );
            
            this.addChild( button );
            return button;
        }        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">ServerSocketConnectEvent class</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Socket-Klasse</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">XMLSocket-Klasse</linktext></link><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">DatagramSocket-Klasse</linktext></link></related-links><adobeApiEvent id="flash.net:ServerSocket_flash.events.ServerSocketConnectEvent.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn ein Remotesocket versucht, eine Verbindung zu diesem Serversocket herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ServerSocketConnectEvent.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ServerSocketConnectEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn ein Remotesocket versucht, eine Verbindung zu diesem Serversocket herzustellen.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:ServerSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn das Betriebssystem diesen Socket schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn das Betriebssystem diesen Socket schließt.
  
 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis wird nicht abgesetzt, wenn die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode von ServerSocket aufgerufen wird. Wenn andere Objekte in Ihrer Anwendung auf das <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis angewiesen sind, können Sie das Ereignis manuell absetzen, bevor Sie die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode aufrufen.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:ServerSocket:ServerSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocket</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein ServerSocket-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn der aufrufende Inhalt außerhalb der Sicherheitssandbox der AIR-Anwendung ausgeführt wird.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein ServerSocket-Objekt.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:ServerSocket:bind" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bind</apiName><shortdesc class="- topic/shortdesc ">
     Bindet diesen Socket an die angegebene lokale Adresse und den angegebenen Port.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> kleiner als 0 oder größer als 65535 ist.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> keine syntaktisch gut strukturierte Adresse ist.
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn der Socket nicht gebunden werden kann, zum Beispiel:
     <ul class="- topic/ul "><li class="- topic/li ">der zugrundeliegende Netzwerksocket (IP und Port) ist bereits von einem anderen Objekt oder Prozess gebunden.</li><li class="- topic/li ">die Anwendung wird unter einem Benutzerkonto ausgeführt, das keine ausreichenden Berechtigungen für die Bindung an den Port hat. Berechtigungsprobleme treten häufig auf, wenn versucht wird, eine Bindung zu häufig genutzten Ports (<codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> &lt; 1024) herzustellen</li><li class="- topic/li ">dieses ServerSocket-Objekt ist bereits gebunden. (Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> auf, bevor Sie eine Bindung mit einem anderen Socket herstellen.)</li><li class="- topic/li ">wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> keine gültige lokale Adresse ist.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Nummer des Ports, zu dem auf dem lokalen Computer eine Bindung hergestellt werden soll. Wenn <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> auf 0 (Standardeinstellung) gesetzt ist, wird der nächste verfügbare Systemport gebunden. Die Berechtigung für die Verbindung mit einer Portnummer unter 1024 wird von der Sicherheitsrichtlinie des Systems geregelt. Bei Mac- und Linux-Systemen muss die Anwendung zum Beispiel mit Root-Berechtigung ausgeführt werden, damit Verbindungen zu Ports unter 1014 hergestellt werden können.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0.0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IP-Adresse auf dem lokalen Computer, zu der eine Bindung hergestellt werden soll. Diese Adresse kann eine IPv4- oder IPv6-Adresse sein. Wenn <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> (die Standardeinstellung) gesetzt ist, wartet der Socket an allen verfügbaren IPv4-Adressen. Um an allen verfügbaren IPv6-Adressen zu warten, müssen Sie "::" als <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph>-Argument angeben. Um eine IPv6-Adresse zu verwenden, müssen der Computer und das Netzwerk so konfiguriert sein, dass sie IPv6 unterstützen. Ein an eine IPv4-Adresse gebundener Socket kann keine Verbindung zu einem Socket mit einer IPv6-Adresse herstellen. Entsprechend kann ein an eine IPv6-Adresse gebundener Socket keine Verbindung zu einem Socket mit einer IPv4-Adresse herstellen. Der Adresstyp muss übereinstimmen.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bindet diesen Socket an die angegebene lokale Adresse und den angegebenen Port.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:ServerSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt den Socket und beendet die Überwachung von Verbindungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn der Socket nicht geschlossen werden konnte oder der Socket nicht geöffnet war.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt den Socket und beendet die Überwachung von Verbindungen.
     
	 <p class="- topic/p ">Geschlossene Sockets können nicht erneut geöffnet werden. Erstellen Sie stattdessen eine neue ServerSocket-Instanz.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:ServerSocket:listen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">listen</apiName><shortdesc class="- topic/shortdesc ">
     Leitet die Überwachung von TCP-Verbindungen an der gebundenen IP-Adresse und am Port ein.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf, wenn der Socket nicht geöffnet oder gebunden ist. Dieser Fehler tritt auch auf, wenn der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph> aus einem anderen Grund fehlschlägt.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler tritt auf , wenn der <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph>-Parameter kleiner als null ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">backlog</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die maximale Länge der Warteschlange mit ausstehenden Verbindungen. Wenn <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph> den Wert 0 hat, wird die Warteschlangenlänge auf den Systemhöchstwert gesetzt.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Leitet die Überwachung von TCP-Verbindungen an der gebundenen IP-Adresse und am Port ein.
     
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph>-Methode gibt sofort einen Wert zurück. Nachdem Sie <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph> aufgerufen haben, setzt das ServerSocket-Objekt jedes Mal ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis ab, wenn versucht wird, eine Verbindung herzustellen. Die <codeph class="+ topic/ph pr-d/codeph ">socket</codeph>-Eigenschaft des ServerSocketConnectEvent-Ereignisobjekts verweist auf ein Socket-Objekt, das die Server-Client-Verbindung repräsentiert.</p>
     
     <p class="- topic/p ">Der <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph>-Parameter gibt an, wie viele ausstehende Verbindungen sich in der Warteschlange befinden, während die <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignisse von Ihrer Anwendung verarbeitet werden. Wenn die Warteschlange voll ist, werden weitere Verbindungen abgelehnt, ohne dass ein <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignis abgesetzt wird. Wenn der Standardwert null angegeben wird, wird der Systemhöchstwert für die Länge der Warteschlange verwendet. Diese Länge variiert je nach Plattform und kann auf dem Computer konfiguriert werden. Wenn der angegebene Wert den Systemhöchstwert übersteigt, wird stattdessen der Systemhöchstwert für die Länge verwendet. Es werden keine Mittel zum Erkennen des tatsächlichen Backlogwerts bereitgestellt. (Der Systemhöchstwert wird von der SOMAXCONN-Einstellung des TCP-Netzwerksystems auf dem Hostcomputer bestimmt.)</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:ServerSocket:bound:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bound</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob der Socket an eine lokale Adresse und einen Port gebunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob der Socket an eine lokale Adresse und einen Port gebunden ist.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob ServerSocket-Funktionen in der Laufzeitumgebung unterstützt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob ServerSocket-Funktionen in der Laufzeitumgebung unterstützt werden.
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ServerSocket:listening:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">listening</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob der Serversocket auf ankommende Verbindungen wartet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob der Serversocket auf ankommende Verbindungen wartet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/listen()" class="- topic/link "><linktext class="- topic/linktext ">listen()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse, die der Socket überwacht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse, die der Socket überwacht.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Der Port, den der Socket überwacht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Port, den der Socket überwacht.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileFilter</apiName><shortdesc class="- topic/shortdesc ">
 Mit der FileFilter-Klasse wird angegeben, welche Dateien des Benutzersystems im Dialogfeld zum Suchen nach Dateien angezeigt werden. Dieses Dialogfeld wird beim Aufruf der FileReference.browse()-Methode oder der FileReferenceList.browse()-Methode angezeigt oder wenn eine browse-Methode eines File-, FileReference- oder FileReferenceList-Objekts aufgerufen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der FileFilter-Klasse wird angegeben, welche Dateien des Benutzersystems im Dialogfeld zum Suchen nach Dateien angezeigt werden. Dieses Dialogfeld wird beim Aufruf der <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>-Methode oder der <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>-Methode angezeigt oder wenn eine browse-Methode eines File-, FileReference- oder FileReferenceList-Objekts aufgerufen wird. FileFilter-Instanzen werden als Wert für den optionalen <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph>-Parameter an die Methode übergeben. Bei Verwendung einer FileFilter-Instanz werden nicht in der FileFilter-Instanz angegebene Erweiterungen und Dateitypen herausgefiltert, d. h., der Benutzer kann diese Dateien nicht auswählen. Wenn kein FileFilter-Objekt an die Methode übergeben wird, werden alle Dateien im Dialogfeld angezeigt.
 
 <p class="- topic/p ">Es gibt zwei Möglichkeiten zur Verwendung von FileFilter-Instanzen:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Eine Beschreibung mit Dateierweiterungen</li><li class="- topic/li ">Eine Beschreibung mit Dateierweiterungen und Macintosh-Dateitypen</li></ul>
 
 <p class="- topic/p ">Die beiden Formate können in einem Aufruf der browse-Methode nicht gleichzeitig verwendet werden. Sie können immer nur ein Format verwenden.</p>
 
 <p class="- topic/p ">Sie können eine oder mehrere FileFilter-Instanzen an die browse-Methode übergeben, wie im folgenden Beispiel gezeigt:</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var imagesFilter:FileFilter = new FileFilter("Images", "~~.jpg;~~.gif;~~.png");
 var docFilter:FileFilter = new FileFilter("Documents", "~~.pdf;~~.doc;~~.txt");
 var myFileReference:FileReference = new FileReference();
 myFileReference.browse([imagesFilter, docFilter]);
 </codeblock>
 
 <p class="- topic/p ">Oder in einer AIR-Anwendung:</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var imagesFilter:FileFilter = new FileFilter("Images", "~~.jpg;~~.gif;~~.png");
 var docFilter:FileFilter = new FileFilter("Documents", "~~.pdf;~~.doc;~~.txt");
 var myFile:File = new File();
 myFile.browseForOpen("Open", [imagesFilter, docFilter]);
 </codeblock>
 
 
 
 <p class="- topic/p ">Die Liste der Erweiterungen in der <codeph class="+ topic/ph pr-d/codeph ">FileFilter.extension</codeph>-Eigenschaft wird verwendet, um die Dateien zu filtern, die im Dialogfeld zum Suchen nach Dateien angezeigt werden. Die eigentliche Liste wird nicht im Dialogfeld angezeigt. Um die Dateitypen für Benutzer anzuzeigen, müssen Sie die Dateitypen im Beschreibungsstring und in der Erweiterungsliste auflisten. Der Beschreibungsstring wird im Dialogfeld in Windows und Linux angezeigt. (Auf dem Macintosh<sup class="+ topic/ph hi-d/sup ">®</sup>wird er nicht verwendet.) Wenn Sie auf einem Macintosh-System eine Liste der Macintosh-Dateitypen bereitstellen, so wird dies ebenfalls zum Filtern der Dateianzeige verwendet. Andernfalls wird die Liste der Dateierweiterungen verwendet. </p> 
 
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.net:FileFilter:FileFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileFilter</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine neue FileFilter-Instanz.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">description</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der für Benutzer beim Auswählen von Dateien zum Upload sichtbare Beschreibungsstring.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Liste der Dateierweiterung, die angibt, welche Dateiformate für Benutzer sichtbar sind, wenn sie Dateien auswählen, die hochgeladen werden sollen.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">macType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Liste der Macintosh-Dateitypen, die angibt, welche Dateitypen für Benutzer sichtbar sind, wenn sie Dateien auswählen, die hochgeladen werden sollen. Dieser Parameter wird auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt, wenn kein Wert übergeben wird.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine neue FileFilter-Instanz.
	 </apiDesc><example conref="examples\FileFilter.as" class="- topic/example "> Das folgende Beispiel lädt ein Bild aus Ihrem lokalen Dateisystem in das Stammanzeigeobjekt (in diesem Fall die Bühne). Beispiel bereitgestellt von <xref href="http://blog.andrevenancio.com/" scope="external" class="- topic/xref ">Andre Venancio</xref>.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var buttonShape:Shape = new Shape();
buttonShape.graphics.beginFill(0x336699);
buttonShape.graphics.drawCircle(50, 50, 25);
var button = new SimpleButton(buttonShape, buttonShape, buttonShape, buttonShape);
addChild(button);

var fileRef:FileReference= new FileReference();
button.addEventListener(MouseEvent.CLICK, onButtonClick);

function onButtonClick(e:MouseEvent):void {
fileRef.browse([new FileFilter("Images", "*.jpg;*.gif;*.png")]);
fileRef.addEventListener(Event.SELECT, onFileSelected);
}

function onFileSelected(e:Event):void {
fileRef.addEventListener(Event.COMPLETE, onFileLoaded);
fileRef.load();
}

function onFileLoaded(e:Event):void {
var loader:Loader = new Loader();
loader.loadBytes(e.target.data);
addChild(loader);
}
</codeblock></example></apiConstructorDetail></apiConstructor><apiValue id="flash.net:FileFilter:description:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">description</apiName><shortdesc class="- topic/shortdesc ">
	 Der Beschreibungsstring für den Filter.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Beschreibungsstring für den Filter. Die Beschreibung ist für den Benutzer in dem Dialogfeld sichtbar, das beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> geöffnet wird. Der Beschreibungsstring enthält einen String (z. B. <codeph class="+ topic/ph pr-d/codeph ">"Images (~~.gif, ~~.jpg, ~~.png)"</codeph>) mit Informationen darüber, welche Dateitypen hoch- bzw. heruntergeladen werden können. Beachten Sie, dass die von diesem FileReference-Objekt unterstützten Dateitypen in der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> gespeichert sind.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileFilter:extension:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">extension</apiName><shortdesc class="- topic/shortdesc ">
	 Eine Liste mit Dateierweiterungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Eine Liste mit Dateierweiterungen. Diese Liste enthält die Dateitypen, die im Dialogfeld zum Suchen von Dateien angezeigt werden sollen. (Diese Liste ist für den Benutzer nicht sichtbar. Der Benutzer sieht lediglich den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">description</codeph>.) Die <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Eigenschaft enthält eine durch Semikola getrennte Liste mit Dateierweiterungen, in der vor jede Erweiterung ein Platzhalterzeichen (~~) gesetzt wurde, wie im folgenden String zu sehen: <codeph class="+ topic/ph pr-d/codeph ">"~~.jpg;~~.gif;~~.png"</codeph>.
	 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileFilter:macType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">macType</apiName><shortdesc class="- topic/shortdesc ">
	 Eine Liste mit Macintosh-Dateitypen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Eine Liste mit Macintosh-Dateitypen. Diese Liste enthält die Dateitypen, die im Dialogfeld zum Suchen von Dateien angezeigt werden sollen. (Diese Liste ist für den Benutzer nicht sichtbar. Der Benutzer sieht lediglich den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">description</codeph>.) Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">macType</codeph> enthält eine Liste mit Macintosh-Dateitypen und Semikola als Trennzeichen wie im folgenden String gezeigt: <codeph class="+ topic/ph pr-d/codeph ">"JPEG;jp2_;GIFF"</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequest</apiName><shortdesc class="- topic/shortdesc ">
  Die URLRequest-Klasse erfasst alle Informationen in einer HTTP-Anforderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The above include is not a mistake, but rather code re-use.
 
  </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Die URLRequest-Klasse erfasst alle Informationen in einer HTTP-Anforderung. URLRequest-Objekte werden an die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methoden der Loader-, URLStream- und URLLoader-Klasse und an andere Lademethoden übergeben, um URL-Downloads zu initiieren. Sie werden auch an die <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>-Methoden der FileReference-Klasse übergeben.
 
  <p class="- topic/p ">Eine SWF-Datei innerhalb der lokalen Dateisystem-Sandbox kann keine Daten aus einer Ressource in der Network-Sandbox laden bzw. keine Daten für diese Ressource bereitstellen. </p>
 
  <p class="- topic/p ">Standardmäßig müssen die aufrufende <ph class="- topic/ph ">SWF</ph>-Datei und die URL, die Sie laden, in der gleichen Domäne sein. Eine <ph class="- topic/ph ">SWF</ph>-Datei auf www.adobe.com kann beispielsweise nur Daten aus Quellen laden, die sich ebenfalls auf www.adobe.com befinden. <ph class="- topic/ph ">Um Daten aus einer anderen Domäne zu laden, legen Sie eine URL-Richtliniendatei auf dem Server ab, der die Daten hostet.</ph></p>
 
  <p class="- topic/p "> In Adobe AIR dagegen ist Inhalt in der Sicherheitssandbox der Anwendung (mit der AIR-Anwendung installierter Inhalt) nicht durch diese Sicherheitseinschränkungen beschränkt. Wenn Inhalt in Adobe AIR ausgeführt wird, können Dateien in der Sicherheitssandbox der Anwendung auf URLs zugreifen, die eines der folgenden URL-Schemata verwenden:</p>

  
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">http</codeph> und <codeph class="+ topic/ph pr-d/codeph ">https</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">file</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app-storage</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app</codeph> </li></ul>
 
  <p class="- topic/p ">Inhalt, <ph class="- topic/ph ">der in Adobe AIR ausgeführt wird </ph>und nicht in der Sicherheitssandbox der Anwendung ist, unterliegt den gleichen Beschränkungen wie Inhalt, der im Browser <ph class="- topic/ph ">(in Flash Player)</ph> ausgeführt wird, und Ladevorgänge hängen von der Domäne des Inhalts<ph class="- topic/ph "> sowie von Zugriffsrechten ab, die in URL-Richtliniendateien gewährt werden</ph>.</p>
 
 <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
 
 
 </apiDesc><example conref="examples\URLRequestExample.as" class="- topic/example "> Im folgenden Beispiel wird ein neues Loader-Objekt erstellt und an ein URLRequest-Objekt übergeben, das den Pfad zu einer XML-Datei enthält. Bei erfolgreich ausgeführtem Ladevorgang wird ein <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis ausgelöst, und die Daten in der XML-Datei werden in die Ausgabe geschrieben. Andere Ereignisse einschließlich Fehlerereignisse werden von zusätzlichen Ereignisprozeduren erfasst.
 <p class="- topic/p ">Legen Sie zur Ausführung dieses Beispiels eine Datei mit dem Namen „XMLFile.xml“ in dem Verzeichnis ab, in dem sich die SWF-Datei befindet.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLRequestExample extends Sprite {

        public function URLRequestExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("XMLFile.xml");
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link><link href="flash.net.xml#URLRequestDefaults" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link><link href="flash.net.xml#URLStream" class="- topic/link "><linktext class="- topic/linktext ">URLStream</linktext></link><link href="../../flash/html/HTMLLoader.html" class="- topic/link "><linktext class="- topic/linktext ">HTMLLoader-Klasse</linktext></link></related-links><apiConstructor id="flash.net:URLRequest:URLRequest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLRequest</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein URLRequest-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die anzufordernde URL. Sie können die URL zu einem späteren Zeitpunkt mithilfe der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">url</codeph> festlegen.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein URLRequest-Objekt. Wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird die Anforderung mit der Codepage des Systems kodiert. Wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, wird die Anforderung mit Unicode kodiert.
     
     </apiDesc><example conref="examples\URLRequest_example.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie mit der navigateToURL()-Methode aus Flash Player neue Browserfenster öffnen können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/12/08/opening-urls-in-new-browser-windows-using-actionscript-30-and-actionscript-20/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Requires
// - Button symbol on Stage (or a display object, such as a MovieClip) with instance name "buttonSymbol"
//
buttonSymbol.addEventListener(MouseEvent.CLICK, buttonSymbol_click);
 
function buttonSymbol_click(evt:MouseEvent):void {
    var req:URLRequest = new URLRequest("http://www.adobe.com/");
    navigateToURL(req, "_blank");
}
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/useCodePage" class="- topic/link "><linktext class="- topic/linktext ">flash.system.System.useCodePage</linktext></link></related-links></apiConstructor><apiValue id="flash.net:URLRequest:authenticate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticate</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob Authentifizierungsanforderungen für diese Anforderung verarbeitet werden sollen (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, ob Authentifizierungsanfragen verarbeitet werden sollen oder nicht.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob Authentifizierungsanforderungen für diese Anforderung verarbeitet werden sollen (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">false</codeph> geben Authentifizierungsfehlversuche einen HTTP-Fehler zurück.
    
    <p class="- topic/p ">Die folgenden Authentifizierungsmethoden werden unterstützt:</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Windows – HTTP Basic/Digest, Windows Integrated Authentication (einschließlich NTLM und Kerberos), SSL Certificate Authentication.</li><li class="- topic/li ">Mac – HTTP Basic/Digest, NTLM, SSL Certificate Authentication.</li></ul>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die Methoden <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> unterstützen die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.authenticate</codeph>-Eigenschaft nicht.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/authenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:cacheResponse:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cacheResponse</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob erfolgreiche Antwortdaten für diese Anforderung zwischengespeichert werden sollen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob erfolgreiche Antwortdaten für diese Anforderung zwischengespeichert werden sollen. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> verwendet die AIR-Anwendung den HTTP-Cache des Betriebssystems.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph>-Methode unterstützt die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.cacheResponse</codeph>-Eigenschaft nicht.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/cacheResponse" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:contentType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentType</apiName><shortdesc class="- topic/shortdesc ">
     Der MIME-Inhaltstyp des Inhalts in der data-Eigenschaft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der MIME-Inhaltstyp des Inhalts in der data-Eigenschaft.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der MIME-Inhaltstyp des Inhalts in der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft.
     
     <p class="- topic/p ">Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">application/x-www-form-urlencoded</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die Methoden <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> unterstützen die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.contentType</codeph>-Eigenschaft nicht.</p>
     
     <p class="- topic/p ">Wenn eine POST-Anforderung gesendet wird, müssen die Werte der <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph>- und der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft richtig übereinstimmen. Der Wert der <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph>-Eigenschaft weist Server an, wie der Wert der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft interpretiert werden soll. </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Wenn der Wert der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft ein URLVariables-Objekt ist, muss der Wert für <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> <codeph class="+ topic/ph pr-d/codeph ">application/x-www-form-urlencoded</codeph> sein. </li><li class="- topic/li "> Wenn der Wert der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft ein beliebiger anderer Typ ist, sollte der Wert für <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> den POST-Datentyp angeben, der gesendet wird (die binären oder String-Daten im Wert für die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft). </li><li class="- topic/li ">Für <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> wird der Content-Type der Anforderung automatisch auf <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph> gesetzt und der Wert für die <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph>-Eigenschaft wird ignoriert.</li></ul>
     
     <p class="- topic/p "> Wenn Sie in Flash Player 10 oder höher einen Multipart-Content-Type verwenden (z. B. „multipart/form-data“), der einen Upload enthält (gekennzeichnet durch einen „filename“-Parameter in einem „content-disposition“-Header innerhalb des POST-Body), so unterliegt die POST-Methode den Sicherheitsregeln für Uploads:</p>
     <ul class="- topic/ul "><li class="- topic/li ">Der POST-Vorgang muss als Reaktion auf eine durch den Benutzer initiierte Aktion, z. B. Mausklick oder Tastendruck, erfolgen.</li><li class="- topic/li ">Ist die POST-Methode domänenübergreifend (das POST-Ziel befindet sich auf einem anderen Server als die SWF-Datei, die die POST-Anforderung sendet), so muss der Zielserver eine URL-Richtliniendatei bereitstellen, die den domänenübergreifenden Zugriff erlaubt.</li></ul>
     <p class="- topic/p ">Für alle mehrteiligen Content-Typen muss ebenfalls die Syntax nach Standard RFC2046 gültig sein. Scheint die Syntax ungültig zu sein, so unterliegt die POST-Methode den Sicherheitsregeln für Uploads.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/data" class="- topic/link "><linktext class="- topic/linktext ">data</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Ein Objekt, das mit der URL-Anforderung zu übertragende Daten enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Objekt, das mit der URL-Anforderung zu übertragende Daten enthält.
     
     <p class="- topic/p ">Diese Eigenschaft wird zusammen mit der <codeph class="+ topic/ph pr-d/codeph ">method</codeph>-Eigenschaft verwendet. Wenn der Wert für <codeph class="+ topic/ph pr-d/codeph ">method</codeph> <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ist, wird der Wert für <codeph class="+ topic/ph pr-d/codeph ">data</codeph> an den Wert für <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> über eine HTTP-Abfragestringsyntax angehängt. Wenn der <codeph class="+ topic/ph pr-d/codeph ">method</codeph>-Wert <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> (oder ein beliebiger anderer Wert als <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ist), wird der Wert für <codeph class="+ topic/ph pr-d/codeph ">data</codeph> im Rumpf der HTTP-Anforderung übertragen.</p>
     
     <p class="- topic/p ">Die API für „URLRequest“ unterstützt binäre <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Daten sowie URL-kodierte Variablen und Strings. Das Datenobjekt kann ein ByteArray-, URLVariables- oder String-Objekt sein.</p>
     
     <p class="- topic/p ">Die Verwendung der Daten hängt vom Objekttyp ab:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Wenn es sich um ein ByteArray-Objekt handelt, werden die Binärdaten des Objekts als <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Daten verwendet. Der Objekttyp „ByteArray“ wird für <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Daten nicht unterstützt. Dasselbe gilt für <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>.</li><li class="- topic/li ">Wenn es sich um ein URLVariables-Objekt handelt und die Methode <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> verwendet wird, werden die Variablen im Format <i class="+ topic/ph hi-d/i ">x-www-form-urlencoded</i> kodiert, und der Ergebnisstring wird als <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Daten verwendet. Eine Ausnahme bildet hier der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, bei dem die Variablen als separate Felder in einem <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph>-Post gesendet werden.</li><li class="- topic/li ">Wenn es sich um ein URLVariables-Objekt handelt und die Methode <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> verwendet wird, definiert das URLVariables-Objekt die Variablen, die mit dem URLRequest-Objekt gesendet werden.</li><li class="- topic/li ">Andernfalls wird das Objekt in einen String konvertiert, der als <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Daten verwendet wird.</li></ul>
     
     <p class="- topic/p ">Die Daten werden erst gesendet, wenn eine Methode (z. B. <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>) das URLRequest-Objekt verwendet.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Der Wert für <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> muss dem Datentyp in der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft entsprechen. Siehe Hinweis in der Beschreibung der <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph>-Eigenschaft.</p>
     
     </apiDesc><example conref="examples\URLVariablesExample.as" class="- topic/example "> Im folgenden Beispiel wird die Remote-Anwendung unter http://www.[yourDomain].com/application.jsp in einem neuen Browserfenster geöffnet, und in einem URLVariables-Objekt erfasste Daten zu einer Benutzersitzung werden an die Anwendung übergeben. 
  
 <p class="- topic/p ">Wichtige Beispielauszüge:</p>
 <ol class="- topic/ol "><li class="- topic/li ">Die Konstruktorfunktion erstellt eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, wobei die URL der Remote-Anwendung als Parameter verwendet wird.</li><li class="- topic/li ">Ein URLVariables-Objekt wird erstellt, und zwei seiner Eigenschaften werden Werte zugewiesen.</li><li class="- topic/li ">Das URLVariables-Objekt wird der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des URLRequest-Objekts zugewiesen.</li><li class="- topic/li ">Das Beispiel ruft <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph> auf, wodurch ein neues Browserfenster mit der URL der Remote-Anwendung geöffnet wird.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweis:</b> Zur Ausführung des Beispiels muss die URL der Remote-Anwendung durch eine gültige URL ersetzt werden. Darüber hinaus benötigen Sie Servercode, um die von Flash Player im URLVariables-Objekt erfassten Informationen auszuführen.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class URLVariablesExample extends Sprite {

        public function URLVariablesExample() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/method" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.method</linktext></link><link href="flash.net.xml#URLRequestMethod" class="- topic/link "><linktext class="- topic/linktext ">URLRequestMethod</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link><link href="flash.utils.xml#ByteArray" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.ByteArray</linktext></link><link href="flash.net.xml#URLRequest/contentType" class="- topic/link "><linktext class="- topic/linktext ">contentType</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:digest:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digest</apiName><shortdesc class="- topic/shortdesc ">
     Ein String, der die vorzeichenbehaftete Adobe-Plattformkomponente, die im Flash Player-Cache gespeichert (bzw. daraus abgerufen werden soll), eindeutig identifiziert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der bereitgestellte Digest stimmt nicht mit dem Digest der Datei, die aus der heruntergeladenen signierten Datei extrahiert wurde, oder mit der signierten Datei, die aus dem Cache geladen wurde, überein. Die Anwendung gibt diesen Fehler auch zurück, wenn der bereitgestellte Digest die falsche Länge hat oder ungültige (nicht hexadezimale) Zeichen enthält.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein String, der die vorzeichenbehaftete Adobe-Plattformkomponente, die im Flash Player-Cache gespeichert (bzw. daraus abgerufen werden soll), eindeutig identifiziert. <ph class="- topic/ph "> Eine Adobe-Plattformkomponente ist eine signierte Datei (eine SWZ-Datei), die SWF-Inhalt enthält, der permanent auf dem Computer eines Benutzers zwischengespeichert wird. Alle SWZ-Dateien sind von Adobe signiert. Ein Digest entspricht einer einzelnen zwischengespeicherten Datei; wenn Sie die Datei ändern, ändert sich der Digest in unvorhergesehener Weise. Mithilfe eines Digests können Sie die zwischengespeicherte Datei auf mehreren Domänen verifizieren. Zwei Dateien mit demselben Digest sind dieselbe Datei, und zwei Dateien mit zwei Digests sind nicht dieselbe Datei. Es kann keine Datei erstellt werden, um einen Digest „nachzuahmen“ und einen anderen Digest vorzutäuschen. </ph>
     
     <p class="- topic/p ">Der Digest basiert auf einem SHA-256-Meldungs-Digest-Algorithmus (64 Zeichen lang, hexadezimales Format).</p>
     
     <p class="- topic/p ">Das Flex SDK enthält z. B. eine SWZ-Datei für das Flex-Framework (und stellt den Digest-String für diese SWZ-Datei bereit). Sie können diese SWZ-Datei auf Ihrem Webserver ablegen und in Ihre SWF-Datei laden (über die <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode eines URLLoader-Objekts). Wenn auf dem Computer des Endbenutzers bereits die passende SWZ-Datei zwischengespeichert ist, verwendet die Anwendung die zwischengespeicherte SWZ-Datei. (Eine SWZ-Datei „passt“, wenn ihr <codeph class="+ topic/ph pr-d/codeph ">Digest</codeph> dem Digest entspricht, den Sie bereitstellen.) Andernfalls lädt die Anwendung die SWZ-Datei von der von Ihnen angegebenen URL herunter. </p>
     
     <p class="- topic/p ">Legen Sie den <codeph class="+ topic/ph pr-d/codeph ">digest</codeph>-Parameter nur in einem URLRequest-Objekt fest, das bei einem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>-Methode zum Laden einer SWZ-Datei verwendet wird. Wenn die <codeph class="+ topic/ph pr-d/codeph ">digest</codeph>-Eigenschaft eines URLRequest-Objekts festgelegt wird, das in anderen Methoden verwendet wird, gibt die Anwendung einen IOError-Ausnahmefehler zurück.</p>
     
     </apiDesc><example conref="examples\URLRequest_digest.as" class="- topic/example "> Im folgenden Beispiel wird eine Remotedatei in den Zwischenspeicher geladen. Am Ende des Ladevorgangs enthält das Bytearray die eigentliche Datei (nicht die signierte Datei). Im Beispiel wird der Ladevorgang durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> abgeschlossen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
var myURLReq:URLRequest = new URLRequest();
myURLReq.url = "http://yourdomain/users/jdoe/test01/_rsc/Automated/AssetCaching_rsc/test01/rsl.swz";
myURLReq.digest = "3B0AA28C7A990385E044D80F5637FB036317BB41E044D80F5637FB036317BB41";
var myURLLoader:URLLoader = new URLLoader();
myURLLoader.dataFormat = URLLoaderDataFormat.BINARY;
myURLLoader.addEventListener("complete", onC);

myURLLoad.load(myURLReq);

function onC(e) {
    var someLoader:Loader = new Loader();
    addChild(someLoader);
    someLoader.loadBytes((ByteArray)(myURLLoad.data)); 
}

</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:URLRequest:followRedirects:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">followRedirects</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob Weiterleitungen verfolgt werden sollen (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt an, ob Umleitungen gefolgt werden soll.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob Weiterleitungen verfolgt werden sollen (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die Methoden <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> unterstützen die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.followRedirects</codeph>-Eigenschaft nicht.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/followRedirects" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults.followRedirects</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:idleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleTimeout</apiName><shortdesc class="- topic/shortdesc ">
	    Gibt die Leerlaufzeitüberschreitung (in Sekunden) für diese Anforderung an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
	    
	    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>initialized from the URLRequestDefaults.idleTimeout property
	    
	    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	    Gibt die Leerlaufzeitüberschreitung (in Sekunden) für diese Anforderung an.
	    
	    <p class="- topic/p ">Die Leerlaufzeitsperre ist die Zeitspanne, die der Client nach dem Herstellen der Verbindung auf eine Antwort vom Server wartet, bevor die Anforderung abgebrochen wird.</p>
	    
	    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph>-Methode unterstützt die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.idleTimeout</codeph>-Eigenschaft nicht. Die HTMLLoader-Klasse definiert ihre eigene <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph>-Eigenschaft.</p>
	    
	    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults.idleTimeout</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:manageCookies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manageCookies</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob der HTTP-Protokoll-Stack Cookies für diese Anforderung verwalten soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob der HTTP-Protokoll-Stack Cookies für diese Anforderung verwalten soll. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> werden der Anforderung Cookies hinzugefügt und Antwortcookies werden gespeichert. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">false</codeph> werden Cookies <i class="+ topic/ph hi-d/i ">nicht</i> zu der Anforderung hinzugefügt und Anforderungscookies werden <i class="+ topic/ph hi-d/i ">nicht</i> gespeichert, aber Benutzer können Cookies durch direkte Header-Änderungen verwalten. <b class="+ topic/ph hi-d/b ">Hinweis:</b> Unter Windows können Sie Cookies nicht manuell zu einer URL-Anforderung hinzufügen, wenn <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> aufweist. Unter anderen Betriebssystemen ist das Hinzufügen von Cookies zu einer Anforderung zulässig, unabhängig davon, ob <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat. Wenn dies zulässig ist, können Sie einer Anforderung manuell Cookies hinzufügen, indem Sie ein <codeph class="+ topic/ph pr-d/codeph ">URLRequestHeader</codeph>-Objekt mit den Cookiedaten zum <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Array hinzufügen.
    
    <p class="- topic/p ">Unter Mac OS werden Cookies mit Safari gemeinsam genutzt. Löschen von Cookies unter Mac OS:</p>
    
    <ol class="- topic/ol "><li class="- topic/li ">Öffnen Sie Safari.</li><li class="- topic/li ">Wählen Sie „Safari“ > „Einstellungen“ und klicken Sie auf das Bedienfeld „Sicherheit“.</li><li class="- topic/li ">Klicken Sie auf „Cookies anzeigen“.</li><li class="- topic/li ">Klicken Sie auf „Alle entfernen“.</li></ol>
    
    <p class="- topic/p ">Löschen von Cookies unter Windows: </p>
    
    <ol class="- topic/ol "><li class="- topic/li ">Öffnen Sie das Dialogfeld „Eigenschaften von Internet“ und klicken Sie auf die Registerkarte „Allgemein“.</li><li class="- topic/li ">Klicken Sie auf „Cookies löschen“. </li></ol>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/manageCookies" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:method:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">method</apiName><shortdesc class="- topic/shortdesc ">
     Steuert die HTTP-Formularübertragungsmethode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Parameter <codeph class="+ topic/ph pr-d/codeph ">value</codeph> ist nicht <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>URLRequestMethod.GET
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Steuert die HTTP-Formularübertragungsmethode.
     
     <p class="- topic/p "><ph class="- topic/ph ">Für SWF-Inhalt, der in Flash Player (im Browser) ausgeführt wird, ist diese Eigenschaft auf GET- bzw. POST-Methoden beschränkt und gültige Werte sind <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph> bzw. <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.</ph></p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Für Inhalt, der in Adobe AIR ausgeführt wird, können Sie </ph> jeden String-Wert verwenden, wenn sich der Inhalt in der Sicherheitssandbox der Anwendung befindet. Andernfalls<ph class="- topic/ph ">, bei Inhalt, der in Flash Player ausgeführt wird,</ph> sind Sie auf die Verwendung von GET- oder POST-Operationen beschränkt.</p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Für Inhalt, der in Adobe AIR ausgeführt wird, gilt: </ph>Wenn die <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>-Funktion verwendet wird, behandelt die Laufzeit ein URLRequest-Objekt, das die POST-Methode verwendet (ein Objekt, dessen <codeph class="+ topic/ph pr-d/codeph ">method</codeph>-Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> eingestellt ist), so, als ob die GET-Methode verwendet wird.</p>
     
     <p class="- topic/p "><ph class="- topic/ph "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Inhalt in Flash Player ausgeführt wird und die referenzierte Form keinen Rumpf hat, verwendet Flash Player automatisch eine GET-Methode, selbst wenn die Methode auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> gesetzt ist. Aus diesem Grund wird empfohlen, immer einen „Dummy“-Rumpf einzufügen, um zu gewährleisten, dass die richtige Methode verwendet wird.</ph></p>
     
     </apiDesc><example conref="examples\URLRequest_method.as" class="- topic/example "> Im folgenden Beispiel wird die Remote-Anwendung unter http://www.[yourDomain].com/application.jsp in einem neuen Browserfenster geöffnet, und in einem URLVariables-Objekt erfasste Daten zu einer Benutzersitzung werden an die Anwendung übergeben. Der Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> wird explizit auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> gesetzt.
 <p class="- topic/p ">Wichtige Beispielauszüge:</p>
 <ol class="- topic/ol "><li class="- topic/li ">Die Konstruktorfunktion erstellt eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, wobei die URL der Remote-Anwendung als Parameter verwendet wird.</li><li class="- topic/li ">Ein URLVariables-Objekt wird erstellt, und zwei seiner Eigenschaften werden Werte zugewiesen.</li><li class="- topic/li ">Das URLVariables-Objekt wird der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des URLRequest-Objekts zugewiesen.</li><li class="- topic/li ">Der Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> wird auf <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> gesetzt.</li><li class="- topic/li ">Das Beispiel ruft <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph> auf, wodurch ein neues Browserfenster mit der URL der Remote-Anwendung geöffnet wird.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweis:</b> Zur Ausführung des Beispiels muss die URL der Remote-Anwendung durch eine gültige URL ersetzt werden. Darüber hinaus benötigen Sie Servercode, um die von Flash Player im URLVariables-Objekt erfassten Informationen auszuführen.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLRequestMethod;
    import flash.net.URLVariables;

    public class URLRequest_method extends Sprite {

        public function URLRequest_method() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            request.method = URLRequestMethod.POST;
            
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestMethod" class="- topic/link "><linktext class="- topic/linktext ">URLRequestMethod-Klasse</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:requestHeaders:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestHeaders</apiName><shortdesc class="- topic/shortdesc ">
     Das Array der an die HTTP-Anforderung anzuhängenden HTTP-Anforderungsheader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Das Array der an die HTTP-Anforderung anzuhängenden HTTP-Anforderungsheader. Das Array besteht aus URLRequestHeader-Objekten. Jedes Objekt im Array muss ein URLRequestHeader-Objekt sein und einen Namens- und einen Wert-String enthalten:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var rhArray:Array = new Array(new URLRequestHeader("Content-Type", "text/html"));
     </codeblock>
     
     <p class="- topic/p "><ph class="- topic/ph ">Flash Player und die AIR-Laufzeitumgebung geben</ph> bestimmte Einschränkungen für Anforderungsheader vor. Weitere Informationen finden Sie in der Beschreibung der URLRequestHeader-Klasse.</p>
     
     <p class="- topic/p ">Nicht alle Methoden, die URLRequest-Parameter akzeptieren, unterstützen die <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>-Eigenschaft. Informationen zu der von Ihnen aufgerufenen Methode finden Sie in der entsprechenden Dokumentation. Beispiel: Die <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>- und die <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>-Methode unterstützen die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph>-Eigenschaft nicht.</p>
     <p class="- topic/p ">Aufgrund von Browsereinschränkungen werden benutzerdefinierte HTTP-Anforderungs-Header für <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Anforderungen, aber nicht für <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Anforderungen unterstützt.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:url:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">url</apiName><shortdesc class="- topic/shortdesc ">
     Die anzufordernde URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die anzufordernde URL.
     
     <p class="- topic/p ">Achten Sie darauf, alle Zeichen zu kodieren, die in der Uniform Resource Locator-Spezifikation (siehe http://www.faqs.org/rfcs/rfc1738.html) als unsicher beschrieben werden oder die im URL-Schema des URLRequest-Objekts reserviert sind (wenn sie nicht für den reservierten Zweck verwendet werden). Verwenden Sie zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"%25"</codeph> für das Prozentzeichen (%) und <codeph class="+ topic/ph pr-d/codeph ">"%23"</codeph> für das Rautenzeichen (#), wie in <codeph class="+ topic/ph pr-d/codeph ">"http://www.example.com/orderForm.cfm?item=%23B-3&amp;discount=50%25"</codeph>.</p>
     
      <p class="- topic/p ">Standardmäßig muss die URL in der gleichen Domäne wie die aufrufende Datei sein, es sei denn, der Inhalt wird in der Sicherheitssandbox der <ph class="- topic/ph ">Adobe AIR</ph>-Anwendung ausgeführt. <ph class="- topic/ph ">Wenn Sie Daten aus einer anderen Domäne laden müssen, legen Sie eine URL-Richtliniendatei auf dem Server ab, der die Daten hostet</ph>. Weitere Informationen finden Sie in der Beschreibung der URLRequest-Klasse.</p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Wenn Inhalt in Adobe AIR ausgeführt wird, können Dateien</ph> in der Sicherheitssandbox der Anwendung (Dateien, die mit der AIR-Anwendung installiert wurden) auf URLs zugreifen, die eines der folgenden URL-Schemata verwenden:</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">http</codeph> und <codeph class="+ topic/ph pr-d/codeph ">https</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">file</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app-storage</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app</codeph> </li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> IPv6 (Internet Protocol Version 6) wird<ph class="- topic/ph "> in AIR und in Flash Player 9.0.115.0 und höher unterstützt</ph>. IPv6 ist eine Internet Protocol-Version, die 128-Bit-Adressen unterstützt (eine Verbesserung gegenüber der älteren Version IPv4, die 32-Bit-Adressen unterstützt). Möglicherweise müssen Sie IPv6 für Ihre Netzwerkschnittstellen aktivieren. Weitere Informationen finden Sie in der Hilfe des Betriebssystems, unter dem die Daten gehostet werden. Wenn IPv6 auf dem Hostsystem unterstützt wird, können Sie numerische literale IPv6-Adressen in URLs in eckigen Klammern ([])angeben<ph class="- topic/ph ">, wie im folgenden Beispiel zu sehen</ph>. </p>
     
     <ph class="- topic/ph ">
     <pre xml:space="preserve" class="- topic/pre ">
     rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]:1935/test
     </pre>
     </ph>
     
     </apiDesc><example conref="examples\Loader_load_url.as" class="- topic/example "> Das folgende Beispiel zeigt, wie Sie in Bild mit der Loader-Klasse in ActionScript 3.0 dynamisch laden können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/03/02/dynamically-loading-an-image-in-actionscript-20-and-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var url:String = "http://www.helpexamples.com/flash/images/image2.jpg";
var urlRequest:URLRequest = new URLRequest(url);
var loader:Loader = new Loader();
loader.load(urlRequest);
addChild(loader);
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:URLRequest:useCache:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCache</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob der lokale Cache überprüft werden soll, bevor diese URLRequest Daten abruft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob der lokale Cache überprüft werden soll, bevor diese URLRequest Daten abruft.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph>-Methode unterstützt die <codeph class="+ topic/ph pr-d/codeph ">URLRequest.useCache</codeph>-Eigenschaft nicht.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/useCache" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.useCache</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:userAgent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userAgent</apiName><shortdesc class="- topic/shortdesc ">
    Legt den Benutzer-Agent-String fest, der in der HTTP-Anforderung verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Aufrufer befindet sich nicht in der Sicherheitssandbox der AIR-Anwendung.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Legt den Benutzer-Agent-String fest, der in der HTTP-Anforderung verwendet wird.
    
    <p class="- topic/p ">Der Standardwert ist der gleiche Benutzer-Agent-String, der von Flash Player verwendet wird und unter Mac, Linux und Windows unterschiedlich ist.</p>
    
    <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Diese Eigenschaft hat keinen Einfluss auf den Benutzer-Agent-String, wenn das URLRequest-Objekt mit der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode eines HTMLLoader-Objekts verwendet wird. Um den Benutzer-Agent-String für ein HTMLLoader-Objekt festzulegen, stellen Sie die <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph>-Eigenschaft des HTMLLoader-Objekts ein oder legen Sie die statische <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.userAgent</codeph>-Eigenschaft fest.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.userAgent</linktext></link><link href="../../flash/html/HTMLLoader.html#userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.userAgent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:InterfaceAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InterfaceAddress</apiName><shortdesc class="- topic/shortdesc ">
 Die InterfaceAddress-Klasse meldet die Eigenschaften einer Netzwerkschnittstellenadresse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die InterfaceAddress-Klasse meldet die Eigenschaften einer Netzwerkschnittstellenadresse.
 
 </apiDesc><example conref="examples\InterfaceAddressExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInfo" class="- topic/link "><linktext class="- topic/linktext ">NetworkInfo-Klasse</linktext></link><link href="flash.net.xml#NetworkInterface" class="- topic/link "><linktext class="- topic/linktext ">NetworkInterface-Klasse</linktext></link></related-links><apiValue id="flash.net:InterfaceAddress:address:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">address</apiName><shortdesc class="- topic/shortdesc ">
     Die IP-Adresse (IP = Internet Protocol).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die IP-Adresse (IP = Internet Protocol).
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:broadcast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">broadcast</apiName><shortdesc class="- topic/shortdesc ">
     Die Broadcastadresse des lokalen Netzwerksegments.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Broadcastadresse des lokalen Netzwerksegments.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:ipVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ipVersion</apiName><shortdesc class="- topic/shortdesc ">
	 Der Typ der IP-Adresse (IPv4 oder IPv6).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Typ der IP-Adresse (IPv4 oder IPv6).
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:prefixLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">prefixLength</apiName><shortdesc class="- topic/shortdesc ">
     Die Präfixlänge für diese Adresse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Präfixlänge für diese Adresse. 
     
     <p class="- topic/p ">Bei IPv4-Adressen ist dies die Subnetzmaske. Beispiele für die Präfixlänge für IPv4-Werte sind: 8 (255.0.0.0), 16 (255.255.0.0) und 24 (255.255.255.0). Beispiele für die Präfixlänge für IPv6-Werte sind: 128 (::1/128) und 32 (2001:db8::/32) </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn die Präfixlänge für diese Adresse nicht verfügbar ist, hat <codeph class="+ topic/ph pr-d/codeph ">prefixLength</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>. Ein Präfixwert wird nicht immer von der Netzwerkimplementierung eines gegebenen Clientcomputers zurückgegeben.</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:GroupSpecifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GroupSpecifier</apiName><shortdesc class="- topic/shortdesc ">
     Die GroupSpecifier-Klasse wird verwendet, um die undurchsichtigen groupspec-Strings zu konstruieren, die an die NetStream- und NetGroup-Konstruktoren übergeben werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruiert den undurchsichtigen groupspec-String, der an NetStream- und NetGroup-Konstruktoren übergeben wird.
     </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die GroupSpecifier-Klasse wird verwendet, um die undurchsichtigen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-Strings zu konstruieren, die an die NetStream- und NetGroup-Konstruktoren übergeben werden können. Ein <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String gibt eine RTMFP-Peer-to-Peer-Gruppe an, einschließlich Fähigkeiten, Einschränkungen und Autorisierungen der Mitglieder, die <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> verwenden.
     
     <p class="- topic/p ">Standardmäßig sind alle Fähigkeiten deaktiviert und Peer-to-Peer-Verbindungen sind zulässig.</p>
     
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link></related-links><apiConstructor id="flash.net:GroupSpecifier:GroupSpecifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GroupSpecifier</apiName><shortdesc class="- topic/shortdesc ">
         Erstellt ein neues GroupSpecifier-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn <codeph class="+ topic/ph pr-d/codeph ">name</codeph> leer oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist.
         
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Name für die Gruppe, dem alle Mitglieder zustimmen müssen.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Erstellt ein neues GroupSpecifier-Objekt. Standardmäßig sind alle Fähigkeiten deaktiviert und Peer-to-Peer-Verbindungen sind zulässig.
         
         </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:GroupSpecifier:addBootstrapPeer" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addBootstrapPeer</apiName><shortdesc class="- topic/shortdesc ">
         Veranlasst das zugeordnete NetStream- oder NetGroup-Objekt, eine erste Nachbarverbindung zur angegebenen peerID herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die peerID, mit der eine erste Nachbarverbindung hergestellt werden sollte, um in das Peer-to-Peer-Mesh zu starten.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Veranlasst das zugeordnete NetStream- oder NetGroup-Objekt, eine erste Nachbarverbindung zur angegebenen peerID herzustellen.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodeBootstrapPeerIDSpec()" class="- topic/link "><linktext class="- topic/linktext ">encodeBootstrapPeerIDSpec()</linktext></link><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addMemberHint()</linktext></link><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:addIPMulticastAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addIPMulticastAddress</apiName><shortdesc class="- topic/shortdesc ">
         Veranlasst das zugeordnete NetStream- oder NetGroup-Objekt, der angegebenen IP-Multicast-Gruppe beizutreten und den angegebenen UDP-Port zu überwachen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die Adresse der IPv4- oder IPv6-Multicast-Gruppe, der beigetreten werden soll, angibt, optional gefolgt von einem Doppelpunkt („:“) und der UDP-Portnummer. Wenn eine IPv6-Adresse und ein Port angegeben werden, <i class="+ topic/ph hi-d/i ">muss</i> die IPv6-Adresse in eckige Klammern gesetzt werden. Beispiele: <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254:30000"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"ff03::ffff"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"[ff03::ffff]:30000"</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der UDP-Port, an dem IP-Multicast-Datagramme empfangen werden. Wenn <codeph class="+ topic/ph pr-d/codeph ">port</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat, <i class="+ topic/ph hi-d/i ">muss</i> der UDP-Port in <codeph class="+ topic/ph pr-d/codeph ">address</codeph> angegeben werden. Wenn der Wert nicht <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, darf der UDP-Port <i class="+ topic/ph hi-d/i ">nicht</i> in <codeph class="+ topic/ph pr-d/codeph ">address</codeph> angegeben werden.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Wert nicht <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, ein String, der die Quell-IP-Adresse eines quellenspezifischen Multicasts (SSM) angibt.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Veranlasst das zugeordnete NetStream- oder NetGroup-Objekt, der angegebenen IP-Multicast-Gruppe beizutreten und den angegebenen UDP-Port zu überwachen.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodeIPMulticastAddressSpec()" class="- topic/link "><linktext class="- topic/linktext ">encodeIPMulticastAddressSpec()</linktext></link><link href="flash.net.xml#GroupSpecifier/ipMulticastMemberUpdatesEnabled" class="- topic/link "><linktext class="- topic/linktext ">ipMulticastMemberUpdatesEnabled</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:authorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">authorizations</apiName><shortdesc class="- topic/shortdesc ">
         Gibt einen String zurück, der Kennwörter für IP-Multicast-Veröffentlichungen und für Postings repräsentiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Gibt einen String zurück, der Kennwörter für IP-Multicast-Veröffentlichungen und für Postings repräsentiert. Hängt den String an einen nicht autorisierten <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String an, um Funktionen zu aktivieren, für die Kennwörter festgelegt wurden.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodeBootstrapPeerIDSpec" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodeBootstrapPeerIDSpec</apiName><shortdesc class="- topic/shortdesc ">
         Kodiert einen String, der eine Bootstrap-peerID repräsentiert, und gibt diesen zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die peerID, mit der eine erste Nachbarverbindung hergestellt werden sollte, um in das Peer-to-Peer-Mesh zu starten.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Kodiert einen String, der eine Bootstrap-peerID repräsentiert, und gibt diesen zurück. Wenn Sie den String an einen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String anhängen, stellt das zugeordnete NetStream oder NetGroup eine erste Nachbarverbindung zur angegebenen peerID her.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addBootstrapPeer()" class="- topic/link "><linktext class="- topic/linktext ">addBootstrapPeer()</linktext></link><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addMemberHint()</linktext></link><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodeIPMulticastAddressSpec" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodeIPMulticastAddressSpec</apiName><shortdesc class="- topic/shortdesc ">
         Kodiert einen String, der eine IP-Multicast-Socketadresse repräsentiert, und gibt diesen zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die Adresse der IPv4- oder IPv6-Multicast-Gruppe, der beigetreten werden soll, angibt, optional gefolgt von einem Doppelpunkt („:“) und der UDP-Portnummer. Wenn eine IPv6-Adresse <i class="+ topic/ph hi-d/i ">und</i> ein Port angegeben werden, <i class="+ topic/ph hi-d/i ">muss</i> die IPv6-Adresse in eckige Klammern gesetzt werden. Beispiele: <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254:30000"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"ff03::ffff"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"[ff03::ffff]:30000"</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der UDP-Port, an dem IP-Multicast-Datagramme empfangen werden. Wenn <codeph class="+ topic/ph pr-d/codeph ">port</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat, <i class="+ topic/ph hi-d/i ">muss</i> der UDP-Port in <codeph class="+ topic/ph pr-d/codeph ">address</codeph> angegeben werden. Wenn der Wert nicht <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, darf der UDP-Port <i class="+ topic/ph hi-d/i ">nicht</i> in <codeph class="+ topic/ph pr-d/codeph ">address</codeph> angegeben werden.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Wert nicht <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, ein String, der die Quell-IP-Adresse eines quellenspezifischen Multicasts (SSM) angibt.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Kodiert einen String, der eine IP-Multicast-Socketadresse repräsentiert, und gibt diesen zurück. Wenn Sie den String an einen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String anhängen, tritt das angegebene NetStream oder NetGroup der angegebenen IP-Multicast-Gruppe bei und überwacht den angegebenen UDP-Port.
         
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addIPMulticastAddress()" class="- topic/link "><linktext class="- topic/linktext ">addIPMulticastAddress()</linktext></link><link href="flash.net.xml#GroupSpecifier/ipMulticastMemberUpdatesEnabled" class="- topic/link "><linktext class="- topic/linktext ">ipMulticastMemberUpdatesEnabled</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodePostingAuthorization" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodePostingAuthorization</apiName><shortdesc class="- topic/shortdesc ">
         Kodiert einen String, der ein Posting-Kennwort repräsentiert, und gibt diesen zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu kodierende Kennwort, das mit dem Posting-Kennwort (falls eingerichtet) übereinstimmen muss, um <codeph class="+ topic/ph pr-d/codeph ">NetGroup.post()</codeph> zu aktivieren.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Kodiert einen String, der ein Posting-Kennwort repräsentiert, und gibt diesen zurück. Wenn das Posten kennwortgeschützt ist, können Sie den String mit einem <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String verketten, um das Posten zu aktivieren.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodePublishAuthorization" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodePublishAuthorization</apiName><shortdesc class="- topic/shortdesc ">
         Kodiert einen String, der ein Multicast-Veröffentlichungskennwort repräsentiert, und gibt diesen zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu kodierende Kennwort, das mit dem Veröffentlichungskennwort (falls eingerichtet) übereinstimmen muss, um <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> zu aktivieren.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Kodiert einen String, der ein Multicast-Veröffentlichungskennwort repräsentiert, und gibt diesen zurück. Wenn das Multicast-Veröffentlichen kennwortgeschützt ist, können Sie den String mit einem <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String verketten, um das Veröffentlichen zu aktivieren.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:groupspecWithAuthorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupspecWithAuthorizations</apiName><shortdesc class="- topic/shortdesc ">
         Gibt den undurchsichtigen groupspec-String einschließlich Autorisierungen zurück, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Gibt den undurchsichtigen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String einschließlich Autorisierungen zurück, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/authorizations()" class="- topic/link "><linktext class="- topic/linktext ">authorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/toString()" class="- topic/link "><linktext class="- topic/linktext ">toString()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:groupspecWithoutAuthorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupspecWithoutAuthorizations</apiName><shortdesc class="- topic/shortdesc ">
         Gibt den undurchsichtigen groupspec-String ohne Autorisierungen zurück, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt den undurchsichtigen groupspec-String ohne Autorisierungen zurück, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Gibt den undurchsichtigen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String ohne Autorisierungen zurück, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/authorizations()" class="- topic/link "><linktext class="- topic/linktext ">authorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:makeUnique" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">makeUnique</apiName><shortdesc class="- topic/shortdesc ">
         Fügt groupspec ein pseudozufälliges Tag hinzu, damit es eindeutig wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Fügt groupspec ein pseudozufälliges Tag hinzu, damit es eindeutig wird.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Fügt <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> ein pseudozufälliges Tag hinzu, damit es eindeutig wird. Der undurchsichtige <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String muss dann wörtlich an andere potenzielle Mitglieder der Gruppe übergeben werden, damit sie erfolgreich beitreten können.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:GroupSpecifier:setPostingPassword" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setPostingPassword</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob ein Kennwort erforderlich ist, um in der NetGroup zu veröffentlichen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Kennwort, das für die Verwendung von <codeph class="+ topic/ph pr-d/codeph ">NetGroup.post()</codeph> erforderlich ist. Beim Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist kein Kennwort zum Posten erforderlich.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">salt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Modifiziert den Hash des Kennworts, damit es schwieriger zu erraten ist. Aus Sicherheitsgründen sollte dieser Parameter auf einen zufälligen Wert gesetzt werden.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob ein Kennwort erforderlich ist, um in der NetGroup zu veröffentlichen.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:setPublishPassword" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setPublishPassword</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob ein Kennwort erforderlich ist, um einen Multicaststream im NetStream zu veröffentlichen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Kennwort, das für die Verwendung von <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> erforderlich ist. Beim Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist kein Kennwort zum Veröffentlichen erforderlich.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">salt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Modifiziert den Hash des Kennworts, damit es schwieriger zu erraten ist. Aus Sicherheitsgründen sollte dieser Parameter auf einen zufälligen Wert gesetzt werden.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob ein Kennwort erforderlich ist, um einen Multicaststream im NetStream zu veröffentlichen.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
         Identisch mit der groupspecWithAuthorizations()-Methode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Identisch mit der groupspecWithAuthorizations()-Methode.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Identisch mit der <codeph class="+ topic/ph pr-d/codeph ">groupspecWithAuthorizations()</codeph>-Methode. Praktische Methode, um den undurchsichtigen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String einschließlich Autorisierungen zurückzugeben, der an NetStream- und NetGroup-Konstruktoren übergeben werden kann.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link></related-links></apiOperation><apiValue id="flash.net:GroupSpecifier:ipMulticastMemberUpdatesEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ipMulticastMemberUpdatesEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Informationen über die Gruppenmitgliedschaft an IP-Multicastsockets ausgetauscht werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Informationen über die Gruppenmitgliedschaft an IP-Multicastsockets ausgetauscht werden können. IP-Multicastserver können aktualisierte Informationen zur Gruppenmitgliedschaft senden, um beim Bootstrapping von P2P-Meshes zu helfen oder Partitionen zu reparieren. Peers könne aktualisierte Informationen zur Mitgliedschaft über das LAN senden, um beim Bootstrapping von LAN-P2P-Meshes zu helfen und LAN-Nachbarn in globalen Meshes darüber informieren, dass andere LAN-Nachbarn vorhanden sind. Diese Aktualisierungen können die P2P-Leistung verbessern.
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addIPMulticastAddress()" class="- topic/link "><linktext class="- topic/linktext ">addIPMulticastAddress()</linktext></link><link href="flash.net.xml#GroupSpecifier/peerToPeerDisabled" class="- topic/link "><linktext class="- topic/linktext ">peerToPeerDisabled</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:multicastEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Streaming für die NetGroup aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Streaming für die NetGroup aktiviert ist. Methoden, die zum Streamen verwendet werden, sind <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>. Standardmäßig hat diese Eigenschaft den Wert FALSE (Streaming ist deaktiviert).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.play2()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:objectReplicationEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob die Objektreplikation für die NetGroup aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob die Objektreplikation für die NetGroup aktiviert ist. Standardmäßig hat diese Eigenschaft den Wert FALSE (Objektreplikation ist deaktiviert).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.denyRequestedObject()</linktext></link><link href="flash.net.xml#NetGroup/removeHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.removeHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/removeWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.removeWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:peerToPeerDisabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">peerToPeerDisabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Peer-to-Peer-Verbindungen für die NetGroup oder den NetStream deaktiviert sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Peer-to-Peer-Verbindungen für die NetGroup oder den NetStream deaktiviert sind. Standardmäßig hat diese Eigenschaft den Wert FALSE (P2P-Verbindungen sind aktiviert).
         
         <p class="- topic/p ">Wenn P2P-Verbindungen deaktiviert sind (d. h, wenn Sie diese Eigenschaft auf TRUE gesetzt haben), wird das P2P-Warndialogfeld unterdrückt. In diesem Fall können keine Nachbarverbindungen hergestellt werden und keines der Gruppenmitglieder verwendet Upstream-Bandbreite. Das Deaktivieren von P2P-Verbindungen auf diese Weise ist im Allgemeinen nur dann hilfreich, wenn Multicaststreams über reine IP-Multicasts empfangen werden.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:GroupSpecifier:postingEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Posting für die NetGroup aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Posting für die NetGroup aktiviert ist. Standardmäßig hat diese Eigenschaft den Wert FALSE (Posting ist deaktiviert).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:routingEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Directed-Routing-Methoden für die NetGroup aktiviert sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Directed-Routing-Methoden für die NetGroup aktiviert sind. Standardmäßig hat diese Eigenschaft den Wert FALSE (Directed-Routing-Methoden sind deaktiviert).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:serverChannelEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverChannelEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Legt fest, ob Mitglieder der NetGroup einen Kanal zum Server öffnen können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Legt fest, ob Mitglieder der NetGroup einen Kanal zum Server öffnen können. Standardmäßig hat diese Eigenschaft den Wert FALSE.
         
         <p class="- topic/p ">Es muss ein Kanal zum Server geöffnet werden, bevor der Server unterstützende Funktionen für die Gruppenmitglieder bereitstellen kann. Ob über diesen Kanal unterstützende Funktionen bereitgestellt werden können, ist von der Serverkonfiguration abhängig.</p>
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:LocalConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LocalConnection</apiName><shortdesc class="- topic/shortdesc ">
 Mit der LocalConnection-Klasse können Sie ein LocalConnection-Objekt erstellen, das eine Methode in einem anderen LocalConnection-Objekt aufrufen kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection
 
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der LocalConnection-Klasse können Sie ein LocalConnection-Objekt erstellen, das eine Methode in einem anderen LocalConnection-Objekt aufrufen kann. Die Kommunikation erfolgt:
 
 <ul class="- topic/ul "><li class="- topic/li ">innerhalb einer einzelnen SWF-Datei</li><li class="- topic/li ">zwischen mehreren SWF-Dateien</li><li class="- topic/li ">zwischen Inhalt (SWF-basiert oder HTML-basiert) in AIR-Anwendungen</li><li class="- topic/li ">zwischen Inhalt (SWF-basiert oder HTML-basiert) in einer AIR-Anwendung und SWF-Inhalt, der in einem Browser ausgeführt wird</li></ul>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird unter allen Desktopbetriebssystemen und auf allen Geräten mit AIR für TV unterstützt, jedoch nicht auf mobilen Geräten. Mit der <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b>Geräte mit AIR für TV unterstützen nur die Kommunikation zwischen SWF-basierten Inhalten in AIR-Anwendungen.</p>
 
 <p class="- topic/p ">Lokale Verbindungen ermöglichen diese Art von Kommunikation zwischen SWF-Dateien ohne Verwendung von <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> oder JavaScript. LocalConnection-Objekte können nur zwischen Dateien ausgetauscht werden, die auf demselben Client-Computer abgespielt werden. Sie können jedoch in verschiedenen Anwendungen ausgeführt werden. Beispielsweise kann die eine Datei in einem Browser, eine andere in Adobe AIR abgespielt werden. </p>
 
 <p class="- topic/p ">In ActionScript 3.0 erstellte LocalConnection-Objekte können mit LocalConnection-Objekten kommunizieren, die in ActionScript 1.0 oder 2.0 erstellt wurden. Dasselbe gilt umgekehrt: In ActionScript 1.0 oder 2.0 erstellte LocalConnection-Objekte können mit LocalConnection-Objekten kommunizieren, die in ActionScript 3.0 erstellt wurden. Flash Player verarbeitet die Kommunikation zwischen LocalConnection-Objekten verschiedener Versionen automatisch.</p>
 
 <p class="- topic/p ">Es gibt drei Verfahren, einem LocalConnection-Objekt Rückrufmethoden hinzuzufügen:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Erstellen einer Unterklasse der LocalConnection-Klasse und Hinzufügen von Methoden.</li><li class="- topic/li ">Einstellen der <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.client</codeph>-Eigenschaft auf ein Objekt, das die Methoden implementiert.</li><li class="- topic/li ">Erstellen einer dynamischen Klasse, die LocalConnection erweitert, und dynamisches Anhängen der Methoden.</li></ul>
 
 <p class="- topic/p ">Um zu verdeutlichen, wie LocalConnection-Objekte für die Kommunikation zwischen zwei Dateien verwendet werden, ist es hilfreich, die in jeder der Dateien verwendeten Befehle zu kennen. Eine Datei wird als <i class="+ topic/ph hi-d/i ">empfangende</i> Datei bezeichnet. Diese Datei enthält die aufzurufende Methode. Die empfangende Datei muss ein LocalConnection-Objekt und einen Aufruf der Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> enthalten. Die andere Datei wird als <i class="+ topic/ph hi-d/i ">sendende</i> Datei bezeichnet. Diese Datei ruft die Methode auf. Die sendende Datei muss ein anderes LocalConnection-Objekt und einen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Methode enthalten.</p>
 
 <p class="- topic/p ">Die Verwendung der Methoden <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> ist unterschiedlich und hängt davon ab, ob sich die Dateien in derselben Domäne, in verschiedenen Domänen mit bekannten Domänennamen oder in verschiedenen Domänen mit unbekannten oder dynamischen Domänennamen befinden. In den folgenden Abschnitten werden diese drei Situationen mit entsprechenden Codebeispielen erläutert.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Gleiche Domäne</b>: Die einfachste Art der Verwendung von LocalConnection-Objekten besteht darin, die Kommunikation nur zwischen LocalConnection-Objekten zuzulassen, die sich in derselben Domäne befinden, da die Kommunikation innerhalb derselben Domäne standardmäßig unterstützt wird. Für die Kommunikation von zwei Dateien innerhalb derselben Domäne müssen Sie keine speziellen Sicherheitsmaßnahmen implementieren. Sie übergeben einfach denselben Wert für den Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> an die Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> und an die Methode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>:</p>
 
 <p class="- topic/p "><adobeimage alt="Laden aus derselben Domäne" href="../../images/localconnection_samedomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.connect('myConnection');

// sendingLC is in http://www.domain.com/sending.swf
// myMethod() is defined in sending.swf
sendingLC.send('myConnection', 'myMethod');
</codeblock>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Unterschiedliche Domänen mit bekannten Domänennamen</b>: Für die Kommunikation von zwei SWF-Dateien in unterschiedlichen Domänen müssen Sie die Kommunikation zwischen den Domänen zulassen, indem Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> aufrufen. Außerdem müssen Sie den Verbindungsnamen in der Methode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> mit dem Domänennamen des empfangenden LocalConnection-Objekts qualifizieren:</p>
 
 <p class="- topic/p "><adobeimage alt="Laden aus verschiedenen Domänen" href="../../images/localconnection_differentdomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('www.anotherdomain.com');
receivingLC.connect('myConnection');

// sendingLC is in http://www.anotherdomain.com/sending.swf
sendingLC.send('www.domain.com:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Unterschiedliche Domänen mit unbekannten Domänennamen</b>: In einigen Fällen ist es erforderlich, die Portierbarkeit der Datei mit dem empfangenden LocalConnection-Objekt zwischen Domänen zu erhöhen. Um anzuweisen, dass das sendende und das empfangende LocalConnection-Objekt sich in unterschiedlichen Domänen befinden, ohne den Domänennamen in der Methode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> anzugeben, fügen Sie im Aufruf von <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> am Anfang des Verbindungsnamens einen Unterstrich (_) hinzu. Um die Kommunikation zwischen den beiden Domänen zuzulassen, rufen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> auf, und übergeben Sie die Domänen, von denen LocalConnection-Aufrufe zugelassen werden sollen. Sie können auch das Platzhalterargument (~~) übergeben, um Aufrufe von allen Domänen zuzulassen:</p>
 
 <p class="- topic/p "><adobeimage alt="Laden aus unbekannten Domänennamen" href="../../images/localconnection_unknowndomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('~~');
receivingLC.connect('_myConnection');

// sendingLC is in http://www.anotherdomain.com/sending.swf
sendingLC.send('_myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Von Flash Player an eine AIR-Anwendung</b>. Ein LocalConnection-Objekt, das in der AIR-Anwendungssandbox erstellt wurde, verwendet einen speziellen String als Verbindungspräfix anstelle eines Domänennamens. Dieser String hat die Form: <codeph class="+ topic/ph pr-d/codeph ">app#appID.pubID</codeph>, wobei appID die Anwendungs-ID und pubID die Herausgeber-ID der Anwendung ist. (Schließen Sie die Herausgeber-ID nur dann mit ein, wenn die AIR-Anwendung eine Herausgeber-ID verwendet.) Wenn eine AIR-Anwendung zum Beispiel die Anwendungs-ID „com.example“ und keine Herausgeber-ID hat, könnten Sie <codeph class="+ topic/ph pr-d/codeph ">app#com.example:myConnection</codeph> als lokalen Verbindungsstring verwenden. Die AIR-Anwendung muss auch die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode aufrufen und dabei die Ursprungsdomäne der aufrufenden SFW-Datei übergeben: </p>
 
 <p class="- topic/p "><adobeimage alt="Flash-Player-zu-AIR-Verbindung" href="../../images/localconnection_flash2AIR.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is an AIR application with app ID = com.example (and no publisher ID)
receivingLC.allowDomain('www.domain.com');
receivingLC.connect('myConnection');

// sendingLC is in http://www.domain.com/sending.swf
sendingLC.send('app#com.example:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn eine AIR-Anwendung eine SWF-Datei außerhalb der AIR-Anwendungssandbox lädt, gelten für die Herstellung einer lokalen Verbindung zu dieser SWF-Datei dieselben Regeln wie für das Herstellen einer Verbindung zu einer SWF-Datei, die in Flash Player ausgeführt wird.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Von einer AIR-Anwendung zu Flash Player</b>. Wenn eine AIR-Anwendung mit einer SWF-Datei kommuniziert, die in der Flash Player-Laufzeitumgebung ausgeführt wird, müssen Sie die Kommunikation zwischen beiden zulassen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode aufrufen und das Verbindungspräfix der AIR-Anwendung übergeben. Wenn eine AIR-Anwendung zum Beispiel die Anwendungs-ID „com.example“ und keine Herausgeber-ID hat, können Sie den String <codeph class="+ topic/ph pr-d/codeph ">app#com.example</codeph> an die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode übergeben. Sie müssen den Verbindungsnamen auch in der <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Methode mit dem Domänennamen des empfangenden LocalConnection-Objekts angeben (verwenden Sie „localhost“ als Domäne für die SWF-Dateien, die aus dem lokalen Dateisystem geladen werden):</p>
 
 <p class="- topic/p "><adobeimage alt="AIR-zu-Flash-Player-Kommunikation" href="../../images/localconnection_AIR2flash.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('app#com.example');
receivingLC.connect('myConnection');

// sendingLC is an AIR application with app ID = com.example (and no publisher ID)
sendingLC.send('www.domain.com:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Von einer AIR-Anwendung zu einer anderen AIR-Anwendung</b>. Um zwischen zwei AIR-Anwendungen zu kommunizieren, müssen Sie die Kommunikation zwischen den beiden Anwendungen zulassen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode aufrufen und das Verbindungspräfix der sendenden AIR-Anwendung übergeben. Wenn die sendende AIR-Anwendung zum Beispiel die Anwendungs-ID „com.example“ und keine Herausgeber-ID hat, können Sie den String <codeph class="+ topic/ph pr-d/codeph ">app#com.example</codeph> an die <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>-Methode in der empfangenden Anwendung übergeben. Außerdem müssen Sie den Verbindungsnamen in der Methode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> mit dem Verbindungspräfix des empfangenden LocalConnection-Objekts qualifizieren:</p>
 
 <p class="- topic/p "><adobeimage alt="AIR-zu-AIR-Kommunikation" href="../../images/localconnection_AIR2AIR.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is an AIR application with app ID = com.sample (and no publisher ID)
receivingLC.allowDomain('app#com.example');
receivingLC.connect('myConnection');

// sendingLC is an AIR application with app ID = com.example (and no publisher ID)
sendingLC.send('app#com.sample:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p ">Sie können LocalConnection-Objekte zum Senden und Empfangen von Daten innerhalb einer Datei verwenden. Dies ist jedoch nicht gebräuchlich.</p>
 
 <p class="- topic/p ">Weitere Informationen zu den Methoden <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> finden Sie in den Erläuterungen zum Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> unter den Einträgen zu <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.connect()</codeph>. Siehe auch die Einträge zu <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.</p>
 
 </apiDesc><example conref="examples\LocalConnectionSenderExample.as" class="- topic/example "> Dieses Beispiel umfasst zwei ActionScript-Klassen, die in zwei separate SWF-Dateien kompiliert werden müssen.
 
 <p class="- topic/p ">In der SWF-Datei „LocalConnectionSenderExample“ wird eine LocalConnection-Instanz erstellt. Wenn der Benutzer auf die Schaltfläche klickt, wird die Methode <codeph class="+ topic/ph pr-d/codeph ">call()</codeph> verwendet, um die Methode <codeph class="+ topic/ph pr-d/codeph ">lcHandler</codeph> in der SWF-Datei aufzurufen. Der Verbindungsname ist „myConnection“ und der Inhalt der TextField-Instanz wird als Parameter übergeben.</p>
 
 <p class="- topic/p ">In der SWF-Datei „LocalConnectionReceiverExample“ wird eine LocalConnection-Instanz erstellt und die Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> wird aufgerufen. Diese Methode kennzeichnet die SWF-Datei als Empfänger von Meldungen an die Verbindung mit dem Namen „myConnection“. Darüber hinaus umfasst diese Klasse eine öffentliche Methode mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">lcHandler()</codeph>. Diese Methode wird in der SWF-Datei „LocalConnectionSenderExample“ aufgerufen. Beim Aufrufen dieser Methode wird der als Parameter übergebene Text an die TextField-Instanz auf der Bühne angehängt.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Zum Testen des Beispiels müssen beide SWF-Dateien gleichzeitig auf denselben Computer geladen werden.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

// Code in LocalConnectionSenderExample.as
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.net.LocalConnection;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.events.StatusEvent;
    import flash.text.TextFieldAutoSize;

    public class LocalConnectionSenderExample extends Sprite {
        private var conn:LocalConnection;
        
        // UI elements
        private var messageLabel:TextField;
        private var message:TextField;
        private var sendBtn:Sprite;
        
        public function LocalConnectionSenderExample() {
            buildUI();
            sendBtn.addEventListener(MouseEvent.CLICK, sendMessage);
            conn = new LocalConnection();
            conn.addEventListener(StatusEvent.STATUS, onStatus);
        }
        
        private function sendMessage(event:MouseEvent):void {
            conn.send("myConnection", "lcHandler", message.text);
        }
        
        private function onStatus(event:StatusEvent):void {
            switch (event.level) {
                case "status":
                    trace("LocalConnection.send() succeeded");
                    break;
                case "error":
                    trace("LocalConnection.send() failed");
                    break;
            }
        }
        
        private function buildUI():void {
            const hPadding:uint = 5;
            // messageLabel
            messageLabel = new TextField();
            messageLabel.x = 10;
            messageLabel.y = 10;
            messageLabel.text = "Text to send:";
            messageLabel.autoSize = TextFieldAutoSize.LEFT;
            addChild(messageLabel);
            
            // message
            message = new TextField();
            message.x = messageLabel.x + messageLabel.width + hPadding;
            message.y = 10;
            message.width = 120;
            message.height = 20;
            message.background = true;
            message.border = true;
            message.type = TextFieldType.INPUT;
            addChild(message);
            
            // sendBtn
            sendBtn = new Sprite();
            sendBtn.x = message.x + message.width + hPadding;
            sendBtn.y = 10;
            var sendLbl:TextField = new TextField();
            sendLbl.x = 1 + hPadding;
            sendLbl.y = 1;
            sendLbl.selectable = false;
            sendLbl.autoSize = TextFieldAutoSize.LEFT;
            sendLbl.text = "Send";
            sendBtn.addChild(sendLbl);
            sendBtn.graphics.lineStyle(1);
            sendBtn.graphics.beginFill(0xcccccc);
            sendBtn.graphics.drawRoundRect(0, 0, (sendLbl.width + 2 + hPadding + hPadding), (sendLbl.height + 2), 5, 5);
            sendBtn.graphics.endFill();
            addChild(sendBtn);
        }
    }
}
</codeblock></example><example conref="examples\LocalConnectionReceiverExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Code in LocalConnectionReceiverExample.as
package {
    import flash.display.Sprite;
    import flash.net.LocalConnection;
    import flash.text.TextField;

    public class LocalConnectionReceiverExample extends Sprite {
        private var conn:LocalConnection;
        private var output:TextField;
        
        public function LocalConnectionReceiverExample()     {
            buildUI();
            
            conn = new LocalConnection();
            conn.client = this;
            try {
                conn.connect("myConnection");
            } catch (error:ArgumentError) {
                trace("Can't connect...the connection name is already being used by another SWF");
            }
        }
        
        public function lcHandler(msg:String):void {
            output.appendText(msg + "\n");
        }
        
        private function buildUI():void {
            output = new TextField();
            output.background = true;
            output.border = true;
            output.wordWrap = true;
            addChild(output);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links><adobeApiEvent id="flash.net:LocalConnection_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Status eines LocalConnection-Objekts protokolliert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Status eines LocalConnection-Objekts protokolliert wird. Bei erfolgreichem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">level</codeph> des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">status</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph> auf. Wenn der Aufruf fehlschlägt, weist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">level</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph> auf. Wenn die empfangende Datei die Verbindung ablehnt, kann der Aufruf ohne Benachrichtigung an die sendende Datei fehlschlagen.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">LocalConnection.send()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn mit einem Aufruf von „LocalConnection.send()“ versucht wird, Daten an eine andere Sicherheitssandbox zu senden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn mit einem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> versucht wird, Daten an eine andere Sicherheitssandbox zu senden.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron, d. h. aus nativem asynchronem Code ausgelöst wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron ausgelöst wird – das heißt, aus nativem asynchronem Code.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:LocalConnection:LocalConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LocalConnection</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein LocalConnection-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example shows how receiving and sending files create LocalConnnection objects.
     The two files can use the same name or different names for their respective LocalConnection objects.
     In this example they use different names.
     
     <listing>
     // Code in the receiving file
     this.createTextField("result_txt", 1, 10, 10, 100, 22);
     result_txt.border = true;
     var receiving_lc:LocalConnection = new LocalConnection();
     receiving_lc.methodToExecute = function(param1:Number, param2:Number) {
       result_txt.text = param1+param2;
     };
     receiving_lc.connect("lc_name");
     </listing>
     
     <p class="- topic/p ">The following file sends the request to the first file.</p>
     
     <listing>
     // Code in the sending file
     var sending_lc:LocalConnection = new LocalConnection();
     sending_lc.send("lc_name", "methodToExecute", 5, 7);
     </listing>
     
     </oldexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein LocalConnection-Objekt. Mit LocalConnection-Objekten können Sie die Kommunikation zwischen verschiedenen Dateien auf demselben Client-Computer ermöglichen.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:LocalConnection:allowDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowDomain</apiName><shortdesc class="- topic/shortdesc ">
     Gibt eine oder mehrere Domänen an, die LocalConnection-Aufrufe an diese LocalConnection-Instanz senden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Change the first example in the listing.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Alle angegebenen Parameter müssen Strings mit einem anderen Wert als null sein.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein oder mehrere Strings mit den Namen der Domänen, von denen Sie LocalConnection-Aufrufe zulassen möchten. Für diesen Parameter gelten zwei Sonderfälle:
     
     <ul class="- topic/ul "><li class="- topic/li ">Sie können das Platzhalterzeichen „~~“ angeben, um Aufrufe von allen Domänen zuzulassen.</li><li class="- topic/li ">Sie können den String "<codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>" angeben, um Aufrufe dieser Datei von lokal installierten Dateien zuzulassen. <ph class="- topic/ph ">In Flash Player 8 wurden Sicherheitsbeschränkungen für lokale Dateien eingeführt. Standardmäßig haben in Flash Player ausgeführte SWF-Dateien, die auf das Internet zugreifen können, keinen Zugriff auf das lokale Dateisystem. Wenn Sie "<codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>" angeben, können in Flash Player alle lokalen SWF-Dateien auf diese SWF-Datei zugreifen.</ph> </li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt eine oder mehrere Domänen an, die LocalConnection-Aufrufe an diese LocalConnection-Instanz senden können.
     
     <p class="- topic/p ">Sie können diese Methode nicht verwenden, um Dateien, die mit einem sicheren Protokoll (HTTPS) gehostet werden, den Zugriff von Dateien zu erlauben, die in nicht sicheren Protokollen gehostet werden. Sie müssen stattdessen die Ereignisprozedur <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> verwenden.</p>
     
     <p class="- topic/p ">Sie sollten diese Methode verwenden, damit eine untergeordnete Datei von einer anderen Domäne LocalConnection-Aufrufe an die übergeordnete Datei vornehmen kann, ohne dass die endgültige Domäne bekannt ist, aus der die untergeordnete Datei stammt. Dies ist beispielsweise der Fall, wenn Sie Weiterleitungen mit Lastausgleich oder Server von Dritten verwenden. In diesem Fall können Sie die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">url</codeph> des mit der Ladung verwendeten LoaderInfo-Objekts einsetzen, um die Domäne dazu zu bewegen, die Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> anzuwenden. Wenn Sie beispielsweise mit einem Loader-Objekt eine untergeordnete Datei laden, können Sie, sobald der Ladevorgang abgeschlossen ist, die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.url</codeph> des Loader-Objekts überprüfen und die Domäne anhand der vollständigen URL parsen. Wenn Sie so verfahren, müssen Sie unbedingt warten, bis die Datei geladen wurde, denn die <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.url</codeph>-Eigenschaft verfügt erst, nachdem die Datei vollständig geladen wurde, über ihren endgültigen, korrekten Wert. </p>
     
     <p class="- topic/p ">Es kann auch die entgegengesetzte Situation auftreten: Angenommen, Sie haben eine untergeordnete Datei erstellt, die LocalConnection-Aufrufe von der übergeordnete SWF-Datei annehmen möchte, der aber die Domäne der übergeordneten Datei nicht bekannt ist. In diesem Fall implementieren Sie diese Methode, indem Sie prüfen, ob das Domänenargument mit der Domäne der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">loaderInfo.url</codeph> in der geladenen Datei übereinstimmt. Auch diesmal müssen Sie die Domäne anhand der vollständigen URL von <codeph class="+ topic/ph pr-d/codeph ">loaderInfo.url</codeph> parsen. In diesem Fall müssen Sie jedoch nicht warten, bis die übergeordnete Datei geladen wurde, denn das Laden der übergeordneten Datei ist bereits abgeschlossen, wenn der Ladevorgang für die untergeordnete Datei erfolgt.</p>
     
     <p class="- topic/p ">Bedenken Sie beim Einsatz dieser Methode das Sicherheitsmodell von Flash Player. In der Standardeinstellung wird ein LocalConnection-Objekt mit der Sandbox der erstellenden Datei verknüpft. Domänenübergreifende Aufrufe für LocalConnection-Objekte sind nur dann zulässig, wenn Sie in der empfangenden Datei die Methode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> aufrufen. In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph ">der Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Die Form der Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> hat sich geändert. In den früheren Versionen (ActionScript 1.0 und 2.0) war <codeph class="+ topic/ph pr-d/codeph ">allowDomain</codeph> eine zu implementierende Callback-Methode. In ActionScript 3.0 ist <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> eine in den LocalConnection-Aufruf eingebettete Methode. Aufgrund dieser Änderung ist die Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> jetzt mit <codeph class="+ topic/ph pr-d/codeph ">flash.system.Security.allowDomain()</codeph> vergleichbar.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowInsecureDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowInsecureDomain()</linktext></link><link href="flash.display.xml#LoaderInfo/url" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.url</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:allowInsecureDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowInsecureDomain</apiName><shortdesc class="- topic/shortdesc ">
     Gibt eine oder mehrere Domänen an, die LocalConnection-Aufrufe an dieses LocalConnection-Objekt senden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Seems like a security note is in order here.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Alle angegebenen Parameter müssen Strings mit einem anderen Wert als null sein.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein oder mehrere Strings mit den Namen der Domänen, von denen Sie LocalConnection-Aufrufe zulassen möchten. Für diesen Parameter gibt es zwei Sonderfälle:
     <ul class="- topic/ul "><li class="- topic/li ">Sie können das Platzhalterzeichen „~~“ angeben, um Aufrufe von allen Domänen zuzulassen. Lokale Hosts sind hierbei nicht eingeschlossen.</li><li class="- topic/li ">Sie können den String "<codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>" angeben, um Aufrufe dieser SWF-Datei von lokal installierten SWF-Dateien zuzulassen. In Flash Player 8 wurden Sicherheitsbeschränkungen für lokale SWF-Dateien eingeführt. SWF-Dateien, die auf das Internet zugreifen können, haben keinen Zugriff auf das lokale Dateisystem. Wenn Sie "<codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>" angeben, können alle lokalen SWF-Dateien auf diese SWF-Datei zugreifen. Beachten Sie, dass Sie die aufrufende SWF-Datei bei der Erstellung außerdem als lokale SWF-Datei mit Netzwerkzugang kennzeichnen müssen.</li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt eine oder mehrere Domänen an, die LocalConnection-Aufrufe an dieses LocalConnection-Objekt senden können.
     
     <p class="- topic/p ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> funktioniert wie die Methode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>, mit der Ausnahme, dass die Methode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> auch das Senden von LocalConnection-Aufrufen von Dateien aus HTTPS-Quellen durch SWF-Dateien aus Nicht-HTTPS-Quellen zulässt. Dieser Unterschied ist nur von Bedeutung, wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> aus einer Datei aufrufen, die über HTTPS geladen wurde. Sie müssen die Methode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> auch bei Nicht-HTTPS-/HTTPS-Verbindungen innerhalb derselben Domäne aufrufen. Standardmäßig sind LocalConnection-Aufrufe von Dateien aus Nicht-HTTPS-Quellen an Dateien aus HTTPS-Quellen selbst innerhalb derselben Domäne nicht zulässig.</p>
     
     <p class="- topic/p ">Der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> wird nicht empfohlen, da hierdurch die durch HTTPS gewährleistete Sicherheit möglicherweise gefährdet wird. Wenn Sie eine Datei über HTTPS laden, können Sie relativ sicher sein, dass die Datei bei der Übermittlung über das Netzwerk nicht manipuliert wird. Wenn Sie dann LocalConnection-Aufrufe an diese Datei durch eine Datei ohne HTTPS zulassen, akzeptieren Sie Aufrufe von einer Datei, die während der Übertragung möglicherweise manipuliert wurde. In diesem Fall ist extreme Vorsicht geboten, da Sie sich nicht auf die Authentizität der LocalConnection-Aufrufe an die über HTTPS geladene Datei verlassen können.</p>
     
     <p class="- topic/p ">Standardmäßig können nur andere Dateien, die mit dem HTTPS-Protokoll gehostet werden, auf mit dem HTTPS-Protokoll gehostete Dateien zugreifen. Durch diese Implementierung bleibt die durch das HTTPS-Protokoll gewährleistete Integrität gewahrt.</p>
     
     <p class="- topic/p ">Der Einsatz dieser Methode zur Umgehung des Standardverhaltens empfiehlt sich nicht, da damit die HTTPS-Sicherheit beeinträchtigt wird. In einigen Fällen ist dies jedoch notwendig. Beispiel: Sie müssen den Zugriff auf für Flash Player 9 oder eine neuere Version veröffentlichte HTTPS-Dateien durch HTTPS-Dateien zulassen, die für Flash Player 6 oder eine ältere Version veröffentlicht wurden.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt das LocalConnection-Objekt (bricht die Verbindung ab).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.close, close
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die LocalConnection-Instanz kann nicht geschlossen werden, da sie nicht verbunden ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt das LocalConnection-Objekt (bricht die Verbindung ab). Rufen Sie diesen Befehl auf, wenn das Objekt keine Befehle mehr annehmen soll, beispielsweise, wenn Sie einen <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Befehl mit demselben Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in einer anderen SWF-Datei aufrufen möchten.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Bereitet ein LocalConnection-Objekt auf den Empfang von Befehlen vor, die von einem send()-Befehl gesendet werden (vom sendenden LocalConnection-Objekt).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.connect, connect
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der an den Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> übergebene Wert darf nicht null sein.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann drei verschiedene Ursachen haben: 1) Der an den Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> übergebene Stringwert war „null“. Übergeben Sie einen anderen Wert als „null“. 2) Der an den Parameter <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> übergebene Wert enthielt einen Doppelpunkt (:). Doppelpunkte werden als Sonderzeichen zum Trennen der Superdomäne vom String <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in der Methode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> und nicht in der Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> verwendet. 3) Die LocalConnection-Instanz ist bereits verbunden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connectionName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der mit dem Verbindungsnamen übereinstimmt, der im Befehl <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> für die Kommunikation mit dem empfangenden LocalConnection-Objekt angegeben wurde.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bereitet ein LocalConnection-Objekt auf den Empfang von Befehlen vor, die von einem <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Befehl gesendet werden (vom <i class="+ topic/ph hi-d/i ">sendenden LocalConnection-Objekt</i>). Das mit der <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode verwendete Objekt ist das <i class="+ topic/ph hi-d/i ">empfangende LocalConnection-Objekt</i>. Das empfangende und das sendende Objekt müssen auf demselben Client-Computer ausgeführt werden.
     
     <p class="- topic/p ">Um eine „Race“-Bedingung zu vermeiden, definieren Sie die mit dem empfangenden LocalConnection-Objekt verknüpften Methoden, bevor Sie diese Methode aufrufen, wie im Beispiel zur Klasse „LocalConnection“ gezeigt. </p>
     
     <p class="- topic/p ">In der Standardeinstellung wird das <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>-Argument in den Wert <codeph class="+ topic/ph pr-d/codeph ">"<i class="+ topic/ph hi-d/i ">superdomain</i>:connectionName"</codeph> aufgelöst, wobei <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">superdomain</i></codeph> die Superdomäne der Datei mit dem Befehl <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> ist. Wenn sich beispielsweise die Datei mit dem empfangenden LocalConnection-Objekt unter www.someDomain.com befindet, wird <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in <codeph class="+ topic/ph pr-d/codeph ">"someDomain.com:connectionName"</codeph> aufgelöst. (Wenn sich eine Datei, die in Flash Player ausgeführt wird, auf dem Client-Computer befindet, wird <codeph class="+ topic/ph pr-d/codeph ">superdomain</codeph> der Wert <codeph class="+ topic/ph pr-d/codeph ">"localhost"</codeph> zugewiesen.)</p>
     
     <p class="- topic/p ">Bei Inhalt, der in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph "> der Anwendung </codeph> Adobe AIR ausgeführt wird (Inhalt, der mit der AIR-Anwendung installiert wurde), verwendet die Laufzeit den String <codeph class="+ topic/ph pr-d/codeph ">app#</codeph> gefolgt von der Anwendungs-ID für die AIR-Anwendung (definiert in der Anwendungsdeskriptordatei) anstelle der Superdomäne. So wird zum Beispiel ein <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> für eine Anwendung mit der Anwendungs-ID <codeph class="+ topic/ph pr-d/codeph ">com.example.air.MyApp</codeph> <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in <codeph class="+ topic/ph pr-d/codeph ">"app#com.example.air.MyApp:connectionName"</codeph> aufgelöst.</p>
     
     <p class="- topic/p ">Ebenso lässt Flash Player das empfangende LocalConnection-Objekt nur Befehle von sendenden LocalConnection-Objekten empfangen, deren Verbindungsnamen ebenfalls in den Wert <codeph class="+ topic/ph pr-d/codeph ">"</codeph><codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">superdomain</i></codeph><codeph class="+ topic/ph pr-d/codeph ">:connectionName"</codeph> aufgelöst werden. Auf diese Weise können in Flash Player zwischen Dateien derselben Domäne ganz einfach Daten ausgetauscht werden.</p>
     
     <p class="- topic/p ">Wenn Sie den Datenaustausch nur zwischen Dateien in derselben Domäne implementieren, geben Sie einen String für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> an, der nicht mit einem Unterstrich (_) beginnt und der keinen Domänennamen angibt (beispielsweise <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Verwenden Sie denselben String in der Methode <codeph class="+ topic/ph pr-d/codeph ">connect(connectionName)</codeph>.</p>
     
     <p class="- topic/p ">Wenn Sie eine Kommunikation zwischen Dateien in unterschiedlichen Domänen implementieren, lässt sich die Portierbarkeit der Datei mit dem empfangenden LocalConnection-Objekt erhöhen, indem Sie für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> einen String angeben, der mit einem Unterstrich (_) beginnt. Im Folgenden werden zwei mögliche Fälle erläutert:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Wenn der String für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> nicht mit einem Unterstrich (_) beginnt, wird ein Präfix mit der Superdomäne und einen Doppelpunkt hinzugefügt (z. B. <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Dies stellt zwar sicher, dass es keinen Konflikt zwischen Ihrer Verbindung und gleichnamigen Verbindungen aus anderen Domänen gibt, allerdings müssen sendende LocalConnection-Objekte ebenfalls diese Superdomäne angeben (z. B. <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Wenn die Datei mit dem empfangenden LocalConnection-Objekt in eine andere Domäne verschoben wird, ändert der Player das Präfix entsprechend der neuen Superdomäne (z. B. <codeph class="+ topic/ph pr-d/codeph ">"anotherDomain:connectionName"</codeph>). Alle sendenden LocalConnection-Objekte müssen dann manuell bearbeitet werden, damit sie auf die neue Superdomäne verweisen.</li><li class="- topic/li ">Wenn der String für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> mit einem Unterstrich beginnt (zum Beispiel, <codeph class="+ topic/ph pr-d/codeph ">"_connectionName"</codeph>), wird dem String kein Präfix hinzugefügt. Das heißt, empfangende und sendende LocalConnection-Objekte verwenden identische Strings für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>. Wenn das empfangende Objekt mit <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> angibt, dass Verbindungen von allen Domänen zulässig sind, können Sie die Datei mit dem empfangenden LocalConnection-Objekt in eine andere Domäne verschieben, ohne die sendenden LocalConnection-Objekte zu ändern.</li></ul>
     
     <p class="- topic/p ">Nähere Informationen finden Sie in der Übersicht über die Klasse und in der Erörterung zu <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> sowie in den Einträgen <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Doppelpunkte werden als Sonderzeichen zum Trennen der Superdomäne vom String <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> verwendet. Ein String für <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>, der einen Doppelpunkt enthält, ist nicht gültig.</p>
     
     <p class="- topic/p ">Bedenken Sie beim Einsatz dieser Methode das Sicherheitsmodell von <ph class="- topic/ph ">Flash Player</ph>. In der Standardeinstellung wird ein LocalConnection-Objekt mit der Sandbox der erstellenden Datei verknüpft. Domänenübergreifende Aufrufe für LocalConnection-Objekte sind nur dann zulässig, wenn Sie in der empfangenden Datei die Methode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> aufrufen. <ph class="- topic/ph ">Sie können eine Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</ph>In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox der <codeph class="+ topic/ph pr-d/codeph ">Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die methodName-Methode für eine mit der connect(connectionName)-Methode geöffnete Verbindung auf (im empfangenden LocalConnection-Objekt).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.send, send
     
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> weist den Wert „null“ auf. Übergeben Sie andere Werte als „null“ für diese Parameter.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann folgende Ursachen haben: 1) Der Wert von <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> ist ein leerer String. Übergeben Sie gültige Strings für diese Parameter. 2) Für die in <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> angegebene Methode gelten Beschränkungen. 3) Die gesendete serialisierte Meldung ist zu groß (größer als 40 KB).
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connectionName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Entspricht dem Verbindungsnamen, der im Befehl <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> für die Kommunikation mit dem sendenden LocalConnection-Objekt angegeben wurde.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">methodName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der im empfangenden LocalConnection-Objekt aufzurufenden Methode. Die folgenden Methodennamen führen zu Fehlern bei der Befehlsausführung: <codeph class="+ topic/ph pr-d/codeph ">send</codeph>, <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, <codeph class="+ topic/ph pr-d/codeph ">allowDomain</codeph>, <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain</codeph>, <codeph class="+ topic/ph pr-d/codeph ">client</codeph> und <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">An die angegebene Methode zu übergebende zusätzliche optionale Parameter.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph>-Methode für eine mit der <codeph class="+ topic/ph pr-d/codeph ">connect(connectionName)</codeph>-Methode geöffnete Verbindung auf (im <i class="+ topic/ph hi-d/i ">empfangenden LocalConnection-Objekt</i>). Das mit der <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Methode verwendete Objekt ist das <i class="+ topic/ph hi-d/i ">sendende LocalConnection-Objekt</i>. Die SWF-Dateien, die das sendende und das empfangende Objekt enthalten, müssen auf demselben Client-Computer ausgeführt werden.
     
     <p class="- topic/p ">Die Menge der Daten, die diesem Befehl als Parameter übergeben werden können, ist auf 40 Kilobyte begrenzt. Wenn <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> einen <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>-Fehler auslöst, die verwendete Syntax hingegen korrekt ist, versuchen Sie, die <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Anfragen in mehrere Befehle aufzuteilen, die jeweils weniger als 40 KB Daten enthalten.</p>
     
     <p class="- topic/p ">Wie unter <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> beschrieben, wird die aktuelle Superdomäne standardmäßig zu <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> hinzugefügt. Wenn Sie den Datenaustausch zwischen verschiedenen Domänen implementieren, müssen Sie <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> sowohl im sendenden als auch im empfangenden LocalConnection-Objekt so definieren, dass die aktuelle Superdomäne nicht zu <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> hinzugefügt wird. Hierzu stehen Ihnen zwei Methoden zur Wahl:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Beginnen Sie <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> sowohl für das sendende als auch für das empfangende LocalConnection-Objekt mit einem Unterstrich (_). Geben Sie in der Datei mit dem empfangenden Objekt mit <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> an, dass Verbindungen von allen Domänen akzeptiert werden. Mit dieser Implementierung können Sie sendende und empfangende Dateien in jeder Domäne speichern.</li><li class="- topic/li ">Schließen Sie die Superdomäne in <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in das sendende LocalConnection-Objekt ein, z. B. <codeph class="+ topic/ph pr-d/codeph ">myDomain.com:myConnectionName</codeph>. Geben Sie im empfangenden Objekt mit <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> an, dass Verbindungen von der angegebenen Superdomäne akzeptiert werden (in diesem Fall myDomain.com) oder dass Verbindungen von allen Domänen akzeptiert werden.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Sie können in <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> im empfangenden LocalConnection-Objekt keine Superdomäne angeben - dies ist nur im sendenden LocalConnection-Objekt möglich.</p>
     
     <p class="- topic/p ">Bedenken Sie beim Einsatz dieser Methode das Sicherheitsmodell von <ph class="- topic/ph ">Flash Player</ph>. In der Standardeinstellung wird ein LocalConnection-Objekt mit der Sandbox der erstellenden Datei verknüpft. Domänenübergreifende Aufrufe für LocalConnection-Objekte sind nur dann zulässig, wenn Sie in der empfangenden Datei die Methode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> aufrufen. Für SWF-Inhalt, der im Browser ausgeführt wird, können Sie eine Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt beinhaltet, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen. In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph ">der Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links><adobeApiEvent id="flash.net:LocalConnection:send_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde mit <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> versucht, mit einer SWF-Datei in einer Sicherheitssandbox zu kommunizieren, auf die der aufrufende Code keinen Zugriff hat. Sie können dieses Problem in der Implementierung des Empfängers von <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> umgehen.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Es wurde mit LocalConnection.send() versucht, mit einer SWF-Datei in einer Sicherheitssandbox zu kommunizieren, auf die der aufrufende Code keinen Zugriff hat.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection:send_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Wert der <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph> ist, war der Aufruf erfolgreich. Wenn der Wert <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph> ist, ist der Aufruf fehlgeschlagen. Der Aufruf kann fehlschlagen, wenn die empfangende SWF-Datei die Verbindung nicht zulässt.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wenn die level-Eigenschaft den Wert „status“ aufweist, war der Aufruf erfolgreich; der Wert „error“ gibt an, dass der Aufruf fehlgeschlagen ist.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:LocalConnection:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft muss auf ein Objekt eingestellt werden, das nicht null ist.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden. Standardeinstellung ist das erstellte LocalConnection-Objekt <codeph class="+ topic/ph pr-d/codeph ">this</codeph>. Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft auf ein anderes Objekt einstellen, werden die Callback-Methoden bei dem eingestellten Objekt aufgerufen.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:LocalConnection:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
     Ein String, der die Domäne des Pfads der aktuellen Datei angibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.domain, domain
     
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein String, der die Domäne des Pfads der aktuellen Datei angibt.
     
     <p class="- topic/p ">Bei Inhalt, der in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph "> der Anwendung </codeph> Adobe AIR ausgeführt wird (Inhalt, der mit der AIR-Anwendung installiert wurde), verwendet die Laufzeit den String <codeph class="+ topic/ph pr-d/codeph ">app#</codeph> gefolgt von der Anwendungs-ID für die AIR-Anwendung (definiert in der Anwendungsdeskriptordatei) anstelle der Superdomäne. So wird zum Beispiel ein <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> für eine Anwendung mit der Anwendungs-ID <codeph class="+ topic/ph pr-d/codeph ">com.example.air.MyApp</codeph> <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> in <codeph class="+ topic/ph pr-d/codeph ">"app#com.example.air.MyApp:connectionName"</codeph> aufgelöst.</p>
     
     <p class="- topic/p ">In für Flash Player 9 oder neuere Versionen veröffentlichten SWF-Dateien entspricht der zurückgegebene String der exakten Domäne der Datei, einschließlich Subdomänen. Wenn die Datei beispielsweise unter www.adobe.com gespeichert ist, gibt dieser Befehl <codeph class="+ topic/ph pr-d/codeph ">"www.adobe.com"</codeph> zurück. </p>
     
     <p class="- topic/p ">Wenn die aktuelle Datei eine lokale Datei auf dem Client-Computer ist, die in Flash Player ausgeführt wird, gibt dieser Befehl <codeph class="+ topic/ph pr-d/codeph ">"localhost"</codeph> zurück.</p>
     
     <p class="- topic/p ">Gewöhnlich wird bei dieser Eigenschaft der Domänenname des sendenden LocalConnection-Objekts als Parameter in die Methode einbezogen, die Sie im empfangenden LocalConnection-Objekt oder mit <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> aufrufen möchten, um Befehle von einer angegebenen Domäne zu akzeptieren. Wenn Sie den Datenaustausch nur zwischen LocalConnection-Objekten derselben Domäne aktivieren, ist diese Eigenschaft nicht erforderlich.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:LocalConnection:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Die isSupported-Eigenschaft hat den Wert „true“, wenn die LocalConnection-Klasse von der aktuellen Plattform unterstützt wird, andernfalls hat sie den Wert „false“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph>-Eigenschaft hat den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die LocalConnection-Klasse von der aktuellen Plattform unterstützt wird, andernfalls hat sie den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:LocalConnection:isPerUser:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isPerUser</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStream</apiName><shortdesc class="- topic/shortdesc ">
 Die NetStream-Klasse öffnet einen unidirektionalen Streamingkanal über eine NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NetStream-Klasse öffnet einen unidirektionalen Streamingkanal über eine NetConnection.
 
 <p class="- topic/p "> Verwenden Sie die NetStream-Klasse für die folgenden Aufgaben:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> auf, um eine Mediendatei von einer lokalen Festplatte, einem Webserver oder Flash Media Server abzuspielen.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> auf, um einen Video-, Audio- oder Datenstream für Flash Media Server zu veröffentlichen.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> auf, um Datennachrichten an alle abonnierten Clients zu senden.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> auf, um einem Live-Stream Metadaten hinzuzufügen.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes</codeph> auf, um ByteArray-Daten an den NetStream zu übergeben.</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b>Sie können einen Stream nicht über dasselbe NetStream-Objekt abspielen und veröffentlichen.</p>
 
 <p class="- topic/p ">Adobe AIR sowie Flash Player 9.0.115.0 und neuere Versionen unterstützen Dateien, die aus dem MPEG-4-Standardcontainerformat abgeleitet werden. Zu diesen Dateien gehören F4V, MP4, M4A, MOV, MP4V, 3GP und 3G2, wenn sie H.264-Video, mit HEAAC v2 kodiertes Audio oder beides enthalten. Mit H.264 ist die Videoqualität im Vergleich zu demselben Codierungsprofil in Sorenson oder On2 bei niedrigeren Bitraten höher. AAC ist ein Standardaudioformat, das im Videostandard MPEG-4 definiert ist. HE-AAC v2 ist eine Erweiterung von AAC, die Spectral Band Replication (SBR) und Parametric Stereo (PS) verwendet, damit bei niedrigeren Bitraten effizienter kodiert werden kann. </p>
 
 <p class="- topic/p ">Informationen zu unterstützten Codecs und Dateiformaten finden Sie hier:</p>
 
 <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">Flash Media Server-Dokumentation</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/hardware_scaling_en" scope="external" class="- topic/xref ">Exploring Flash Player support for high-definition H.264 video and AAC audio</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/video_file_format_de" scope="external" class="- topic/xref ">FLV/F4V open specification documents</xref></li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Empfangen von Daten aus einem Flash Media Server-Stream, einer progressiven F4V-Datei oder einer progressiven FLV-Datei</b></p>
 
 <p class="- topic/p ">Flash Media Server, F4V-Dateien und FLV-Dateien können Ereignisobjekte, die Daten enthalten, an bestimmten Datenpunkten während des Streaming oder der Wiedergabe senden. Sie können Daten aus einem Stream oder einer FLV-Datei während der Wiedergabe auf zwei Weisen handhaben:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">
 Verknüpfen Sie eine Client-Eigenschaft mit einer Ereignisprozedur, um das Datenobjekt zu empfangen. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft, um ein Objekt zu verknüpfen, das spezifische Datenhandhabungsfunktionen aufrufen soll. Das mit der <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft verknüpfte Objekt kann die folgenden Datenpunkte überwachen: <codeph class="+ topic/ph pr-d/codeph ">onCuePoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onImageData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onMetaData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onTextData()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph>. Schreiben Sie Prozeduren in diese Funktionen, um das während der Wiedergabe vom Stream zurückgegebene Datenobjekt zu verarbeiten. Weitere Informationen finden Sie unter der <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft.
 </li><li class="- topic/li ">
 Verknüpfen Sie eine Client-Eigenschaft mit einer Unterklasse der NetStream-Klasse und schreiben Sie anschließend eine Ereignisprozedur, um das Datenobjekt zu empfangen. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Sie können jedoch eine Unterklasse von NetStream erstellen und Ihre Ereignisprozedur in der Unterklasse definieren. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedur einer Instanz der Unterklasse hinzufügen.
 </li></ul>
 
 <p class="- topic/p ">Warten Sie, bis Sie ein <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph>-Ereignis erhalten, bevor Sie die Objektreplizierung verwenden, direkt weiterleiten oder APIs posten.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Um Daten über eine Audiodatei wie z. B. eine MP3-Datei zu senden, verwenden Sie die Sound-Klasse, um die Audiodatei mit einem Sound-Objekt zu verknüpfen. Verwenden Sie anschließend die <codeph class="+ topic/ph pr-d/codeph ">Sound.id3</codeph>-Eigenschaft, um Metadaten aus der Sounddatei zu lesen.</p>
 
 </apiDesc><example conref="examples\NetConnectionExample.as" class="- topic/example "> Im folgenden Beispiel wird ein Video-Objekt mit den Klassen NetConnection und NetStream verwendet, um eine FLV-Datei zu laden und abzuspielen. 
 <p class="- topic/p ">In diesem Fall wird der Code zur Erstellung des Video- und NetStream-Objekts und zum Aufrufen der Methoden <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> in eine Prozedurfunktion eingefügt. Die Prozedur wird nur aufgerufen, wenn die Verbindung mit dem NetConnection-Objekt erfolgreich hergestellt werden kann, d. h. wenn das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> ein <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekt mit einer <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft zurückgibt, die Erfolg angibt. Es wird empfohlen, die erfolgreiche Verbindungsherstellung abzuwarten, bevor Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aufrufen. </p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.NetStatusEvent;
    import flash.events.SecurityErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import flash.events.Event;

    public class NetConnectionExample extends Sprite {
        private var videoURL:String = "http://www.helpexamples.com/flash/video/cuepoints.flv";
        private var connection:NetConnection;
        private var stream:NetStream;
        private var video:Video = new Video();        

        public function NetConnectionExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Stream not found: " + videoURL);
                    break;
            }
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.client = new CustomClient();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }
    }
}

class CustomClient {
    public function onMetaData(info:Object):void {
        trace("metadata: duration=" + info.duration + " width=" + info.width + " height=" + info.height + " framerate=" + info.framerate);
    }
    public function onCuePoint(info:Object):void {
        trace("cuepoint: time=" + info.time + " name=" + info.name + " type=" + info.type);
    }
}
</codeblock></example><example conref="examples\NetConnectionExample.2.as" class="- topic/example "> Sie können Metadaten mithilfe einer Funktion abrufen, statt eine benutzerdefinierte Klasse zu erstellen. Die folgende, von <xref href="http://www.sandlight.com" scope="external" class="- topic/xref ">Bill Sanders</xref> vorgeschlagene Lösung zeigt, wie der obige NetConnectionExample-Code so bearbeitet werden kann, dass Metadaten in einer Funktion aufgerufen werden. In diesem Fall werden mithilfe des Objekts <codeph class="+ topic/ph pr-d/codeph ">mdata</codeph> die Breite und Höhe einer Videoinstanz <codeph class="+ topic/ph pr-d/codeph ">video</codeph> eingerichtet:
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
  //Place the following in the connectStream() function
  //in the NetConnectionExample code
  var metaSniffer:Object=new Object();  
  stream.client=metaSniffer; //stream is the NetStream instance  
  metaSniffer.onMetaData=getMeta;  
      
   
  // Add the following function within the NetConnectionExample class  
  private function getMeta (mdata:Object):void  
  {  
     video.width=mdata.width/2;  
     video.height=mdata.height/2;  
  }  
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">veröffentlichen()</linktext></link><link href="flash.net.xml#NetStream/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links><adobeApiEvent id="flash.net:NetStream_flash.events.NetDataEvent_mediaTypeData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mediaTypeData</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn Video abgespielt wird und bestimmte Meldungstypen verarbeitet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="3.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetDataEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn Video abgespielt wird und bestimmte Meldungstypen verarbeitet werden.
 
 <p class="- topic/p ">Ein NetDataEvent wird für die folgenden Nachrichten abgesetzt:</p>
 <ul class="- topic/ul "><li class="- topic/li ">onCuePoint</li><li class="- topic/li ">onImageData</li><li class="- topic/li ">onMetaData</li><li class="- topic/li ">onPlayStatus (für den Code NetStream.Play.Complete)</li><li class="- topic/li ">onTextData</li><li class="- topic/li ">onXMPData</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis wird nicht von Inhalten abgesetzt, die in Flash Player im Browser unter Android oder Blackberry Tablet OS oder in AIR unter iOS ausgeführt werden.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onSeekPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onSeekPoint</apiName><shortdesc class="- topic/shortdesc ">
 Wird synchron von appendBytes() aufgerufen, wenn der Append-Bytes-Parser auf einen Punkt trifft, den er als ansteuerbaren Punkt betrachtet (zum Beispiel ein Videoschlüsselbild).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird synchron von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> aufgerufen, wenn der Append-Bytes-Parser auf einen Punkt trifft, den er als ansteuerbaren Punkt betrachtet (zum Beispiel ein Videoschlüsselbild). Verwenden Sie dieses Ereignis, um eine Suchpunkttabelle zu konstruieren. Der <codeph class="+ topic/ph pr-d/codeph ">byteCount</codeph> entspricht dem <codeph class="+ topic/ph pr-d/codeph ">byteCount</codeph> beim ersten Byte der analysierbaren Meldung für diesen Suchpunkt und wird auf Null zurückgesetzt wie oben beschrieben. Für Suchläufe suchen Sie beim <codeph class="+ topic/ph pr-d/codeph ">NetStream.Seek.Notify</codeph>-Ereignis die Bytes, die an einem ansteuerbaren Punkt starten, und rufen <codeph class="+ topic/ph pr-d/codeph ">appendBytes(bytes)</codeph> auf. Wenn das <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph>-Argument ein <codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph> ist, das aus Bytes besteht, die beim ansteuerbaren Punkt beginnen, wird das Video ab diesem Suchpunkt abgespielt.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> aus diesem Rückruf heraus werden ignoriert.</p>
 
 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph>-Eigenschaft ist eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, da sie auf Daten reagiert, die in die <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>-Methode kommen. Weitere Informationen finden Sie in der NetStream-Klassenbeschreibung und der <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft. Die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode und die übrigen EventDispatcher-Methoden können nicht verwendet werden, um auf <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph> zu warten oder diese Eigenschaft als Ereignis zu verarbeiten. Um <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph> zu verwenden, definieren Sie eine Rückruffunktion und fügen sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Sie können jedoch eine Unterklasse von NetStream erstellen und Ihre Ereignisprozedur in der Unterklasse definieren. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMStatusEvent.DRM_STATUS_drmStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der DRM-verschlüsselte Inhalt (Digital Rights Management) abgespielt wird (wenn der Benutzer authentifiziert wurde und berechtigt ist, den Inhalt abzuspielen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMStatusEvent.DRM_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der DRM-verschlüsselte Inhalt (Digital Rights Management) abgespielt wird (wenn der Benutzer authentifiziert wurde und berechtigt ist, den Inhalt abzuspielen).
 <p class="- topic/p ">
 Das DRMStatusEvent-Objekt enthält Informationen zum Gutschein, zum Beispiel ob der Inhalt offline verfügbar ist oder wann der Gutschein abläuft und Benutzer den Inhalt nicht mehr anzeigen können.
 </p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMStatusEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMStatusEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMErrorEvent.DRM_ERROR_drmError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein NetStream-Objekt versucht, eine mit DRM (Digital Rights Management) verschlüsselte Datei abzuspielen und dabei ein DRM-Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMErrorEvent.DRM_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein NetStream-Objekt versucht, eine mit DRM (Digital Rights Management) verschlüsselte Datei abzuspielen und dabei ein DRM-Fehler auftritt. Ein DRMErrorEvent-Objekt wird zum Beispiel ausgelöst, wenn die Benutzerautorisierung fehlschlägt. Dies kann daran liegen, dass der Benutzer die Berechtigung zum Anzeigen des Inhalts nicht erworben hat oder dass der Content Provider das Anzeigen der Anwendung nicht unterstützt.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMErrorEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein NetStream-Objekt versucht, mit DRM (Digital Rights Management) verschlüsselten Inhalt abzuspielen, für den Benutzerdaten zur Authentifizierung erforderlich sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMAuthenticateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein NetStream-Objekt versucht, mit DRM (Digital Rights Management) verschlüsselten Inhalt abzuspielen, für den Benutzerdaten zur Authentifizierung erforderlich sind.
 
 <p class="- topic/p ">
 Authentifizieren Sie den Benutzer mit der <codeph class="+ topic/ph pr-d/codeph "> setDRMAuthenticationCredentials()</codeph>-Methode des NetStream-Objekts. Wenn die Benutzerauthentifizierung fehlschlägt, startet die Anwendung einen neuen Versuch und setzt ein neues DRMAuthenticateEvent-Ereignis für das NetStream-Objekts ab.
 </p>
 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMAuthenticateEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onDRMContentData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onDRMContentData</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn AIR DRM-Inhalts-Metadaten extrahiert, die in einer Mediendatei eingebettet sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn AIR DRM-Inhalts-Metadaten extrahiert, die in einer Mediendatei eingebettet sind.
 
 <p class="- topic/p ">Ein DRMContentData-Objekt enthält die notwendigen Informationen, um einen Gutschein zu erhalten, der zur Wiedergabe einer DRM-geschützten Mediendatei erforderlich ist. Verwenden Sie die DRMManager-Klasse, um den Gutschein mit diesen Informationen herunterzuladen.</p>
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> ist eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Diese Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie beim Vorabladen eingebetteter Daten aus einer lokalen Mediendatei auf ein Datenereignis reagiert. Weitere Informationen finden Sie in der Beschreibung der NetStream-Klasse. Sie können die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode bzw. andere EventDispatcher-Methoden nicht verwenden, um <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> zu überwachen oder als ein Ereignis zu verarbeiten. Stattdessen müssen Sie eine einzelne Callback-Funktion definieren und direkt an eines der folgenden Objekte anhängen:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Sie können jedoch eine Unterklasse für „NetStream“ erstellen und die Ereignisprozedur in der Unterklasse definieren oder die Unterklasse als dynamisch festlegen und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMContentData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMContentData</linktext></link><link href="flash.net.xml#NetStream/preloadEmbeddedData()" class="- topic/link "><linktext class="- topic/linktext ">preloadEmbeddedData()</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onPlayStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onPlayStatus</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn ein NetStream-Objekt einen Stream vollständig abgespielt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn ein NetStream-Objekt einen Stream vollständig abgespielt hat. Das verknüpfte Ereignisobjekt liefert zusätzliche Informationen zu dem, was vom <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis zurückgegeben wird. Sie können diese Eigenschaft verwenden, um Aktionen in Ihrem Code auszulösen, wenn ein NetStream-Objekt von einem Stream zu einem anderen Stream in einer Wiedergabeliste gewechselt hat (wie durch das Informationsobjekt <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Switch</codeph> angegeben) oder wenn ein NetStream-Objekt bis zum Ende abgespielt wurde (wie durch das Informationsobjekt <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Complete</codeph> angegeben).
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der Beschreibung der NetStream-Klasse. Sie können die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode bzw. andere EventDispatcher-Methoden nicht verwenden, um <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph> zu überwachen oder als ein Ereignis zu verarbeiten. Definieren Sie eine Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Erstellen Sie eine Unterklasse von NetStream und definieren Sie Ihre Ereignisprozedur in der Unterklasse. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Dieses Ereignis kann ein Informationsobjekt mit den folgenden Eigenschaften zurückgeben:</p>

 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Code-Eigenschaft</entry><entry class="- topic/entry ">Level-Eigenschaft</entry><entry class="- topic/entry ">Bedeutung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Switch</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Abonnent wechselt von einem Stream zu einem anderen Stream in der Wiedergabeliste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Complete</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die Wiedergabe ist abgeschlossen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.TransitionComplete</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Abonnent wechselt als Ergebnis des Stream-Bitratenwechsels zu einem neuen Stream.</entry></row></tbody></tgroup></adobetable>
 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.NET_STATUS</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onCuePoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onCuePoint</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn während des Abspielens einer Videodatei ein eingebetteter Cue-Point erreicht wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn während des Abspielens einer Videodatei ein eingebetteter Cue-Point erreicht wird. Sie können den Listener verwenden, um Aktionen in Ihrem Code auszulösen, wenn das Video einen bestimmten Cue-Punkt erreicht, an dem Sie andere Aktionen in Ihrer Anwendung mit Videoabspielereignissen synchronisieren können. Weitere Informationen zu Videoformaten, die vom Flash Media Server unterstützt werden, finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.

 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der Beschreibung der NetStream-Klasse. Sie können die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode bzw. andere EventDispatcher-Methoden nicht verwenden, um <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> zu überwachen oder als ein Ereignis zu verarbeiten. Definieren Sie eine Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Erstellen Sie eine Unterklasse von NetStream und definieren Sie Ihre Ereignisprozedur in der Unterklasse. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Der verknüpfte Ereignis-Listener wird nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, aber noch vor dem Vorlauf des Abspielkopfes ausgelöst.</p>
 
 <p class="- topic/p ">Sie können die folgenden Arten von Cue-Points in eine Videodatei einbetten:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Ein Navigations-Cue-Point gibt ein Schlüsselbild innerhalb der Videodatei an, wobei die <codeph class="+ topic/ph pr-d/codeph ">time</codeph>-Eigenschaft des Cue-Points exakt dem Schlüsselbild entspricht. Navigations-Cue-Points werden oft als Lesezeichen oder Eingangspunkte verwendet, anhand derer die Benutzer durch die Videodatei navigieren können.</li><li class="- topic/li ">Ein Ereignis-Cue-Point gibt eine Zeit an. Die Zeit kann einem bestimmten Schlüsselbild entsprechen, dies muss jedoch nicht so sein. Ein Ereignis-Cue-Point steht in der Regel für einen Zeitpunkt eines Ereignisses im Video, das zur Auslösung anderer Anwendungsereignisse verwendet werden kann.</li></ul>
 
 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph>-Ereignisobjekt hat folgende Eigenschaften:</p>
 
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Beschreibung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Der dem Cue-Point bei der Einbettung in die Videodatei zugewiesene Name.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">parameters</codeph></entry><entry class="- topic/entry ">Ein assoziatives Array mit Name/Wert-Paar-Strings, die für diesen Cue-Punkt spezifiziert sind. Für Name und Wert des Parameters können beliebige Strings verwendet werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">time</codeph></entry><entry class="- topic/entry ">Die Angabe des Zeitpunkts in Sekunden, zu dem der Cue-Point während der Wiedergabe im Video auftritt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry ">Der Typ des erreichten Cue-Points (Navigation oder Ereignis).</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">Sie können Cue-Points beim ersten Kodieren der Videodatei oder beim Importieren eines Videoclips in das Flash-Authoring-Tool mit dem Videoimportassistenten einfügen.</p>
 
 <p class="- topic/p ">Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ruft auch Informationen über die Cue-Points in einer Videodatei ab. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ruft jedoch Informationen über alle Cue-Points ab, bevor die Wiedergabe des Videos gestartet wird. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> ruft dagegen Informationen über einen einzelnen Cue-Point zu dem für diesen Cue-Point festgelegten Zeitpunkt während der Wiedergabe ab.</p>
 
 <p class="- topic/p ">Wenn Sie bei einem bestimmten Cue-Point zu dem Zeitpunkt, zu dem er in der Wiedergabe auftritt, eine Aktion im Code auslösen möchten, verwenden Sie das Ereignis <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph>.</p>
 
 <p class="- topic/p ">Mit der für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> bereitgestellten Liste von Cue-Points können Sie den Benutzern ermöglichen, die Wiedergabe an vordefinierten Punkten im Videostream zu starten. Übergeben Sie den Wert der <codeph class="+ topic/ph pr-d/codeph ">time</codeph>-Eigenschaft des Cue-Point an die Methode <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph>, um die Wiedergabe des Videos ab diesem Cue-Point zu starten.</p>
 
 </apiDesc><example conref="examples\NetStream_onCuePoint.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie externe FLV-Dateien laden und auf Metadaten und Cue-Points reagieren können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/02/26/loading-flv-files-in-actionscript-30-using-the-netconnection-and-netstream-classes/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var video:Video = new Video();
addChild(video);
 
var nc:NetConnection = new NetConnection();
nc.connect(null);
 
var ns:NetStream = new NetStream(nc);
ns.client = {};
ns.client.onMetaData = ns_onMetaData;
ns.client.onCuePoint = ns_onCuePoint;
ns.play("http://www.helpexamples.com/flash/video/cuepoints.flv");
 
video.attachNetStream(ns);
 
function ns_onMetaData(item:Object):void {
    trace("metaData");
    // Resize video instance.
    video.width = item.width;
    video.height = item.height;
    // Center video instance on Stage.
    video.x = (stage.stageWidth - video.width) / 2;
    video.y = (stage.stageHeight - video.height) / 2;
}
 
function ns_onCuePoint(item:Object):void {
    trace("cuePoint");
    trace(item.name + "\t" + item.time);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onTextData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onTextData</apiName><shortdesc class="- topic/shortdesc ">
  Erstellt einen Listener, der reagiert, wenn Flash Player Textdaten empfängt, die in einer aktuell abgespielten Mediendatei eingebettet sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Erstellt einen Listener, der reagiert, wenn Flash Player Textdaten empfängt, die in einer aktuell abgespielten Mediendatei eingebettet sind. Die Textdaten sind im Format UTF-8 und können Informationen über Formatierungen basierend auf der 3GP-Timed-Textspezifikation enthalten.
  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der Beschreibung der NetStream-Klasse. Sie können die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode bzw. andere EventDispatcher-Methoden nicht verwenden, um <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> zu überwachen oder als ein Ereignis zu verarbeiten. Definieren Sie eine Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Erstellen Sie eine Unterklasse von NetStream und definieren Sie Ihre Ereignisprozedur in der Unterklasse. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Der verknüpfte Ereignis-Listener wird nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, aber noch vor dem Vorlauf des Abspielkopfes ausgelöst.</p>
  
  <p class="- topic/p ">Das onTextData-Ereignisobjekt enthält eine Eigenschaft für jeden Textdatenteil.</p>
  
  </apiDesc><example conref="examples\OnTextDataExample.as" class="- topic/example "> Der Code in diesem Beispiel verwendet die <codeph class="+ topic/ph pr-d/codeph ">Netstream.client</codeph>-Eigenschaft, um die Callback-Funktionen für <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> und <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> zu verarbeiten. Die <codeph class="+ topic/ph pr-d/codeph ">onImageDataHandler()</codeph>-Funktion verwendet das onImageData-Ereignisobjekt <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph>, um das Bytearray zu speichern. Zusätzlich verwendet die <codeph class="+ topic/ph pr-d/codeph ">onTextDataHandler()</codeph>-Funktion das onTextData-Ereignisobjekt <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>, um Teile von Textdaten zu speichern (jeder Datenteil ist eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>-Objekts).
 <p class="- topic/p ">Sie müssen den <codeph class="+ topic/ph pr-d/codeph ">"yourURL"</codeph>-Speicherort im Code durch einen realen Speicherort für eine Mediendatei mit Text- oder Bildmetadaten ersetzen.</p>
 <p class="- topic/p "> Sie können auch Bild- und Textdaten mithilfe einer benutzerdefinierten Klasse verarbeiten. Weitere Informationen und Beispiele finden Sie im Artikel <xref href="http://www.adobe.com/devnet/flash/quickstart" scope="external" class="- topic/xref ">Verarbeiten von Metadaten und Cue-Points in Flash Video</xref>.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.*;
    import flash.net.*;
    import flash.media.*;
    import flash.system.*;
    import flash.events.*;

        public class OnTextDataExample extends Sprite {
                                              
            public function OnTextDataExample():void {

                var customClient:Object = new Object();
                customClient.onImageData = onImageDataHandler;           
                customClient.onTextData = onTextDataHandler;               

                var my_nc:NetConnection = new NetConnection();
                my_nc.connect(null);
                var my_ns:NetStream = new NetStream(my_nc);
                my_ns.play("yourURL");
                my_ns.client = customClient;

                var my_video:Video = new Video();
                my_video.attachNetStream(my_ns);
                addChild(my_video);

            }

            public function onImageDataHandler(imageData:Object):void {

                trace("imageData length: " + imageData.data.length);
                var imageloader:Loader = new Loader();           
                imageloader.loadBytes(imageData.data); // imageData.data is a ByteArray object.
                addChild(imageloader);
            }

    
            public function onTextDataHandler(textData:Object):void {

                trace("--- textData properties ----");
                var key:String;

                for (key in textData) {
                    trace(key + ": " + textData[key]);
                }
            }

        }

}

</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onImageData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onImageData</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player Bilddaten als Bytearray erhält, das in einer Mediendatei eingebettet ist, die aktuell abgespielt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player Bilddaten als Bytearray erhält, das in einer Mediendatei eingebettet ist, die aktuell abgespielt wird. Die Bilddaten können entweder JPEG-, PNG- oder GIF-Inhalt erzeugen. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">flash.display.Loader.loadBytes()</codeph>-Methode, um das Bytearray in ein Anzeigeobjekt zu laden.
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der Beschreibung der NetStream-Klasse. Sie können die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode bzw. andere EventDispatcher-Methoden nicht verwenden, um <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> zu überwachen oder als ein Ereignis zu verarbeiten. Definieren Sie eine einzelne Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Erstellen Sie eine Unterklasse von NetStream und definieren Sie Ihre Ereignisprozedur in der Unterklasse. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Der verknüpfte Ereignis-Listener wird nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, aber noch vor dem Vorlauf des Abspielkopfes ausgelöst.</p>
 
 <p class="- topic/p ">Das onImageData-Ereignisobjekt enthält die Bilddaten als ein Bytearray, das über einen AMF0-Datenkanal gesendet wird.</p>
 
 </apiDesc><example conref="examples\OnTextDataExample.as" class="- topic/example "> Der Code in diesem Beispiel verwendet die <codeph class="+ topic/ph pr-d/codeph ">Netstream.client</codeph>-Eigenschaft, um die Callback-Funktionen für <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> und <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> zu verarbeiten. Die <codeph class="+ topic/ph pr-d/codeph ">onImageDataHandler()</codeph>-Funktion verwendet das onImageData-Ereignisobjekt <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph>, um das Bytearray zu speichern. Zusätzlich verwendet die <codeph class="+ topic/ph pr-d/codeph ">onTextDataHandler()</codeph>-Funktion das onTextData-Ereignisobjekt <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>, um Teile von Textdaten zu speichern (jeder Datenteil ist eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>-Objekts).
 <p class="- topic/p ">Sie müssen den <codeph class="+ topic/ph pr-d/codeph ">"yourURL"</codeph>-Speicherort im Code durch einen realen Speicherort für eine Mediendatei mit Text- oder Bildmetadaten ersetzen.</p>
 <p class="- topic/p "> Sie können auch Bild- und Textdaten mithilfe einer benutzerdefinierten Klasse verarbeiten. Weitere Informationen und Beispiele finden Sie im Artikel <xref href="http://www.adobe.com/devnet/flash/quickstart" scope="external" class="- topic/xref ">Verarbeiten von Metadaten und Cue-Points in Flash Video</xref>.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.*;
    import flash.net.*;
    import flash.media.*;
    import flash.system.*;
    import flash.events.*;

        public class OnTextDataExample extends Sprite {
                                              
            public function OnTextDataExample():void {

                var customClient:Object = new Object();
                customClient.onImageData = onImageDataHandler;           
                customClient.onTextData = onTextDataHandler;               

                var my_nc:NetConnection = new NetConnection();
                my_nc.connect(null);
                var my_ns:NetStream = new NetStream(my_nc);
                my_ns.play("yourURL");
                my_ns.client = customClient;

                var my_video:Video = new Video();
                my_video.attachNetStream(my_ns);
                addChild(my_video);

            }

            public function onImageDataHandler(imageData:Object):void {

                trace("imageData length: " + imageData.data.length);
                var imageloader:Loader = new Loader();           
                imageloader.loadBytes(imageData.data); // imageData.data is a ByteArray object.
                addChild(imageloader);
            }

    
            public function onTextDataHandler(textData:Object):void {

                trace("--- textData properties ----");
                var key:String;

                for (key in textData) {
                    trace(key + ": " + textData[key]);
                }
            }

        }

}

</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/event:onTextData" class="- topic/link "><linktext class="- topic/linktext ">onTextData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onMetaData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onMetaData</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player beschreibende Informationen erhält, die in ein Video eingebettet sind, das aktuell abgespielt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player beschreibende Informationen erhält, die in ein Video eingebettet sind, das aktuell abgespielt wird. Weitere Informationen zu Videoformaten, die vom Flash Media Server unterstützt werden, finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der NetStream-Klassenbeschreibung und der <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft. Die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode und die übrigen EventDispatcher-Methoden können nicht verwendet werden, um auf <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> zu warten oder diese Eigenschaft als Ereignis zu verarbeiten. Definieren Sie eine einzelne Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Sie können eine Unterklasse von NetStream erstellen und Ihre Ereignisprozedur in der Unterklasse definieren. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Das Dienstprogramm Flash Video Exporter (ab Version 1.1) bettet die Dauer, das Erstellungsdatum, die Datenrate und andere Angaben in die Videodatei selbst ein. Von anderen Videokodierern werden andere Metadaten eingebettet.</p>
 
 <p class="- topic/p ">Der verknüpfte Ereignis-Listener wird nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, aber noch vor dem Vorlauf des Abspielkopfes ausgelöst.</p>
 
 <p class="- topic/p ">Häufig ist die in den Stream-Metadaten eingebettete Längenangabe nur ein ungefährer Wert. Das bedeutet, dass dieser Wert nicht immer mit dem Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> übereinstimmt, wenn der Abspielkopf das Ende des Videostreams erreicht hat.</p>
 <p class="- topic/p ">Das Ereignisobjekt, das an die onMetaData-Ereignisprozedur übergeben wurde, enthält eine Eigenschaft für jeden Textdatenteil.</p>
 
 </apiDesc><example conref="examples\NetStream_onCuePoint.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie Sie externe FLV-Dateien laden und auf Metadaten und Cue-Points reagieren können. Beispiel bereitgestellt von <xref href="http://actionscriptexamples.com/2008/02/26/loading-flv-files-in-actionscript-30-using-the-netconnection-and-netstream-classes/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var video:Video = new Video();
addChild(video);
 
var nc:NetConnection = new NetConnection();
nc.connect(null);
 
var ns:NetStream = new NetStream(nc);
ns.client = {};
ns.client.onMetaData = ns_onMetaData;
ns.client.onCuePoint = ns_onCuePoint;
ns.play("http://www.helpexamples.com/flash/video/cuepoints.flv");
 
video.attachNetStream(ns);
 
function ns_onMetaData(item:Object):void {
    trace("metaData");
    // Resize video instance.
    video.width = item.width;
    video.height = item.height;
    // Center video instance on Stage.
    video.x = (stage.stageWidth - video.width) / 2;
    video.y = (stage.stageHeight - video.height) / 2;
}
 
function ns_onCuePoint(item:Object):void {
    trace("cuePoint");
    trace(item.name + "\t" + item.time);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onXMPData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onXMPData</apiName><shortdesc class="- topic/shortdesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player Informationen empfängt, die spezifisch für die Adobe Extensible Metadata Platform (XMP) sind und die in einem Video eingebettet sind, das aktuell abgespielt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Erstellt einen Listener, der reagiert, wenn Flash Player Informationen empfängt, die spezifisch für die Adobe Extensible Metadata Platform (XMP) sind und die in einem Video eingebettet sind, das aktuell abgespielt wird. Weitere Informationen zu Videoformaten, die vom Flash Media Server unterstützt werden, finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onXMPData</codeph> ist eigentlich eine Eigenschaft des <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Objekts. Die Eigenschaft wird im Abschnitt „Ereignisse“ aufgeführt, weil sie auf ein Datenereignis reagiert, wenn entweder mit dem Media Flash Player gestreamt oder eine FLV-Datei wiedergegeben wird. Weitere Informationen finden Sie in der NetStream-Klassenbeschreibung und der <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>-Eigenschaft. Die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode und die übrigen EventDispatcher-Methoden können nicht verwendet werden, um auf <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> zu warten oder diese Eigenschaft als Ereignis zu verarbeiten. Definieren Sie eine Rückruffunktion und fügen Sie sie einem der folgenden Objekte hinzu:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Das Objekt, auf das die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einer NetStream-Instanz verweist.</li><li class="- topic/li ">Eine Instanz einer NetStream-Unterklasse. Bei „NetStream“ handelt es sich um eine „versiegelte“ Klasse, d. h., dass einem NetStream-Objekt zur Laufzeit keine Eigenschaften oder Methoden hinzugefügt werden können. Sie können jedoch eine Unterklasse von NetStream erstellen und Ihre Ereignisprozedur in der Unterklasse definieren. Sie können die Unterklasse als dynamische Klasse definieren und die Ereignisprozedurfunktion einer Instanz der Unterklasse hinzufügen.</li></ul>
 
 <p class="- topic/p ">Der verknüpfte Ereignis-Listener wird nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, aber noch vor dem Vorlauf des Abspielkopfes ausgelöst.</p>
 
 <p class="- topic/p ">Das Objekt, das an die <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph>-Ereignisprozedurfunktion übergeben wurde, hat eine <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft, die ein String ist. Der String wird von einer Top-Level UUID-Box generiert. (Die 128-Bit-UUID der Top-Level-Box ist <codeph class="+ topic/ph pr-d/codeph ">BE7ACFCB-97A9-42E8-9C71-999491E3AFAC</codeph>.) Diese Top-Level UUID-Box enthält exakt ein XML-Dokument, das als nullterminierter UTF8-String repräsentiert ist.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung eines NetStream-Objekts protokolliert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung eines NetStream-Objekts protokolliert wird. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> enthält die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. Dabei handelt es sich um ein Informationsobjekt mit spezifischen Informationen über das Ereignis, z. B., ob ein Verbindungsversuch erfolgreich war oder fehlgeschlagen ist.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Netzwerkvorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Netzwerkvorgang fehlschlägt.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron, d. h. aus nativem asynchronem Code ausgelöst wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron ausgelöst wird – das heißt, aus nativem asynchronem Code. Dieses Ereignis wird ausgelöst, wenn ein Server eine Methode auf einem Client aufruft, die nicht definiert ist.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onPlayStatus" class="- topic/link "><linktext class="- topic/linktext ">onPlayStatus</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn die Anwendung versucht, mit DRM (Digital Rights Management) verschlüsselten Inhalt abzuspielen, indem die NetStream.play()-Methode aufgerufen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn die Anwendung versucht, mit DRM (Digital Rights Management) verschlüsselten Inhalt abzuspielen, indem die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode aufgerufen wird. Der Wert der Statuscode-Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">"DRM.encryptedFLV"</codeph>.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:NetStream:NetStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStream</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt einen Stream, mit dem Sie Mediendateien abspielen und Daten über ein NetConnection-Objekt senden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, constructor
     
      </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die NetConnection-Instanz ist nicht verbunden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein NetConnection-Objekt.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">connectToFMS</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser optionale Parameter ist in Flash Player 10 und höher für die Verwendung mit RTMFP-Verbindungen verfügbar. (Wenn der Wert der <codeph class="+ topic/ph pr-d/codeph ">NetConnection.protocol</codeph>-Eigenschaft nicht <codeph class="+ topic/ph pr-d/codeph ">"rtmfp"</codeph> ist, wird dieser Parameter ignoriert.) Verwenden Sie einen der folgenden Werte:
     
     <ul class="- topic/ul "><li class="- topic/li ">Um eine Verbindung mit Flash Media Server herzustellen, geben Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.CONNECT_TO_FMS</codeph> an. </li><li class="- topic/li ">Um direkt für Peers zu veröffentlichen, geben Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.DIRECT_CONNECTIONS</codeph> an.</li><li class="- topic/li ">Um direkt von einem bestimmten Peer zu veröffentlichen, geben Sie die Identität dieses Peers an (siehe <codeph class="+ topic/ph pr-d/codeph ">NetConnection.nearID</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStream.farID</codeph>).</li><li class="- topic/li ">(Flash Player 10.1 oder AIR 2 oder höher) Um in einer Peer-to-Peer-Multicast-Gruppe einen Stream zu veröffentlichen oder abzuspielen, geben Sie einen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String an (siehe Beschreibung der GroupSpecifier-Klasse).</li></ul>
     
     <p class="- topic/p ">In den meisten Fällen hat eine <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> das Potenzial zur Verwendung des Netzwerk-Uplinks im lokalen System. In diesem Fall wird der Benutzer gefragt, ob er die Nutzung der Netzwerkressourcen des Computers zulässt. Wenn der Benutzer diese Nutzung erlaubt, wird ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Success</codeph> NetStatusEvent an den Ereignis-Listener von NetConnection gesendet. Wenn der Benutzer die Berechtigung verweigert, wird ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Rejected</codeph>-Ereignis gesendet. Wenn Sie einen <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>-String angeben, ist es bis zum Empfangen eines <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Success</codeph>-Ereignisses ein Fehler, eine der Methoden des NetStream-Objekts zu verwenden, und es wird eine Ausnahme ausgegeben.</p>
     
     
     <p class="- topic/p ">Wenn Sie diesen Parameter in Ihre Konstruktoranweisung einschließen, aber den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> übergeben, wird dieser Wert auf <codeph class="+ topic/ph pr-d/codeph ">"connectToFMS"</codeph> gesetzt.</p>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt einen Stream, mit dem Sie Mediendateien abspielen und Daten über ein NetConnection-Objekt senden können.
     
     </apiDesc><example conref="examples\NetStreamExample_constructor.as" class="- topic/example "> Der folgende Code zeigt eine Verbindung für den Download und die progressive Anzeige eines Videos, das mit der Variablen <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph> verknüpft ist:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
            var my_nc:NetConnection = new NetConnection();
            my_nc.connect(null);
            var my_ns:NetStream = new NetStream(my_nc);
            my_ns.play(videoURL);
            var my_video:Video = new Video();
            my_video.attachNetStream(my_ns);
            addChild(my_video);
</codeblock></example><example conref="examples\NetStreamExample_constructor2.as" class="- topic/example "> Der folgende Code zeigt eine Verbindung für das Streamen und die Anzeige eines Videos (das mit der Variablen <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph>) auf einer remoten Flash Media Server-Instanz verknüpft ist, die im <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Befehl angegeben ist:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
            var my_nc:NetConnection = new NetConnection();
            my_nc.connect("rtmp://www.yourfmsserver.com/someappname");
            var my_ns:NetStream = new NetStream(my_nc, NetStream.CONNECT_TO_FMS);
            my_ns.play(videoURL);
            var my_video:Video = new Video();
            my_video.attachNetStream(my_ns);
            addChild(my_video);
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/CONNECT_TO_FMS" class="- topic/link "><linktext class="- topic/linktext ">CONNECT_TO_FMS</linktext></link><link href="flash.net.xml#NetStream/DIRECT_CONNECTIONS" class="- topic/link "><linktext class="- topic/linktext ">DIRECT_CONNECTIONS</linktext></link><link href="flash.net.xml#NetStream/farID" class="- topic/link "><linktext class="- topic/linktext ">farID</linktext></link><link href="flash.media.xml#Video/attachCamera()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video.attachCamera()</linktext></link><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/multicastEnabled" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.multicastEnabled</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.nearID</linktext></link><link href="flash.net.xml#NetConnection/protocol" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.protocol</linktext></link><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetStream_Connect_Rejected" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetStream.Connect.Rejected"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetStream_Connect_Success" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetStream.Connect.Success"</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetStream:appendBytesAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">appendBytesAction</apiName><shortdesc class="- topic/shortdesc ">
     Zeigt eine Diskontinuität der Zeitskala an, leert den FIFO und teilt dem Byte-Parser mit, einen Datei-Header oder den Anfang eines FLV-Tags zu erwarten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netStreamAppendBytesAction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Zeigt eine Diskontinuität der Zeitskala an, leert den FIFO und teilt dem Byte-Parser mit, einen Datei-Header oder den Anfang eines FLV-Tags zu erwarten.
     
     <p class="- topic/p ">
     Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> leeren die NetStream-Pufferspeicher. Der Byte-Parser verbleibt im Leeren-Modus, bis Sie <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> aufrufen und das Argument <codeph class="+ topic/ph pr-d/codeph ">RESET_BEGIN</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">RESET_SEEK</codeph> übergeben. Erfassen Sie das <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.Notify"</codeph>-Ereignis, um <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> nach einem Suchlauf aufzurufen. Ein neuer Datei-Header kann Wiedergabelisten und Suchläufe unterstützen, ohne <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> aufzurufen.
     </p>
     
     <p class="- topic/p ">
     Sie können diese Methode auch aufrufen, um den Bytezähler für den <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>-Rückruf zurückzusetzen.
     </p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link><link href="flash.net.xml#NetStreamAppendBytesAction" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamAppendBytesAction</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:appendBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">appendBytes</apiName><shortdesc class="- topic/shortdesc ">
     Übergibt ein ByteArray für die Wiedergabe an einen NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Übergibt ein ByteArray für die Wiedergabe an einen NetStream. Rufen Sie diese Methode für einen NetStream im Datengenerierungsmodus auf. Um einen NetStream in den Datengenerierungsmodus zu versetzen, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play(null)</codeph> für einen NetStream auf, der in einer NetConnection erstellt wurde, die mit <codeph class="+ topic/ph pr-d/codeph ">null</codeph> verbunden ist. Das Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> für einen NetStream, der sich nicht im Datengenerierungsmodus befindet, ist ein Fehler und führt zu einer Ausnahme.
     
     <p class="- topic/p ">
     Der Byte-Parser versteht eine FLV-Datei mit einem Header. Nachdem der Header analysiert wurde, erwartet <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>, dass alle zukünftigen Aufrufe Fortsetzungen derselben realen oder virtuellen Datei sind. Es wird kein weiterer Header erwartet, sofern nicht <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_BEGIN)</codeph> aufgerufen wird. 
     </p>
     
     <p class="- topic/p ">
     Ein NetStream-Objekt hat zwei Pufferspeicher: den FIFO von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> für den NetStream und den Wiedergabepuffer. Der FIFO ist der Zusammensetzungspuffer für FLV-Teil-Tags und enthält nicht mehr als ein unvollständiges FLV-Tag. Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> leeren beide Pufferspeicher. Rufen Sie nach einem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> die <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph>-Methode auf, um die Zeitskala auf den Anfang des Zeitstempels der nächsten angehängten Nachricht zurückzusetzen.
     </p>
     
     <p class="- topic/p ">
     Jeder Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> fügt dem FIFO Bytes hinzu, bis ein FLV-Tag vollständig ist. Wenn ein FLV-Tag vollständig ist, wird es in den Wiedergabepuffer verschoben. Ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> kann mehrere FLV-Tags schreiben. Die ersten Bytes vervollständigen ein vorhandenes FLV-Tag (das in den Wiedergabepuffer verschoben wird). Vollständige FLV-Tags werden in den Wiedergabepuffer verschoben. Verbleibende Bytes, die kein vollständiges FLV-Tag bilden, kommen in den FIFO. Bytes im FIFO werden entweder durch einen Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> vervollständigt oder durch einen Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> mit dem Argument <codeph class="+ topic/ph pr-d/codeph ">RESET_SEEK</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">RESET_BEGIN</codeph> entfernt.
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der Byte-Parser kann einen Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> möglicherweise nicht vollständig dekodieren, bis ein nachfolgender Aufruf von <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> erfolgt. </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytesAction()" class="- topic/link "><linktext class="- topic/linktext ">appendBytesAction()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:attachAudio" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attachAudio</apiName><shortdesc class="- topic/shortdesc ">
     Fügt einen über das NetStream-Objekt gesendeten Audiostream einem NetStream-Objekt hinzu, wobei das Microphone-Objekt als Quelle übergeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDefaultValue>"null"
     </apiDefaultValue><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">microphone</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:Microphone</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Quelle des zu übertragenden Audiostreams.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt einen über das NetStream-Objekt gesendeten Audiostream einem NetStream-Objekt hinzu, wobei das Microphone-Objekt als Quelle übergeben wurde. Diese Methode ist nur für den Herausgeber des angegebenen Streams verfügbar.
     
     <p class="- topic/p ">Verwenden Sie diese Methode mit Flash Media Server, um Live-Audio an den Server zu senden. Rufen Sie diese Methode vor oder nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">publish()</codeph>-Methode auf.
     </p>
     
     <p class="- topic/p ">Stellen Sie die <codeph class="+ topic/ph pr-d/codeph ">Microphone.rate</codeph>-Eigenschaft so ein, dass sie der Rate des Sounderfassungsgerät entspricht. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">setSilenceLevel()</codeph> auf, um den Schwellenwert für Stille festzulegen. Um die Soundeigenschaften (Lautstärke und Panning) des Audiostreams zu steuern, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">Microphone.soundTransform</codeph>-Eigenschaft.</p>
     
     <pre xml:space="preserve" class="- topic/pre ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://server.domain.com/app");
     var ns:NetStream = new NetStream(nc);
     
     var live_mic:Microphone = Microphone.get();
     live_mic.rate = 8;
     live_mic.setSilenceLevel(20,200);
     
     var soundTrans:SoundTransform = new SoundTransform();
     soundTrans.volume = 6;
     live_mic.soundTransform = soundTrans;
     
     ns.attachAudio(live_mic);
     ns.publish("mic_stream","live")
     </pre>
     
     <p class="- topic/p "> Um das Audio zu hören, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode auf. Mit einem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">DisplayObjectContainer.addChild()</codeph> leiten Sie das Audio an ein Objekt in der Anzeigeliste.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.display.xml#DisplayObjectContainer/addChild()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObjectContainer.addChild()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:attachCamera" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attachCamera</apiName><shortdesc class="- topic/shortdesc ">
     Startet die Erfassung der Videodaten von einer Kamera bzw. stoppt die Erfassung, wenn „theCamera“ auf „null“ gesetzt ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">theCamera</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:Camera</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Quelle der Videoübertragung. Gültige Werte sind ein Camera-Objekt (das die Erfassung der Videodaten startet) und <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">null</codeph> übergeben, stoppt die Anwendung die Erfassung, und alle weiteren gesendeten Parameter werden ignoriert.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">snapshotMilliseconds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob es sich um einen kontinuierlichen Videostream, ein einzelnes Bild oder eine Reihe einzelner Bilder zur Erstellung von Zeitraffer-Material handelt.
     
     <ul class="- topic/ul "><li class="- topic/li ">Wenn Sie diesen Parameter nicht angeben, erfasst die Anwendung alle Videodaten, bis Sie den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> an <codeph class="+ topic/ph pr-d/codeph ">attachCamera</codeph> übergeben.</li><li class="- topic/li ">Bei Übergabe von „0“ erfasst die Anwendung nur ein einzelnes Videobild. Verwenden Sie diesen Wert, um „Schnappschüsse“ innerhalb eines bereits vorhandenen Streams zu übertragen. <ph class="- topic/ph ">Flash Player oder </ph> AIR interpretiert ungültige, negative oder nicht numerische Argumente als 0.</li><li class="- topic/li ">Wenn Sie eine positive Zahl übergeben, wird ein einzelnes Videobild erfasst und dann eine Pause angefügt, deren Dauer dem Nachspann des Schnappschusses entspricht. Verwenden Sie diesen Wert, um Zeitraffer-Effekte zu erstellen.</li></ul>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Startet die Erfassung der Videodaten von einer Kamera bzw. stoppt die Erfassung, wenn <codeph class="+ topic/ph pr-d/codeph ">theCamera</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt ist. Diese Methode ist nur für den Herausgeber des angegebenen Streams verfügbar.
     
     <p class="- topic/p ">Diese Methode ist für die Verwendung mit Flash Media Server konzipiert. Weitere Informationen finden Sie in der Beschreibung der Klasse.</p>
     
     <p class="- topic/p "> Nachdem Sie die Videoquelle angehängt haben, müssen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> aufrufen, um die Übertragung zu starten. Abonnenten, die das Video anzeigen möchten, müssen die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>- und die <codeph class="+ topic/ph pr-d/codeph ">Video.attachCamera()</codeph>-Methode aufrufen, um das Video auf der Bühne anzuzeigen.</p>
     
     <p class="- topic/p ">Mit <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> können Sie einen einzelnen Schnappschuss (durch Angabe des Werts „0“) oder eine Reihe von Schnappschüssen - die zusammen ein Zeitraffer-Video ergeben - senden. Hierzu geben Sie einen positiven Wert an, der dem Videofeed einen Nachspann anhängt, dessen Dauer der angegebenen Zahl in Millisekunden entspricht. Der Nachspann verlängert die Anzeigezeit der Videonachricht. Wenn wiederholt <codeph class="+ topic/ph pr-d/codeph ">attachCamera()</codeph> mit einem positiven Wert für <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> aufgerufen wird, erzeugt die Sequenz wechselnder Schnappschüsse und Nachspänne ein Zeitraffer-Video. Sie können beispielsweise ein Bild pro Tag erfassen und an eine Videodatei anhängen. Wenn ein Abonnent die Datei wiedergibt, wird jedes Bild für die Dauer der angegebenen Anzahl an Millisekunden angezeigt.</p>
     
     <p class="- topic/p ">Der Parameter <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> hat nicht denselben Zweck wie der Parameter <codeph class="+ topic/ph pr-d/codeph ">fps</codeph>, den Sie mit <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph> festlegen können. Durch die Angabe von <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> steuern Sie, wie viel Zeit zwischen den aufgezeichneten Bildern verstreicht. Durch Angabe von <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> mit <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph> steuern Sie, wie viel Zeit zwischen Aufnahme und Wiedergabe verstreicht.</p>
     
     <p class="- topic/p ">Beispiel: Sie möchten für insgesamt 100 Schnappschüsse alle fünf Minuten einen Schnappschuss erstellen. Hierzu haben Sie zwei Möglichkeiten:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Sie können 100-mal den Befehl <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera(myCamera, 500)</codeph> ausführen, einmal alle fünf Minuten. So dauert die Aufnahme 500 Minuten, die Wiedergabe der Datei jedoch nur 50 Sekunden (100 Bilder mit 500 Millisekunden pro Bild).</li><li class="- topic/li ">Sie können den Befehl <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph> mit einem <codeph class="+ topic/ph pr-d/codeph ">fps</codeph>-Wert von 1/300 (1 Bild alle 300 Sekunden, d. h. alle fünf Minuten) und anschließend den Befehl <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera(source)</codeph> ausführen, wobei die Kamera 500 Minuten fortlaufend aufzeichnet. Die Wiedergabe der fertigen Datei dauert 500 Minuten (dieselbe Dauer wie für die Aufnahme) und jedes Bild wird fünf Minuten lang angezeigt.</li></ul>

     <p class="- topic/p ">Bei beiden Methoden werden dieselben 500 Bilder erfasst, und beide Ansätze sind nützlich. Es hängt hauptsächlich von Ihren Wiedergabeanforderungen ab, welcher Ansatz für Sie geeigneter ist. Im zweiten Fall hätten Sie beispielsweise die Möglichkeit, über den gesamten Zeitraum Audiodaten aufzuzeichnen. Darüber hinaus haben die beiden Dateien etwa dieselbe Größe.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:attach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attach</apiName><shortdesc class="- topic/shortdesc ">
    Hängt einen Stream an ein neues NetConnection-Objekt an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>uncomment the following line after offset is added to the file
    </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Hängt einen Stream an ein neues NetConnection-Objekt an. Rufen Sie diese Methode auf, um einen NetStream an ein neues NetConnection-Objekt anzuhängen, nachdem eine Verbindung getrennt und wieder hergestellt wurde. Flash Player und AIR nehmen das Streaming ab dem Wiedergabepunkt, bei dem die Verbindung unterbrochen wurde, wieder auf. Sie können diese Methode auch verwenden, um Load Balancing (Lastausgleich) zu implementieren.
    
    <p class="- topic/p ">Für diese Methode ist Flash Media Server Version 3.5.3 oder höher erforderlich.</p>
    
    <p class="- topic/p ">Informationen zur Verwendung dieser Methode zum Implementieren der <b class="+ topic/ph hi-d/b ">Stream-Neuverbindung</b> finden Sie in der <xref href="http://www.adobe.com/go/learn_fms_docs_en" scope="external" class="- topic/xref ">Flash Media Server 3.5.3-Dokumentation</xref>.</p>
    
    <p class="- topic/p "> Um mit dieser Methode <b class="+ topic/ph hi-d/b ">Lastausgleich</b> zu implementieren, gehen Sie folgendermaßen vor: </p>
    
    <ol class="- topic/ol "><li class="- topic/li "> Fügen Sie einem NetConnection-Objekt auf einem anderen Server einen verbundenen Stream hinzu. </li><li class="- topic/li ">Nachdem der Stream erfolgreich der neuen Verbindung hinzugefügt wurde, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.close()</codeph> für die frühere Verbindung auf, um zu verhindern, dass Daten austreten.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> auf und stellen Sie den Wert von <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.transition</codeph> auf RESUME. Stellen Sie die restlichen Eigenschaften von NetStreamPlayOptions auf dieselben Werte ein, die Sie beim ursprünglichen Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> verwendet haben, um den Stream zu starten.</li></ol>
    
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/transition" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.transition</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Stoppt die Wiedergabe der Daten im Stream, legt für die Eigenschaft „time“ den Wert 0 fest und macht den Stream für andere Verwendungszwecke verfügbar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.close, close
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stoppt die Wiedergabe der Daten im Stream, legt für die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">time</codeph> den Wert 0 fest und macht den Stream für andere Verwendungszwecke verfügbar. Durch diese Methode wird auch die lokale Kopie einer Videodatei gelöscht, die über HTTP heruntergeladen wurde. Auch wenn die Anwendung die lokale Kopie der erstellten Datei löscht, verbleibt möglicherweise eine Kopie im Cache-Verzeichnis des Wenn Sie die Cache- oder lokale Speicherung der Videodatei vollständig vermeiden möchten, verwenden Sie Flash Media Server.
     
     <p class="- topic/p ">
     Wenn Flash Media Server verwendet wird, wird diese Methode implizit aufgerufen, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aus einem veröffentlichenden Stream oder <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> aus einem abonnierenden Stream aufrufen. Bitte beachten Sie Folgendes:
     </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">
     Wenn <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> von einem veröffentlichenden Stream aufgerufen wird, stoppt der Stream die Veröffentlichung, und der Herausgeber kann den Stream jetzt für andere Zwecke verwenden. Abonnenten erhalten nichts mehr, das im Stream veröffentlicht wurde, da der Stream die Veröffentlichung beendet hat.
     </li><li class="- topic/li ">
     Wenn <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> von einem abonnierenden Stream aufgerufen wird, wird das Abspielen des Streams für den Abonnenten gestoppt, und der Abonnent kann den Stream für andere Zwecke verwenden. Andere Abonnenten sind davon nicht betroffen.
     </li><li class="- topic/li ">
     Sie können das Abspielen eines abonnierenden Streams stoppen, ohne den Stream zu schließen oder den Stream-Typ zu ändern, indem Sie <codeph class="+ topic/ph pr-d/codeph ">flash.net.NetStream.play(false)</codeph> verwenden.
     </li></ul>
     
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">veröffentlichen()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:onPeerConnect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">onPeerConnect</apiName><shortdesc class="- topic/shortdesc ">
     
     Wird ausgelöst, wenn ein Peer-Publishing-Stream mit einem Peer-Subscribing-Stream übereinstimmt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriber</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Wird ausgelöst, wenn ein Peer-Publishing-Stream mit einem Peer-Subscribing-Stream übereinstimmt. Bevor der Abonnent mit dem Herausgeber verbunden wird, rufen Sie diese Methode auf, um dem ActionScript-Code eine feine Zugriffskontrolle für Peer-to-Peer-Publishing zu ermöglichen. Der folgende Code zeigt ein Beispiel, wie eine Callback-Funktion für diese Methode erstellt wird:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var c:Object = new Object;
     c.onPeerConnect = function(subscriber:NetStream):Boolean {
      if (accept)
          return true;
      else
          return false;
      };
      m_netStream.client = c;
     </codeblock>
     
     <p class="- topic/p ">Wenn ein Peer-Herausgeber diese Methode nicht implementiert, dürfen alle Peers veröffentlichten Inhalt wiedergeben.</p>
     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:pause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">pause</apiName><shortdesc class="- topic/shortdesc ">
     Hält die Wiedergabe eines Videostreams an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.pause, pause
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Hält die Wiedergabe eines Videostreams an. Wenn die Wiedergabe bereits angehalten wurde, hat der Aufruf dieser Methode keine Auswirkung. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">resume()</codeph> auf, um ein angehaltenes Video weiter abzuspielen. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">togglePause()</codeph>, um zwischen dem Anhalten und Abspielen (erst anhalten, dann weiter abspielen) des Videos umzuschalten.
     
     <p class="- topic/p ">Beginnend mit Flash Player 9.0.115.0 leert der Flash Player den Puffer nicht mehr, wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> aufgerufen wird. Dieses Verhalten wird „smart pause“ genannt. In Vorgängerversionen von Flash Player 9.0.115.0 hat Flash Player gewartet, bis der Puffer voll war, bevor die Wiedergabe fortgesetzt wurde, wodurch es häufig zu Verzögerungen kam. </p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Aus Gründen der Abwärtskompatibilität wird das <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Flush"</codeph>-Ereignis (siehe <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph>-Eigenschaft) immer noch abgesetzt, obwohl der Server den Puffer nicht leert.</p>
     <p class="- topic/p ">Für eine einzelne Pause hat die <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph>-Eigenschaft ein Limit von 60 Sekunden oder das Doppelte des Werts von <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph>, je nachdem, welcher Wert höher ist. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> zum Beispiel 20 Sekunden beträgt, puffert Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> den höheren Wert von 20~~2 (40) oder 60 hat; in diesem Fall also bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 60 hat. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> 40 Sekunden beträgt, puffert Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den höheren Wert von 40~~2 (80) oder 60 hat; in diesem Fall also bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 80 hat.</p>
     
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph>-Eigenschaft hat auch ein absolutes Limit. Wenn ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> dazu führt, dass <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> auf mehr als 600 Sekunden ansteigt oder der Wert von <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> ~~ 2, je nachdem, welcher Wert höher ist, löscht Flash Player den Puffer und setzt <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> auf 0 zurück. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> zum Beispiel 120 Sekunden beträgt, löscht Flash Player den Puffer, wenn <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 600 Sekunden erreicht; wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> 360 Sekunden beträgt, löscht Flash Player den Puffer, wenn <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 720 Sekunden erreicht.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Tipp</b>: Sie können im Code <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> verwenden, um Daten zu puffern, während Betrachter zum Beispiel einen Werbespot sehen, und dann die Pause aufheben, wenn das Hauptvideo beginnt.</p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link><link href="flash.net.xml#NetStream/togglePause()" class="- topic/link "><linktext class="- topic/linktext ">togglePause()</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:play2" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">play2</apiName><shortdesc class="- topic/shortdesc ">
     Wechselt nahtlos zwischen Dateien mit mehreren Bitraten und ermöglicht einem NetStream die Wiederaufnahme, wenn eine Verbindung getrennt und wiederhergestellt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStreamPlayOptions</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wechselt nahtlos zwischen Dateien mit mehreren Bitraten und ermöglicht einem NetStream die Wiederaufnahme, wenn eine Verbindung getrennt und wiederhergestellt wurde.
     
     <p class="- topic/p ">Diese Methode ist eine verbesserte Version von <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Wie die <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>-Methode beginnt die <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph>-Methode mit der Wiedergabe einer Mediendatei oder setzt Mediendateien in eine Warteschlange, um eine Wiedergabeliste zu erstellen. Wenn sie mit Flash Media Server verwendet wird, kann sie auch anfordern, dass der Server zu einer anderen Mediendatei wechselt. Der Übergang in der Clientanwendung erfolgt nahtlos. Die folgenden Funktionen verwenden <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph>-Streamwechsel:</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Dynamisches Streaming</b></p>
     
     <p class="- topic/p ">Dynamisches Streaming (in Flash Media Server 3.5 und höher unterstützt) ermöglicht Ihnen, einen Stream zu bedienen, der mit mehreren Bitraten kodiert ist. Wenn sich die Netzwerkbedingungen des Betrachters ändern, empfängt er die Bitrate, die die beste Anzeige ermöglicht. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStreamInfo</codeph>-Klasse, um Netzwerkbedingungen zu überwachen und Streams basierend auf den Daten zu wechseln. Sie können auch Streams für Clients mit unterschiedlicher Funktionalität wechseln. Weitere Informationen finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_dynstream_en" scope="external" class="- topic/xref ">„Dynamic streaming“</xref> im Handbuch „Adobe Flash Media Server Developer Guide“.</p>
     
     <p class="- topic/p ">Adobe hat ein benutzerdefinierte ActionScript-Klasse mit dem Namen DynamicStream entwickelt, die die NetStream-Klasse erweitert. Sie können die DynamicStream-Klasse verwenden, um dynamisches Streamen in einer Anwendung zu implementieren, statt eigenen Code zu schreiben, um Netzwerkbedingungen zu erkennen. Selbst wenn Sie sich dazu entscheiden, Ihren eigenen dynamischen Streamingcode zu schreiben, verwenden Sie die DynamicStream-Klasse als Referenzimplementierung. Laden Sie die Klasse und die Klassendokumentation von der Seite <xref href="http://www.adobe.com/go/fms_tools_de" scope="external" class="- topic/xref ">Flash Media Server tools and downloads</xref> herunter.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Stream-Neuverbindung</b></p>
     
     <p class="- topic/p ">Die Stream-Neuverbindung (unterstützt in Flash Media Server 3.5.3 und höher) ermöglicht Benutzern die ununterbrochene Medienanzeige, selbst wenn ihre Verbindung verloren geht. Das Medium verwendet den Puffer zum Abspielen, während Ihre ActionScript-Logik die Verbindung zum Flash Media Server wiederherstellt. Rufen Sie nach der Neuverbindung <codeph class="+ topic/ph pr-d/codeph ">NetStream.attach()</codeph> auf, um dasselbe NetStream-Objekt mit der neuen NetConnection zu verwenden. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.attach()</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTransitions.RESUME</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTrasitions.APPEND_AND_WAIT</codeph>-APIs, um einen Stream neu zu verbinden. Weitere Informationen finden Sie in der <xref href="http://www.adobe.com/go/learn_fms_docs_en" scope="external" class="- topic/xref ">Flash Media Server 3.5.3-Dokumentation</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/attach()" class="- topic/link "><linktext class="- topic/linktext ">attach()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:play" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">play</apiName><shortdesc class="- topic/shortdesc ">
     Spielt eine Mediendatei von einem lokalen Verzeichnis oder einem Webserver ab; spielt eine Mediendatei oder einen Livestream von Flash Media Server ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>"at"see flash.media.Video#attachVideo()  This method no longer exists.  Replace with new method.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können diese Einschränkung umgehen, indem Sie die entsprechende SWF-Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es muss mindestens ein Parameter angegeben werden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das NetStream-Objekt ist ungültig. Dies kann an einer fehlgeschlagenen NetConnection liegen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Abspielen einer lokalen Datei</b></p>
     
     
     <p class="- topic/p ">
     Der Speicherort der Mediendaten. Das Argument kann ein String, eine <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>-Eigenschaft oder eine Variable, die auf eines der beiden verweist. In <ph class="- topic/ph ">Flash Player und in</ph> AIR-Inhalt außerhalb der Sicherheits-Sandbox der Anwendung können Sie lokale Videodateien abspielen, die im selben Verzeichnis gespeichert sind wie die SWF-Datei oder in einem Unterverzeichnis; Sie können jedoch nicht zu einem Verzeichnis auf einer höheren Ebenen wechseln.
     </p>
     
     <p class="- topic/p ">
     Bei AIR-Inhalt in der Sicherheitssandbox der Anwendung ist der Pfad, den Sie für die Mediendatei angeben, relativ zum Verzeichnis der SWF-Datei. Sie können jedoch nicht zu Ebenen über dem Verzeichnis der SWF-Datei navigieren. Geben Sie keinen vollständigen Pfad an, da AIR diesen als relativen Pfad behandelt.      
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Abspielen einer Datei von Flash Media Server</b></p>
     
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Name</entry><entry class="- topic/entry ">Erforderlich</entry><entry class="- topic/entry ">Beschreibung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name:Object</codeph></entry><entry class="- topic/entry ">Erforderlich </entry><entry class="- topic/entry "> Der Name einer aufgenommenen Datei, eine ID für Live-Daten, die von <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> veröffentlicht wurden, oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Mit dem Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> wird die Wiedergabe des Streams gestoppt, und etwaige zusätzliche Parameter werden ignoriert. Weitere Informationen zur Syntax für Dateinamen finden Sie in der Dateiformattabelle, die nach dieser Tabelle folgt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">start:Number</codeph></entry><entry class="- topic/entry ">Optional</entry><entry class="- topic/entry "> Die Startzeit in Sekunden. Zulässige Werte sind -2, -1, 0 oder eine positive Zahl. Der Standardwert ist -2, womit nach einem Live-Stream gesucht wird, dann nach einem aufgezeichneten Stream. Wird keins von beiden gefunden, wird ein neuer Live-Stream geöffnet. Mit dem Wert -1 wird nur ein Live-Stream abgespielt. Mit dem Wert 0 oder einer positiven Zahl wird ein aufgezeichneter Stream abgespielt, und zwar ab der Position <codeph class="+ topic/ph pr-d/codeph ">start</codeph> Sekunden.
       </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">len:Number</codeph> </entry><entry class="- topic/entry "> Optional, wenn <codeph class="+ topic/ph pr-d/codeph ">start</codeph> angegeben wird. </entry><entry class="- topic/entry "> Die Dauer der Wiedergabe in Sekunden. Zulässige Werte sind -1, -0, oder eine positive Zahl. Der Standardwert ist -1, womit ein Live-Stream oder ein aufgezeichneter Stream bis zum Ende abgespielt wird. Mit dem Wert 0 wird ein Einzelbild abgespielt, das sich <codeph class="+ topic/ph pr-d/codeph ">start</codeph> Sekunden nach dem Anfang eines aufgezeichneten Streams befindet. Ist der Wert eine positive Zahl, wird ein Live-Stream oder ein aufgezeichneter Stream für <codeph class="+ topic/ph pr-d/codeph ">len</codeph> Sekunden abgespielt.
       </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">reset:Object</codeph> </entry><entry class="- topic/entry "> Optional, wenn <codeph class="+ topic/ph pr-d/codeph ">len</codeph> angegeben wird. </entry><entry class="- topic/entry "> Gibt an, ob eine Wiedergabeliste gelöscht werden soll. Der Standardwert ist 1 oder <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, womit vorherige Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">play</codeph> gelöscht werden und <codeph class="+ topic/ph pr-d/codeph ">name</codeph> sofort abgespielt wird. Mit dem Wert 0 oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph> wird der Stream einer Wiedergabeliste hinzugefügt. Mit dem Wert 2 bleibt die Wiedergabeliste erhalten, und es werden alle Stream-Meldungen auf einmal anstatt in Intervallen zurückgegeben. Mit dem Wert 3 wird die Wiedergabeliste gelöscht, und es werden alle Stream-Meldungen auf einmal zurückgegeben.  </entry></row></tbody></tgroup></adobetable>
     
     
     <p class="- topic/p ">
     Sie können die Dateiformate wiedergeben, die in der folgenden Tabelle beschrieben sind. Die Syntax ist je nach Dateiformat unterschiedlich.
     </p>
     
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Dateiformat</entry><entry class="- topic/entry ">Syntax</entry><entry class="- topic/entry ">Beispiel</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">FLV</entry><entry class="- topic/entry ">Geben Sie den Streamnamen (im Verzeichnis „samples“) als String ohne Dateinamenerweiterung an.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.play("samples/myflvstream");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">mp3 oder ID3</entry><entry class="- topic/entry ">Legen Sie den Streamnamen (im Verzeichnis „samples“) als einen String mit dem Präfix <codeph class="+ topic/ph pr-d/codeph ">mp3:</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">id3:</codeph> ohne eine Dateinamenerweiterung fest.</entry><entry class="- topic/entry "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp3:samples/mymp3stream");</codeph></p>
            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("id3:samples/myid3data");</codeph></p></entry></row><row class="- topic/row "><entry class="- topic/entry ">MPEG-4-basierte Dateien (z. B. F4V und MP4)</entry><entry class="- topic/entry ">Geben Sie den Streamnamen (im Verzeichnis „samples“) als String mit den Präfix <codeph class="+ topic/ph pr-d/codeph ">mp4:</codeph> an. Mit dem Präfix wird dem Server angezeigt, dass die Datei H.264-kodiertes Video und AAC-kodiertes Audio im Containerformat „MPEG-4 Part 14“ enthält. Falls die Datei auf dem Server eine Dateierweiterung hat, geben Sie sie an. </entry><entry class="- topic/entry "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.f4v");</codeph></p>
            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.mp4");</codeph></p>
          <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo");</codeph></p>
          <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.mov");</codeph></p></entry></row><row class="- topic/row "><entry class="- topic/entry ">RAW</entry><entry class="- topic/entry ">Geben Sie den Streamnamen (im Verzeichnis „samples“) als String mit dem Präfix <codeph class="+ topic/ph pr-d/codeph ">raw:</codeph> an.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.play("raw:samples/myvideo");</codeph></entry></row></tbody></tgroup></adobetable>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Aktivieren des Datengenerierungsmodus</b></p>
     
     <p class="- topic/p ">
     Um den Datengenerierungsmodus zu aktivieren, übergeben Sie den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> an einen NetStream, der in einer NetConnection erstellt wurde, die mit <codeph class="+ topic/ph pr-d/codeph ">null</codeph> verbunden ist. In diesem Modus rufen Sie <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> auf, um Daten an NetStream zu senden. (Durch die Übergabe von <codeph class="+ topic/ph pr-d/codeph ">null</codeph> wird außerdem der Bytezähler für den <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>-Rückruf zurückgesetzt.)
     </p>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spielt eine Mediendatei von einem lokalen Verzeichnis oder einem Webserver ab; spielt eine Mediendatei oder einen Livestream von Flash Media Server ab. Setzt ein <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent</codeph>-Objekt ab, um Status- und Fehlermeldungen zu melden.
     
     <p class="- topic/p ">Informationen zu unterstützten Codecs und Dateiformaten finden Sie hier:</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">Flash Media Server-Dokumentation</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/hardware_scaling_en" scope="external" class="- topic/xref ">Exploring Flash Player support for high-definition H.264 video and AAC audio</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/video_file_format_de" scope="external" class="- topic/xref ">FLV/F4V open specification documents</xref></li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Arbeitsablauf beim Abspielen einer Datei oder eines Livestreams</b></p>
     
     <ol class="- topic/ol "><li class="- topic/li ">Erstellen Sie ein NetConnection-Objekt und rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> auf.
     <p class="- topic/p ">Um eine Datei von einem lokalen Verzeichnis oder von einem Webserver abzuspielen, übergeben Sie null.</p>
     <p class="- topic/p ">Um eine aufgenommene Datei oder einen Livestream von Flash Media Server abzuspielen, übergeben Sie den URI einer Flash Media Server-Anwendung.</p></li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler)</codeph> auf, um auf NetStatusEvent-Ereignisse zu warten.</li><li class="- topic/li ">Erstellen Sie für <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph> ein NetStream-Objekt und übergeben Sie das NetConnection-Objekt an den Konstruktor.</li><li class="- topic/li ">Erstellen Sie ein Video-Objekt, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> auf und übergeben Sie das NetStream-Objekt.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> auf.
     <p class="- topic/p ">Um einen Livestream abzuspielen, übergeben Sie den Namen des Streams, der an die <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>-Methode übergeben wurde.</p>
     <p class="- topic/p ">Um eine aufgenommene Datei abzuspielen, übergeben Sie den Dateinamen.</p></li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> auf und übergeben Sie das Video-Objekt, um das Video abzuspielen.</li></ol>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Beispielcode finden Sie im Beispiel ganz unten auf dieser Seite.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Aktivieren des Datengenerierungsmodus</b></p>
     
     <p class="- topic/p ">
     Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">play(null)</codeph> auf, um den Datengenerierungsmodus zu aktivieren. In diesem Modus rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>-Methode auf, um Daten an NetStream zu senden. Verwenden Sie den Datengenerierungsmodus, um Inhalt über HTTP vom Adobe HTTP Dynamic Streaming Origin Module an einen Apache HTTP-Server zu senden. Clients können beim HTTP Dynamic Streaming schnell einen Suchlauf zu einem beliebigen Punkt in einer Datei ausführen. Das Open Source Media Framework (OSMF) unterstützt HTTP Dynamic Streaming für Video on Demand und Live-Streams. Beispiele zur Verwendung des NetStream-Datengenerierungsmodus können Sie von der <xref href="http://www.opensourcemediaframework.com" scope="external" class="- topic/xref ">OSMF</xref>-Quelle herunterladen. Weitere Informationen zu HTTP Dynamic Streaming finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_http_en" scope="external" class="- topic/xref ">HTTP Dynamic Streaming</xref>.
     </p>
     
     <p class="- topic/p ">
     Wenn Sie diese Methode ohne Flash Media Server verwenden, gibt es Sicherheitsüberlegungen zu beachten. Eine Datei in der lokal vertrauenswürdigen Sandbox oder der lokalen Sandbox mit Netzwerkzugang kann eine Videodatei aus der remoten Sandbox wiedergeben, aber nicht ohne explizite Erlaubnis in Form einer URL-Richtliniendatei auf die Daten der remoten Datei zugreifen. <ph class="- topic/ph ">Sie können auch eine SWF-Datei, die im Flash Player ausgeführt wird, daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</ph> Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.
     </p>
     
     </apiDesc><example class="- topic/example "><b class="+ topic/ph hi-d/b ">Flash Media Server</b> Dieses Beispiel spielt eine aufgenommene F4V-Datei (aus dem Verzeichnis „samples“) vom Anfang über maximal 100 Sekunden ab. Wenn bei MPEG-4-Dateien die Datei auf dem Server eine Dateinamenerweiterung hat, muss die <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>-Methode eine Dateinamenerweiterung angeben.
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.play("mp4:samples/record1.f4v", 0, 100, true);
     </codeblock>
     
     </example><example class="- topic/example "><b class="+ topic/ph hi-d/b ">Flash Media Server</b> In diesem Beispiel wird ein von einem Client veröffentlichter FLV-Live-Stream von Anfang bis Ende abgespielt und beginnt sofort:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.play("livestream");
     </codeblock>
     
     
     </example><example conref="examples\Video_new.as" class="- topic/example "> Im folgenden Beispiel wird gezeigt, wie eine externe FLV-Datei geladen wird:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var MyVideo:Video = new Video();
addChild(MyVideo);
 
var MyNC:NetConnection = new NetConnection();
MyNC.connect(null);
 
var MyNS:NetStream = new NetStream(MyNC);
MyNS.play("http://www.helpexamples.com/flash/video/clouds.flv");

MyVideo.attachNetStream(MyNS);

//the clouds.flv video has metadata we're not using, so create
//an error handler to ignore the message generated by the runtime
//about the metadata
MyNS.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler); 

function asyncErrorHandler(event:AsyncErrorEvent):void 
{ 
   //ignore metadata error message
} 
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObjectContainer/addChild()" class="- topic/link "><linktext class="- topic/linktext ">DisplayObjectContainer.addChild()</linktext></link><link href="flash.net.xml#NetStream/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">checkPolicyFile</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link></related-links><adobeApiEvent id="flash.net:NetStream:play_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn versucht wird, Inhalt abzuspielen, der mit DRM (Digital Rights Management) verschlüsselt wurde. Der Wert der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">"DRM.encryptedFLV"</codeph>.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn versucht wird, Inhalt abzuspielen, der mit DRM (Digital Rights Management) verschlüsselt wurde.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:NetStream:preloadEmbeddedData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">preloadEmbeddedData</apiName><shortdesc class="- topic/shortdesc ">
     Extrahiert DRM-Metadaten aus einer lokal gespeicherten Mediendatei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStreamPlayOptions</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">NetStreamPlayOptions beschreiben die Optionen, die beim Verarbeiten der Inhaltsdatei zu verwenden sind.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrahiert DRM-Metadaten aus einer lokal gespeicherten Mediendatei.
     
     <p class="- topic/p ">Verwenden Sie zunächst <codeph class="+ topic/ph pr-d/codeph ">preloadEmbeddedMetaData()</codeph>, um die für die Offline-Wiedergabe benötigten DRM-Gutscheine herunterzuladen und im Zwischenspeicher abzulegen. Wenn in einer Mediendatei eingebettete DRM-Metadaten entdeckt werden, wird ein DRMContentData-Objekt an die <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph>-Funktion des NetStream-Clients übergeben. Dieses DRMContentData-Objekt enthält die notwendigen Informationen, um den Gutschein zu erhalten, der zur Wiedergabe des Inhalts erforderlich ist. Übergeben Sie das DRMContentDataObject an die <codeph class="+ topic/ph pr-d/codeph ">loadVoucher()</codeph>-Methode des DRMManagers, um den Gutschein herunterzuladen.</p>
     
     <p class="- topic/p ">Die Schritte zum Vorabladen eines DRM-Gutscheins sind:</p>
     <ul class="- topic/ul "><li class="- topic/li ">
     <p class="- topic/p ">Erstellen Sie ein neues NetStream-Objekt zum Vorabladen der Metadaten.</p>
     </li><li class="- topic/li ">Verknüpfen Sie eine Callback-Funktion mit der <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph>-Eigenschaft des NetStream-<codeph class="+ topic/ph pr-d/codeph ">Clients</codeph>.</li><li class="- topic/li ">Erstellen Sie ein neues NetStreamPlayOptions-Objekt und setzen Sie seine <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>-Eigenschaft auf den URL-String der lokalen Videodatei.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">preloadEmbeddedMetadata()</codeph> auf, um das NetStreamPlayOptions-Objekt zu übergeben.</li><li class="- topic/li ">Rufen Sie als Antwort auf das <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph>-Callback die <codeph class="+ topic/ph pr-d/codeph ">loadVoucher()</codeph>-Methode des DRMManagers auf, um das DRMContentData-Objekt zu übergeben. Wenn die <codeph class="+ topic/ph pr-d/codeph ">authenticationMethod</codeph>-Eigenschaft des DRMContentData-Objekts den Wert <codeph class="+ topic/ph pr-d/codeph ">userNameAndPassWord</codeph> hat, authentifizieren Sie den Benutzer auf dem Medienrechteserver, bevor Sie den Gutschein laden.</li><li class="- topic/li ">Schließen Sie den NetStream, der zum Vorabladen verwendet wird.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Um zum Vorabladen von Metadaten und zur Wiedergabe von Inhalt das gleiche NetStream-Objekt zu verwenden, warten Sie, bis der <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph>-Aufruf von der preload-Methode generiert wurde, bevor mit der Wiedergabe begonnen wird.</p>
     
     <p class="- topic/p ">Heruntergeladene Gutscheine werden in einem lokalen Zwischenspeicher gespeichert. Wenn Inhalt online wiedergegeben wird, werden ebenfalls Gutscheine heruntergeladen und im Zwischenspeicher abgelegt. Wenn eine DRM-geschützte Inhaltsdatei angezeigt wird, wird automatisch ein zwischengespeicherter Gutschein aus dem lokalen Speicher abgerufen. Verwenden Sie den DRMManager, um den Gutschein-Zwischenspeicher zu verwalten.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b> Das Vorabladen von DRM-Metadaten über HTTP-, HTTPS- oder RTMP-Verbindungen wird nicht unterstützt. Sie können nur Metadaten aus Dateien vorabladen, die im Dateisystem gespeichert sind.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onDRMContentData" class="- topic/link "><linktext class="- topic/linktext ">onDRMContentData</linktext></link><link href="flash.net.drm.xml#DRMContentData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMContentData</linktext></link><link href="flash.net.drm.xml#DRMManager/loadVoucher()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.loadVoucher()</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:publish" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">publish</apiName><shortdesc class="- topic/shortdesc ">
     Sendet einen Stream mit Audiodaten, Videodaten und Datennachrichten von einem Client an Flash Media Server. Der Stream kann während der Übertragung aufgezeichnet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der den Stream identifiziert. Clients, die diesen Stream abonnieren, übergeben beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> diesen Namen. Setzen Sie keinen Schrägstrich (/) hinter den Stream-Namen. Verwenden Sie zum Beispiel nicht den Stream-Namen <codeph class="+ topic/ph pr-d/codeph ">"bolero/"</codeph>.
     
     <p class="- topic/p ">
     Sie können Dateien in den im Folgenden aufgeführten Formaten aufzeichnen (Sie können <codeph class="+ topic/ph pr-d/codeph ">publish()</codeph> nicht für MP3-Dateien verwenden). Die Syntax ist je nach Dateiformat unterschiedlich.</p>
     <p class="- topic/p ">
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Dateiformat</entry><entry class="- topic/entry ">Syntax</entry><entry class="- topic/entry ">Beispiel</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">FLV</entry><entry class="- topic/entry ">Legen Sie den Streamnamen als einen String ohne eine Dateinamenerweiterung fest.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("myflvstream");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">MPEG-4-basierte Dateien (z. B. F4V oder MP4)</entry><entry class="- topic/entry ">Legen Sie den Streamnamen als String mit dem Präfix <codeph class="+ topic/ph pr-d/codeph ">mp4:</codeph> mit oder ohne Dateinamenerweiterung fest. Flash Player kodiert nicht mit H.264, Flash Media Server kann jedoch jeden Codec im F4V-Container aufnehmen. Flash Media Live Encoder kann mit H.264 kodieren.
     </entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("mp4:myvideo.f4v")</codeph> <codeph class="+ topic/ph pr-d/codeph ">ns.publish("mp4:myvideo");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">RAW</entry><entry class="- topic/entry ">Geben Sie den Streamnamen als String mit dem Präfix <codeph class="+ topic/ph pr-d/codeph ">raw:</codeph> an.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("raw:myvideo");</codeph></entry></row></tbody></tgroup></adobetable>
     </p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der angibt, wie der Stream veröffentlicht wird. Gültige Werte sind "<codeph class="+ topic/ph pr-d/codeph ">record</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">append</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">appendWithGap</codeph>" und "<codeph class="+ topic/ph pr-d/codeph ">live</codeph>". Der Standardwert ist "<codeph class="+ topic/ph pr-d/codeph ">live</codeph>".
     <ul class="- topic/ul "><li class="- topic/li ">Wenn Sie "<codeph class="+ topic/ph pr-d/codeph ">record</codeph>" übergeben, veröffentlicht der Server Live-Daten und zeichnet sie auf. Dabei werden die aufgezeichneten Daten in einer neuen Videodatei gespeichert, deren Name dem an den <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Parameter übergebenen Wert entspricht. Wenn die Datei vorhanden ist, wird sie überschrieben.</li><li class="- topic/li ">Wenn Sie "<codeph class="+ topic/ph pr-d/codeph ">append</codeph>" übergeben, veröffentlicht und zeichnet Flash Media Server Live-Daten auf und hängt die aufgezeichneten Daten an eine Datei mit einem Namen an, der dem an den <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Parameter übergebenen Wert entspricht. Wenn keine Datei gefunden wird, die dem <codeph class="+ topic/ph pr-d/codeph ">name</codeph>-Parameter entspricht, wird sie erstellt. </li><li class="- topic/li ">Wenn Sie "<codeph class="+ topic/ph pr-d/codeph ">appendWithGap</codeph>" übergeben, werden zusätzliche Informationen über die Zeitkoordination übergeben, um dem Server zu helfen, den richtigen Übergangspunkt beim dynamischen Streaming zu bestimmen.</li><li class="- topic/li ">Wenn Sie diesen Parameter nicht angeben oder "<codeph class="+ topic/ph pr-d/codeph ">live</codeph>" übergeben, veröffentlicht der Server Live-Daten, zeichnet diese jedoch nicht auf. Wenn eine Datei mit dem Namen vorhanden ist, der dem Wert des Parameters <codeph class="+ topic/ph pr-d/codeph ">name</codeph> entspricht, wird sie gelöscht.</li></ul>
     
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet einen Stream mit Audiodaten, Videodaten und Datennachrichten von einem Client an Flash Media Server. Der Stream kann während der Übertragung aufgezeichnet werden. Diese Methode setzt ein NetStatusEvent-Objekt mit Informationen zum Stream ab. Bevor Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> aufrufen, erfassen Sie das <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph>-Ereignis, um zu überprüfen, ob die Anwendung erfolgreich eine Verbindung zu Flash Media Server hergestellt hat.
     
     <p class="- topic/p ">Beim Veröffentlichen können Sie Dateien im FLV- oder F4V-Format aufnehmen. Wenn Sie eine Datei im F4V-Format aufnehmen, verwenden Sie ein Reduzierungs-Tool, um die Datei in einer anderen Anwendung zu bearbeiten oder abzuspielen. Das Tool kann von <xref href="http://www.adobe.com/go/fms_tools" scope="external" class="- topic/xref ">www.adobe.com/go/fms_tools</xref> heruntergeladen werden.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b>Verwenden Sie diese Methode nicht zum Abspielen eines Streams. Um einen Stream wiederzugeben, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode.</p>
     
     <p class="- topic/p ">Arbeitsablauf beim Veröffentlichen eines Streams</p>
     
     <ol class="- topic/ol "><li class="- topic/li ">Erstellen Sie ein NetConnection-Objekt und rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> auf.</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addEventListener()</codeph> auf, um auf NetStatusEvent-Ereignisse zu warten.</li><li class="- topic/li ">Erstellen Sie für das <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph>-Ereignis ein NetStream-Objekt und übergeben Sie das NetConnection-Objekt an den Konstruktor.</li><li class="- topic/li ">Um Audio und Video zu erfassen, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachAudio()</codeph>- und die <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera()</codeph>-Methode auf.</li><li class="- topic/li ">Um einen Stream zu veröffentlichen, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode. Sie können die veröffentlichten Daten aufzeichnen, sodass Benutzer die Möglichkeit haben, sie zu einem späteren Zeitpunkt wiederzugeben.</li></ol>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b>Ein NetStream kann einen Stream entweder veröffentlichen oder abspielen, aber nicht beides. Um einen Stream zu veröffentlichen und die Wiedergabe vom Server anzuzeigen, erstellen Sie zwei NetStream-Objekte. Sie können mehrere NetStream-Objekte über ein NetConnection-Objekt senden.</p>
     
     <p class="- topic/p ">Wenn Flash Media Server einen Stream aufzeichnet, wird eine Datei erstellt. Standardmäßig erstellt der Server ein Verzeichnis mit dem Namen der Anwendung, der an <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> übergeben wurde, und speichert die Datei in dem Verzeichnis. Mit dem folgenden Code wird zum Beispiel eine Verbindung zur Standardinstanz der Anwendung „lectureseries“ hergestellt und ein Stream namens „lecture“ aufgenommen. Die Datei „lecture.flv“ wird im Verzeichnis applications/lectureseries/streams/_definst_ directory aufgenommen:
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://fms.example.com/lectureseries");
     nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
     
     function netStatusHandler(event:NetStatusEvent):void{
       if (event.info.code == "NetConnection.Connect.Success"){
            var ns:NetStream = new NetStream(nc);
            ns.publish("lecture", "record");
       }
     }
     </codeblock>
     
     <p class="- topic/p ">Das folgende Beispiel stellt eine Verbindung zur Instanz „monday“ derselben Anwendung her. Die Datei „lecture.flv“ wird im Verzeichnis /applications/lectureseries/streams/monday aufgenommen:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
     nc.connect("rtmp://fms.example.com/lectureseries/monday");
     
     function netStatusHandler(event:NetStatusEvent):void{
       if (event.info.code == "NetConnection.Connect.Success"){
            var ns:NetStream = new NetStream(nc);
            ns.publish("lecture", "record");
       }
     }
     </codeblock>
     
     </apiDesc><example conref="examples\NetStream_publish.as" class="- topic/example "> Das folgende Beispiel erfasst Video von einer Kamera und veröffentlicht es über einen NetStream für Flash Media Server. Das Beispiel zeigt das Video an, wenn es von Flash Media Server wiedergegeben wird.
 <p class="- topic/p ">Wenn Sie dieses Beispiel ausführen möchten, muss eine Kamera an Ihren Computer angeschlossen sein. Außerdem müssen Sie der Bibliothek eine Button-Komponente und eine Label-Komponente hinzufügen.</p>
 <p class="- topic/p ">Die Anwendung verfügt über eine Schaltfläche, die einen Stream veröffentlicht (ihn an Flash Media Server sendet), nachdem die Anwendung erfolgreich eine Verbindung zum Server hergestellt hat. Die Anwendung spielt den Stream vom Server erst ab, nachdem der Stream erfolgreich veröffentlicht wurde. <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent</codeph> gibt ein <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekt mit einer <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft zurück, die diese Fälle spezifiziert. Die <codeph class="+ topic/ph pr-d/codeph ">netStatusHandler</codeph>-Funktion verarbeitet diese Ereignisse für die NetConnection- und NetStream-Klasse.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.media.Video;
    import flash.media.Camera;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import fl.controls.Button;
    import fl.controls.Label;

    public class NetStream_publish extends Sprite {
        private var connectionURL:String = "rtmp://localhost/live/";
        private var videoURL:String = "liveVideo";
        private var nc:NetConnection;
        private var ns_publish:NetStream;
        private var ns_playback:NetStream;
        private var video_publish:Video;
        private var video_playback:Video;
        private var cam:Camera;
        private var b:Button;
        private var l:Label;

        public function NetStream_publish() {
            setUpUI();
            
            nc = new NetConnection();
            nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            
            // Add bandwidth detection handlers on the NetConnection Client to
            // prevent Reference Errors at runtime when using the "live" and "vod" applications.          
            var clientObj:Object = new Object();
            clientObj.onBWDone = onBWDone;
            clientObj.onBWCheck = onBWCheck;
            nc.client = clientObj;
            
            // Connect to the "live" application on Flash Media Server.
            nc.connect(connectionURL);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            trace(event.info.code + " | " + event.info.description);
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    // Enable the "Publish" button after the client connects to the server.
                    b.enabled = true;
                    break;
                case "NetStream.Publish.Start":
                    playbackVideo();
                    break;
            }
        }
    
        private function publishVideo(event:MouseEvent):void{
            // Disable the button so that you can only publish once.
            b.enabled = false;
            // Create a NetStream to send video to FMS.
            ns_publish = new NetStream(nc);
            ns_publish.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            // Publish (send) the video to FMS.
            cam = Camera.getCamera();
            ns_publish.attachCamera(cam);
               ns_publish.publish(videoURL);
        }

        private function playbackVideo():void {
            // Create a NetStream to receive the video from FMS.
            ns_playback = new NetStream(nc);
            ns_playback.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            ns_playback.play(videoURL);    
            // Display the video that was published to FMS.
            video_playback = new Video(cam.width, cam.height);
            video_playback.x = cam.width + 20;
            video_playback.y = 10;
            video_playback.attachNetStream(ns_playback);
            addChild(video_playback);
        }
        
        
        private function setUpUI():void { 
            b = new Button(); 
            b.addEventListener(MouseEvent.CLICK, publishVideo);
            b.width = 150;
            b.label = "Publish video to server";
            b.move(10, 150);
            b.enabled = false;
            
            l = new Label();
            l.width = 150;
            l.text = "Playing back from server"
            l.move(190, 150);
            
            addChild(b);
            addChild(l);
        }
        
        // Handlers called by the Flash Media Server "live" and "vod" applications.
        public function onBWDone(... rest):Boolean {
            return true;
        }
        
        public function onBWCheck(... rest):Number {
            return 0;
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connect()</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:receiveAudio" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveAudio</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob eingehende Audiodaten im Stream wiedergegeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">flag</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob eingehende Audiodaten im Stream wiedergegeben werden (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Wenn der angegebene Stream nur Audiodaten enthält, wird <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> nicht weiter erhöht, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">false</codeph> übergeben.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob eingehende Audiodaten im Stream wiedergegeben werden. Diese Methode ist nur für Clients verfügbar, die den angegebenen Stream abonniert haben. Dem Herausgeber des Streams steht sie nicht zur Verfügung. Rufen Sie diese Methode vor oder nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode auf. Fügen Sie diese Methode zum Beispiel einer Schaltfläche an, mit der der Benutzer den Ton aus- und einschalten kann. Verwenden Sie diese Methode nur bei Unicast-Streams, die von Flash Media Server wiedergegeben werden. Diese Methode funktioniert nicht für RTMFP-Multicast-Streams oder bei Verwendung der <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>-Methode.
     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:receiveVideoFPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveVideoFPS</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Bildrate für eingehendes Video an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">FPS</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Bildrate pro Sekunde an, bei der das eingehende Video abgespielt wird.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Bildrate für eingehendes Video an. Diese Methode ist nur für Clients verfügbar, die den angegebenen Stream abonniert haben. Dem Herausgeber des Streams steht sie nicht zur Verfügung. Rufen Sie diese Methode vor oder nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode auf. Rufen Sie diese Methode zum Beispiel auf, um Benutzern das Festlegen der Videobildfrequenz zu ermöglichen. Mit <codeph class="+ topic/ph pr-d/codeph ">NetStream.currentFPS</codeph> können Sie die aktuelle Bildrate zu bestimmen. Um den Videoempfang zu beenden, übergeben Sie <codeph class="+ topic/ph pr-d/codeph ">0</codeph>.
	 <p class="- topic/p ">Wenn Sie einen Wert an den FPS-Parameter übergeben, um die Bildrate des Videos zu begrenzen, versucht Flash Media Server, die Bildrate zu verringern und gleichzeitig die Integrität des Videos zu erhalten. Jeweils zwischen zwei Schlüsselbildern sendet der Server die Mindestanzahl Bilder, um die gewünschte Bildrate zu erreichen. Beachten Sie, dass Zwischenbilder (I-frames) direkt angrenzend gesendet werden müssen, andernfalls ist das Video fehlerhaft. Deshalb wird die gewünschte Anzahl Bilder sofort und angrenzend an einen Keyframe gesendet. Da die Bilder nicht gleichmäßig verteilt sind, erscheint die Bewegung in Segmenten fließend, unterbrochen von kurzen Halts.</p>
	 <p class="- topic/p ">Verwenden Sie diese Methode nur bei Unicast-Streams, die von Flash Media Server wiedergegeben werden. Diese Methode funktioniert nicht für RTMFP-Multicast-Streams oder bei Verwendung der <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>-Methode.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:receiveVideo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveVideo</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob eingehende Videodaten im Stream wiedergegeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">flag</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob eingehende Videodaten in diesem Stream wiedergegeben werden (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Wenn der angegebene Stream nur Videodaten enthält, wird <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> nicht weiter erhöht, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">false</codeph> übergeben.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob eingehende Videodaten im Stream wiedergegeben werden. Diese Methode ist nur für Clients verfügbar, die den angegebenen Stream abonniert haben. Dem Herausgeber des Streams steht sie nicht zur Verfügung. Rufen Sie diese Methode vor oder nach dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode auf. Fügen Sie diese Methode zum Beispiel einer Schaltfläche an, mit der der Benutzer Video ein- und ausblenden kann. Verwenden Sie diese Methode nur bei Unicast-Streams, die von Flash Media Server wiedergegeben werden. Diese Methode funktioniert nicht für RTMFP-Multicast-Streams oder bei Verwendung der <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>-Methode.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:resetDRMVouchers" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resetDRMVouchers</apiName><shortdesc class="- topic/shortdesc ">
     Löscht alle im lokalen Cache abgelegten DRM-Gutscheindaten (Digital Rights Management).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, resetDRMVouchers
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Gutscheindaten können nicht gelöscht werden.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Löscht alle im lokalen Cache abgelegten DRM-Gutscheindaten (Digital Rights Management).
     <p class="- topic/p ">
     Die Anwendung muss alle erforderlichen Gutscheine erneut vom Medienrechteserver herunterladen, damit der Benutzer auf zugriffsgeschützten Inhalt zugreifen kann. Der Aufruf dieser Funktion hat den gleichen Effekt wie das Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">resetDRMVouchers()</codeph>-Funktion des DRMManager-Objekts.</p>
     
     </apiDesc><example conref="examples\NetStream.resetDRMVouchers.1.as" class="- topic/example "> Das folgende Beispiel setzt alle DRM-Gutscheine zurück:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

NetStream.resetDRMVouchers();
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:resume" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resume</apiName><shortdesc class="- topic/shortdesc ">
     Setzt die Wiedergabe eines angehaltenen Videostreams fort.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.resume, resume
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Setzt die Wiedergabe eines angehaltenen Videostreams fort. Wenn die Wiedergabe bereits läuft, hat der Aufruf dieser Methode keine Auswirkung.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/togglePause()" class="- topic/link "><linktext class="- topic/linktext ">togglePause()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:seek" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">seek</apiName><shortdesc class="- topic/shortdesc ">
     
     Sucht das Schlüsselbild (in der Videobranche auch „I-Frame“ genannt), das der angegebenen Position am nächsten ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.seek, seek
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der ungefähre Zeitpunkt in Sekunden, zu dem der Abspielkopf in einer Videodatei verschoben werden soll. Wenn bei Verwendung von Flash Media Server <codeph class="+ topic/ph pr-d/codeph ">&lt;EnhancedSeek></codeph> in der Konfigurationsdatei Application.xml auf den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt wird, generiert der Server ein Schlüsselbild bei <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.
     
     <ul class="- topic/ul "><li class="- topic/li ">Geben Sie für <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> den Wert 0 an, wenn Sie zum Anfang des Streams zurückkehren möchten.</li><li class="- topic/li ">Geben Sie die entsprechende Sekundenzahl an, wenn Sie ab dem Anfang des Streams vorwärts suchen möchten. Um den Abspielkopf zum Beispiel an eine Position 15 Sekunden nach dem Anfang (oder dem Schlüsselbild vor 15 Sekunden) zu bewegen, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">myStream.seek(15)</codeph>.</li><li class="- topic/li ">Sie können in Relation zur aktuellen Position suchen, indem Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.time + n</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">NetStream.time - n</codeph> eingeben, um von der aktuellen Position aus <codeph class="+ topic/ph pr-d/codeph "> n</codeph> Sekunden vorwärts bzw. rückwärts zu suchen. Um beispielsweise 20 Sekunden von der aktuellen Position aus zurückzuspulen, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek(NetStream.time - 20)</codeph>.</li></ul>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Sucht das Schlüsselbild (in der Videobranche auch „I-Frame“ genannt), das der angegebenen Position am nächsten ist. Das Schlüsselbild wird mit einem Offset (einer Verschiebung) in Sekunden ab dem Beginn des Streams platziert.
     
     <p class="- topic/p ">
     Videostreams werden normalerweise mit zwei Arten von Bildern kodiert: Schlüsselbildern (oder I-Frames) und P-Frames. Ein Schlüsselbild enthält ein gesamtes Bild, während ein P-Frame ein Zwischenbild ist, das zusätzliche Videoinformationen zwischen Schlüsselbildern bietet. Ein Video-Stream enthält in der Regel alle 10 bis 50 Bilder ein Schlüsselbild.
     </p>
     
     <p class="- topic/p ">Flash Media Server verfügt über verschiedene Arten von Suchlaufverhalten: erweiterter Suchlauf und intelligenter Suchlauf.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Erweiterter Suchlauf</b></p>
     
     <p class="- topic/p "> Der erweiterte Suchlauf ist standardmäßig aktiviert. Um den erweiterten Suchlauf zu deaktivieren, stellen Sie auf dem Flash Media Server das <codeph class="+ topic/ph pr-d/codeph ">EnhancedSeek</codeph>-Element in der <codeph class="+ topic/ph pr-d/codeph ">Application.xml</codeph>-Konfigurationsdatei auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> ein.
     </p>
     
     <p class="- topic/p ">Wenn der erweiterte Suchlauf aktiviert ist, generiert der Server ein neues Schlüsselbild bei <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>, basierend auf dem vorherigen Schlüsselbild und ggf. dazwischenliegenden P-Frames. Durch das Generieren von Schlüsselbildern wird auf dem Server jedoch eine hohe Verarbeitungslast erzeugt, und im generierten Schlüsselbild kann es zu Verzerrungen kommen. Wenn der Videocodec On2 verwendet wird, werden das Schlüsselbild vor dem Suchpunkt sowie alle P-Frames zwischen dem Schlüsselbild und dem Suchpunkt an den Client gesendet.
     </p>
     
     <p class="- topic/p ">
     Wenn der erweiterte Suchlauf deaktiviert ist, beginnt der Server ab dem nächstliegenden Schlüsselbild mit dem Streaming. Angenommen, ein Video hat Schlüsselbilder bei 0 Sekunden und bei 10 Sekunden. Ein Suchlauf von 4 Sekunden startet die Wiedergabe bei 4 Sekunden unter Verwendung des Schlüsselbilds bei 0 Sekunden. Das Video bleibt stehen, bis das nächste Schlüsselbild bei 10 Sekunden erreicht wird. Um bessere Suchläufe zu erzielen, müssen Sie das Schlüsselbildintervall verringern. Im normalen Suchmodus können Sie das Video nicht an einem Punkt zwischen den Schlüsselbildern starten.
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Intelligenter Suchlauf</b></p>
     
     <p class="- topic/p ">Um den intelligenten Suchlauf zu aktivieren, stellen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ein.</p>
     
     <p class="- topic/p ">Der intelligente Suchlauf ermöglicht Flash Player, innerhalb eines vorhandenen Rücklauf- und Vorlaufpuffer zu suchen. Wenn der intelligente Suchlauf deaktiviert ist, leert Flash Player bei jedem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> den Puffer und fordert Daten vom Server an. Weitere Informationen finden Sie im Abschnitt zu <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Suchläufe im Datengenerierungsmodus</b></p>
     
     <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> für einen NetStream im Datengenerierungsmodus aufrufen, werden alle an <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> übergebenen Daten verworfen (nicht gepuffert, nicht im Teilnachrichten-FIFO akkumuliert oder nach Suchpunkten analysiert), bis Sie <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_BEGIN</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_SEEK)</codeph> aufrufen, um den Parser zurückzusetzen. Informationen zum Datengenerierungsmodus finden Sie unter <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>.</p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Sendet eine Nachricht an alle Clients mit Abonnement über den veröffentlichten Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">handlerName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die zu sendende Nachricht, auch der Name der ActionScript-Prozedur für den Empfang der Nachricht. Der Prozedurname darf nur eine Ebene umfassen (d. h. die Form übergeordnet/untergeordnet ist nicht zulässig) und hängt vom Stream-Objekt ab. Verwenden Sie keine reservierten Begriffe als Prozedurnamen. Wenn Sie beispielsweise <codeph class="+ topic/ph pr-d/codeph ">close</codeph> als Prozedurnamen verwenden, schlägt die Methode fehl. Mit Flash Media Server verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph>, um einem Live-Stream ein Schlüsselbild mit Metadaten hinzuzufügen bzw. <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph>, um ein Schlüsselbild zu entfernen.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Optionale Argumente beliebigen Typs. Diese werden serialisiert, über die Verbindung gesendet und von der Empfangsprozedur in derselben Reihenfolge empfangen. Wenn es sich bei dem Parameter um ein zyklisches Objekt handelt (z. B. eine verknüpfte zyklische Liste), werden die Verweise bei der Serialisierung korrekt verarbeitet. Wenn bei der Verwendung mit Flash Media Server <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> das erste Argument ist, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> als zweites Argument; für das dritte Argument übergeben Sie eine Instanz von <codeph class="+ topic/ph pr-d/codeph ">Object</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">Array</codeph>, in der die Metadaten als Eigenschaften festgelegt wurden. Im <xref href="http://www.adobe.com/go/learn_fms_devguide_en" scope="external" class="- topic/xref ">Flash Media Server Developer Guide</xref> finden Sie eine Liste mit vorgeschlagenen Eigenschaftsnamen. Mit <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph> als erstem Argument, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> als zweites Argument und kein drittes Argument.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Sendet eine Nachricht an alle Clients mit Abonnement über den veröffentlichten Stream. Diese Methode ist nur für den Herausgeber des angegebenen Streams verfügbar. Diese Methode steht nur zur Verwendung mit Flash Media Server zur Verfügung. Erstellen Sie eine Prozedur für das <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>-Objekt, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">ns.HandlerName</codeph>, um diese Meldung zu verarbeiten und darauf zu reagieren.
     
     <p class="- topic/p ">
     Methoden und ihre Daten, Objektprototypvariablen und nicht zählbare Variablen werden in <ph class="- topic/ph ">Flash Player oder </ph>AIR nicht serialisiert. Zur Anzeige von Objekten serialisiert <ph class="- topic/ph ">Flash Player oder </ph>AIR lediglich den Pfad.
     </p>
     
     <p class="- topic/p ">
     Sie können die <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>-Methode aufrufen, um einem für Flash Media Server veröffentlichten Live-Stream Datenschlüsselbilder hinzuzufügen. Ein Datenschlüsselbild ist eine Meldung, die ein Herausgeber einem Live-Stream hinzufügt. Datenschlüsselbilder werden normalerweise verwendet, um einem Live-Stream Metadaten hinzuzufügen, bevor die Daten von Kamera und Mikrofon für den Stream erfasst werden. Ein Herausgeber kann jederzeit ein Datenschlüsselbild hinzufügen, während der Live-Stream veröffentlicht wird. Das Datenschlüsselbild wird im Speicher des Servers gespeichert, solange der Herausgeber mit dem Server verbunden ist.
     </p>
     <p class="- topic/p ">
     Clients, die den Live-Stream vor dem Hinzufügen eines Datenschlüsselbilds abonniert haben, erhalten das Schlüsselbild sobald es hinzugefügt wurde. Clients, die den Live-Stream nach dem Hinzufügen eines Datenschlüsselbilds abonnieren, erhalten das Schlüsselbild sobald sie den Stream abonnieren.
     </p>
     <p class="- topic/p ">
     Um einem Live-Stream, der an Flash Media Server gesendet wird, ein Schlüsselbild mit Metadaten hinzuzufügen, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> als Prozedurnamen, gefolgt von zwei zusätzlichen Argumenten, zum Beispiel:
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var ns:NetStream = new NetStream(nc);
     ns.send("@setDataFrame", "onMetaData", metaData);
     </codeblock>
     
     
     
     <p class="- topic/p ">
     Das Argument <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> verweist auf eine spezielle Prozedur, die in Flash Media Server integriert ist. Das Argument <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ist der Name einer Callback-Funktion in Ihrer Client-Anwendung, die auf das <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>-Ereignis wartet und die Metadaten abruft. Das dritte Element, <codeph class="+ topic/ph pr-d/codeph ">metaData</codeph>, ist eine Instanz von <codeph class="+ topic/ph pr-d/codeph ">Object</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">Array</codeph> mit Eigenschaften, die die Metadatenwerte definieren.
     </p>
     
     <p class="- topic/p ">Mit <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph> löschen Sie ein Schlüsselbild mit Metadaten, das bereits im Stream gesendet wurde:
     </p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.send("@clearDataFrame", "onMetaData");
     </codeblock>
     
     
     </apiDesc><example conref="examples\NetStream.send.1.as" class="- topic/example "> Im folgenden Beispiel werden zwei <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>-Objekte erstellt. Eines veröffentlicht einen Live-Stream an den Server, während das andere den Stream abonniert.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
   import flash.display.Sprite;
   import flash.net.NetConnection;
   import flash.net.NetStream;
   import flash.events.NetStatusEvent;
   import flash.media.Video;
   import flash.utils.setTimeout;

 
   public class TestExample extends Sprite
   {
     var nc:NetConnection = new NetConnection();
     var ns1:NetStream;
     var ns2:NetStream;
     var vid:Video = new Video(300,300);
     var obj:Object = new Object();
 
     public function TestExample() {
        nc.objectEncoding = 0;
        nc.addEventListener("netStatus", onNCStatus);
        nc.connect("rtmp://localhost/FlashVideoApp");
        addChild(vid); 
     }
  
     function onNCStatus(event:NetStatusEvent):void {
       switch (event.info.code) {
           case "NetConnection.Connect.Success":
               trace("You've connected successfully");
               ns1 = new NetStream(nc);
               ns2 = new NetStream(nc);
               
               ns1.client = new CustomClient();
               ns1.publish("dummy", "live");
    
               ns2.play("dummy");
               ns2.client = new CustomClient();
               vid.attachNetStream(ns2);
               setTimeout(sendHello, 3000);
               break;
              
           case "NetStream.Publish.BadName":
               trace("Please check the name of the publishing stream" );
               break;
        }   
     }

     function sendHello():void {
         ns1.send("myFunction", "hello");
     }       
   }
 }
 
 class CustomClient {
    public function myFunction(event:String):void {
       trace(event);
    }
 }
</codeblock></example><example conref="examples\NetStream.send.2.as" class="- topic/example "> Im folgenden Beispiel werden Metadaten erstellt und einem Live-Stream hinzugefügt:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
private function netStatusHandler(event:NetStatusEvent):void {
     switch (event.info.code) {  
        case "NetStream.Publish.Start":
            var metaData:Object = new Object();
            metaData.title = "myStream";
            metaData.width = 400;
            metaData.height = 200;
            ns.send("&amp;#64;setDataFrame", "onMetaData", metaData);
            ns.attachCamera( Camera.getCamera() );
            ns.attachAudio( Microphone.getMicrophone() );        
    }
}
</codeblock></example><example conref="examples\NetStream.send.3.as" class="- topic/example "> Um auf ein Datenschlüsselbild, das dem Video hinzugefügt wurde, zu reagieren, muss der Client eine <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>-Ereignisprozedur definieren. Die Ereignisprozedur <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ist nicht bei <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> registriert; es handelt sich vielmehr um eine Callback-Funktion mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>, zum Beispiel:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 public function onMetaData(info:Object):void {
    trace("width: " + info.width);
    trace("height: " + info.height);
 }
</codeblock></example><example conref="examples\NetStream.send.4.as" class="- topic/example "> Im folgenden Beispiel wird eine Wiedergabeliste auf dem Server erstellt:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 // Create a NetStream for playing
 var my_ns:NetStream = new NetStream(my_nc);
 my_video.attachNetStream(my_ns);
 
 // Play the stream record1
 my_ns.play("record1", 0, -1, true);
 
 // Switch to the stream live1 and play for 5 seconds.  
 // Since reset is false, live1 will start to play after record1 is done.
 my_ns.play("live1", -1 , 5, false);
</codeblock></example><example conref="examples\NetStream.send.5.as" class="- topic/example "> Wenn die aufgezeichnete Videodatei nur Datenmeldungen enthält, können Sie die Videodatei entweder mit der Geschwindigkeit, in der sie aufgezeichnet wurde, abspielen, oder Sie rufen alle Datenmeldungen auf einmal ab.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 //To play at normal speed
 var my_ns:NetStream = new NetStream(my_nc);
 my_ns.play("log", 0, -1);
 
 //To get the data messages all at once
 my_ns.play("log", 0, -1, 3);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:setDRMAuthenticationCredentials" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDRMAuthenticationCredentials</apiName><shortdesc class="- topic/shortdesc ">
     Senden die DRM-Authentifizierungsdaten, die für die Anzeige des verschlüsselten Inhalts erforderlich sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, setDRMAuthenticationCredentials
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">userName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein gültiger Benutzername.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Kennwortdaten, die dem angegebenen Benutzernamen zugeordnet sind.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der angibt, welche Art von Authentifizierungsdaten angegeben werden. Gültige Werte sind <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph>. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>.
     <ul class="- topic/ul "><li class="- topic/li ">Mit dem Authentifizierungstyp <codeph class="+ topic/ph pr-d/codeph ">„drm“</codeph> werden die Benutzerinformationen für Flash Access authentifiziert.</li><li class="- topic/li ">Mit dem Authentifizierungstyp <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph> werden die bereitgestellten Benutzerdaten für den Proxyserver authentifiziert und müssen mit den vom Proxyserver angeforderten übereinstimmen. Die <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph>-Option ermöglicht der Anwendung zum Beispiel die Authentifizierung für einen Proxyserver, wenn ein Unternehmen diesen Schritt verlangt, bevor der Benutzer Zugriff auf das Internet hat. Sofern keine anonyme Authentifizierung verwendet wird, muss sich der Benutzer nach der Proxyauthentifizierung immer noch für Flash Access authentifizieren, um den Gutschein zu erhalten und den Inhalt abzuspielen. Sie können <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationcredentials()</codeph> ein zweites Mal mit der Option <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph> verwenden, um die Authentifizierung für Flash Access durchzuführen.</li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Senden die DRM-Authentifizierungsdaten, die für die Anzeige des verschlüsselten Inhalts erforderlich sind.
     <p class="- topic/p ">
     Die <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationCredentials()</codeph>-Methode muss Benutzerdaten zur Verfügung stellen, die mit denjenigen übereinstimmen, die vom Content Provider oder dem Proxyserver erkannt und akzeptiert werden. Dies sind dieselben Benutzerdaten, die der Benutzer verwendet, um die Berechtigung zum Anzeigen des Inhalts zu bekommen.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMAuthenticateEvent</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:step" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">step</apiName><shortdesc class="- topic/shortdesc ">
    Geht in Relation zum aktuell angezeigten Bild die angegebene Anzahl von Bildern vor oder zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">frames</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Geht in Relation zum aktuell angezeigten Bild die angegebene Anzahl von Bildern vor oder zurück. Geben Sie eine positive Zahl an, um vorzugehen, oder eine negative Zahl, um zurückzugehen. Rufen Sie diese Methode auf, um exakte Schnellvorlauf- oder Rücklauffunktionalität zu erstellen.
    
    <p class="- topic/p ">Diese Methode ist nur verfügbar, wenn Daten von Flash Media Server 3.5.3 oder höher gestreamt werden und wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> hat. Außerdem muss sich der Ziel-Frame im Puffer befinden. Wenn zum Beispiel das zurzeit angezeigte Bild das Bild mit der Nummer 120 ist und Sie einen Wert von 1000 angeben, schlägt die Methode fehl, wenn sich das Bild mit der Nummer 1120 nicht im Puffer befindet.</p>
    
    <p class="- topic/p ">Diese Methode ist zur Verwendung mit den Methoden <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">togglePause()</codeph> gedacht. Wenn Sie während der Wiedergabe ohne Pause 10 Bilder vor- oder zurückgehen, bemerken Sie die Schritte möglicherweise nicht oder sie sehen wie eine Störung aus. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">togglePause</codeph> aufrufen, wird das Audio unterdrückt.</p>
    
    <p class="- topic/p ">Wenn der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.step()</codeph> erfolgreich ist, wird ein NetStatusEvent gesendet, wobei "NetStream.Step.Notify" als Wert für die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft des Info-Objekts angegeben wird. </p>
    
    <p class="- topic/p ">  </p>
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:togglePause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">togglePause</apiName><shortdesc class="- topic/shortdesc ">
     Hält die Wiedergabe eines Streams an oder setzt sie fort.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.resume, resume
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Hält die Wiedergabe eines Streams an oder setzt sie fort. Beim ersten Aufruf dieser Methode wird die Wiedergabe angehalten und beim zweiten Aufruf fortgesetzt. Mit dieser Methode können Sie Benutzern ermöglichen, die Wiedergabe über dieselbe Schaltfläche anzuhalten und fortzusetzen.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetStream:CONNECT_TO_FMS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT_TO_FMS</apiName><shortdesc class="- topic/shortdesc ">
     Ein statisches Objekt, das als Parameter für den Konstruktor einer NetStream-Instanz verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connectToFMS</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein statisches Objekt, das als Parameter für den Konstruktor einer NetStream-Instanz verwendet wird. Der Standardwert des zweiten Parameters im NetStream-Konstruktor: er wird nicht von der Anwendung für die progressive Medienwiedergabe verwendet. Wenn dieser Parameter verwendet wird, stellt der Konstruktor eine Verbindung zur Flash Media Server-Instanz her.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:DIRECT_CONNECTIONS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DIRECT_CONNECTIONS</apiName><shortdesc class="- topic/shortdesc ">
     Stellt eine Peer-to-Peer-Herausgeberverbindung her.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">directConnections</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt eine Peer-to-Peer-Herausgeberverbindung her. Übergeben Sie diesen String für den zweiten (optionalen) Parameter an den Konstruktor für eine NetStream-Instanz. Mit diesem String kann eine Anwendung eine NetStream-Verbindung zum Veröffentlichen von Audio und Video für Clients erstellen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:audioReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Audio vollständig zuverlässig gesendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Audio vollständig zuverlässig gesendet wird. Mit der Einstellung TRUE sind alle über diesen NetStream übertragenen Audiodaten vollständig zuverlässig. Mit der Einstellung FALSE sind die übertragenen Audiodaten nicht vollständig zuverlässig, sondern werden für eine begrenzte Zeit erneut übertragen und dann ausgelassen. Sie können den Wert FALSE verwenden, um die Latenzzeit auf Kosten der Audioqualität zu verringern.
     
     <p class="- topic/p ">Wenn Sie diese Eigenschaft in einem Netzwerkprotokoll, das teilweise Zuverlässigkeit nicht unterstützt, auf FALSE setzen, wird der Versuch ignoriert und die Eigenschaft wird auf TRUE gesetzt. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link><link href="flash.net.xml#NetStream/videoReliable" class="- topic/link "><linktext class="- topic/linktext ">videoReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:audioSampleAccess:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioSampleAccess</apiName><shortdesc class="- topic/shortdesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Peer-to-Peer-Abonnenten für diesen NetStream den Audiostream erfassen dürfen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Peer-to-Peer-Abonnenten für diesen NetStream den Audiostream erfassen dürfen. Mit der Einstellung FALSE resultieren Versuche von Abonnenten, den Audiostream zu erfassen, zu Berechtigungsfehlern.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/videoSampleAccess" class="- topic/link "><linktext class="- topic/linktext ">videoSampleAccess</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:backBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">backBufferLength</apiName><shortdesc class="- topic/shortdesc ">
    Die Anzahl der Sekunden von zuvor angezeigten Daten, die zurzeit zum Zurückspulen und Abspielen zwischengespeichert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Anzahl der Sekunden von zuvor angezeigten Daten, die zurzeit zum Zurückspulen und Abspielen zwischengespeichert werden.
    
    <p class="- topic/p ">Diese Eigenschaft ist nur verfügbar, wenn Daten von Flash Media Server 3.5.3 oder höher gestreamt werden. Weitere Informationen zu Flash Media Server finden Sie in der Beschreibung der Klasse.</p>
    
    <p class="- topic/p ">Um anzugeben, wie viele der zuvor angezeigten Daten zwischengespeichert werden, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">Netstream.backBufferTime</codeph>-Eigenschaft. </p>
    
    <p class="- topic/p "> Um die Zwischenspeicherung von Daten zu verhindern, setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">Netstream.inBufferSeek</codeph>-Eigenschaft auf FALSE.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:backBufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">backBufferTime</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an (in Sekunden), wie viele der zuvor abgespielten Daten Flash Player zum Zurückspulen und Abspielen zwischenzuspeichern versucht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an (in Sekunden), wie viele der zuvor abgespielten Daten Flash Player zum Zurückspulen und Abspielen zwischenzuspeichern versucht. Der Standardwert beträgt 30 Sekunden für Desktopanwendungen und 3 Sekunden für mobile Anwendungen.
    
    <p class="- topic/p ">Diese Eigenschaft ist nur verfügbar, wenn Daten von Flash Media Server Version 3.5.3 oder höher gestreamt werden. Weitere Informationen zu Flash Media Server finden Sie in der Beschreibung der Klasse.</p>
    
    <p class="- topic/p ">Mit dieser Eigenschaft können Sie die Leistung bei Rücklaufoperationen verbessern, da bereits angezeigte Daten nicht erneut vom Server abgerufen werden müssen. Stattdessen wiederholt der Stream die Wiedergabe der Daten aus dem Puffer. Während der Wiedergabe werden weiterhin Daten vom Server gestreamt, bis der Puffer voll ist. </p>
    
    <p class="- topic/p ">Wenn die Rücklaufposition weiter zurück liegt als die Daten im Cache, wird der Puffer gelöscht; die Daten werden dann ab der angeforderten Position vom Server gestreamt. </p>
    
    <p class="- topic/p ">Um diese Eigenschaft zu verwenden, setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">Netstream.inBufferSeek</codeph>-Eigenschaft auf TRUE.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Die derzeit im Puffer befindliche Datenmenge, gemessen in Sekunden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bufferLength, bufferLength
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die derzeit im Puffer befindliche Datenmenge, gemessen in Sekunden. Wenn Sie diese Eigenschaft zusammen mit <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> verwenden, können Sie einschätzen, wie weit der Zwischenspeicher belegt ist, um beispielsweise eine Rückmeldung für einen Benutzer anzuzeigen, der darauf wartet, dass Daten in den Zwischenspeicher geladen werden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferTimeMax:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferTimeMax</apiName><shortdesc class="- topic/shortdesc ">
    Gibt die maximale Pufferlänge für Live-Streaming-Inhalt in Sekunden an. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt die maximale Pufferlänge für Live-Streaming-Inhalt in Sekunden an. Der Standardwert ist 0. Die Pufferlänge kann mit der Zeit aufgrund von Netzwerk- und Geräteproblemen zunehmen (zum Beispiel wegen unterschiedlich laufender Uhren bei Sender und Empfänger). Legen Sie diese Eigenschaft fest, um die Pufferlänge für Live-Anwendungen wie Meetings und Überwachung abzudecken.
    
    <p class="- topic/p "> Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTimeMax > 0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">bufferLength >= bufferTimeMax</codeph>, wird Audio schneller abgespielt, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert von <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> erreicht. Wenn ein Live-Stream nur aus Video besteht, wird das Video schneller abgespielt, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert von <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> erreicht.</p>
    
    <p class="- topic/p ">Je nachdem, wie viel der Wiedergabe nachhängt (die Differenz zwischen <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> und <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>) steuert Flash Player die Aufholrate zwischen 1,5% und 6,25%. Wenn der Stream Audio enthält, wird die schnellere Wiedergabe durch Frequenzdomänen-Downsampling erreicht, wobei die Audioverzerrung minimiert wird.</p>
    
    <p class="- topic/p ">Legen Sie die <codeph class="+ topic/ph pr-d/codeph ">bufferTimeMax</codeph>-Eigenschaft fest, um das Aufholen (Catch-up) bei gepufferten Livestreams in den folgenden Fällen zu ermöglichen:</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Streaming von Live-Medien von Flash Media Server.</li><li class="- topic/li ">Streaming von Live-Medien im Datengenerierungsmodus (<codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>).</li></ul>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferTime</apiName><shortdesc class="- topic/shortdesc ">
     Bestimmt, wie lange Nachrichten im Zwischenspeicher bleiben, bis mit der Anzeige des Streams begonnen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.setBufferTime, setBufferTime
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bestimmt, wie lange Nachrichten im Zwischenspeicher bleiben, bis mit der Anzeige des Streams begonnen wird.
     
     <p class="- topic/p ">Der Standardwert ist 0,1 (ein Zehntel einer Sekunde). Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> können Sie die derzeit im Puffer befindliche Datenmenge (in Sekunden) ermitteln.</p>
     
     <p class="- topic/p ">Um eine serverseitige Wiedergabeliste abzuspielen, stellen Sie <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> auf mindestens 1 Sekunde. Wenn es Probleme mit der Wiedergabe gibt, erhöhen Sie die Länge von <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>.
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Aufgezeichnete Inhalte</b> Um beim Streaming von aufgezeichneten Inhalten (nicht live) Verzerrungen zu vermeiden, sollten Sie den Wert von <codeph class="+ topic/ph pr-d/codeph ">Netstream.bufferTime</codeph> auf 0 setzen. Bei aufgezeichneten Inhalten verwendet die Anwendung standardmäßig einen Eingabepuffer, der die Mediendaten in eine Warteschlange stellt und die Medien korrekt wiedergibt. Verwenden Sie bei aufgezeichneten Inhalten die Standardeinstellung oder erhöhen Sie die Pufferzeit.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Live-Inhalt</b> Beim Streaming von Live-Inhalten setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>-Eigenschaft auf 0.</p>
     
     <p class="- topic/p ">Beginnend mit Flash Player 9.0.115.0 leert der Flash Player den Puffer nicht mehr, wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> aufgerufen wird. In Vorgängerversionen von Flash Player 9.0.115.0 hat Flash Player gewartet, bis der Puffer voll war, bevor die Wiedergabe fortgesetzt wurde, wodurch es häufig zu Verzögerungen kam.</p>
         
         <p class="- topic/p ">Für eine einzelne Pause hat die <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph>-Eigenschaft ein Limit von 60 Sekunden oder das Doppelte des Werts von <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph>, je nachdem, welcher Wert höher ist. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> zum Beispiel 20 Sekunden beträgt, puffert Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> den höheren Wert von 20~~2 (40) oder 60 hat. In diesem Fall puffer Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 60 hat. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> 40 Sekunden beträgt, puffert Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den höheren Wert von 40~~2 (80) oder 60 hat. In diesem Fall puffert Flash Player, bis <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 80 hat.</p>
         
         <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph>-Eigenschaft hat auch ein absolutes Limit. Wenn ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> dazu führt, dass <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> auf mehr als 600 Sekunden ansteigt oder der Wert von <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> ~~ 2, je nachdem, welcher Wert höher ist, löscht Flash Player den Puffer und setzt <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> auf 0 zurück. Wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> zum Beispiel 120 Sekunden beträgt, löscht Flash Player den Puffer, wenn <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 600 Sekunden erreicht; wenn <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> 360 Sekunden beträgt, löscht Flash Player den Puffer, wenn <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> den Wert 720 Sekunden erreicht.</p>
         
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Tipp</b>: Sie können im Code <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> verwenden, um Daten zu puffern, während Betrachter zum Beispiel einen Werbespot sehen, und dann die Pause aufheben, wenn das Hauptvideo beginnt.</p>
         
         <p class="- topic/p ">Weitere Informationen zum neuen Pausenverhalten finden Sie unter <xref href="http://www.adobe.com/go/learn_fms_smartpause_de" scope="external" class="- topic/xref ">http://www.adobe.com/go/learn_fms_smartpause_de</xref>.</p>
     <p class="- topic/p ">
     <b class="+ topic/ph hi-d/b ">Flash Media Server</b>. Das Pufferverhalten ist davon abhängig, ob die Pufferzeit für einen veröffentlichenden oder abonnierenden Stream festgelegt wird. Für einen veröffentlichenden Stream legt <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> fest, wie lange der ausgehende Puffer anwachsen kann, bevor die Anwendung beginnt, Bilder zu überspringen. Bei einer Highspeed-Verbindung stellt die Pufferzeit kein Problem dar; Daten werden fast so schnell gesendet, wie die Anwendung sie puffern kann. Bei langsameren Verbindungen kann es jedoch einen erheblichen Unterschied geben zwischen der Geschwindigkeit, mit der die Anwendung Daten puffert, und der Geschwindigkeit, mit der die Daten an den Client gesendet werden.
     </p>
     
     <p class="- topic/p ">
     Für einen abonnierenden Stream legt <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> fest, wie lange eingehende Daten gepuffert werden, bevor der Stream angezeigt wird.
     </p>
     
     <p class="- topic/p ">
     Wenn ein aufgezeichneter Stream abgespielt wird und <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> den Wert 0 aufweist, stellt Flash einen kleinen Wert ein (ca. 10 Millisekunden). Wenn Live-Stream später abgespielt werden (zum Beispiel von einer Wiedergabeliste) bleibt die Pufferzeit erhalten. Das bedeutet, <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> bleibt „nicht null“ für den Stream.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTimeMax" class="- topic/link "><linktext class="- topic/linktext ">bufferTimeMax</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bytesLoaded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
     Die Anzahl der in die Anwendung geladenen Datenbyte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bytesLoaded, bytesLoaded
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Anzahl der in die Anwendung geladenen Datenbyte. Wenn Sie diese Eigenschaft zusammen mit <codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph> verwenden, können Sie einschätzen, wie weit der Zwischenspeicher belegt ist, um beispielsweise eine Rückmeldung für einen Benutzer anzuzeigen, der darauf wartet, dass Daten in den Zwischenspeicher geladen werden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bytesTotal" class="- topic/link "><linktext class="- topic/linktext ">bytesTotal</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
     Die Gesamtgröße (in Byte) der in die Anwendung geladenen Datei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bytesTotal, bytesTotal
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Gesamtgröße (in Byte) der in die Anwendung geladenen Datei.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:checkPolicyFile:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">checkPolicyFile</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob die Anwendung vor dem Laden der Videodatei versucht, eine Cross-Domain-Richtliniendatei vom Server der Videodatei herunterzuladen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>: please review at same time: checkPolicyFile property in LoaderContext
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob die Anwendung vor dem Laden der Videodatei versucht, eine Cross-Domain-Richtliniendatei vom Server der Videodatei herunterzuladen. Verwenden Sie diese Eigenschaft für progressive Videodownloads und zum Laden von Dateien, die sich außerhalb der Domäne der aufrufenden SWF-Datei befinden. Diese Eigenschaft wird ignoriert, wenn Sie RTMP verwenden.
     
     <p class="- topic/p ">Stellen Sie diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, um <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> für eine Videodatei aufzurufen, die aus einer Domäne außerhalb der Domäne der aufrufenden SWF-Datei geladen wurde. Die <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>-Methode ermöglicht den Zugriff auf das Video auf Pixelebene. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> aufrufen, ohne die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> zum Ladezeitpunkt auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zu setzen, wird möglicherweise eine <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>-Ausnahme ausgelöst, da die erforderliche Richtliniendatei nicht heruntergeladen wurde.</p>
     
     <p class="- topic/p ">Setzen Sie diese Eigenschaft nicht auf „true“, es sei denn, Sie wünschen Zugriff auf Pixelebene auf das Video, das Sie laden. Durch die Suche nach einer Richtliniendatei wird Netzwerkbandbreite belegt und der Start des Download-Vorgangs möglicherweise verzögert.</p>
     
     <p class="- topic/p ">Wenn Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aufrufen und <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, muss in<ph class="- topic/ph "> Flash Player oder</ph> der AIR-Laufzeitumgebung vor dem Herunterladen entweder eine entsprechende Cross-Domain-Richtlinie erfolgreich heruntergeladen werden, oder es muss festgestellt werden, dass keine Richtliniendatei vorhanden ist. In <ph class="- topic/ph ">Flash Player oder </ph>der AIR-Laufzeitumgebung werden die folgenden Aktionen in der angegebenen Reihenfolge ausgeführt, um zu überprüfen, ob eine Richtliniendatei vorhanden ist:</p>
     
     <ol class="- topic/ol "><li class="- topic/li ">Die Anwendung überprüft Richtliniendateien, die bereits heruntergeladen wurden.</li><li class="- topic/li ">Die Anwendung versucht, ausstehende Richtliniendateien herunterzuladen, die in Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph> angegeben wurden.</li><li class="- topic/li ">Die Anwendung versucht, eine Richtliniendatei vom Standardspeicherort herunterzuladen, der der an <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> übergebenen URL entspricht, d. h. <codeph class="+ topic/ph pr-d/codeph ">/crossdomain.xml</codeph> auf dem gleichen Server wie die URL.</li></ol>
     
     <p class="- topic/p ">In allen Fällen muss für <ph class="- topic/ph ">Flash Player oder </ph>Adobe AIR eine entsprechende Richtliniendatei auf dem Server des Videos vorhanden sein, über die anhand ihres Speicherorts auf das Objekt unter der an <codeph class="+ topic/ph pr-d/codeph ">play()</codeph> übergebenen URL zugegriffen werden kann und über die die Domäne der aufrufenden Datei über mindestens ein <codeph class="+ topic/ph pr-d/codeph ">&lt;allow-access-from></codeph>-Tag auf das Video zugreifen kann.</p>
     
     <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, wartet die Anwendung mit dem Laden des Videos, bis die Richtliniendatei überprüft wurde. Warten Sie mit dem Ausführen von Vorgängen auf Pixelebene (z. B. Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>), bis Sie <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">NetStatus</codeph>-Ereignisse von Ihrem NetStream-Objekt erhalten.</p>
     
     <p class="- topic/p ">Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, jedoch keine entsprechende Richtliniendatei gefunden wird, wird eine Fehlermeldung erst dann ausgegeben, wenn Sie einen Vorgang durchführen, der eine Richtliniendatei erfordert. Dann wird in der Anwendung eine SecurityError-Ausnahme ausgegeben.</p>
     
     <p class="- topic/p ">Beim Herunterladen einer Videodatei von einer URL, bei der serverseitige HTTP-Weiterleitungen verwendet werden, müssen Sie darauf achten, <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> richtig zu verwenden. Die Anwendung versucht, Richtliniendateien abzurufen, die der ursprünglichen in <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> angegebenen URL entsprechen. Wenn die endgültige Videodatei aufgrund von HTTP-Weiterleitungen von einer anderen URL stammt, gelten die ursprünglich heruntergeladenen Richtliniendateien möglicherweise nicht für die endgültige URL der Videodatei. Dies ist jedoch die URL, die bei Sicherheitsentscheidungen von Bedeutung ist.</p>
     
     <p class="- topic/p ">Weitere Informationen zu Richtliniendateien finden Sie unter „Websitesteuerungen (Richtliniendateien)“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i> und im Flash Player Developer Center im Artikel: <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link><link href="flash.system.xml#Security/loadPolicyFile()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.loadPolicyFile()</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">netStatus</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Gibt das Objekt an, für das Rückrufmethoden aufgerufen werden, um Streaming- oder F4V/FLV-Dateidaten zu verarbeiten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft muss auf ein Objekt eingestellt werden, das nicht null ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt das Objekt an, für das Rückrufmethoden aufgerufen werden, um Streaming- oder F4V/FLV-Dateidaten zu verarbeiten. Standardeinstellung ist das erstellte NetStream-Objekt <codeph class="+ topic/ph pr-d/codeph ">this</codeph>. Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft auf ein anderes Objekt setzen, werden Callback-Methoden auf diesem anderen Objekt aufgerufen. Das <codeph class="+ topic/ph pr-d/codeph ">NetStream.client </codeph>-Objekt kann die folgenden Funktionen aufrufen und ein verknüpftes Datenobjekt empfangen: <codeph class="+ topic/ph pr-d/codeph ">onCuePoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onImageData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onMetaData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onTextData()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph>.
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Verknüpfen der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft mit einer Ereignisprozedur:</b></p>
     <p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">Erstellen Sie ein Objekt und verknüpfen Sie es mit der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft des NetStream-Objekts:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var customClient:Object = new Object();
     my_netstream.client = customClient;
     </codeblock>
     </li><li class="- topic/li ">Verknüpfen Sie eine Ereignisprozedurfunktion für das gewünschte Datenereignis als Eigenschaft des Client-Objekts:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     customClient.onImageData = onImageDataHandler;
     </codeblock>
     </li><li class="- topic/li ">Schreiben Sie die Prozedurfunktion, um das Datenereignisobjekt zu empfangen, z. B.:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
      public function onImageDataHandler(imageData:Object):void {
              trace("imageData length: " + imageData.data.length);
      }
     </codeblock></li></ol></p>
     <p class="- topic/p ">Wenn Daten durch den Stream oder während der Wiedergabe übergeben werden, wird das Datenereignisobjekt (in diesem Fall das <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph>-Objekt) mit den Daten gefüllt. In der Beschreibung zu <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> finden Sie ein vollständiges Beispiel eines Objekts, dass mit der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft verknüpft ist.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Verknüpfen der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft mit einer Unterklasse:</b></p>
     <p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">Erstellen Sie eine Unterklasse mit einer Prozedurfunktion, um das Datenereignisobjekt zu empfangen:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     class CustomClient {
        public function onMetaData(info:Object):void {
            trace("metadata: duration=" + info.duration + " framerate=" + info.framerate);
     }
     </codeblock>
     </li><li class="- topic/li ">Verknüpfen Sie eine Instanz der Unterklasse mit der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft des NetStream-Objekts:
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     my_netstream.client = new CustomClient();
     </codeblock>
     </li></ol></p>
     <p class="- topic/p ">Wenn Daten durch den Stream oder während der Wiedergabe übergeben werden, wird das Datenereignisobjekt (in diesem Fall das <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekt) mit den Daten gefüllt. Im Klassenbeispiel am Ende der NetStream-Klasse können Sie sehen, wie eine Unterklasseninstanz mit der <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft verknüpft wird.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/event:onPlayStatus" class="- topic/link "><linktext class="- topic/linktext ">onPlayStatus</linktext></link><link href="flash.net.xml#NetStream/event:onSeekPoint" class="- topic/link "><linktext class="- topic/linktext ">onSeekPoint</linktext></link><link href="flash.net.xml#NetStream/event:onTextData" class="- topic/link "><linktext class="- topic/linktext ">onTextData</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:currentFPS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentFPS</apiName><shortdesc class="- topic/shortdesc ">
     Die Zahl der pro Sekunde angezeigten Bilder.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.currentFPS, currentFPS
     
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Zahl der pro Sekunde angezeigten Bilder. Wenn Sie Videodateien für die Wiedergabe auf verschiedenen Systemen exportieren, können Sie mithilfe dieses Werts beim Testen bestimmen, wie stark die exportierte Datei komprimiert werden soll.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:dataReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob NetStream.send()-Aufrufe vollständig zuverlässig gesendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph>-Aufrufe vollständig zuverlässig gesendet werden. Bei der Einstellung TRUE sind Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph>, die über diesen NetStream übertragen werden, vollständig zuverlässig. Bei der Einstellung FALSE werden Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> nicht mit vollständiger Zuverlässigkeit übertragen, sondern für eine begrenzte Zeit erneut übertragen und dann ausgelassen. Sie können diesen Wert auf FALSE setzen, um die Latenzzeit auf Kosten der Datenqualität zu verringern.
     
     <p class="- topic/p ">Wenn Sie diese Eigenschaft in einem Netzwerkprotokoll, das teilweise Zuverlässigkeit nicht unterstützt, auf FALSE setzen, wird der Versuch ignoriert und die Eigenschaft wird auf TRUE gesetzt. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioReliable" class="- topic/link "><linktext class="- topic/linktext ">audioReliable</linktext></link><link href="flash.net.xml#NetStream/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link><link href="flash.net.xml#NetStream/videoReliable" class="- topic/link "><linktext class="- topic/linktext ">videoReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:farID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farID</apiName><shortdesc class="- topic/shortdesc ">
     Bei RTMFP-Verbindungen der Bezeichner des anderen Endes, das mit dieser NetStream-Instanz verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bei RTMFP-Verbindungen der Bezeichner des anderen Endes, das mit dieser NetStream-Instanz verbunden ist.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:farNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farNonce</apiName><shortdesc class="- topic/shortdesc ">
     Bei RTMFP- und RTMPE-Verbindungen ein Wert, der vom anderen Ende dieses Streams gewählt wird und für diese Verbindung eindeutig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bei RTMFP- und RTMPE-Verbindungen ein Wert, der vom anderen Ende dieses Streams gewählt wird und für diese Verbindung eindeutig ist. Dieser Wert erscheint am anderen Ende des Streams als <codeph class="+ topic/ph pr-d/codeph ">nearNonce</codeph>-Wert
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:inBufferSeek:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">inBufferSeek</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die angezeigten Daten für den intelligenten Suchlauf zwischengespeichert werden (TRUE) oder nicht (FALSE).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The following links work only if qualified with NetStream. We don't know why.
    </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die angezeigten Daten für den intelligenten Suchlauf zwischengespeichert werden (<codeph class="+ topic/ph pr-d/codeph ">TRUE</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">FALSE</codeph>). Der Standardwert lautet FALSE.
    
    <p class="- topic/p "> Flash Media Server 3.5.3 und Flash Player 10.1 arbeiten zusammen, um den intelligenten Suchlauf zu unterstützen. Beim intelligenten Suchlauf werden Rücklauf- und Vorlaufpuffer verwendet, um Suchläufe auszuführen, ohne Daten vom Server anzufordern. Bei Standardsuchläufen werden die gepufferten Daten gelöscht und neue Daten werden basierend auf der Suchlaufzeit vom Server angefordert.</p>
    
    <p class="- topic/p ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.step()</codeph> auf, um eine bestimmte Anzahl Bilder vor- oder zurückzugehen. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> auf, um eine bestimmte Anzahl Sekunden vor- oder zurückzugehen.</p>
    
    <p class="- topic/p ">Mit intelligenten Suchläufen wird die Serverlast verringert und die Suchlaufleistung verbessert. Stellen Sie <codeph class="+ topic/ph pr-d/codeph ">inBufferSeek=true</codeph> ein und rufen Sie <codeph class="+ topic/ph pr-d/codeph ">step()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> auf, um Folgendes zu erstellen:</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Clientseitige DVR-Funktionen. Suchen Sie im clientseitigen Puffer anstatt wegen der Zustellung neuen Videos zum Server zu gehen.</li><li class="- topic/li ">Trickmodi. Erstellen Sie Player, die bildweise vor- oder zurückgehen, schnellen Rücklauf oder schnellen Vorlauf verwenden oder in Zeitlupe abspielen.</li></ul>
    
    <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">inBufferSeek=true</codeph> und ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> erfolgreich ist, enthält die <codeph class="+ topic/ph pr-d/codeph ">info.description</codeph>-Eigenschaft von NetStatusEvent den String <codeph class="+ topic/ph pr-d/codeph ">"client-inBufferSeek"</codeph>.</p>
    
    <p class="- topic/p ">Wenn ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.step()</codeph> erfolgreich ist, enthält die <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>-Eigenschaft von NetStatusEvent den String <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Step.Notify"</codeph>.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Gibt ein NetStreamInfo-Objekt zurück, dessen Eigenschaften Statistiken über die Dienstqualität enthalten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStreamInfo</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt ein NetStreamInfo-Objekt zurück, dessen Eigenschaften Statistiken über die Dienstqualität enthalten. Das Objekt ist ein Schnappschuss des aktuellen Status.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:liveDelay:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">liveDelay</apiName><shortdesc class="- topic/shortdesc ">
     Die Datenmenge (in Sekunden) im Zwischenspeicher des abonnierenden Streams im Live-Modus (ohne Puffer).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><category class="- topic/category ">Property
     
     </category></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Datenmenge (in Sekunden) im Zwischenspeicher des abonnierenden Streams im Live-Modus (ohne Puffer). Diese Eigenschaft gibt die aktuelle Netzwerkübertragungsverzögerung an.
     
     <p class="- topic/p ">Diese Eigenschaft ist für die Verwendung mit einem Server wie Flash Media Server konzipiert. Weitere Informationen finden Sie in der Beschreibung der Klasse.</p>
     
     <p class="- topic/p ">Mit dem Wert dieser Eigenschaft können Sie die Übertragungsqualität des Streams grob einschätzen und dem Benutzer mitteilen. </p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:maxPauseBufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPauseBufferTime</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie lange (in Sekunden) Meldungen im Pause-Modus gepuffert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie lange (in Sekunden) Meldungen im Pause-Modus gepuffert werden. Diese Eigenschaft kann verwendet werden, um zu beschränken, wie viel im Pause-Modus gepuffert werden soll. Sobald der Wert für <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> dieses Limit erreicht hat, werden keine weiteren Daten mehr gepuffert.
     
     <p class="- topic/p ">Wenn dieser Wert nicht festgelegt ist, wird das Limit auf 60 Sekunden oder auf den doppelten Wert von <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> auf jeder Pause gesetzt, je nachdem, welcher Wert höher ist.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastAvailabilitySendToAll:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastAvailabilitySendToAll</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen an, ob Verfügbarkeitsmeldungen für Peer-to-Peer-Multicast-Fragmente an alle Peers oder nur an einen Peer gesendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen an, ob Verfügbarkeitsmeldungen für Peer-to-Peer-Multicast-Fragmente an alle Peers oder nur an einen Peer gesendet werden. Der Wert TRUE gibt an, dass die Nachrichten einmal pro angegebenem Intervall an alle Peers gesendet werden. Der Wert FALSE gibt an, dass die Nachrichten einmal pro angegebenem Intervall an einen Peer gesendet werden. Das Intervall wird von der <codeph class="+ topic/ph pr-d/codeph ">multicastAvailabilityUpdatePeriod</codeph>-Eigenschaft bestimmt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilityUpdatePeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilityUpdatePeriod</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastAvailabilityUpdatePeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastAvailabilityUpdatePeriod</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen das Intervall in Sekunden zwischen Meldungen an, die Peers benachrichtigen, dass beim lokalen Knoten neue Peer-to-Peer-Multicast-Medienfragmente verfügbar sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen das Intervall in Sekunden zwischen Meldungen an, die Peers benachrichtigen, dass beim lokalen Knoten neue Peer-to-Peer-Multicast-Medienfragmente verfügbar sind. Größere Werte können die Batcheffizienz verbessern und die Steuerungslast reduzieren; sie können jedoch auch die Qualität auf Empfängerseite verschlechtern, da die verfügbare Zeit zum Abrufen von Fragmenten, bevor sie verworfen werden, verringert wird. Niedrigere Werte können die Latenzzeit verringern und die Qualität verbessern, sie erhöhen jedoch die Steuerungslast. 
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilitySendToAll" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilitySendToAll</linktext></link><link href="flash.net.xml#NetStream/multicastFetchPeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastFetchPeriod</linktext></link><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastFetchPeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastFetchPeriod</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen die Zeit in Sekunden an, wie lange es ab dem Zeitpunkt, zu dem der lokale Knoten erfährt, dass ein Peer-to-Peer-Multicast-Medienfragment verfügbar ist, dauert, bis er versucht, es von einem Peer abzurufen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen die Zeit in Sekunden an, wie lange es ab dem Zeitpunkt, zu dem der lokale Knoten erfährt, dass ein Peer-to-Peer-Multicast-Medienfragment verfügbar ist, dauert, bis er versucht, es von einem Peer abzurufen. Dieser Wert ermöglicht das proaktive Senden des Fragments an den lokalen Knoten, bevor das Abrufen von einem Peer versucht wird. Er lässt auch zu, dass mehrere Peers die Verfügbarkeit des Fragments ankündigen, damit die Abruflast auf mehrere Peers verteilt werden kann.
     
     <p class="- topic/p ">Größere Werte können den Lastausgleich verbessern und das Peer-to-Peer-Mesh gleichmäßiger belasten, sie verringern jedoch die verfügbare <codeph class="+ topic/ph pr-d/codeph ">multicastWindowDuration</codeph> und erhöhen die Latenzzeit. Kleinere Werte können die Latenzzeit verringern, wenn Abrufen erforderlich ist, können aber den redundanten Datenempfang erhöhen und den Lastausgleich im Peer-to-Peer-Mesh verschlechtern.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilityUpdatePeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilityUpdatePeriod</linktext></link><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastInfo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastInfo</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen ein NetStreamMulticastInfo-Objekt zurück, dessen Eigenschaften Statistiken zur Dienstgüte enthalten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStreamMulticastInfo</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen ein NetStreamMulticastInfo-Objekt zurück, dessen Eigenschaften Statistiken zur Dienstgüte enthalten. Das Objekt ist ein Schnappschuss des aktuellen Status.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamMulticastInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastPushNeighborLimit:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastPushNeighborLimit</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen die maximale Anzahl von Peers an, an die proaktiv Multicast-Medien geleitet werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen die maximale Anzahl von Peers an, an die proaktiv Multicast-Medien geleitet werden können.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:multicastRelayMarginDuration:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastRelayMarginDuration</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen die Dauer in Sekunden an, für die Peer-to-Peer-Multicast-Daten verfügbar bleiben, um an Peers gesendet zu werden, die sie nach einer angegebenen Dauer anfordern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen die Dauer in Sekunden an, für die Peer-to-Peer-Multicast-Daten verfügbar bleiben, um an Peers gesendet zu werden, die sie nach einer angegebenen Dauer anfordern. Die Dauer wird mit der <codeph class="+ topic/ph pr-d/codeph ">multicastWindowDuration</codeph>-Eigenschaft festgelegt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastWindowDuration:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastWindowDuration</apiName><shortdesc class="- topic/shortdesc ">
     Gibt bei RTMFP-Verbindungen die Dauer des Peer-to-Peer-Multicastreassembly-Fensters in Sekunden an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt bei RTMFP-Verbindungen die Dauer des Peer-to-Peer-Multicastreassembly-Fensters in Sekunden an. Kürzere Werte verringern die Latenzzeit, können aber die Qualität verschlechtern, da nicht genügend Zeit zum Abrufen aller Fragmente gegeben wird. Umgekehrt können größere Werte die Qualität verbessern, da mehr Zeit zum Abrufen aller Fragmente zugelassen wird, was mit einer entsprechend längeren Latenzzeit einhergeht.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastRelayMarginDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastRelayMarginDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:nearNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearNonce</apiName><shortdesc class="- topic/shortdesc ">
     Bei RTMFP- und RTMPE-Verbindungen ein Wert, der von diesem Ende des Streams gewählt wird und für diese Verbindung eindeutig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Bei RTMFP- und RTMPE-Verbindungen ein Wert, der von diesem Ende des Streams gewählt wird und für diese Verbindung eindeutig ist. Dieser Wert erscheint am anderen Ende des Streams als <codeph class="+ topic/ph pr-d/codeph ">farNonce</codeph>-Wert
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Die Objektkodierung (AMF-Version) für dieses NetStream-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Objektkodierung (AMF-Version) für dieses NetStream-Objekt. Der <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Wert für das NetStream-Objekt wird von dem verknüpften NetConnection-Objekt übernommen. Es ist wichtig, die Funktionsweise dieser Eigenschaft zu kennen, wenn die Kommunikation der ActionScript 3.0-SWF-Datei mit Servern erforderlich ist, die eine ältere Version als Flash Player 9 aufweisen. Weitere Informationen finden Sie in der Beschreibung der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> in der NetConnection-Klasse.
     
     <p class="- topic/p ">Der Wert dieser Eigenschaft hängt davon ab, ob es sich um einen lokalen oder einen Remote-Stream handelt. Lokale Streams, bei denen <codeph class="+ topic/ph pr-d/codeph ">null</codeph> an die Methode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> übergeben wurde, geben den Wert <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph> zurück. Remote-Streams, bei denen Sie eine Verbindung zu einem Server herstellen, geben die Objektkodierung der Serververbindung zurück.</p>
     
     <p class="- topic/p ">Wenn Sie versuchen, diese Eigenschaft ohne Verbindung zu lesen oder diese Eigenschaft zu ändern, gibt die Anwendung eine Ausnahme aus.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.objectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:peerStreams:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">peerStreams</apiName><shortdesc class="- topic/shortdesc ">
     
     Ein Objekt, das alle abonnierenden NetStream-Instanzen enthält, die diese veröffentlichende NetStream-Instanz überwachen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Ein Objekt, das alle abonnierenden NetStream-Instanzen enthält, die diese veröffentlichende NetStream-Instanz überwachen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:soundTransform:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">soundTransform</apiName><shortdesc class="- topic/shortdesc ">
     Steuert den Sound in diesem NetStream-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.media:SoundTransform</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Steuert den Sound in diesem NetStream-Objekt. Weitere Informationen hierzu finden Sie im Abschnitt zur SoundTransform-Klasse.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundTransform" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundTransform</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:time:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">time</apiName><shortdesc class="- topic/shortdesc ">
     Die Position des Abspielkopfs in Sekunden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.time, time
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Position des Abspielkopfs in Sekunden.
     <p class="- topic/p ">
     <b class="+ topic/ph hi-d/b ">Flash Media Server</b> Bei einem abonnierenden Stream die Anzahl der Sekunden, die der Stream bereits abgespielt wurde. Bei einem veröffentlichenden Stream die Anzahl der Sekunden, die der Stream veröffentlicht wurde. Die Zahl ist bis zur Tausenderdezimalstelle genau; multiplizieren Sie sie mit 1000, um die Anzahl der Millisekunden zu erhalten, die der Stream bereits abgespielt wurde.
     </p>
     <p class="- topic/p ">
     Wenn der Server bei einem abonnierenden Stream aufhört, Daten zu senden, aber der Stream offen bleibt, wird der Wert der <codeph class="+ topic/ph pr-d/codeph ">time</codeph>-Eigenschaft nicht weiter erhöht. Wenn der Server beginnt, wieder Daten zu senden, wird der Wert von dem Punkt, an dem angehalten wurde (als der Server aufgehört hat, Daten zu senden), weiter erhöht.
     </p>
     <p class="- topic/p ">
     Der Wert für <codeph class="+ topic/ph pr-d/codeph ">time</codeph> wird weiter erhöht, wenn der Stream von einem Wiedergabeelement zu einem anderen wechselt. Diese Eigenschaft wird auf 0 gesetzt, wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aufgerufen wird und dabei <codeph class="+ topic/ph pr-d/codeph ">reset</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">true</codeph> aufweist, oder wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.close()</codeph> aufgerufen wird.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:videoReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Video vollständig zuverlässig gesendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Video vollständig zuverlässig gesendet wird. Mit der Einstellung TRUE sind alle über diesen NetStream übertragenen Videodaten vollständig zuverlässig. Mit der Einstellung FALSE sind die übertragenen Videodaten nicht vollständig zuverlässig, sondern werden für eine begrenzte Zeit erneut übertragen und dann ausgelassen. Sie können den Wert FALSE verwenden, um die Latenzzeit auf Kosten der Videoqualität zu verringern.
     
     <p class="- topic/p ">Wenn Sie diese Eigenschaft in einem Netzwerkprotokoll, das teilweise Zuverlässigkeit nicht unterstützt, auf FALSE setzen, wird der Versuch ignoriert und die Eigenschaft wird auf TRUE gesetzt. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioReliable" class="- topic/link "><linktext class="- topic/linktext ">audioReliable</linktext></link><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:videoSampleAccess:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoSampleAccess</apiName><shortdesc class="- topic/shortdesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Peer-to-Peer-Abonnenten für diesen NetStream den Video-Stream erfassen dürfen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Gibt bei RTMFP-Verbindungen an, ob Peer-to-Peer-Abonnenten für diesen NetStream den Video-Stream erfassen dürfen. Mit der Einstellung FALSE resultieren Versuche von Abonnenten, den Videostream zu erfassen, in Berechtigungsfehlern.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioSampleAccess" class="- topic/link "><linktext class="- topic/linktext ">audioSampleAccess</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitor</apiName><shortdesc class="- topic/shortdesc ">
 Mit der NetMonitor-Klasse können Sie die von einer Anwendung verwendeten NetStream-Objekte überwachen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der NetMonitor-Klasse können Sie die von einer Anwendung verwendeten NetStream-Objekte überwachen.
 
 <p class="- topic/p ">Verwenden Sie die NetMonitor-Klasse, um die aktuelle Liste der in einer Anwendung verwendeten NetStream-Objekte abzurufen. Eine Instanz dieser Klasse setzt jedes Mal ein <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph>-Ereignis ab, wenn ein neues NetStream-Objekt erstellt wird.</p>
 
 <p class="- topic/p ">Mit Unterstützung der NetMonitor-Klasse können Sie die Videowiedergabe und verwandte Ereignisse verfolgen, unabhängig vom verwendeten Videoplayer. Diese Funktion ist hilfreich, wenn Sie Bibliotheken zur Medienmessung, Analyse und Nutzungsverfolgung implementieren möchten.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b "/></p>
 
 </apiDesc><example conref="examples\NetMonitorExample.as" class="- topic/example "> Dieses Beispiel zeigt, wie die NetMonitor-Klasse verwendet werden kann, um Zugriff auf NetStream-Informationen zu erlangen, ohne dass der verwendete Videoplayer genauer bekannt sein muss. Hier wird die MediaPlayerSprite-Klasse aus dem OSMF-Projekt (Open Screen Media Framework) verwendet, es kann aber jeder beliebige Videoplayer eingesetzt werden.
 
 <p class="- topic/p ">Mit der Leertaste können Sie das Video im Beispiel anhalten und fortsetzen, mit den Nach-rechts- und Nach-links-Tasten können Sie 30 Sekunden vor- oder zurückgehen, um zu sehen, welche Auswirkungen diese Aktionen auf die abgesetzten Ereignisse haben.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.display.StageAlign;
    import flash.display.StageScaleMode;
    import flash.events.KeyboardEvent;
    import flash.events.NetDataEvent;
    import flash.events.NetMonitorEvent;
    import flash.events.NetStatusEvent;
    import flash.net.NetMonitor;
    import flash.net.NetStream;
    import flash.ui.Keyboard;
    
    import org.osmf.elements.VideoElement;
    import org.osmf.media.MediaPlayer;
    import org.osmf.media.MediaPlayerSprite;
    import org.osmf.net.DynamicStreamingItem;
    import org.osmf.net.DynamicStreamingResource;

    public class NetMonitorExample extends Sprite
    {
        private var netmon:NetMonitor;
        private var mediaPlayer:MediaPlayer;
        
        public function NetMonitorExample()
        {
            //Configure stage
            this.stage.align = StageAlign.TOP_LEFT;
            this.stage.scaleMode = StageScaleMode.NO_SCALE;
             
            //Create NetMonitor object
            netmon = new flash.net.NetMonitor();
            netmon.addEventListener(NetMonitorEvent.NET_STREAM_CREATE, newNetStream );    
            
            //Setup video player
            var mediaPlayerSprite:MediaPlayerSprite = new MediaPlayerSprite();
            var videoElement:VideoElement = new VideoElement();
            var dynResource:DynamicStreamingResource = new DynamicStreamingResource( "rtmp://cp67126.edgefcs.net/ondemand" );
            
            dynResource.streamItems = Vector.&lt;DynamicStreamingItem>(
                [     new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_768x428_24.0fps_408kbps.mp4", 408, 768, 428 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_768x428_24.0fps_608kbps.mp4", 608, 768, 428 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1024x522_24.0fps_908kbps.mp4", 908, 1024, 522 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1024x522_24.0fps_1308kbps.mp4", 1308, 1024, 522 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1280x720_24.0fps_1708kbps.mp4", 1708, 1280, 720 )
                ]);
            
            videoElement.resource = dynResource;
            
            addChild( mediaPlayerSprite );
            mediaPlayerSprite.media = videoElement;  
            mediaPlayer = mediaPlayerSprite.mediaPlayer;
            this.stage.addEventListener( KeyboardEvent.KEY_DOWN, keyControl ); 
        }    
        
        //On new NetStream
        private function newNetStream( event:NetMonitorEvent ):void
        {
            trace( "New Netstream object ");
            var stream:NetStream = event.netStream;
            stream.addEventListener(NetDataEvent.MEDIA_TYPE_DATA, onStreamData);
            stream.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
        }
        
        //On data events from a NetStream object 
        private function onStreamData( event:NetDataEvent ):void
        {
            trace( "Data event at " + event.timestamp );
            var netStream:NetStream = event.target as NetStream;
            switch( event.info.handler )
            {
                case "onMetaData":
                    trace( "--MetaData: " +  stringify( netStream.info.metaData ));
                    break;
                case "onXMPData":
                    trace( "--XMPData: " + stringify( netStream.info.xmpData ));
                    break;
                default:
                    trace( "--" + event.info.handler + ": " + stringify(event.info.args[0]) );
                    
            }
        }
        
        //On status events from a NetStream object
        private function onStatus( event:NetStatusEvent ):void
        {
            trace( "Status: " + stringify( event.info ) );
        }
        
        //Utility function to print out object properties
        private function stringify( object:Object ):String
        {
            var string:String = "";
            
            var prop:String;
            var comma:Boolean = false;
            for ( prop in object )
            {
                if( comma ) string += ", ";
                else comma = true;
                
                if( typeof(object[prop]) == "object" ) 
                {
                    stringify( object[prop] )
                } else    string +=  prop + " = " + object[prop];
            }
            return string;
        }
        
        //Simple keyboard control for the video player
        private function keyControl( event:KeyboardEvent ):void
        {
            switch ( event.keyCode )
            {
                case Keyboard.SPACE:
                    if( mediaPlayer.paused ) mediaPlayer.play();
                    else mediaPlayer.pause();
                    break;
                case Keyboard.RIGHT:
                    mediaPlayer.seek( mediaPlayer.currentTime + 30 );
                    break;
                case Keyboard.LEFT:
                    mediaPlayer.seek( mediaPlayer.currentTime - 30 );
                    break;
                default:
                    //do nothing
            }
        }    
    }
} 
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link></related-links><adobeApiEvent id="flash.net:NetMonitor_flash.events.NetMonitorEvent.NET_STREAM_CREATE_netStreamCreate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStreamCreate</apiName><shortdesc class="- topic/shortdesc ">
 Wird abgesetzt, wenn ein neues NetStream-Objekt innerhalb des Sicherheitskontextes dieser NetMonitor-Instanz erstellt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetMonitorEvent.NET_STREAM_CREATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetMonitorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird abgesetzt, wenn ein neues NetStream-Objekt innerhalb des Sicherheitskontextes dieser NetMonitor-Instanz erstellt wird.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn die NetStream-Überwachung auf der aktuellen Plattform nicht unterstützt wird, werden keine <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph> abgesetzt.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:NetMonitor:listStreams" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">listStreams</apiName><shortdesc class="- topic/shortdesc ">
	 Ruft alle NetStream-Objekte ab, die zu dem Sicherheitskontext dieses NetMonitor-Objekts gehören.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vektor von NetStream-Objekten
 	</apiDesc><apiType value="Vector$flash.net:NetStream" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ruft alle NetStream-Objekte ab, die zu dem Sicherheitskontext dieses NetMonitor-Objekts gehören.
 	 
 	 <p class="- topic/p ">Vermeiden Sie das Zwischenspeichern der Liste der NetStream-Objekte. </p>
 	  
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn die NetStream-Überwachung auf der aktuellen Plattform nicht unterstützt wird, ist die von dieser Funktion zurückgegebene Liste immer leer.</p>
	 
 	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamInfo</apiName><shortdesc class="- topic/shortdesc ">
 
 Die NetStreamInfo-Klasse legt die verschiedenen Quality-of-Service-Statistiken (QOS) und andere Informationen fest, die mit einem NetStream-Objekt und dem zugrunde liegenden Streamingpuffer für Audio, Video und Daten in Beziehung stehen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Die NetStreamInfo-Klasse legt die verschiedenen Quality-of-Service-Statistiken (QOS) und andere Informationen fest, die mit einem NetStream-Objekt und dem zugrunde liegenden Streamingpuffer für Audio, Video und Daten in Beziehung stehen. Ein NetStreamInfo-Objekt wird als Antwort auf den <codeph class="+ topic/ph pr-d/codeph ">NetStream.info</codeph>-Aufruf zurückgegeben, der einen Schnappschuss des aktuellen QOS-Status erstellt und die QOS-Statistiken über die NetStreamInfo-Eigenschaften bereitstellt.
 
 </apiDesc></apiClassifierDetail><apiOperation id="flash.net:NetStreamInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     Gibt einen Textwert zurück, der eine Liste der Eigenschaften des NetStreamInfo-Objekts auflistet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die Werte der Eigenschaften des NetStreamInfo-Objekts enthält
     
     
      </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt einen Textwert zurück, der die Eigenschaft dieses NetStreamInfo-Objekts auflistet.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt einen Textwert zurück, der eine Liste der Eigenschaften des NetStreamInfo-Objekts auflistet.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetStreamInfo:SRTT:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SRTT</apiName><shortdesc class="- topic/shortdesc ">
     Die „smoothed round trip time“ für die NetStream-Sitzung in Millisekunden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die „smoothed round trip time“ für die NetStream-Sitzung in Millisekunden. Diese Eigenschaft enthält nur für RTMFP-Streams einen gültigen Wert. Für RTMP-Streams ist der Wert 0.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:audioBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Audiopuffergröße (in Byte) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Audiopuffergröße (in Byte) bereit. Sie gibt die Puffergröße für Audiodaten in Streaming-Medien (sowohl live als auch aufgenommen) an. Diese Eigenschaft ähnelt <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, die in progressiven Downloads verwendet wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Audiopuffergröße (in Sekunden) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Audiopuffergröße (in Sekunden) bereit. Diese Eigenschaft erweitert die <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph>-Eigenschaft und stellt die Pufferlänge speziell für Audiodaten bereit.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie viele Byte an Audiodaten insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie viele Byte an Audiodaten insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden. Sie können diesen Wert verwenden, um die eingehende Audiodatenrate über eine Metrik Ihrer Wahl zu berechnen, indem Sie einen Timer erstellen und die Unterschiede zwischen den Werten in aufeinanderfolgenden Timeraufrufen berechnen. Alternativ können Sie <codeph class="+ topic/ph pr-d/codeph ">audioBytesPerSecond</codeph> verwenden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/audioBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">audioBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:audioBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Audiopuffer gefüllt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Audiopuffer gefüllt wird. Der Wert wird als glatter Durchschnitt für die in der letzten Sekunde empfangenden Audiodaten berechnet.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioLossRate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioLossRate</apiName><shortdesc class="- topic/shortdesc ">
     Legt den Audiodatenverlust für die NetStream-Sitzung fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt den Audiodatenverlust für die NetStream-Sitzung fest. Dieser Wert gibt nur einen gültigen Wert für RTMFP-Streams zurück und würde 0 für RTMP-Streams zurückgeben. Die Verlustrate ist als Verhältnis verlorener Nachrichten zur Gesamtzahl der Nachrichten definiert.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:byteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">byteCount</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie viele Byte insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie viele Byte insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden. Sie können diesen Wert verwenden, um die eingehende Datenrate über eine Metrik Ihrer Wahl zu berechnen, indem Sie einen Timer erstellen und die Unterschiede zwischen den Werten in aufeinanderfolgenden Timeraufrufen berechnen. Alternativ können Sie <codeph class="+ topic/ph pr-d/codeph ">currentBytesPerSecond</codeph> verwenden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/currentBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">currentBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:currentBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit welcher der NetStream-Puffer gefüllt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit welcher der NetStream-Puffer gefüllt wird. Der Wert wird als glatter Durchschnitt für die gesamten in der letzten Sekunde empfangenden Daten berechnet.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Datenpuffergröße (in Byte) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Datenpuffergröße (in Byte) bereit. Sie gibt die Puffergröße für Datenmeldungen in Streaming-Medien (sowohl live als auch aufgenommen) an. Diese Eigenschaft ähnelt <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, die in progressiven Downloads verwendet wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Puffergröße (in Sekunden) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Puffergröße (in Sekunden) bereit. Diese Eigenschaft erweitert die <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph>-Eigenschaft und stellt die Pufferlänge für Datenmeldungen bereit.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie viele Byte an Datenmeldungen insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie viele Byte an Datenmeldungen insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden. Sie können diesen Wert verwenden, um die eingehende Datenmeldungsrate über eine Metrik Ihrer Wahl zu berechnen, indem Sie einen Timer erstellen und die Unterschiede zwischen den Werten in aufeinanderfolgenden Timeraufrufen berechnen. Alternativ können Sie <codeph class="+ topic/ph pr-d/codeph ">dataBytesPerSecond</codeph> verwenden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/dataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">dataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:dataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Datenpuffer gefüllt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Datenpuffer gefüllt wird. Der Wert wird als glatter Durchschnitt für die in der letzten Sekunde empfangenden Datenmeldungen berechnet.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:droppedFrames:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">droppedFrames</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Anzahl der übersprungenen Videobilder der aktuellen NetStream-Wiedergabesitzung zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Anzahl der übersprungenen Videobilder der aktuellen NetStream-Wiedergabesitzung zurück.
     <p class="- topic/p ">Wenn das Video in einem aufgenommenen Streaming oder einem progressiven Download ein Video mit hoher Qualität, hoher Auflösung oder einer hohen Bitrate ist, kann der Dekoder hinter der erforderlichen Anzahl von Bildern pro Sekunde hinterherhinken, wenn die CPU-Ressourcen des Systems nicht ausreichen. Bei Live-Streams lässt der Puffer Videobilder aus, wenn die Latenz zu hoch ist. Diese Eigenschaft gibt die Anzahl der Bilder an, die ausgelassen und nicht normal präsentiert wurden.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:isLive:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isLive</apiName><shortdesc class="- topic/shortdesc ">
      Ob das abgespielte Medium aufgenommen wurde oder live ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Ob das abgespielte Medium aufgenommen wurde oder live ist. Diese Eigenschaft ist nur für RTMP-Streaming relevant. Für progressive Downloads und HTTP Dynamic Streaming hat die Eigenschaft immer den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> in Flash Player im Browser unter Android und Blackberry Tablet OS oder in AIR unter iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:maxBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die maximale Rate in Byte pro Sekunde fest, mit der der NetStream-Puffer gefüllt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die maximale Rate in Byte pro Sekunde fest, mit der der NetStream-Puffer gefüllt wird. Dieser Wert liefert Informationen über die Kapazität des Client-Netzwerks basierend auf den letzten Meldungen, die vom <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>-Objekt empfangen wurden. Je nach der in <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> angegebenen Größe des Puffers und der auf dem Client verfügbaren Bandbreits füllt Flash Media Server den Puffer in Schüben. Diese Eigenschaft liefert die maximale Rate, mit der der Clientpuffer gefüllt wird.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:metaData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">metaData</apiName><shortdesc class="- topic/shortdesc ">
      Das aktuellste Metadatenobjekt, das den abgespielten Medien zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Das aktuellste Metadatenobjekt, das den abgespielten Medien zugeordnet ist.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">null</codeph> in Flash Player im Browser unter Android und Blackberry Tablet OS oder in AIR unter iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:playbackBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">playbackBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Streamwiedergaberate in Byte pro Sekunde zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Streamwiedergaberate in Byte pro Sekunde zurück. Der Wiedergabepuffer kann Inhalt von verschiedenen Wiedergabelisten enthalten. Diese Eigenschaft liefert die Wiedergaberate, die der Bitrate des momentan wiedergegebenen Streams am ehesten entspricht.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:resourceName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">resourceName</apiName><shortdesc class="- topic/shortdesc ">
      Der Ressourcenname, der beim Aufruf von NetStream.play() verwendet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Ressourcenname, der beim Aufruf von NetStream.play() verwendet wurde.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Der Ressourcenname, der beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> verwendet wurde. Diese Eigenschaft enthält die vollständige URL bei progressiven Downloads, den Ressourcennamen bei RTMP-Streaming und <codeph class="+ topic/ph pr-d/codeph ">null</codeph> bei HTTP-Streaming.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">null</codeph> in Flash Player im Browser unter Android und Blackberry Tablet OS oder in AIR unter iOS.</p>
	  
	  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.media.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.NetStream.play()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:uri:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">uri</apiName><shortdesc class="- topic/shortdesc ">
      Der URI, der beim Aufruf von NetConnection.connect() verwendet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der URI, der beim Aufruf von NetConnection.connect() verwendet wurde.
	  
      </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Der URI, der beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> verwendet wurde. Dies ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph> bei progressiven Downloads oder HTTP-Streaming.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">null</codeph> in Flash Player im Browser unter Android und Blackberry Tablet OS oder in AIR unter iOS.</p>
	  
	  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.media.xml#NetConnection/uri" class="- topic/link "><linktext class="- topic/linktext ">flash.media.NetConnection.uri</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:videoBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Videopuffergröße (in Byte) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Videopuffergröße (in Byte) bereit. Sie gibt die Puffergröße für Videodaten in Streaming-Medien (sowohl live als auch aufgenommen) an. Diese Eigenschaft ähnelt <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, die in progressiven Downloads verwendet wird.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Stellt die NetStream-Videopuffergröße (in Sekunden) bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt die NetStream-Videopuffergröße (in Sekunden) bereit. Diese Eigenschaft erweitert die <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph>-Eigenschaft und liefert die Pufferlänge für Videodaten.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie viele Byte an Videodaten insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie viele Byte an Videodaten insgesamt in der Warteschlange eingetroffen sind, unabhängig davon, wie viele schon abgespielt oder ausgegeben wurden. Sie können diesen Wert verwenden, um die eingehende Videodatenrate über eine Metrik Ihrer Wahl zu berechnen, indem Sie einen Timer erstellen und die Unterschiede zwischen den Werten in aufeinanderfolgenden Timeraufrufen berechnen. Alternativ können Sie <codeph class="+ topic/ph pr-d/codeph ">videoBytesPerSecond</codeph> verwenden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/videoBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">videoBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:videoBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Videopuffer gefüllt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der NetStream-Videopuffer gefüllt wird. Der Wert wird als glatter Durchschnitt für die in der letzten Sekunde empfangenden Videodaten berechnet.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoLossRate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoLossRate</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die NetStream-Videoverlustrate an (Verhältnis verlorener Meldungen zu Meldungen insgesamt).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die NetStream-Videoverlustrate an (Verhältnis verlorener Meldungen zu Meldungen insgesamt).
     
     <p class="- topic/p ">Wenn die Nachricht kleiner ist, als die maximale Übertragungseinheit (MTU), entspricht dieser Wert der Netzwerkpaketverlustrate.</p>
     
     <p class="- topic/p ">Diese Eigenschaft gibt nur für RTMFP-Streams einen gültigen Wert zurück. Bei RTMP-Streams wird der Wert null zurückgegeben. Weitere Informationen finden Sie in der <xref href="http://www.adobe.com/go/learn_fms_docs_en" scope="external" class="- topic/xref ">Flash Media Server-Dokumentation</xref>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:xmpData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">xmpData</apiName><shortdesc class="- topic/shortdesc ">
      Das aktuellste XMP-Datenobjekt, das den abgespielten Medien zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Das aktuellste XMP-Datenobjekt, das den abgespielten Medien zugeordnet ist. 
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">null</codeph> in Flash Player im Browser unter Android und Blackberry Tablet OS oder in AIR unter iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLStream</apiName><shortdesc class="- topic/shortdesc ">
 Die URLStream-Klasse stellt Zugriff auf niedriger Ebene auf URL-Downloads bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.utils:IDataInput</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die URLStream-Klasse stellt Zugriff auf niedriger Ebene auf URL-Downloads bereit. Die Daten werden während des Downloadvorgangs dem Anwendungscode zur Verfügung gestellt, sodass Sie nicht wie bei URLLoader warten müssen, bis der Download der gesamten Datei abgeschlossen ist. Mit der URLStream-Klasse können Sie außerdem einen Stream beenden, bevor der Download abgeschlossen ist. Der Inhalt der heruntergeladenen Datei wird in Form von unformatierten Binärdaten zur Verfügung gestellt.
 
 <p class="- topic/p ">Die Lesevorgänge in „URLLoader“ sind ungeblockt. Das heißt, dass Sie die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> verwenden müssen, um zu ermitteln, ob genügend Daten vorhanden sind, bevor Sie den Lesevorgang starten. Wenn nicht genügend Daten vorhanden sind, wird eine <codeph class="+ topic/ph pr-d/codeph ">EOFError</codeph>-Ausnahme ausgelöst.</p>
 
 <p class="- topic/p ">Alle Binärdaten werden standardmäßig im Big Endian-Format kodiert, wobei das höchstwertige Byte an erster Stelle steht.</p>
 
 <p class="- topic/p ">Für URL-Downloads mit der URLStream-Klasse gelten dieselben Sicherheitsregeln wie für URLLoader-Objekte. Richtliniendateien können nach Bedarf heruntergeladen werden. Lokale Dateisicherheitsregeln werden erzwungen, und ggf. werden Sicherheitswarnungen ausgegeben.</p>

 
 </apiDesc><example conref="examples\URLStreamExample.as" class="- topic/example "> Im folgenden Beispiel wird eine SWF-Datei geladen, und der Beginn des Headers wird analysiert, um Informationen zu Komprimierung und Versionsnummer anzugeben. 
 <p class="- topic/p ">Legen Sie zur Ausführung des Beispiels eine Datei mit dem Namen „URLStreamExample.swf“ in dem Verzeichnis ab, in dem sich die SWF-Datei befindet.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.errors.*;
    import flash.events.*;
    import flash.net.URLRequest;
    import flash.net.URLStream;

    public class URLStreamExample extends Sprite {
        private static const ZLIB_CODE:String = "CWS";
        private var stream:URLStream;

        public function URLStreamExample() {
            stream = new URLStream();
            var request:URLRequest = new URLRequest("URLStreamExample.swf");
            configureListeners(stream);
            try {
                stream.load(request);
            } catch (error:Error) {
                trace("Unable to load requested URL.");
            }
        }

        private function configureListeners(dispatcher:EventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        }

        private function parseHeader():void {
            trace("parseHeader");
            trace("isCompressed: " + isCompressed());
            trace("version: " + stream.readByte());
        }

        private function isCompressed():Boolean {
            return (stream.readUTFBytes(3) == ZLIB_CODE);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
            parseHeader();
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:Event):void {
            trace("progressHandler: " + event);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link></related-links><adobeApiEvent id="flash.net:URLStream_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn während des Download-Vorgangs Daten empfangen werden. Empfangene Daten können mit den Methoden der URLStream-Klasse sofort gelesen werden.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Start eines Ladevorgangs ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Start eines Ladevorgangs ausgelöst.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den der Ladevorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den der Ladevorgang fehlschlägt. 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein Aufruf der URLStream.load()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph>-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann. 
 
 <p class="- topic/p ">Wenn ein URLStream-Objekt für ein <codeph class="+ topic/ph pr-d/codeph ">httpStatusEvent</codeph>-Eigenschaft registriert wird, werden Fehlerantworten zugestellt, als ob es sich um Inhalt handelt. Anstatt ein <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignis auszulösen, löst der URLStream <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignisse aus, während die Fehlerdaten in den URLStream geladen werden.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein URLStream.load() versucht, auf Daten über HTTP zuzugreifen, und Flash Player oder Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph> versucht, auf Daten über HTTP zuzugreifen, und <ph class="- topic/ph ">Flash Player oder </ph>Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann. (Diese Informationen können in einigen Browser-Umgebungen möglicherweise nicht bereitgestellt werden.) Beachten Sie, dass das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> (falls vorhanden) vor (und zusätzlich zu) jedem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis gesendet wird.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein URLStream.load()-Aufruf versucht, Daten von einem Server außerhalb der Sicherheitssandbox zu laden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph>-Aufruf versucht, Daten von einem Server außerhalb der Sicherheitssandbox zu laden.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
 Wird nach dem erfolgreichen Laden von Daten ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird nach dem erfolgreichen Laden von Daten ausgelöst. 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:URLStream:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt den Stream unmittelbar und bricht den Download-Vorgang ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Stream konnte nicht geschlossen werden, oder der Stream war nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt den Stream unmittelbar und bricht den Download-Vorgang ab. Nach dem Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode können aus dem Stream keine Daten gelesen werden.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
     Startet den Download der im Parameter „request“ angegebenen URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmte nicht zulässige HTTP-Anforderungsheader sind möglicherweise in <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeader</codeph>-Objekten nicht enthalten. Weitere Informationen finden Sie in der Beschreibung der URLRequestHeader-Klasse.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Fehler kann folgende Ursachen haben:
     
     <ol class="- topic/ol "><li class="- topic/li ">Flash Player oder Adobe AIR kann den Parameter <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> nicht von UTF8 in MBCS konvertieren. Dieser Fehler trifft zu, wenn das an <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>-Vorgangs eingestellt ist und wenn <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist.</li><li class="- topic/li ">Flash Player oder Adobe AIR kann <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> keinen Speicher zuweisen. Dieser Fehler trifft zu, wenn das an „load“ übergebene URLRequest-Objekt auf die Ausführung eines <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>-Vorgangs eingestellt ist.</li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale nicht vertrauenswürdige SWF-Dateien kann keine Verbindung mit dem Internet hergestellt werden. Sie können dieses Problem umgehen, indem Sie diese SWF-Datei neu als lokal mit Netzwerk oder als vertrauenswürdig klassifizieren.
     
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sie versuchen, eine Verbindung mit einem normalerweise reservierten Port herzustellen. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein URLRequest-Objekt, das die herunterzuladende URL angibt. Wenn der Wert dieses Parameters oder der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> des übergebenen URLRequest-Objekts <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, gibt die Anwendung einen Nullzeiger-Fehler aus.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Startet den Download der im Parameter <codeph class="+ topic/ph pr-d/codeph ">request</codeph> angegebenen URL.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Enthält eine geladene Datei Nicht-ASCII-Zeichen (wie sie z. B. in vielen Sprachen außerhalb des englischen Sprachraums vorkommen), wird empfohlen, dass Sie die Datei im Format UTF-8 oder UTF-16 und nicht in einem Unicode-fremden Format (z. B. ASCII) speichern.</p>
     
     <p class="- topic/p ">Wenn der Ladevorgang unmittelbar fehlschlägt, wird eine IOError- oder eine SecurityError-Ausnahme (mit dem lokalen Dateisicherheitsfehler) mit der Beschreibung des Fehlers ausgegeben. Andernfalls wird ein <codeph class="+ topic/ph pr-d/codeph ">open</codeph>-Ereignis ausgelöst, wenn der URL-Download erfolgreich gestartet wird, bzw. ein Fehlerereignis, wenn ein Fehler auftritt.</p>
     
     <p class="- topic/p ">Standardmäßig müssen die aufrufende SWF-Datei und die von Ihnen geladene URL in genau der gleichen Domäne sein. Eine SWF-Datei unter www.adobe.com kann beispielsweise nur Daten laden, die sich ebenfalls unter www.adobe.com befinden. Legen Sie eine URL-Richtliniendatei auf dem Server ab, der die Daten hostet, um Daten aus einer anderen Domäne zu laden.</p>
     
     <p class="- topic/p ">In Flash Player können Sie keine Verbindung mit normalerweisen reservierten Ports herstellen. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     <p class="- topic/p ">In Flash Player können Sie eine SWF-Datei daran hindern, diese Methode zu verwenden, indem Sie den <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph>-Parameter des <codeph class="+ topic/ph pr-d/codeph ">object</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph>-Tags auf der HTML-Seite setzen, die den SWF-Inhalt enthält.</p>
     
     <p class="- topic/p "> Wenn Sie in Flash Player 10 und höher und in AIR 1.5 und höher einen Multipart-Content-Type (z. B. „multipart/form-data“) verwenden, der ein Upload enthält (angegeben durch einen „filename“-Parameter in einem „content-disposition“-Header innerhalb des POST-Body), unterliegt die POST-Methode den auf Uploads angewendeten Sicherheitsregeln:</p>
     <ul class="- topic/ul "><li class="- topic/li ">Der POST-Vorgang muss als Reaktion auf eine durch den Benutzer initiierte Aktion, z. B. Mausklick oder Tastendruck, erfolgen.</li><li class="- topic/li ">Ist die POST-Methode domänenübergreifend (das POST-Ziel befindet sich auf einem anderen Server als die SWF-Datei, die die POST-Anforderung sendet), so muss der Zielserver eine URL-Richtliniendatei bereitstellen, die den domänenübergreifenden Zugriff erlaubt.</li></ul>
     <p class="- topic/p ">Für alle mehrteiligen Content-Typen muss ebenfalls die Syntax nach Standard RFC2046 gültig sein. Scheint die Syntax ungültig zu sein, so unterliegt die POST-Methode den Sicherheitsregeln für Uploads.</p>
     
     <p class="- topic/p ">Diese Regeln gelten auch für AIR-Inhalt in anwendungsfremden Sandboxen. In Adobe AIR dagegen ist Inhalt in der Anwendungssandbox (mit der AIR-Anwendung installierter Inhalt) nicht durch diese Sicherheitseinschränkungen beschränkt.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
     
     <p class="- topic/p ">In AIR kann sich ein URLRequest-Objekt für das <codeph class="+ topic/ph pr-d/codeph ">httpResponse</codeph>-Statusereignis registrieren. Anders als das <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignis wird das <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis ausgelöst, bevor Antwortdaten vorliegen. Außerdem enthält das <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis Werte für die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph> und <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> (die für ein <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignis nicht definiert sind). Beachten Sie, dass das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> (falls vorhanden) vor (und zusätzlich zu) jedem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis gesendet wird. 
     </p>
     
     
     <p class="- topic/p ">Wenn es <i class="+ topic/ph hi-d/i ">einen</i> <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> Ereignis-Listener gibt, wird der Rumpf der Antwortmeldung <i class="+ topic/ph hi-d/i ">immer</i> gesendet, und HTTP-Statuscodeantworten resultierten immer in einem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis. Dies ist unabhängig davon wahr, ob der HTTP-Antwortstatuscode einen Erfolg oder einen Fehler anzeigt.</p> 
     
     <p class="- topic/p "><ph class="- topic/ph ">Wenn es in AIR</ph> <i class="+ topic/ph hi-d/i ">keine</i> <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis-Listener gibt, ist das Verhalten basierend auf der <ph class="- topic/ph ">SWF</ph>AIR-Version unterschiedlich:</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><ph class="- topic/ph ">Bei SWF 9-Inhalten</ph> wird der Hauptteil der HTTP-Antwortnachricht <i class="+ topic/ph hi-d/i ">nur dann</i> gesendet, wenn der HTTP-Antwortstatuscode Erfolg anzeigt. Andernfalls (wenn ein Fehler vorliegt) wird kein Rumpf gesendet und das URLRequest-Objekt löst ein IOError-Ereignis aus.</li><li class="- topic/li "><ph class="- topic/ph ">Bei SWF 10-Inhalten</ph> wird der Hauptteil der HTTP-Antwortnachricht <i class="+ topic/ph hi-d/i ">immer</i> gesendet. Wenn ein Fehler vorliegt, löst das URLRequest-Objekt ein IOError-Ereignis aus.</li></ul>
     
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:URLStream:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird nach dem erfolgreichen Laden von Daten ausgelöst. Wenn es einen <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis-Listener gibt, löst das URLRequest-Objekt auch ein <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis aus, unabhängig davon, ob der HTTP-Antwortstatuscode einen Erfolg <i class="+ topic/ph hi-d/i ">oder</i> einen Fehler angibt.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird nach dem erfolgreichen Laden von Daten ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Zugriff über HTTP <ph class="- topic/ph ">erfolgt und die aktuelle Umgebung den Empfang von Statuscodes</ph> unterstützt, werden diese Ereignisse möglicherweise zusätzlich zu allen <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignissen empfangen.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wenn der Zugriff über HTTP erfolgt und die aktuelle Umgebung den Empfang von Statuscodes unterstützt, werden diese Ereignisse möglicherweise zusätzlich zu allen complete- oder error-Ereignissen empfangen.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann. 
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn ein Aufruf der load()-Methode versucht, über HTTP auf Daten zuzugreifen und Adobe AIR den Statuscode für die Anforderung erkennen und zurückgeben kann.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ladevorgang konnte nicht abgeschlossen werden.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Der Ladevorgang konnte nicht abgeschlossen werden.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird beim Start eines Ladevorgangs ausgelöst.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird beim Start eines Ladevorgangs ausgelöst.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bei einem Ladevorgang wurde versucht, Daten von einem Server außerhalb der Sicherheitssandbox der aufrufenden Funktion abzurufen. Sie können dies umgehen, indem Sie eine Richtliniendatei auf dem Server verwenden.
      
      </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Bei einem Ladevorgang wurde versucht, Daten von einem Server außerhalb der Sicherheitssandbox der aufrufenden Funktion abzurufen.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:URLStream:readBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen booleschen Wert aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">True</codeph> wird zurückgegeben, wenn der Bytewert nicht null ist, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen booleschen Wert aus dem Stream. Es wird ein einzelnes Byte gelesen und <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgegeben, wenn das Byte ungleich 0 ist, oder andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein Byte mit Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich -128...127.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein Byte mit Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von -128 bis 127.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBytes</apiName><shortdesc class="- topic/shortdesc ">
     Liest „length“-Byte Daten aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das ByteArray-Objekt, in das die Daten gelesen werden.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Offset innerhalb des mit <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> angegebenen Bereichs, ab dem das Lesen der Daten beginnt. Standardeinstellung ist 0.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der zu lesenden Byte. Der Standardwert 0 bewirkt, dass alle verfügbaren Daten gelesen werden.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest <codeph class="+ topic/ph pr-d/codeph ">length</codeph> Byte Daten aus dem Stream. Die Bytedaten werden ab der im Parameter <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> festgelegten Position in das im Parameter <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> angegebene ByteArray-Objekt gelesen.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readDouble</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit aus dem Stream.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit doppelter Genauigkeit aus dem Stream.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readFloat</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit aus dem Stream.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine Gleitkommazahl nach IEEE 754 mit einfacher Genauigkeit aus dem Stream.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readInt</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich -2147483648...2147483647.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 32-Bit-Ganzzahl mit Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von -2147483648 bis 2147483647.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen Multibyte-String der angegebenen Länge unter Verwendung des angegebenen Zeichensatzes vom Bytedatenstream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLStream, URLStream.readMultiByte, readMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein UTF-8-kodierter String.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der aus dem Bytestream zu lesenden Byte.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der String, der den zum Interpretieren der Byte zu verwendenden Zeichensatz angibt. Mögliche Zeichensatz-Strings sind u. a. <codeph class="+ topic/ph pr-d/codeph ">"shift_jis"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CN-GB"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"iso-8859-1"</codeph>. Eine vollständige Liste finden Sie unter <xref href="../../charset-codes.html" class="- topic/xref ">Unterstützte Zeichensätze</xref>.    
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wird der Wert des <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph>-Parameters vom aktuellen System nicht erkannt, verwendet die Anwendung die Standard-Codepage des Systems als Zeichensatz. Beispielsweise kann ein Wert des Parameters <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph> wie bei <codeph class="+ topic/ph pr-d/codeph ">myTest.readMultiByte(22, "iso-8859-01")</codeph>, wo <codeph class="+ topic/ph pr-d/codeph ">01</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">1</codeph> eingesetzt wird, auf Ihrem Entwicklungsrechner funktionieren, aber auf keinem anderen Rechner. Auf anderen Rechnern greift die Anwendung auf die Standard-Codepage des Systems zurück.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen Multibyte-String der angegebenen Länge unter Verwendung des angegebenen Zeichensatzes vom Bytedatenstream.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readObject</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein im Action Message Format (AMF) kodiertes Objekt vom Socketserver.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das deserialisierte Objekt.
     </apiDesc><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein im Action Message Format (AMF) kodiertes Objekt vom Socketserver.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link></related-links></apiOperation><apiOperation id="flash.net:URLStream:readShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readShort</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich -32768...32767.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 16-Bit-Ganzzahl mit Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von -32768 bis 32767.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine Folge von length-UTF-8-Byte aus dem Bytestream und gibt einen String zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein durch die Bytedarstellung von Zeichen erstellter UTF-8-String der angegebenen Länge.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Abfolge von UTF-8-Byte.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine Folge von <codeph class="+ topic/ph pr-d/codeph ">length</codeph>-UTF-8-Byte aus dem Bytestream und gibt einen String zurück.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTF</apiName><shortdesc class="- topic/shortdesc ">
     Liest einen UTF-8-String aus dem Bytestream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein UTF-8-String.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest einen UTF-8-String aus dem Bytestream. Es wird davon ausgegangen, dass dem String eine short-Ganzzahl ohne Vorzeichen mit der Länge in Byte vorangestellt ist.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedByte</apiName><shortdesc class="- topic/shortdesc ">
     Liest ein Byte ohne Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     

     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich 0...255.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest ein Byte ohne Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von 0 bis 255. </p>     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 32-Bit-Ganzzahl ohne Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich 0...4294967295.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 32-Bit-Ganzzahl ohne Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von 0 bis 4294967295. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedShort</apiName><shortdesc class="- topic/shortdesc ">
     Liest eine 16-Bit-Ganzzahl ohne Vorzeichen aus dem Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Es sind nicht genügend zu lesende Daten vorhanden. Wenn eine lokale SWF-Datei eine Sicherheitswarnung auslöst, lässt Flash Player nicht zu, dass die URLStream-Daten für ActionScript verfügbar sind. In diesem Fall gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> auch dann 0 zurück, wenn Daten empfangen wurden, und eine der Lesemethoden löst eine EOFError-Ausnahme aus.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein I/O-Fehler ist im Stream aufgetreten, oder der Stream ist nicht geöffnet.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wert im Bereich 0...65535.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liest eine 16-Bit-Ganzzahl ohne Vorzeichen aus dem Stream.
     <p class="- topic/p ">Der Rückgabewert liegt im Bereich von 0 bis 65535. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:URLStream:bytesAvailable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesAvailable</apiName><shortdesc class="- topic/shortdesc ">
     Gibt für die zum Lesen verfügbaren Daten im Eingabepuffer die Anzahl der Byte an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt für die zum Lesen verfügbaren Daten im Eingabepuffer die Anzahl der Byte an. Ihr Code muss die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> aufrufen, um sicherzustellen, dass genügend Daten verfügbar sind, bevor Sie diese mit einer der <codeph class="+ topic/ph pr-d/codeph ">read</codeph>-Methoden lesen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLStream:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob dieses URLStream-Objekt zurzeit verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob dieses URLStream-Objekt zurzeit verbunden ist. Beim Aufruf dieser Eigenschaft wird der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgegeben, wenn das URLStream-Objekt verbunden ist, oder andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLStream:endian:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">endian</apiName><shortdesc class="- topic/shortdesc ">
     Gibt die Byte-Reihenfolge der Daten an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>Endian.BIG_ENDIAN
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt die Byte-Reihenfolge der Daten an. Mögliche Werte sind <codeph class="+ topic/ph pr-d/codeph ">Endian.BIG_ENDIAN</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">Endian.LITTLE_ENDIAN</codeph>.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Endian" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Endian</linktext></link></related-links></apiValue><apiValue id="flash.net:URLStream:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Steuert die beim Schreiben oder Lesen eines Objekts verwendete Version von Action Message Format (AMF).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Steuert die beim Schreiben oder Lesen eines Objekts verwendete Version von Action Message Format (AMF).
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/readObject()" class="- topic/link "><linktext class="- topic/linktext ">readObject()</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding-Klasse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupSendMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupSendMode</apiName><shortdesc class="- topic/shortdesc ">
Die NetGroupSendMode-Klasse ist eine Aufzählung von Konstantenwerten, die für den sendMode-Parameter der NetGroup.sendToNeighbor()-Methode verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Eine Aufzählung von Konstantenwerten, die für den sendMode-Parameter der sendToNeighbor()-Methode in der NetGroup-Klasse verwendet werden. Methode der <codeph class="+ topic/ph pr-d/codeph ">NetGroup</codeph>-Klasse

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetGroupSendMode-Klasse ist eine Aufzählung von Konstantenwerten, die für den <codeph class="+ topic/ph pr-d/codeph ">sendMode</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNeighbor()</codeph>-Methode verwendet werden.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link></related-links><apiValue id="flash.net:NetGroupSendMode:NEXT_DECREASING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEXT_DECREASING</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt den Nachbarn mit der nächsten Gruppenadresse in absteigender Reihenfolge an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nextDecreasing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt den Nachbarn mit der nächsten Gruppenadresse in absteigender Reihenfolge an.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendMode:NEXT_INCREASING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEXT_INCREASING</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt den Nachbarn mit der nächsten Gruppenadresse in aufsteigender Reihenfolge an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nextIncreasing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt den Nachbarn mit der nächsten Gruppenadresse in aufsteigender Reihenfolge an.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SharedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SharedObject</apiName><shortdesc class="- topic/shortdesc ">
 Die SharedObject-Klasse dient zum Lesen und Speichern begrenzter Datenmengen auf dem Computer eines Benutzers oder auf einem Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, shared object, constructor
 
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die SharedObject-Klasse dient zum Lesen und Speichern begrenzter Datenmengen auf dem Computer eines Benutzers oder auf einem Server. Gemeinsame Objekte ermöglichen den Datenaustausch in Echtzeit zwischen mehreren Client-SWF-Dateien und Objekten auf dem lokalen Computer oder einem Remote-Server. Lokale gemeinsame Objekte sind mit Browser-Cookies und gemeinsame Remote-Objekte mit Echtzeit-Datenübertragungsgeräten vergleichbar. Um gemeinsame Remote-Objekte zu verwenden, benötigen Sie Adobe Flash Media Server.
 
 <p class="- topic/p ">Gemeinsame Objekte können Sie für Folgendes verwenden:</p>
 
 <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Lokal permanente Speicherung</b>. Dies ist die einfachste Möglichkeit zur Verwendung eines gemeinsamen Objekts, für die Flash Media Server nicht erforderlich ist. Beispielsweise können Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> aufrufen, um ein gemeinsames Objekt in einer Anwendung wie z. B. einen Rechner mit Speicher zu erstellen. Wenn der Benutzer den Rechner schließt, speichert Flash Player den letzten Wert in einem gemeinsamen Objekt auf dem Computer des Benutzers. Daraufhin wird der Rechner bei der nächsten Verwendung mit dem zuletzt verwendeten Wert geöffnet. Wenn Sie die Eigenschaften des gemeinsamen Objekts vor dem Schließen des Rechners auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> setzen, wird die Anwendung beim nächsten Start ohne Werte geöffnet. Ein anderes Beispiel für die lokal permanente Speicherung ist die Erfassung von Benutzereinstellungen oder anderen Daten für eine komplexe Website, z. B. ein Verzeichnis der Artikel, die ein Benutzer auf einer Nachrichten-Site liest. Durch die Verfolgung dieser Informationen können bereits gelesene Artikel in anderer Form angezeigt werden als neue, ungelesene Artikel. Durch die Speicherung dieser Angaben auf dem Computer des Benutzers kann die Serverlast reduziert werden.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Speichern und Freigeben von Daten auf Flash Media Server</b>. Ein gemeinsames Objekt kann Daten auf dem Server speichern, die dann von anderen Clients abgerufen werden können. Rufen Sie zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getRemote()</codeph> auf, um ein gemeinsames Remote-Objekt zu erstellen, etwa eine Liste mit Telefonnummer, die auf dem Server permanent gespeichert wird. Wenn ein Client Änderungen am gemeinsamen Objekt vornimmt, stehen die geänderten Daten allen Clients zur Verfügung, die zurzeit mit dem Objekt verbunden sind oder die später eine Verbindung dazu herstellen. Wenn das Objekt auch lokal gespeichert wird und ein Client Änderungen vornimmt, während er nicht mit dem Server verbunden ist, werden die Daten in das gemeinsame Remote-Objekt kopiert, wenn der Client das nächste Mal eine Verbindung mit dem Objekt herstellt.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Datenaustausch in Echtzeit</b>: Gemeinsame Objekte ermöglichen den Datenaustausch zwischen mehreren Clients in Echtzeit. Beispiel: Sie können ein gemeinsames Remote-Objekt öffnen, in dem eine Liste der mit einem Chatraum verbundenen Benutzer gespeichert ist. Diese Liste kann von allen Clients angezeigt werden, die mit dem Objekt verbunden sind. Wenn ein neuer Benutzer eine Verbindung herstellt oder ein Benutzer den Chatraum verlässt, wird das Objekt aktualisiert, und die aktualisierte Liste der Chatraum-Benutzer wird auf allen mit dem Objekt verbundenen Clients angezeigt.</li></ul>
 
 <p class="- topic/p "> Um ein gemeinsames lokales Objekt zu erstellen, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> auf. Um ein gemeinsames Remote-Objekt zu erstellen, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getRemote()</codeph> auf.</p> 
 
 <p class="- topic/p "> Wenn eine Anwendung geschlossen wird, werden gemeinsame Objekte an eine Festplatte <i class="+ topic/ph hi-d/i ">ausgegeben</i> (flush) oder geschrieben. Sie können auch die <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph>-Methode aufrufen, um die Daten ausdrücklich auf eine Festplatte zu schreiben.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Lokaler Speicherplatz.</b> Lokale gemeinsame Objekte bringen einige Beschränkungen mit sich, die beim Entwurf einer Anwendung unbedingt zu berücksichtigen sind. Es kann vorkommen, dass die SWF-Dateien nicht zum Schreiben lokaler gemeinsamer Objekte berechtigt sind oder die in lokalen gemeinsamen Objekten gespeicherten Daten ohne Ihr Wissen gelöscht werden. Flash Player-Benutzer haben die Möglichkeit, den Speicherplatz, der einzelnen oder allen Domänen zur Verfügung steht, selbst zu verwalten. Wenn die Benutzer den bereitgestellten Speicherplatz verringern, könnten einige lokale gemeinsame Objekte gelöscht werden. Außerdem stehen Flash Player-Benutzern Sicherheitseinstellungen zur Verfügung, mit denen sie verhindern können, dass Domänen von Dritten (andere Domänen als die in der aktuellen Browser-Adressleiste angezeigte) lokale gemeinsame Objekte lesen oder schreiben.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: SWF-Dateien, die auf einem lokalen Computer gespeichert sind und ausgeführt werden, können gemeinsame Objekte von Dritten stets auf Festplatte schreiben. Nähere Informationen zu gemeinsamen Objekten von Dritten finden Sie in der Flash Player-Hilfe unter <xref href="http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager03.html" scope="external" class="- topic/xref ">Global Speichereinstellungen</xref>.</p>
 
 <p class="- topic/p ">Es wird empfohlen, Prüfungen auf Probleme im Zusammenhang mit dem Speicherplatz und den Benutzer-Sicherheitseinstellungen durchzuführen. Nehmen Sie diese Prüfungen vor, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">getLocal()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> aufrufen:
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>: Flash Player gibt eine Ausnahme aus, wenn der Aufruf dieser Methode fehlschlägt, z. B. wenn der Benutzer gemeinsame Objekte von Dritten deaktiviert hat und die Domäne Ihrer SWF-Datei nicht mit der Domäne in der Browser-Adressleiste übereinstimmt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph>: Flash Player gibt eine Ausnahme aus, wenn der Aufruf dieser Methode fehlschlägt. Wenn der Aufruf erfolgreich ist, wird <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.FLUSHED</codeph> zurückgegeben. Wenn zusätzlicher Speicher erforderlich ist, wird <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph> zurückgegeben. Flash Player fordert den Benutzer auf, zusätzlichen Speicherplatz für lokal gespeicherte Informationen zu genehmigen. Dann wird das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> mit einem Informationsobjekt ausgelöst, das angibt, ob die Datenausgabe erfolgreich war oder fehlgeschlagen ist.</li></ul></p>
 
 <p class="- topic/p ">Wenn die SWF-Datei versucht, lokale gemeinsame Objekte zu erstellen oder zu bearbeiten, muss sie mindestens 215 Pixel breit und 138 Pixel hoch sein. Dies sind die Mindestmaße für die Anzeige des Dialogfelds, mit dem der Benutzer aufgefordert wird, den maximalen Speicherplatz für lokale gemeinsame Objekte zu erhöhen. Wenn Ihre SWF-Datei kleiner ist und zusätzlicher Speicherplatz benötigt wird, schlägt <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> fehl, gibt <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushedStatus.PENDING</codeph> zurück und löst das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> aus.</p>
 
 <p class="- topic/p ">
 <b class="+ topic/ph hi-d/b ">Gemeinsame Remote-Objekte:</b> Mit Flash Media Server können Sie gemeinsame Remote-Objekte erstellen und verwenden, die in Echtzeit von allen Clients, die mit Ihrer Anwendung verbunden sind, verwendet werden können. Wenn ein Client eine Eigenschaft eines gemeinsamen Remote-Objekts ändert, wird die Eigenschaft für alle verbundenen Clients geändert. Sie können gemeinsame Remote-Objekte verwenden, um Clients zu synchronisieren, zum Beispiel in einem Spiel mit mehreren Spielern.
 </p>
 
 <p class="- topic/p ">
 Jedes gemeinsame Remote-Objekt verfügt über eine <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft, bei der es sich um ein Objekt mit Eigenschaften handelt, das Daten speichert. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> auf, um eine Eigenschaft des Data-Objekts zu ändern. Der Server aktualisiert die Eigenschaften, löst ein <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignis aus und sendet die Eigenschaften zurück an die verbundenen Clients. 
 </p>
 
 <p class="- topic/p ">
 Sie können gemeinsame Remote-Objekte auf dem Client, auf dem Server oder auf beiden speichern. Standardmäßig speichert Flash Player gemeinsame Remote-Objekte einer Größe von bis zu 100K lokal. Wenn Sie versuchen, ein größeres Objekt zu speichern, zeigt Flash Player das Dialogfeld für den lokalen Speicher an, in dem der Benutzer die lokale Speicherung des gemeinsamen Objekts zulassen oder ablehnen kann. Achten Sie darauf, dass die Bühnengröße mindestens 215 mal 138 Pixel beträgt. Dies ist die Mindestgröße, die Flash für die Anzeige des Dialogfelds benötigt.
 </p>
 <p class="- topic/p ">
 Wählt der Benutzer „Zulassen“, speichert der Server das gemeinsame Objekt und löst ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis mit einer <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Success</codeph> aus. Wählt der Benutzer „Verweigern“, speichert der Server das gemeinsame Objekt nicht und löst ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis mit einer <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft von <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Failed</codeph> aus.
 </p>
 
 </apiDesc><example conref="examples\SharedObjectExample.as" class="- topic/example "> Mit dem folgenden Code wird ein SharedObject-Objekt mit der ID <codeph class="+ topic/ph pr-d/codeph ">"application-name"</codeph> erstellt (und in anschließenden Durchläufen abgerufen). Wenn der Benutzer auf die Schaltfläche „Speichern“ klickt, versucht die Methode <codeph class="+ topic/ph pr-d/codeph ">saveValue()</codeph>, eine Eigenschaft mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">savedValue</codeph> in der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des SharedObject-Objekts zu speichern. Wenn Flash Player eine Genehmigung zur Speicherung der Daten anfragen muss, wird bei Gewährung bzw. Ablehnung der Genehmigung die Methode <codeph class="+ topic/ph pr-d/codeph ">onFlushStatus()</codeph> aufgerufen. Wenn der Benutzer auf die Schaltfläche „Löschen“ klickt, wird der in <codeph class="+ topic/ph pr-d/codeph ">savedValue</codeph> gespeicherte Wert über die Methode <codeph class="+ topic/ph pr-d/codeph ">clearValue()</codeph> gelöscht. Beim nächsten Laden der SWF-Datei lautet der abgerufene Wert <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph>.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.events.NetStatusEvent;
    import flash.net.SharedObject;
    import flash.net.SharedObjectFlushStatus;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFieldType;
    
    public class SharedObjectExample extends Sprite {
        
        private var mySo:SharedObject;
        
        public function SharedObjectExample() {
            buildUI();
            saveBtn.addEventListener(MouseEvent.CLICK, saveValue);
            clearBtn.addEventListener(MouseEvent.CLICK, clearValue);
            
            mySo = SharedObject.getLocal("application-name");
            output.appendText("SharedObject loaded...\n");
            output.appendText("loaded value: " + mySo.data.savedValue + "\n\n");
        }

         private function saveValue(event:MouseEvent):void {
            output.appendText("saving value...\n");
            mySo.data.savedValue = input.text;
            
            var flushStatus:String = null;
            try {
                flushStatus = mySo.flush(10000);
            } catch (error:Error) {
                output.appendText("Error...Could not write SharedObject to disk\n");
            }
            if (flushStatus != null) {
                switch (flushStatus) {
                    case SharedObjectFlushStatus.PENDING:
                        output.appendText("Requesting permission to save object...\n");
                        mySo.addEventListener(NetStatusEvent.NET_STATUS, onFlushStatus);
                        break;
                    case SharedObjectFlushStatus.FLUSHED:
                        output.appendText("Value flushed to disk.\n");
                        break;
                }
            }
            output.appendText("\n");
        }
        
        private function clearValue(event:MouseEvent):void {
            output.appendText("Cleared saved value...Reload SWF and the value should be \"undefined\".\n\n");
            delete mySo.data.savedValue;
        }
        
        private function onFlushStatus(event:NetStatusEvent):void {
            output.appendText("User closed permission dialog...\n");
            switch (event.info.code) {
                case "SharedObject.Flush.Success":
                    output.appendText("User granted permission -- value saved.\n");
                    break;
                case "SharedObject.Flush.Failed":
                    output.appendText("User denied permission -- value not saved.\n");
                    break;
            }
            output.appendText("\n");

            mySo.removeEventListener(NetStatusEvent.NET_STATUS, onFlushStatus);
        }
        
        // UI elements
        private var inputLbl:TextField;
        private var input:TextField;
        private var output:TextField;
        private var saveBtn:Sprite;
        private var clearBtn:Sprite;
    
        private function buildUI():void {
            // input label
            inputLbl = new TextField();
            addChild(inputLbl);
            inputLbl.x = 10;
            inputLbl.y = 10;
            inputLbl.text = "Value to save:";
            
            // input TextField
            input = new TextField();
            addChild(input);
            input.x = 80;
            input.y = 10;
            input.width = 100;
            input.height = 20;
            input.border = true;
            input.background = true;
            input.type = TextFieldType.INPUT;
            
            // output TextField
            output = new TextField();
            addChild(output);
            output.x = 10;
            output.y = 35;
            output.width = 250;
            output.height = 250;
            output.multiline = true;
            output.wordWrap = true;
            output.border = true;
            output.background = true;
            
            // Save button
            saveBtn = new Sprite();
            addChild(saveBtn);
            saveBtn.x = 190;
            saveBtn.y = 10;
            saveBtn.useHandCursor = true;
            saveBtn.graphics.lineStyle(1);
            saveBtn.graphics.beginFill(0xcccccc);
            saveBtn.graphics.drawRoundRect(0, 0, 30, 20, 5, 5);
            var saveLbl:TextField = new TextField();
            saveBtn.addChild(saveLbl);
            saveLbl.text = "Save";
            saveLbl.selectable = false;
            
            // Clear button
            clearBtn = new Sprite();
            addChild(clearBtn);
            clearBtn.x = 230;
            clearBtn.y = 10;
            clearBtn.useHandCursor = true;
            clearBtn.graphics.lineStyle(1);
            clearBtn.graphics.beginFill(0xcccccc);
            clearBtn.graphics.drawRoundRect(0, 0, 30, 20, 5, 5);
            var clearLbl:TextField = new TextField();
            clearBtn.addChild(clearLbl);
            clearLbl.text = "Clear";
            clearLbl.selectable = false;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">netStatus</linktext></link></related-links><adobeApiEvent id="flash.net:SharedObject_flash.events.SyncEvent.SYNC_sync" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sync</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn ein gemeinsames Remote-Objekt vom Server aktualisiert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SyncEvent.SYNC</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SyncEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn ein gemeinsames Remote-Objekt vom Server aktualisiert wurde.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getRemote()" class="- topic/link "><linktext class="- topic/linktext ">getRemote()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:SharedObject_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung einer SharedObject-Instanz protokolliert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung einer SharedObject-Instanz protokolliert wird. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> enthält die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. Dabei handelt es sich um ein Informationsobjekt mit spezifischen Informationen über das Ereignis, z. B. ob ein Verbindungsversuch erfolgreich war oder ob das gemeinsame Objekt erfolgreich auf die lokale Festplatte geschrieben werden konnte. 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:SharedObject_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron, d. h. aus nativem asynchronem Code ausgelöst wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron ausgelöst wird – das heißt, aus nativem asynchronem Code. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:SharedObject:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
     Lokale gemeinsame Objekte: Entfernt alle Daten und löscht das gemeinsame Objekt von der Festplatte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.clear, clear
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lokale gemeinsame Objekte: Entfernt alle Daten und löscht das gemeinsame Objekt von der Festplatte. Der Verweis auf das gemeinsame Objekt ist weiterhin aktiv, die zugehörigen Dateneigenschaften werden jedoch gelöscht.
     
     <p class="- topic/p ">
     Für gemeinsame Remote-Objekte, die mit Flash Media Server verwendet werden, trennt <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> die Verbindung zum Objekt und löscht alle Daten. Wenn das gemeinsame Objekt lokal gespeichert wird, wird es mit dieser Methode auch von der Festplatte gelöscht. Der Verweis auf das gemeinsame Objekt ist weiterhin aktiv, die zugehörigen Dateneigenschaften werden jedoch gelöscht.
     </p>
      
     
     </apiDesc><example conref="examples\SharedObject_clear.as" class="- topic/example "> Mit dem folgenden Code wird ein SharedObject-Objekt mit der ID <codeph class="+ topic/ph pr-d/codeph ">hostName</codeph> erstellt (und in anschließenden Durchläufen abgerufen). Eine Eigenschaft mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">username</codeph> wird der Eigenschaft „data“ des SharedObject-Objekts hinzugefügt. Anschließend wird die Methode <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> aufgerufen, die alle Informationen löscht, die dem Datenobjekt hinzugefügt wurden (in diesem Fall die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">username</codeph>).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.net.SharedObject;

    public class SharedObject_clear {
        private var hostName:String = "yourDomain";
        private var username:String = "yourUsername";

        public function SharedObject_clear() {
            var mySo:SharedObject = SharedObject.getLocal(hostName);
            if(mySo.data.username == null) {
                mySo.data.username = username;
                trace("set: " + mySo.data.username); // yourUsername
            }
            else {
                mySo.clear();
                trace("cleared: " + mySo.data.username); // undefined
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt die Verbindung zwischen einem gemeinsamen Remote-Objekt und dem Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: This info is relevant for Flash Media Server, but not Flex Data Services.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt die Verbindung zwischen einem gemeinsamen Remote-Objekt und dem Server. Wenn ein gemeinsames Remote-Objekt permanent lokal gespeichert ist, kann der Benutzer nach dem Aufruf dieser Methode Änderungen an der lokalen Kopie vornehmen. Das nächste Mal, wenn der Benutzer eine Verbindung zu dem gemeinsamen Remote-Objekt herstellt, werden diese Änderungen an den Server gesendet.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Stellt über ein angegebenes NetConnection-Objekt eine Verbindung zu einem gemeinsamen Remote-Objekt her.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: On FMS, can connect to a shared object, but cannot pass a message as a second param.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player konnte keine Verbindung zu dem angegebenen gemeinsamen Remote-Objekt herstellen. Vergewissern Sie sich, dass die NetConnection-Instanz gültig und verbunden ist und dass das gemeinsame Remote-Objekt erfolgreich auf dem Server erstellt wurde.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">myConnection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein NetConnection-Objekt, das das Real-Time Messaging Protocol (RTMP) verwendet, zum Beispiel für die Kommunikation mit Flash Media Server.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">params</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der eine Meldung definiert, die an das gemeinsame Remote-Objekt auf dem Server übergeben wird. Kann nicht mit Flash Media Server verwendet werden.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Stellt über ein angegebenes NetConnection-Objekt eine Verbindung zu einem gemeinsamen Remote-Objekt her. Verwenden Sie diese Methode nach dem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">getRemote()</codeph>. Wird die Verbindung erfolgreich hergestellt, wird das <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignis ausgelöst.
     
     <p class="- topic/p ">Bevor Sie beginnen, mit einem gemeinsamen Remote-Objekt zu arbeiten, prüfen Sie, ob Fehler vorliegen, indem Sie eine <codeph class="+ topic/ph pr-d/codeph ">try..catch..finally</codeph> Anweisung. Warten Sie dann auf das Ereignis <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> und verarbeiten Sie es, bevor Sie Änderungen am gemeinsamen Objekt vornehmen. Alle Änderungen, die lokal vor dem Auslösen des <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignisses vorgenommen werden, können verloren gehen.
     </p>
     
     <p class="- topic/p ">
     Rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode auf, um eine Verbindung zu einem gemeinsamen Remote-Objekt herzustellen, zum Beispiel:
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var myRemoteSO:SharedObject = SharedObject.getRemote("mo", myNC.uri, false);
     myRemoteSO.connect(myNC);
     </codeblock>
     
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getRemote()" class="- topic/link "><linktext class="- topic/linktext ">getRemote()</linktext></link><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">sync</linktext></link><link href="../../statements.html#try..catch..finally" class="- topic/link "><linktext class="- topic/linktext ">try..catch..finally</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:flush" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flush</apiName><shortdesc class="- topic/shortdesc ">
     Schreibt ein lokal permanentes gemeinsames Objekt in eine lokale Datei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.flush, flush
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player kann das gemeinsame Objekt nicht auf Festplatte schreiben. Dieser Fehler kann auftreten, wenn der Benutzer das Speichern lokaler Daten für Objekte dieser Domäne generell nicht zugelassen hat.
      
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Über lokale Inhalte können immer gemeinsame Objekte von Dritt-Domänen (anderen Domänen als der in der Adresszeile des Browsers) auf Festplatte geschrieben werden, auch wenn das Schreiben gemeinsamer Objekte durch Dritt-Domänen nicht zulässig ist.</p>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Einer der folgenden Werte:
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph>: Der Benutzer hat das Speichern lokaler Daten für Objekte dieser Domäne zugelassen, der zugewiesene Platz reicht aber zum Speichern des Objekts nicht aus. Flash Player fordert den Benutzer auf, zusätzlichen Speicherplatz zuzuweisen. Wenn der Speicherplatz für das gemeinsame Objekt in Zukunft zunehmen darf, um die Rückgabe des Werts <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph> zu vermeiden, belegen Sie <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph> mit einem Wert.
     </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.FLUSHED</codeph>: Das gemeinsame Objekt wurde erfolgreich in eine Datei auf der lokalen Festplatte geschrieben.</li></ul>
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">minDiskSpace</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der minimale Speicherplatz in Byte, der für dieses Objekt zugewiesen werden muss.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schreibt ein lokal permanentes gemeinsames Objekt in eine lokale Datei. Wenn Sie diese Methode nicht verwenden, schreibt Flash Player das gemeinsame Objekt in eine Datei, wenn die Sitzung des gemeinsamen Objekts endet, d. h., wenn die SWF-Datei geschlossen wird, wenn das gemeinsame Objekt gelöscht wird, weil keine weiteren Verweise darauf vorhanden sind, oder wenn Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.clear()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">SharedObject.close()</codeph> aufrufen. 
     
     <p class="- topic/p ">Wenn diese Methode <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph> zurückgibt, fordert Flash Player den Benutzer in einem Dialogfeld auf, mehr Speicherplatz für Objekte dieser Domäne bereitzustellen. Wenn der Speicherplatz für das gemeinsame Objekt in Zukunft zunehmen darf, um die Rückgabe des Werts <codeph class="+ topic/ph pr-d/codeph ">PENDING</codeph> zu vermeiden, belegen Sie <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph> mit einem Wert. Bei dem Versuch, eine Datei zu schreiben, ermittelt Flash Player die Anzahl der an <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph> übergebenen Byte, anstatt lediglich zu überprüfen, ob der vorhandene Platz zum Speichern des gemeinsamen Objekts in der aktuellen Größe ausreicht. </p>
     
     <p class="- topic/p ">Wenn Sie beispielsweise annehmen, dass ein gemeinsames Objekt maximal 500 Byte groß wird, übergeben Sie 500 als Wert für <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph>, auch wenn die Datei zunächst viel kleiner ist. Flash fordert dann den Benutzer auf, für das gemeinsame Objekt 500 Byte Speicherplatz bereitzustellen. Wenn der Benutzer den gewünschten Speicherplatz zuweist, ist es in Zukunft beim Ausgeben des Objekts nicht erforderlich, mehr Speicherplatz anzufordern (sofern die Größe 500 Byte nicht übersteigt). </p>
     
     <p class="- topic/p ">Nachdem der Benutzer auf dieses Dialogfeld reagiert hat, wird diese Methode erneut aufgerufen. Ein <codeph class="+ topic/ph pr-d/codeph ">netStatus-Ereignis</codeph> wird mit der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Success</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Failed</codeph> ausgelöst
     </p>
     
     </apiDesc><example conref="examples\SharedObject_flush.as" class="- topic/example "> Mit dem folgenden Code wird ein SharedObject-Objekt mit der ID <codeph class="+ topic/ph pr-d/codeph ">hostName</codeph> erstellt (und in anschließenden Durchläufen abgerufen). Eine Eigenschaft mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">username</codeph> wird der Eigenschaft „data“ des SharedObject-Objekts hinzugefügt. Anschließend wird die Methode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> aufgerufen, und es wird überprüft, ob der String <codeph class="+ topic/ph pr-d/codeph ">pending</codeph> oder der boolesche Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> bzw. <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben wurde. Beachten Sie, dass alle geöffneten SharedObject-Instanzen automatisch ausgegeben werden, wenn die aktuelle Flash Player-Instanz geschlossen wird.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.net.SharedObject;

    public class SharedObject_flush {
        private var hostName:String = "yourDomain";
        private var username:String = "yourUsername";

        public function SharedObject_flush() {
            var mySo:SharedObject = SharedObject.getLocal(hostName);
            mySo.data.username = username;
            var flushResult:Object = mySo.flush();
            trace("flushResult: " + flushResult);
            trace(mySo.data.username); // yourUsername
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/clear()" class="- topic/link "><linktext class="- topic/linktext ">clear()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:getLocal" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLocal</apiName><shortdesc class="- topic/shortdesc ">
  Gibt einen Verweis auf ein lokal permanentes gemeinsames Objekt zurück, das nur für den aktuellen Client verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, constructor, SharedObject.getLocal, getLocal, get
  
   
   </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player kann das gemeinsame Objekt nicht erstellen. Dieser Fehler kann auftreten, wenn das Erstellen und Speichern von permanenten gemeinsamen Objekten durch Flash-Inhalte Dritter nicht erlaubt ist (gilt nicht für lokale Inhalte). Benutzer können unter <xref href="http://www.adobe.com/support/documentation/en/flashplayer/help/settings_manager03.html" scope="external" class="- topic/xref ">http://www.adobe.com/support/documentation/en/flashplayer/help/settings_manager03.html</xref> im Einstellungsmanager im Bedienfeld „Globale Speichereinstellungen“ festlegen, dass permanente gemeinsame Objekte von Dritten nicht zulässig sind.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt einen Verweis auf ein lokal permanentes gemeinsames Objekt zurück, das nur für den aktuellen Client verfügbar ist. Wenn Flash Player das gemeinsame Objekt nicht erstellen oder finden kann (wenn beispielsweise das mit <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> angegebene Verzeichnis nicht vorhanden ist), löst diese Methode eine Ausnahme aus.
  
  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:SharedObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name des Objekts. Der Name darf Schrägstriche (<codeph class="+ topic/ph pr-d/codeph ">/</codeph>) enthalten. So ist beispielsweise <codeph class="+ topic/ph pr-d/codeph ">work/addresses</codeph> ein gültiger Name. Der Name eines gemeinsamen Objekts darf weder Leerzeichen noch folgende Zeichen enthalten:   
  <pre xml:space="preserve" class="- topic/pre ">
  ~ % &amp; \ ; : " ' , &lt; > ? # 
  </pre>
  
  </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPath</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der vollständige oder Teilpfad zur SWF-Datei, die das gemeinsame Objekt erstellt hat und die den lokalen Speicherort des gemeinsamen Objekts festlegt. Wenn Sie diesen Parameter nicht angeben, wird der vollständige Pfad verwendet. 
   
  </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">secure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hiermit wird festgelegt, ob der Zugriff auf dieses gemeinsame Objekt auf SWF-Dateien beschränkt wird, die über eine HTTPS-Verbindung bereitgestellt werden. Wenn die SWF-Datei über eine HTTPS-Verbindung bereitgestellt wird, hat der Wert dieses Parameters folgende Auswirkungen:
  <ul class="- topic/ul "><li class="- topic/li ">Falls dieser Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt wird, erstellt Flash Player ein neues sicheres gemeinsam genutztes Objekt oder ruft einen Verweis auf ein vorhandenes sicheres gemeinsam genutztes Objekt ab. Dieses sichere gemeinsam genutzte Objekt kann nur durch SWF-Dateien gelesen oder geschrieben werden, die über HTTPS bereitgestellt werden und <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> mit der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> für den <codeph class="+ topic/ph pr-d/codeph ">secure</codeph>-Parameter aufrufen.</li><li class="- topic/li ">Wenn dieser Parameter auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt wird, erstellt Flash Player ein neues gemeinsames Objekt oder ruft den Verweis auf ein vorhandenes gemeinsames Objekt ab, das durch SWF-Dateien gelesen oder geschrieben werden kann, die über andere Verbindungen als HTTPS bereitgestellt werden.</li></ul>
  <p class="- topic/p ">Wenn die SWF-Datei über eine andere Verbindung als HTTPS bereitgestellt wird und Sie diesen Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, tritt bei der Erstellung des neuen gemeinsam genutzten Objekts (bzw. beim Zugriff auf ein zuvor erstelltes sicheres gemeinsam genutztes Objekt) ein Fehler auf, und es wird <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurückgegeben. Unabhängig vom Wert dieses Parameters belegen die erstellten gemeinsamen Objekte einen Teil des von einer Domäne belegten Speicherplatzes.</p>
  
  <p class="- topic/p ">Aus dem folgenden Diagramm geht die Verwendung des Parameters <codeph class="+ topic/ph pr-d/codeph ">secure</codeph> hervor.</p>
  <p class="- topic/p "><adobeimage alt="Diagramm eines sicheren gemeinsam genutzten Objekts" href="../../images/secureParam.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
  
  </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Gibt einen Verweis auf ein lokal permanentes gemeinsames Objekt zurück, das nur für den aktuellen Client verfügbar ist. Falls das gemeinsam genutzte Objekt nicht bereits existiert, wird es durch diese Methode erstellt. Wenn einer oder mehrere der an <codeph class="+ topic/ph pr-d/codeph ">getLocal()</codeph> übergebenen Werte ungültig sind oder der Aufruf fehlschlägt, gibt Flash Player eine Ausnahme aus.
  
  <p class="- topic/p ">Anhand des folgenden Codes wird gezeigt, wie Sie den zurückgegebenen Verweis auf ein gemeinsames Objekt einer Variablen zuordnen:</p>
  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">var so:SharedObject = SharedObject.getLocal("savedData");</codeph></p>
  
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn der Benutzer für diese Domäne generell keine lokale Speicherung zulässt, wird das Objekt auch dann nicht lokal gespeichert, wenn für <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> ein lokaler Pfad angegeben wurde. Es gibt eine Ausnahme zu dieser Regel: lokale Inhalte. Über lokale Inhalte können immer gemeinsam genutzte Objekte von Dritt-Domänen (anderen Domänen als der in der Adresszeile des Browsers) auf Festplatte geschrieben werden, auch wenn das Schreiben gemeinsam genutzter Objekte durch Dritt-Domänen nicht zulässig ist.
  </p>
  
  <p class="- topic/p ">Um Namenskonflikte zu vermeiden, wird in Flash auch der Speicherort der SWF-Datei einbezogen, die das gemeinsame Objekt erstellt hat. Wenn zum Beispiel eine SWF-Datei auf www.meineFirma.com/apps/stockwatcher.swf ein gemeinsames Objekt namens <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph> erstellt, entsteht kein Konflikt mit einem anderen, ebenfalls <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph> genannten Objekt, das von einer SWF-Datei auf www.IhreFirma.com/photoshoot.swf erstellt wurde, weil die beiden SWF-Dateien aus zwei verschiedenen Verzeichnissen stammen. </p>
  
  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> ist zwar ein optionaler Parameter, dennoch sollten Sie seine Verwendung in Erwägung ziehen, insbesondere wenn andere SWF-Dateien auf das gemeinsame Objekt zugreifen müssen. Wenn die Daten im gemeinsamen Objekt speziell für eine SWF-Datei gelten, die nicht an einen anderen Speicherort verschoben wird, ist die Verwendung des Standardwertes sinnvoll. Wenn andere SWF-Dateien auf das gemeinsame Objekt zugreifen müssen oder wenn die SWF-Datei, die das gemeinsame Objekt erstellt, zu einem späteren Zeitpunkt verschoben wird, kann der Wert dieses Parameters entscheidend dafür sein, ob SWF-Dateien auf das gemeinsame Objekt zugreifen können. Wenn Sie beispielsweise ein gemeinsames Objekt erstellen und für <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> der Standardwert des vollständigen Pfads zur SWF-Datei eingestellt ist, kann keine andere SWF-Datei auf das gemeinsame Objekt zugreifen. Wenn Sie die Original-SWF-Datei später an einen anderen Speicherort verschieben, kann selbst diese SWF-Datei nicht mehr auf die bereits im gemeinsamen Objekt gespeicherten Daten zugreifen.</p>
  
  <p class="- topic/p ">Verwenden Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">localpath</codeph>, um die versehentliche Beschränkung des Zugriffs auf ein gemeinsames Objekt zu vermeiden. Wenn Sie möchten, dass das gemeinsame Objekt für alle SWF-Dateien in der Domäne verfügbar ist, setzen Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">/</codeph> (Schrägstrich). Dadurch wird jedoch das Risiko der Namenskonflikte mit anderen gemeinsamen Objekten in der Domäne erhöht. Sie können die Möglichkeiten ein Stück weit einschränken, indem Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> auf Ordnernamen aus dem vollständigen Pfad der SWF-Datei setzen. Beispiel: Für das von der SWF-Datei unter www.myCompany.com/apps/stockwatcher.swf erstellte gemeinsame Objekt <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph> können Sie den Parameter <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">/</codeph> , <codeph class="+ topic/ph pr-d/codeph ">/apps</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">/apps/stockwatcher.swf</codeph> setzen. Welcher Ansatz für Ihre Anwendung die meiste Flexibilität bietet, ist von der jeweiligen Anwendung abhängig.</p>
  
  <p class="- topic/p ">Beachten Sie bei Verwendung dieser Methode das folgende Sicherheitsmodell von:
  
  <ul class="- topic/ul "><li class="- topic/li ">Auf gemeinsam genutzte Objekte kann nicht über Sandbox-Grenzen hinweg zugegriffen werden.</li><li class="- topic/li ">Benutzer können den Zugriff auf gemeinsam genutzte Objekte über das Flash Player-Dialogfeld „Einstellungen“ oder über den Einstellungsmanager einschränken. Standardmäßig kann eine Anwendung gemeinsame Objekte mit einem Datenumfang von bis zu 100 KB pro Domäne erstellen. Administratoren und Benutzer können auch Einschränkungen für Schreibberechtigungen im Dateisystem festlegen.</li></ul></p>
  
  <p class="- topic/p ">Beispiel: Sie veröffentlichen die Inhalte einer SWF-Datei für die Wiedergabe als lokale Dateien (entweder lokal installierte SWF-Dateien oder EXE-Dateien) und müssen von mehreren lokalen SWF-Dateien auf ein bestimmtes gemeinsames Objekt zugreifen. In dieser Situation müssen Sie darauf achten, dass für die lokalen Dateien möglicherweise zwei verschiedene Speicherorte zur Speicherung von gemeinsamen Objekten verwendet werden. Welche Domäne verwendet wird, hängt von den Sicherheitsberechtigungen der lokalen Datei ab, die das gemeinsame Objekt erstellt hat. Für lokale Dateien sind drei verschiedene Berechtigungsstufen möglich:
  
  <ol class="- topic/ol "><li class="- topic/li ">Nur Zugriff auf das lokale Dateisystem</li><li class="- topic/li ">Nur Zugriff auf das Netzwerk</li><li class="- topic/li ">Zugriff auf das Netzwerk und auf das lokale Dateisystem</li></ol></p>
  
  <p class="- topic/p ">Lokale Dateien mit Zugriff auf das lokale Dateisystem (Stufe 1 oder 3) speichern gemeinsame Objekte an einem Speicherort. Lokale Dateien ohne Zugriff auf das lokale Dateisystem (Stufe 2) speichern gemeinsame Objekte an einem anderen Speicherort.</p>
  
  <p class="- topic/p ">Sie können eine SWF-Datei daran hindern, diese Methode aufzurufen, indem Sie auf der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> festlegen.</p>
  
  <p class="- topic/p ">Weitere Informationen finden Sie im Flash Player Developer Center im Abschnitt <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Sicherheit</xref>.</p>
  
  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:getRemote" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getRemote</apiName><shortdesc class="- topic/shortdesc ">
     Gibt einen Verweis auf das gemeinsame Objekt auf Flash Media Server zurück, auf das mehrere Clients zugreifen können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: This info is relevant for Flash Media Server, but not Flex Data Services.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player kann das gemeinsame Objekt weder erstellen noch öffnen. Dieser Fall kann eintreten, wenn für die Parameter <codeph class="+ topic/ph pr-d/codeph ">remotePath</codeph> und <codeph class="+ topic/ph pr-d/codeph ">persistence</codeph> nicht vorhandene Pfade angegeben wurden.
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Verweis auf ein Objekt, das von mehreren Clients gemeinsam genutzt werden kann.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:SharedObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name des gemeinsamen Remote-Objekts. Der Name kann Schrägstriche (/) enthalten. So ist beispielsweise „work/addresses“ ein gültiger Name. Der Name eines gemeinsamen Objekts darf weder Leerzeichen noch folgende Zeichen enthalten:
     <pre xml:space="preserve" class="- topic/pre ">    ~ % &amp; \ ; :  " ' , > ? ? #</pre>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remotePath</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der URI des Servers, auf dem das gemeinsame Objekt gespeichert wird. Dieser URI muss mit dem URI des NetConnection-Objekts übereinstimmen, das an die Methode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> übergeben wird. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">persistence</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Dateneigenschaft des gemeinsamen Objekts die lokal permanente Speicherung, die permanente Remote-Speicherung oder beide Attribute aufweist. Mit diesem Parameter kann auch angegeben werden, wo das gemeinsame Objekt lokal gespeichert wird. Folgende Werte sind zulässig:
     <ul class="- topic/ul "><li class="- topic/li ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gibt an, dass das gemeinsame Objekt nicht permanent auf dem Client oder auf dem Server gespeichert wird.</li><li class="- topic/li ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gibt an, dass das gemeinsame Objekt nur auf dem Server permanent gespeichert wird.</li><li class="- topic/li ">Ein vollständig oder teilweise angegebener lokaler Pfad zum gemeinsamen Objekt gibt an, dass das gemeinsame Objekt permanent auf dem Client und auf dem Server gespeichert wird. Auf dem Client wird es unter dem angegebenen Pfad und auf dem Server in einem Unterverzeichnis des Anwendungsverzeichnisses gespeichert.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn der Benutzer für diese Domäne generell keine lokale Speicherung zulässt, wird das Objekt auch dann nicht lokal gespeichert, wenn ein lokaler Pfad angegeben wurde. Weitere Informationen finden Sie in der Beschreibung zur Klasse.</p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">secure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hiermit wird festgelegt, ob der Zugriff auf dieses gemeinsame Objekt auf SWF-Dateien beschränkt wird, die über eine HTTPS-Verbindung bereitgestellt werden. Weitere Informationen finden Sie in den Erläuterungen zum Parameter <codeph class="+ topic/ph pr-d/codeph ">secure</codeph> im Eintrag zur Methode <codeph class="+ topic/ph pr-d/codeph ">getLocal</codeph>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt einen Verweis auf das gemeinsame Objekt auf Flash Media Server zurück, auf das mehrere Clients zugreifen können. Falls das gemeinsame Remote-Objekt nicht bereits existiert, wird es durch diese Methode erstellt. 
     
     <p class="- topic/p ">
     Um ein gemeinsames Remote-Objekt zu erstellen, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">getRemote()</codeph> nach dem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> auf, um das gemeinsame Remote-Objekt mit dem Server zu verbinden wie im folgenden Beispiel:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://somedomain.com/applicationName");
     var myRemoteSO:SharedObject = SharedObject.getRemote("mo", nc.uri, false);
     myRemoteSO.connect(nc);
     </codeblock>
     
     
     
     <p class="- topic/p ">
     Mit dem Ereignis <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> wird bestätigt, dass die lokalen und Remote-Kopien des gemeinsamen Objekts synchronisiert sind. Alle Clients, die dieses Objekt gemeinsam verwenden sollen, müssen dieselben Werte für die Parameter <codeph class="+ topic/ph pr-d/codeph ">name</codeph> und <codeph class="+ topic/ph pr-d/codeph ">remotePath</codeph> übergeben. 
     </p> 
     
     <p class="- topic/p ">Zur Erstellung eines gemeinsamen Objekts, das nur für den aktuellen Client verfügbar ist, verwenden Sie<codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Überträgt eine Meldung an alle mit einem gemeinsamen Remote-Objekt verbundenen Clients, einschließlich des Clients, von dem die Meldung gesendet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Needs better documentation, examples.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein oder mehrere Argumente: Ein String, der die Meldung identifiziert, der Name einer oder mehrerer Verarbeitungsfunktionen, die an das gemeinsame Objekt angehängt werden, und optionale Parameter beliebigen Typs. Der Prozedurname darf nur eine Ebene umfassen (d. h. die Form übergeordnet/untergeordnet ist nicht zulässig) und hängt vom gemeinsamen Objekt ab. Die Argumente werden serialisiert, über die Verbindung gesendet und von der Empfangsprozedur in derselben Reihenfolge empfangen. Wenn es sich bei dem Parameter um ein zyklisches Objekt handelt (z. B. eine verknüpfte zyklische Liste), werden die Verweise bei der Serialisierung korrekt verarbeitet.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Verwenden Sie keine reservierten Begriffe als Funktionsnamen. Beispiel: Bei Verwendung von <codeph class="+ topic/ph pr-d/codeph ">myRemoteSO.send("close")</codeph> schlägt die Prozedur fehl.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Überträgt eine Meldung an alle mit einem gemeinsamen Remote-Objekt verbundenen Clients, einschließlich des Clients, von dem die Meldung gesendet wurde. Zur Verarbeitung und Beantwortung der Meldung erstellen Sie eine Callback-Funktion, die mit dem gemeinsamen Objekt verknüpft wird.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:setDirty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDirty</apiName><shortdesc class="- topic/shortdesc ">
     Weist den Server an, dass der Wert einer Eigenschaft im gemeinsamen Objekt geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The AS2 player automatically marks properties dirty as they are changed.
          The FMS server, however, requires an explicit setProperty() call to indicate when a property
          of data has changed.
     
          AS3 does not support auto-dirtying the properties, so we are introducing setDirty() to explicitly
          indicate when a property has changed, and setProperty() to match the method provided with the server.
     
          It's probably best to read the FMS Actionscript reference (search for SharedObject.setProperty at
          www.adobe.com) before writing this documentation, as the details should be similar.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">propertyName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der geänderten Eigenschaft.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Weist den Server an, dass der Wert einer Eigenschaft im gemeinsamen Objekt geändert wurde. Diese Methode kennzeichnet Eigenschaften als geändert (<i class="+ topic/ph hi-d/i ">dirty</i>).
     
     <p class="- topic/p ">
     Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph> auf, um Eigenschaften für ein gemeinsames Objekt zu erstellen. 
     </p>
      
     <p class="- topic/p ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph>-Methode implementiert <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. In den meisten Fällen (bei einfachen Eigenschaftswerten wie „String“ oder „Number“) können Sie <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> aufrufen. Wenn es sich bei dem Eigenschaftswert jedoch um ein Objekt mit eigenen Eigenschaften handelt, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> auf, um anzugeben, wenn ein Wert innerhalb des Objekts geändert wurde.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/data" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.data (clientseitige Eigenschaft)</linktext></link><link href="flash.net.xml#SharedObject/setProperty()" class="- topic/link "><linktext class="- topic/linktext ">setProperty()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:setProperty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setProperty</apiName><shortdesc class="- topic/shortdesc ">
     Aktualisiert den Wert einer Eigenschaft in einem gemeinsamen Objekt und informiert den Server, dass der Wert der Eigenschaft geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">propertyName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name der Eigenschaft im gemeinsamen Objekt.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert der Eigenschaft (ein ActionScript-Objekt) oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zum Löschen der Eigenschaft. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Aktualisiert den Wert einer Eigenschaft in einem gemeinsamen Objekt und informiert den Server, dass der Wert der Eigenschaft geändert wurde. Die <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph>-Methode markiert Eigenschaften ausdrücklich als geändert („dirty“).
     
     <p class="- topic/p ">Weitere Informationen zu gemeinsamen Remote-Objekten finden Sie in der <xref href="http://www.adobe.com/go/learn_fms_docs_en" class="- topic/xref ">Dokumentation zu Flash Media Server</xref>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die Methode <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph> implementiert die Methode <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. In den meisten Fällen (bei einfachen Eigenschaftswerten wie „String“ oder „Number“) verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. Wenn es sich bei dem Eigenschaftswert jedoch um ein Objekt mit eigenen Eigenschaften handelt, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>, um anzugeben, wenn ein Wert innerhalb des Objekts geändert wurde. Im Allgemeinen empfiehlt es sich, <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> anstelle von <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> aufzurufen, da <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> einen Eigenschaftswert nur aktualisiert, wenn sich dieser Wert geändert hat; im Gegensatz dazu erzwingt <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> eine Synchronisierung aller Clients mit Abonnement.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/data" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.data (clientseitige Eigenschaft)</linktext></link></related-links></apiOperation><apiValue id="flash.net:SharedObject:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review.
      
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft muss auf ein Objekt eingestellt werden, das nicht null ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden. Das Standardobjekt ist <codeph class="+ topic/ph pr-d/codeph ">this</codeph>. Wenn Sie die client-Eigenschaft auf ein anderes Objekt einstellen, werden die Callback-Methoden bei dem eingestellten Objekt aufgerufen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:SharedObject:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Die Sammlung von Attributen, die der Eigenschaft „data“ des Objekts zugewiesen sind. Diese Attribute können gemeinsam genutzt und gespeichert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.data, data
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Sammlung von Attributen, die der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des Objekts zugewiesen sind. Diese Attribute können gemeinsam genutzt und gespeichert werden. Jedes Attribut ist ein Objekt eines beliebigen ActionScript- oder JavaScript-Typs: Array, Number, Boolean, ByteArray, XML usw. Mit den folgenden Zeilen werden beispielsweise verschiedenen Aspekten eines gemeinsamen Objekts Werte zugewiesen:
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var items_array:Array = new Array(101, 346, 483);
     var currentUserIsAdmin:Boolean = true;
     var currentUserName:String = "Ramona";
     
     var my_so:SharedObject = SharedObject.getLocal("superfoo");
     my_so.data.itemNumbers = items_array;
     my_so.data.adminPrivileges = currentUserIsAdmin;
     my_so.data.userName = currentUserName;
     
     for (var prop in my_so.data) {
       trace(prop+": "+my_so.data[prop]);
     }
     </codeblock>
     
     
     
     <p class="- topic/p ">Alle Attribute der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft eines gemeinsamen Objekts werden gespeichert, wenn das Objekt dauerhaft ist, und das gemeinsame Objekt enthält die folgenden Informationen:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     userName: Ramona
     adminPrivileges: true
     itemNumbers: 101,346,483
     </codeblock>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft eines gemeinsamen Objekts keine Werte direkt zu, wie in <codeph class="+ topic/ph pr-d/codeph ">so.data = someValue</codeph>. Flash Player ignoriert diese Zuweisungen.</p>
     
     <p class="- topic/p ">Um Attribute von lokalen gemeinsamen Objekten zu löschen, verwenden Sie folgende Syntax: <codeph class="+ topic/ph pr-d/codeph ">delete so.data.attributeName</codeph>. Das Attribut eines lokalen gemeinsamen Objekts wird nicht gelöscht, wenn Sie es auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph> setzen.</p>
     
     <p class="- topic/p ">Um als <i class="+ topic/ph hi-d/i ">privat</i> definierte Werte für ein gemeinsames Objekt zu erstellen (d. h. Werte, die nur für die Client-Instanz verfügbar sind, wenn das Objekt verwendet wird, und die beim Schließen nicht zusammen mit dem Objekt gespeichert werden), erstellen Sie zum Speichern Eigenschaften, die nicht <codeph class="+ topic/ph pr-d/codeph ">data</codeph> heißen (siehe folgendes Beispiel).</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var my_so:SharedObject = SharedObject.getLocal("superfoo");
     my_so.favoriteColor = "blue";
     my_so.favoriteNightClub = "The Bluenote Tavern";
     my_so.favoriteSong = "My World is Blue";
     
     for (var prop in my_so) {
       trace(prop+": "+my_so[prop]);
     }
     </codeblock>
     
     
     
     <p class="- topic/p ">Das gemeinsame Objekt enthält die folgenden Daten:</p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     favoriteSong: My World is Blue
     favoriteNightClub: The Bluenote Tavern
     favoriteColor: blue
     data: [object Object]
     </codeblock>
     
     <p class="- topic/p ">
     Bei gemeinsamen Remote-Objekten, die mit einem Server verwendet werden, stehen alle Attribute der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft allen mit dem Objekt verbundenen Clients zur Verfügung, und alle Attribute werden gespeichert, wenn es sich um ein permanentes Objekt handelt. Wenn ein Client den Wert eines Attributs ändert, sehen alle Clients den neuen Wert.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:defaultObjectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">defaultObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Die Standardobjektkodierung (AMF-Version) für alle in der SWF-Datei erstellten lokalen gemeinsamen Objekte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Standardobjektkodierung (AMF-Version) für alle in der SWF-Datei erstellten lokalen gemeinsamen Objekte. Wenn lokale gemeinsame Objekte auf Festplatte geschrieben werden, gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> an, welche AMF-Version verwendet werden soll: ActionScript 3.0 (AMF3) oder ActionScript 1.0 oder 2.0 (AMF0).
     
     <p class="- topic/p ">Nähere Informationen zur Objektkodierung einschließlich der Kodierungsunterschiede zwischen gemeinsamen lokalen und Remote-Objekten finden Sie in der Beschreibung der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>.</p>
     
     <p class="- topic/p ">Standardmäßig wird <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> auf die Verwendung des Formats ActionScript 3.0 (AMF3) eingestellt. Wenn Sie lokale gemeinsame Objekte benötigen, die von im Format ActionScript 2.0 oder 1.0 geschriebenen SWF-Dateien gelesen werden können, stellen Sie <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> am Skriptanfang auf die Verwendung des Formats ActionScript 1.0 bzw. ActionScript 2.0 ein (<codeph class="+ topic/ph pr-d/codeph ">flash.net.ObjectEncoding.AMF0</codeph>), bevor Sie mit der Erstellung lokaler Objekte beginnen. Alle danach erstellten lokalen gemeinsamen Objekte verwenden die AMF0-Kodierung und unterstützen somit ältere Inhalte. Es ist nicht möglich, den <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Wert bereits erstellter lokaler gemeinsamer Objekte durch die Einstellung von <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> zu ändern.</p>
     
     <p class="- topic/p ">Um die Objektkodierung für die einzelnen Objekte anstatt für alle von der SWF-Datei erstellten gemeinsamen Objekte einzustellen, setzen Sie die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft stattdessen auf das jeweilige lokale gemeinsame Objekt.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">objectEncoding-Eigenschaft</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding-Klasse</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Die Objektkodierung (AMF-Version) für dieses gemeinsame Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sie haben versucht, den Wert für die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft eines gemeinsamen Remote-Objekts einzustellen. Diese Eigenschaft ist für gemeinsame Remote-Objekte schreibgeschützt, da dieser Wert von der verknüpften NetConnection-Instanz festgelegt wird.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Objektkodierung (AMF-Version) für dieses gemeinsame Objekt. Wenn ein lokales gemeinsames Objekt auf Festplatte geschrieben wird, gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> an, welche AMF-Version verwendet werden soll: ActionScript 3.0 (AMF3) oder ActionScript 1.0 oder 2.0 (AMF0). 
     
     <p class="- topic/p ">Die Objektkodierung wird unterschiedlich gehandhabt, je nachdem, ob es sich um ein lokales gemeinsames Objekt oder um ein gemeinsames Remote-Objekt handelt.</p>
     <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Lokale gemeinsame Objekte</b>: Sie können den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> für lokale gemeinsame Objekte abrufen oder einstellen. Mit dem Wert für <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> wird festgelegt, welche Formatierung zum <i class="+ topic/ph hi-d/i ">Schreiben</i> dieses lokalen gemeinsamen Objekts verwendet wird. Wenn das Objekt von SWF-Dateien gelesen werden muss, die mit ActionScript 2.0 oder 1.0 geschrieben wurden, setzen Sie <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>. Auch wenn die Objektkodierung so eingestellt ist, dass im Format AMF3 geschrieben wird, kann Flash Player lokale gemeinsame Objekte im Format AMF0 lesen. Das heißt, wenn Sie den Standardwert für diese Eigenschaft verwenden (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>), kann Ihre SWF-Datei trotzdem gemeinsame Objekte lesen, die mit ActionScript 2.0- oder 1.0-SWF-Dateien erstellt wurden.
     </li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Gemeinsame Remote-Objekte</b>: Bei einer Verbindung mit dem Server übernimmt ein gemeinsames Remote-Objekt seine <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Einstellung von der verknüpften NetConnection-Instanz (die zum Verbinden des gemeinsamen Remote-Objekts verwendete Instanz). Ohne Serververbindung übernimmt das gemeinsame Remote-Objekt die <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph>-Einstellung von der verknüpften NetConnection-Instanz. Da bei gemeinsamen Remote-Objekten der Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> durch die NetConnection-Instanz bestimmt wird, ist diese Eigenschaft für gemeinsame Remote-Objekte schreibgeschützt.
     </li></ul>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/defaultObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">defaultObjectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:size:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">size</apiName><shortdesc class="- topic/shortdesc ">
     Ruft die aktuelle Größe des gemeinsamen Objekts in Byte ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.getSize, getSize
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft die aktuelle Größe des gemeinsamen Objekts in Byte ab.
     
     <p class="- topic/p ">Um die Größe eines gemeinsamen Objekts zu berechnen, analysiert Flash die einzelnen Dateneigenschaften des Objekts. Je mehr Dateneigenschaften ein Objekt aufweist, desto länger dauert es, die Größe zu ermitteln. Das Schätzen der Objektgröße kann sehr viel Verarbeitungszeit beanspruchen. Deshalb sollten Sie diese Methode vermeiden, sofern sie nicht wirklich erforderlich ist.</p>
     
     </apiDesc><example conref="examples\SharedObject.size.1.as" class="- topic/example "> Mit dem folgenden Code wird ein SharedObject-Objekt mit der ID <codeph class="+ topic/ph pr-d/codeph ">"thehobbit"</codeph> erstellt. Eine Eigenschaft mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">username</codeph> wird der Eigenschaft „data“ des SharedObject-Objekts hinzugefügt. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">size</codeph> gibt dann den angegebenen Wert zurück.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

import flash.net.SharedObject;

// if these get copied or not
var mySo:SharedObject = SharedObject.getLocal("thehobbit");
mySo.data.username = "bilbobaggins";
trace(mySo.size); // 55
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:SharedObject:fps:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fps</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, wie oft pro Sekunde die clientseitigen Änderungen an einem gemeinsamen Objekt an den Server gesendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: The info is relevant for Flash Media Server, but not Flex.
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="write" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, wie oft pro Sekunde die clientseitigen Änderungen an einem gemeinsamen Objekt an den Server gesendet werden. 
     
     <p class="- topic/p ">Verwenden Sie diese Methode, wenn Sie den Umfang des Datenverkehrs zwischen Client und Server steuern möchten. Beispiel: Wenn die Verbindungsgeschwindigkeit zwischen Client und Server ziemlich langsam ist, empfiehlt es sich, <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> auf einen relativ niedrigen Wert zu setzen. Wenn der Client jedoch mit einer Multiuser-Anwendung verbunden ist und es auf die zeitliche Koordinierung ankommt, sollten Sie <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> auf einen relativ hohen Wert setzen.</p>
     
     <p class="- topic/p ">Durch Festlegen von <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> wird ein <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignis ausgelöst und alle Änderungen werden beim Server aktualisiert. Wenn Sie den Server ausschließlich manuell aktualisieren möchten, müssen Sie <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> auf 0 setzen.</p>
     
     <p class="- topic/p ">Erst nach Auslösung des Ereignisses <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>, werden die Änderungen an den Server gesendet. Das heißt, bei einer langsamen Reaktionszeit des Servers werden Aktualisierungen möglicherweise weniger häufig an den Server gesendet als in dieser Eigenschaft angegeben. </p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupInfo</apiName><shortdesc class="- topic/shortdesc ">
Die NetGroupInfo-Klasse gibt verschiedene QoS-Statistiken (Quality of Service, Dienstgüte) an, die mit dem zugrundeliegenden RTMFP-Peer-to-Peer-Datentransport eines NetGroup-Objekts zusammenhängen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NetGroupInfo-Klasse gibt verschiedene QoS-Statistiken (Quality of Service, Dienstgüte) an, die mit dem zugrundeliegenden RTMFP-Peer-to-Peer-Datentransport eines NetGroup-Objekts zusammenhängen. Die <codeph class="+ topic/ph pr-d/codeph ">NetGroup.info</codeph>-Eigenschaft gibt ein NetGroupInfo-Objekt zurück, das eine Momentaufnahme des aktuellen QoS-Status repräsentiert.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/info" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.info</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links><apiOperation id="flash.net:NetGroupInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     Gibt einen String zurück, der die Werte der Eigenschaften des NetGroupInfo-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der die Werte der Eigenschaften des NetGroupInfo-Objekts enthält.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt einen Textwert zurück, der die Eigenschaften dieses NetGroupInfo-Objekts enthält.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt einen String zurück, der die Werte der Eigenschaften des NetGroupInfo-Objekts enthält.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetGroupInfo:objectReplicationReceiveBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationReceiveBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der lokale Knoten über das Objektreplikationssystem Objekte von Peers empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der der lokale Knoten über das Objektreplikationssystem Objekte von Peers empfängt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:objectReplicationSendBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationSendBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der Objekte über das Objektreplikationssystem vom lokalen Knoten an Peers kopiert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt die Rate in Byte pro Sekunde fest, mit der Objekte über das Objektreplikationssystem vom lokalen Knoten an Peers kopiert werden.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingReceiveControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingReceiveControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Meldungen zur Postingsteuerungsauslastung von Peers empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Meldungen zur Postingsteuerungsauslastung von Peers empfängt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingReceiveDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingReceiveDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Postingdaten von Peers empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Postingdaten von Peers empfängt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingSendControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingSendControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Meldungen zur Postingsteuerungsauslastung an Peers sendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Meldungen zur Postingsteuerungsauslastung an Peers sendet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingSendDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingSendDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Postingdaten an Peers sendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Postingdaten an Peers sendet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:routingReceiveBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingReceiveBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Directed Routing-Meldungen von Peers empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Directed Routing-Meldungen von Peers empfängt.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:routingSendBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingSendBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Directed Routing-Meldungen an Peers sendet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt in Byte pro Sekunde die Rate an, mit der der lokale Knoten Directed Routing-Meldungen an Peers sendet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLLoaderDataFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLLoaderDataFormat</apiName><shortdesc class="- topic/shortdesc ">
 Mit der URLLoaderDataFormat-Klasse wird angegeben, wie heruntergeladene Daten empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Mit der URLLoaderDataFormat-Klasse wird angegeben, wie heruntergeladene Daten empfangen werden.
 
 </apiDesc><example conref="examples\URLLoaderDataFormatExample.as" class="- topic/example "> Im folgenden Beispiel wird die URLLoaderDataFormatExample-Klasse verwendet, um Datenformat und Statusinformationen einer zur Laufzeit geladenen Datei anzuzeigen. Dies wird in den folgenden Schritten erreicht:
 <ol class="- topic/ol "><li class="- topic/li ">Der Klassenkonstruktor erstellt eine URLLoader-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> und eine URLRequest-Instanz mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, wobei es sich um den Standort und den Namen der zu ladenden Datei handelt.</li><li class="- topic/li ">Das Objekt <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> wird an die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> übergeben, die für jedes unterstützte URLLoader-Ereignis Listener hinzufügt.
  <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph>: Listener für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, das nach dem erfolgreichen Laden der Datei „TextFile.txt“ ausgelöst wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">openHandler()</codeph>: Listener für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, das beim Start des Downloads der Datei „TextFile.txt“ (in den Player) ausgelöst wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph>: Listener für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>, das beim Empfang von Daten während des Download-Vorgangs ausgelöst wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph>: Listener für <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignisse, die ausgelöst werden, wenn mit der falschen Sicherheitseinstellung für die lokale Wiedergabe auf die Textdatei zugegriffen wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler()</codeph>: Listener für <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph>-Ereignisse, die in diesem Fall nicht ausgelöst werden, da es sich bei „TextFile.txt“ um eine lokale Datei handelt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph>: Listener für <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignisse, die nur bei schwerwiegenden Fehlern ausgelöst werden, beispielsweise wenn die Datei nicht vorhanden ist.</li></ul></li><li class="- topic/li ">Dann wird das Objekt <codeph class="+ topic/ph pr-d/codeph ">request</codeph> an die Methode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph> übergeben, die die Textdatei mit einem <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>-Objekt in den Speicher lädt.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweise:</b>
 <ul class="- topic/ul "><li class="- topic/li ">Für die Kompilierung der SWF-Datei müssen Sie die Option „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf lokale Dateien zugreifen“ einstellen.
  </li><li class="- topic/li ">Zur Ausführung dieses Beispiels müssen Sie eine Datei mit dem Namen „TextFile.txt“ in dem Verzeichnis ablegen, in dem sich die SWF-Datei befindet. Wenn Sie möchten, dass in diesem Beispiel Binär- oder URL-kodierte Datendateien ermittelt werden, müssen Sie die Datei im entsprechenden Datenformat bereitstellen und „TextFile.txt“ in den Namen und den Speicherort der neuen Datei ändern.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLLoaderDataFormatExample extends Sprite {
        private var source:String = "TextFile.txt";
        private var dataFormat:String = URLLoaderDataFormat.TEXT;
        
        public function URLLoaderDataFormatExample () {
            var loader:URLLoader = new URLLoader();
            loader.dataFormat = dataFormat;
            configureListeners(loader);
            var request:URLRequest = new URLRequest(source);
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Error loading requested document: " + source);
            }
        }

        private function configureListeners(dispatcher:URLLoader):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            switch(loader.dataFormat) {
                case URLLoaderDataFormat.TEXT :
                    trace("completeHandler (text): " + loader.data);
                    break;
                case URLLoaderDataFormat.BINARY :
                    trace("completeHandler (binary): " + loader.data);
                    break;
                case URLLoaderDataFormat.VARIABLES :
                    trace("completeHandler (variables): " + loader.data);
                    break;
            }
        }

        private function httpStatusHandler(event:Event):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiValue id="flash.net:URLLoaderDataFormat:BINARY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BINARY</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass heruntergeladene Daten als unformatierte Binärdaten empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">binary</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass heruntergeladene Daten als unformatierte Binärdaten empfangen werden.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoaderDataFormat:TEXT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass heruntergeladene Daten als Text empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass heruntergeladene Daten als Text empfangen werden.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoaderDataFormat:VARIABLES" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VARIABLES</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, dass heruntergeladene Daten als URL-kodierte Variablen empfangen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">variables</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, dass heruntergeladene Daten als URL-kodierte Variablen empfangen werden.
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamPlayTransitions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayTransitions</apiName><shortdesc class="- topic/shortdesc ">
 
 Die NetStreamPlayTransitions-Klasse legt die gültigen Strings fest, die mit der NetStreamPlayOptions.transition-Eigenschaft verwendet werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 Die NetStreamPlayTransitions-Klasse legt die gültigen Strings fest, die mit der <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.transition</codeph>-Eigenschaft verwendet werden können. Diese Strings steuern das Verhalten, das je nach dem verwendeten Übergangsmodus für den Übergang zu einem neuen Stream oder zur Wiedergabe eines Streams benutzt wird.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links><apiValue id="flash.net:NetStreamPlayTransitions:APPEND_AND_WAIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPEND_AND_WAIT</apiName><shortdesc class="- topic/shortdesc ">
     
    Erstellt eine Wiedergabeliste, ohne mit der Wiedergabe zu beginnen, aus dem ersten Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">appendAndWait</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Erstellt eine Wiedergabeliste, ohne mit der Wiedergabe zu beginnen, aus dem ersten Stream. 
    
    <p class="- topic/p ">Der Übergangsmodus <codeph class="+ topic/ph pr-d/codeph ">APPEND_AND_WAIT</codeph> wird mit der <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Methode verwendet, um eine Wiedergabeliste zu erstellen, ohne sofort mit dem Abspielen des ersten Streams zu beginnen. Verwenden Sie diesen Modus, um jedes Element in der Wiedergabeliste bis auf das letzte zu laden. Wenn Sie den letzten Stream in der Wiedergabeliste laden, stellen Sie den Übergangsmodus auf <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph> ein. An diesem Punkt beginnt Flash Payer mit dem Streaming und Abspielen der Wiedergabeliste.</p>
    
    <p class="- topic/p ">Sie können diesen Modus verwenden, um eine neue Wiedergabeliste zu erstellen oder um eine Wiedergabeliste erneut zu erstellen, nachdem eine verloren gegangene Verbindung wiederhergestellt wurde. Bei einer neuen Wiedergabeliste, wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> mit <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph> aufgerufen wird, beginnt Flash Player mit dem Streaming und Abspielen ab dem ersten Stream oder von der angegebenen Startposition. Wenn Sie bei der Wiederherstellung nach einer unterbrochenen Verbindung die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Methode mit <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph> aufrufen, ermittelt Flash Player, wo der Stream unterbrochen wurde und weist den Server an, ab diesem Punkt mit dem Streaming zu starten. Der Server seinerseits kann ermitteln, welcher Stream in der Wiedergabeliste diesem Punkt entspricht und beginnt mit den Streaming ab diesem Punkt.</p>
    
    <p class="- topic/p ">Dieser Übergangsmodus unterscheidet sich vom <codeph class="+ topic/ph pr-d/codeph ">APPEND</codeph>.Modus, bei dem die Wiedergabe sofort mit dem ersten Stream beginnt.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND" class="- topic/link "><linktext class="- topic/linktext ">APPEND</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions/RESUME" class="- topic/link "><linktext class="- topic/linktext ">RESUME</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:APPEND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPEND</apiName><shortdesc class="- topic/shortdesc ">
     
    Fügt den Stream einer Wiedergabeliste hinzu und beginnt die Wiedergabe mit dem ersten Stream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">append</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Fügt den Stream einer Wiedergabeliste hinzu und beginnt die Wiedergabe mit dem ersten Stream. Dieser Modus tut das Gleiche wie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, wenn der <codeph class="+ topic/ph pr-d/codeph ">reset</codeph>-Merker auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist.
    
    <p class="- topic/p ">In diesem Modus setzt Flash Media Server den in <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> angegebenen Stream am Ende der Wiedergabeliste nach oben in die Liste und ignoriert den <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph>-Parameter.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND_AND_WAIT" class="- topic/link "><linktext class="- topic/linktext ">APPEND_AND_WAIT</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:RESET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET</apiName><shortdesc class="- topic/shortdesc ">
    
    Löscht alle vorherigen Abspielaufrufe und spielt den festgelegten Stream sofort ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">reset</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
    Löscht alle vorherigen Abspielaufrufe und spielt den festgelegten Stream sofort ab. Dieser Modus tut das Gleiche wie die <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>-Methode, wenn der <codeph class="+ topic/ph pr-d/codeph ">reset</codeph>-Merker auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> (das Standardverhalten für <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>) gesetzt ist.
    
    <p class="- topic/p ">In diesem Modus wird der momentan wiedergegebene Stream gelöscht und der in <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> wird wiedergegeben. Der <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph>-Parameter wird ignoriert.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:RESUME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESUME</apiName><shortdesc class="- topic/shortdesc ">
     
    Fordert Daten von der neuen Verbindung ab dem Punkt, bei dem die vorherige Verbindung beendet wurde, an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resume</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Fordert Daten von der neuen Verbindung ab dem Punkt, bei dem die vorherige Verbindung beendet wurde, an. Der <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph>-Modus gleicht den Stream über die beiden Verbindung ab, so dass keine Störungen oder Sprünge in der Videowiedergabe zu bemerken sind. Verwenden Sie diesen Modus, wenn Sie die Verbindung zu einem Stream erneut herstellen, der aufgrund von Server- oder anderen Verbindungsproblemen unterbrochen wurde.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND_AND_WAIT" class="- topic/link "><linktext class="- topic/linktext ">APPEND_AND_WAIT</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:STOP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STOP</apiName><shortdesc class="- topic/shortdesc ">
     
    Stoppt das Abspielen von Streams in einer Wiedergabeliste.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Stoppt das Abspielen von Streams in einer Wiedergabeliste. Dieser Modus hat den gleichen Effekt, als wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.play(false)</codeph> aufgerufen würde. Er stoppt die Wiedergabeliste und setzt sie zurück.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:SWAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SWAP</apiName><shortdesc class="- topic/shortdesc ">
    Ersetzt einen Inhalts-Stream durch einen anderen Inhalts-Stream und behält den Rest der Wiedergabeliste bei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">swap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Ersetzt einen Inhalts-Stream durch einen anderen Inhalts-Stream und behält den Rest der Wiedergabeliste bei.
    
    <p class="- topic/p ">Dieser Modus ersetzt den in <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph> angegebenen Stream durch den in <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> angegebenen Stream. Der Rest der Wiedergabeliste wird beibehalten. In diesem Modus trifft Flash Media Server keine Annahmen über den Inhalt der Streams und behandelt sie wie verschiedene Inhalte. </p>
    
    <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> noch nicht gesendet wurde, führt der Server den Wechsel an der Stream-Grenze durch und sendet die Bits für <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> vom Anfang. Wenn der Server bereits damit begonnen hat, die Bits für <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> zu senden, wechselt er nicht zu <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> und es wird ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph>-Ereignis abgesetzt.</p>
    
    <p class="- topic/p ">Verwenden Sie diesen Modus, wenn die Streams, die Sie wechseln möchten, nicht zueinander gehören und verschiedene Inhalte oder Längen haben. Verwenden Sie diesen Modus zum Beispiel, wenn Sie eine Werbeeinblendung durch eine andere ersetzen möchten, weil Sie die Navigation des Benutzers verfolgen und Statistiken zu vergangenen Werbeanzeigen berücksichtigen. </p>
    
    <p class="- topic/p ">Um von einem Stream zu einem anderen mit demselben Inhalt zu wechseln, verwenden Sie stattdessen den <codeph class="+ topic/ph pr-d/codeph ">SWITCH</codeph>-Modus.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/SWITCH" class="- topic/link "><linktext class="- topic/linktext ">SWITCH</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:SWITCH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SWITCH</apiName><shortdesc class="- topic/shortdesc ">
    Wechselt von der Wiedergabe eines Streams zur Wiedergabe eines anderen Streams. Dies gilt normalerweise für Streams mit gleichem Inhalt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">switch</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wechselt von der Wiedergabe eines Streams zur Wiedergabe eines anderen Streams. Dies gilt normalerweise für Streams mit gleichem Inhalt. Geben Sie die Streams, die gewechselt werden sollen, in <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> an. 
    
    <p class="- topic/p ">Verwenden Sie diesen Modus, wenn Sie zu einem Stream wechseln möchten, der den gleichen Inhalt hat, aber mit einer anderen Bitrate oder Auflösung kodiert ist. Verwenden Sie diesen Modus beispielsweise, wenn die Anwendung Streams in die Warteschlange einer Wiedergabeliste setzt oder einen einzelnen Stream mit einer bestimmten Bitrate wiedergibt und dann berechnet, dass die Bandbreitenverfügbarkeit oder die CPU-Kapazität entweder geringer oder höher als die Stream-Anforderungen ist. Die Anwendung kann dann die Streams mit ihrer höheren oder niedrigeren Bitratenversion aktualisieren.</p>
    
    <p class="- topic/p ">In diesem Modus trifft Flash Media Server bestimmte Annahmen über die Beziehung zwischen dem <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph>- und dem <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>-Stream. Der Server nimmt an, dass die Streams den gleichen Inhalt enthalten und das gleiche Keyframeintervall, aber verschiedene Auflösungen oder Bitraten haben.</p>
    
    <p class="- topic/p ">Wenn Streams in die Warteschlange einer Wiedergabeliste gesetzt wurden und <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> einer der Streams in der Wiedergabeliste ist oder gerade abgespielt wird, wird <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph>durch <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> ersetzt.</p>
    
    <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> null oder undefiniert ist oder nicht in der Wiedergabeliste gefunden wird, wechselt der Server am nächsten logischen Punkt (um einen glatten Übergang zu gewährleisten) zu <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>.</p>
    
    <p class="- topic/p ">Um von einem Stream zu einem anderen mit anderem Inhalt zu wechseln, verwenden Sie stattdessen den <codeph class="+ topic/ph pr-d/codeph ">SWAP</codeph>-Modus.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/SWAP" class="- topic/link "><linktext class="- topic/linktext ">SWAP</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetConnection</apiName><shortdesc class="- topic/shortdesc ">
 Die NetConnection-Klasse erstellt eine bidirektionale Verbindung zwischen einem Client und einem Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetConnection, Video
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NetConnection-Klasse erstellt eine bidirektionale Verbindung zwischen einem Client und einem Server. Der Client kann <ph class="- topic/ph ">eine Flash Player- oder AIR-</ph>Anwendung sein. Der Server kann ein Webserver, Flash Media Server, ein Anwendungsserver mit Flash Remoting oder der Dienst <xref href="http://labs.adobe.com/technologies/stratus/" scope="external" class="- topic/xref ">Adobe Stratus</xref> sein. Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> auf, um die Verbindung herzustellen. Verwenden Sie die NetStream-Klasse, um Streams von Medien und Daten über die Verbindung zu senden.
 
 <p class="- topic/p ">Die Sicherheit betreffende Informationen zum Laden von Inhalten und Daten in Flash Player und AIR finden Sie hier:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Um Inhalte und Daten von einem Webserver oder einem lokalen Speicherort in Flash Player zu laden, lesen Sie <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Flash Player Developer Center: Security</xref>.</li><li class="- topic/li ">Um Inhalte und Daten von Flash Media Server in Flash Player und AIR zu laden, lesen Sie die <xref href="http://www.adobe.com/support/flashmediaserver" scope="external" class="- topic/xref ">Flash Media Server-Dokumentation</xref>.</li><li class="- topic/li ">Um Inhalte und Daten in AIR zu laden, besuchen Sie das <xref href="http://www.adobe.com/devnet/air/" scope="external" class="- topic/xref ">Adobe AIR Developer Center</xref>.</li></ul>
 
 <p class="- topic/p ">
 Zum Schreiben von Callback-Methoden für diese Klasse erweitern Sie die Klasse und die Callback-Methoden in der Unterklasse oder weisen Sie die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft einem Objekt zu und definieren Sie die Callback-Methoden in diesem Objekt.</p>
 
 </apiDesc><example conref="examples\NetConnectionExample.as" class="- topic/example "> Im folgenden Beispiel wird ein Video-Objekt mit den Klassen NetConnection und NetStream verwendet, um eine FLV-Datei zu laden und abzuspielen. 
 <p class="- topic/p ">In diesem Fall wird der Code zur Erstellung des Video- und NetStream-Objekts und zum Aufrufen der Methoden <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> in eine Prozedurfunktion eingefügt. Die Prozedur wird nur aufgerufen, wenn die Verbindung mit dem NetConnection-Objekt erfolgreich hergestellt werden kann, d. h. wenn das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> ein <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekt mit einer <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft zurückgibt, die Erfolg angibt. Es wird empfohlen, die erfolgreiche Verbindungsherstellung abzuwarten, bevor Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aufrufen. </p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.NetStatusEvent;
    import flash.events.SecurityErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import flash.events.Event;

    public class NetConnectionExample extends Sprite {
        private var videoURL:String = "http://www.helpexamples.com/flash/video/cuepoints.flv";
        private var connection:NetConnection;
        private var stream:NetStream;
        private var video:Video = new Video();        

        public function NetConnectionExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Stream not found: " + videoURL);
                    break;
            }
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.client = new CustomClient();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }
    }
}

class CustomClient {
    public function onMetaData(info:Object):void {
        trace("metadata: duration=" + info.duration + " width=" + info.width + " height=" + info.height + " framerate=" + info.framerate);
    }
    public function onCuePoint(info:Object):void {
        trace("cuepoint: time=" + info.time + " name=" + info.name + " type=" + info.type);
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#Responder" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Responder</linktext></link></related-links><adobeApiEvent id="flash.net:NetConnection_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung eines NetConnection-Objekts protokolliert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn der Status oder die Fehlerbedingung eines NetConnection-Objekts protokolliert wird. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> enthält die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. Dabei handelt es sich um ein Informationsobjekt mit spezifischen Informationen über das Ereignis, z. B., ob ein Verbindungsversuch erfolgreich war oder fehlgeschlagen ist.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn mit einem Aufruf von „NetConnection.call()“ versucht wird, eine Verbindung mit einem Server außerhalb der Sicherheitssandbox des Aufrufers herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn mit einem Aufruf von „NetConnection.call()“ versucht wird, eine Verbindung mit einem Server außerhalb der Sicherheitssandbox des Aufrufers herzustellen.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/call()" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.call()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Netzwerkvorgang fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird beim Auftreten eines I/O-Fehlers ausgelöst, durch den ein Netzwerkvorgang fehlschlägt.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron, d. h. aus nativem asynchronem Code ausgelöst wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Wird ausgelöst, wenn eine Ausnahme asynchron ausgelöst wird – das heißt, aus nativem asynchronem Code.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:NetConnection:NetConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetConnection</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein NetConnection-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>See the example for <code>connect()</code>.
     
     </oldexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein NetConnection-Objekt. Rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode auf, um eine Verbindung herzustellen.
     
     <p class="- topic/p ">Wenn die Kommunikation einer Anwendung mit älteren Serverversionen als Flash Player 9 erforderlich ist, stellen Sie die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft des NetConnection-Objekts ein.</p>
     
     <p class="- topic/p ">Mit dem folgenden Code wird ein NetConnection-Objekt erstellt:</p>
     
     <pre xml:space="preserve" class="- topic/pre ">
     var nc:NetConnection = new NetConnection();
     </pre>
     
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connect()</linktext></link><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">objectEncoding</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetConnection:addHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addHeader</apiName><shortdesc class="- topic/shortdesc ">
     Fügt der Action Message Format (AMF)-Paketstruktur eine Kontextkopfzeile hinzu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>IMD: This method can be used in the client Flash Player for Flash Remoting
     and Flex apps. It is also a server side method used by Flash Media Server apps.
     
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">operation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Identifiziert den Header und die damit verknüpften ActionScript-Objektdaten.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mustUnderstand</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gibt an, dass der Server diesen Header vor der Verarbeitung der darauf folgenden Header oder Meldungen erkennen und verarbeiten muss.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein beliebiges ActionScript-Objekt.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fügt der Action Message Format (AMF)-Paketstruktur eine Kontextkopfzeile hinzu. Dieser Header wird mit allen weiteren AMF-Paketen gesendet. Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addHeader()</codeph>-Methode mit demselben Namen aufrufen, wird der vorhandene Header durch den neuen Header ersetzt, der für die Dauer des NetConnection-Objekts erhalten bleibt. Sie können einen Header entfernen, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addHeader()</codeph>-Methode mit dem Namen des Headers aufrufen.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetConnection:call" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">call</apiName><shortdesc class="- topic/shortdesc ">
     Ruft auf Flash Media Server oder auf einem Anwendungsserver, auf dem Flash Remoting ausgeführt wird, einen Befehl oder eine Methode auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine in der Form <codeph class="+ topic/ph pr-d/codeph ">[objectPath/]method</codeph> angegebene Methode. Beispiel: Der Befehl <codeph class="+ topic/ph pr-d/codeph ">someObject/doSomething</codeph> fordert den Remote-Server auf, die Methode <codeph class="+ topic/ph pr-d/codeph ">clientObject.someObject.doSomething()</codeph> mit allen optionalen <codeph class="+ topic/ph pr-d/codeph ">... arguments</codeph>-Parametern aufzurufen. Wenn der Objektpfad fehlt, wird die <codeph class="+ topic/ph pr-d/codeph ">clientObject.doSomething()</codeph>-Methode auf dem Remote-Server aufgerufen.
     <p class="- topic/p ">
     Mit Flash Media Server ist <codeph class="+ topic/ph pr-d/codeph ">command</codeph> der Name einer Funktion, die im serverseitigen Skript einer Anwendung definiert ist. Sie brauchen vor <codeph class="+ topic/ph pr-d/codeph ">command</codeph> keinen Objektpfad zu verwenden, wenn sich das serverseitige Skript im Stammverzeichnis der Anwendung befindet.
     </p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">responder</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Responder</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein optionales Objekt, das zur Verarbeitung der vom Server zurückgegebenen Werte verwendet wird. Für das Responder-Objekt können zwei Methoden zur Verarbeitung der zurückgegebenen Ergebnisse definiert werden: <codeph class="+ topic/ph pr-d/codeph ">result</codeph> und <codeph class="+ topic/ph pr-d/codeph ">status</codeph>. Bei Rückgabe eines Fehlers wird <codeph class="+ topic/ph pr-d/codeph ">status</codeph> aufgerufen, andernfalls <codeph class="+ topic/ph pr-d/codeph ">result</codeph>. Das Responder-Objekt verarbeitet Fehlermeldungen, die sich auf bestimmte Operationen beziehen, wohingegen das NetConnection-Objekt auf Fehlermeldungen reagiert, die sich auf den Verbindungsstatus beziehen.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Optionale Argumente, die einen beliebigen ActionScript-Typ aufweisen können, einschließlich eines Verweises auf ein anderes ActionScript-Objekt. Diese Argumente werden an die im Parameter <codeph class="+ topic/ph pr-d/codeph ">command</codeph> angegebene Methode übergeben, wenn die Methode auf dem Remote-Anwendungsserver ausgeführt wird.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ruft auf Flash Media Server oder auf einem Anwendungsserver, auf dem Flash Remoting ausgeführt wird, einen Befehl oder eine Methode auf. Bevor Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> aufrufen, müssen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> aufrufen, um die Verbindung zum Server herzustellen. Sie müssen eine serverseitige Funktion erstellen, die an diese Methode übergeben wird.
     
     <p class="- topic/p ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Responder" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Responder</linktext></link></related-links><adobeApiEvent id="flash.net:NetConnection:call_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mit einem Aufruf wurde versucht, mit einem Server außerhalb der Sicherheitssandbox des Aufrufers zu kommunizieren. Sie können dieses Problem umgehen, indem Sie eine Richtliniendatei auf dem entsprechenden Server verwenden.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Mit einem Aufruf wurde versucht, mit einem Server außerhalb der Sicherheitssandbox des Aufrufers zu kommunizieren.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:NetConnection:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Schließt die lokal oder zum Server geöffnete Verbindung und löst ein netStatus-Ereignis mit der code-Eigenschaft „NetConnection.Connect.Closed“ aus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: Documented this method with server-specific info in span tags. The
     info is relevant for Flex servers, as well as Flash Media Server.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Schließt die lokal oder zum Server geöffnete Verbindung und löst ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis mit der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Closed</codeph> aus.
     
     <p class="- topic/p ">
     Mit dieser Methode werden alle NetStream-Objekte, die über die Verbindung ausgeführt werden, getrennt. Alle Daten in der Warteschlange, die noch nicht gesendet wurden, werden verworfen. (Um lokale oder serverbasierte Streams zu beenden, ohne die Verbindung zu schließen, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">NetStream.close()</codeph>.) Wenn Sie die Verbindung schließen und dann eine neue erstellen möchten, müssen Sie ein neues NetConnection-Objekt erstellen und dann erneut die <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>-Methode aufrufen.
     </p>
     
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Methode trennt außerdem alle gemeinsamen Remote-Objekte, die diese Verbindung verwenden. Zur erneuten Verbindungsherstellung müssen Sie das gemeinsame Objekt jedoch nicht neu erstellen. Rufen Sie stattdessen die <codeph class="+ topic/ph pr-d/codeph ">SharedObject.connect()</codeph>-Methode auf, um die Verbindung mit dem gemeinsamen Objekt wiederherzustellen. Nach der Wiederherstellung der Verbindung mit dem gemeinsamen Objekt werden außerdem alle Daten, die sich beim Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetConnection.close()</codeph> in der Warteschlange befanden, gesendet.</p>
     
     <p class="- topic/p ">
     Mit Flash Media Server ist es beim Entwickeln am besten, <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> aufzurufen, wenn der Client die Verbindung zum Server nicht mehr benötigt. Das Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> ist die schnellste Möglichkeit, nicht verwendete Verbindungen zu schließen. Sie können die Server als Backup-Maßnahme so konfigurieren, dass nicht verwendete Verbindungen geschlossen werden. Weitere Informationen finden Sie im <i class="+ topic/ph hi-d/i "><xref href="http://www.adobe.com/support/documentation" scope="external" class="- topic/xref ">Flash Media Server Configuration and Administration Guide</xref></i>.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetConnection:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt eine bidirektionale Verbindung mit einer Anwendung auf Flash Media Server oder mit Flash Remoting, oder erstellt einen bidirektionalen Netzwerkendpunkt für die RTMFP-Peer-to-Peer-Gruppenkommunikation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetConnection.connect, connect
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der an den Parameter <codeph class="+ topic/ph pr-d/codeph ">command</codeph> übergebene URI hat ein ungültiges Format.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Verbindung ist fehlgeschlagen. Dieser Fall kann eintreten, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> über eine <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignisprozedur aufrufen, was nicht zulässig ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Über lokale SWF-Dateien im Dateisystem kann keine Verbindung mit dem Internet hergestellt werden. Sie können dieses Problem vermeiden, indem Sie die entsprechende Datei als lokal mit Netzwerkzugang oder als vertrauenswürdig klassifizieren.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Verwenden Sie einen der folgenden Werte für den <codeph class="+ topic/ph pr-d/codeph ">command</codeph>-Parameter:
     <ul class="- topic/ul "><li class="- topic/li ">Um Video- und MP3-Dateien aus einem lokalen Dateisystem oder von einem Webserver abzuspielen, übergeben Sie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</li><li class="- topic/li ">Um eine Verbindung zu einem Anwendungsserver mit Flash Remoting herzustellen, übergeben Sie eine URL, die das <codeph class="+ topic/ph pr-d/codeph ">http</codeph>-Protokoll verwendet.</li><li class="- topic/li ">(Flash Player 10.1 oder AIR 2 oder höher) Um einen serverlosen Netzwerkendpunkt für RTMFP IP-Multicast-Kommunikation zu erstellen, übergeben Sie den String <codeph class="+ topic/ph pr-d/codeph ">"rtmfp:"</codeph>. Verwenden Sie diesen Verbindungstyp, um einen IP-Multicast-Stream von einem Herausgeber zu empfangen, ohne einen Server zu verwenden. Mit diesem Verbindungstyp können Sie auch IP-Multicast verwenden, um Peers im selben LAN (Local Area Network) zu finden.</li><p class="- topic/p ">Für diesen Verbindungstyp gelten die folgenden Einschränkungen: </p><p class="- topic/p ">Nur Peers im selben LAN können einander erkennen.</p><p class="- topic/p ">Mit IP-Multicast kann Flash Player Streams empfangen, aber nicht senden.</p><p class="- topic/p ">Flash Player und AIR können Streams in einer Peer-to-Peer-Gruppe senden und empfangen, die Peers müssen jedoch mit IP-Multicast in demselben LAN erkannt werden.</p><p class="- topic/p ">Dieses Verfahren kann nicht für die Eins-zu-Eins-Kommunikation verwendet werden.</p><p class="- topic/p "/><li class="- topic/li ">Um eine Verbindung zu Flash Media Server herzustellen, übergeben Sie den URI der Anwendung auf dem Server. Verwenden Sie die folgende Syntax (Elemente in eckigen Klammern sind optional):
     
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">protocol:[//host][:port]/appname[/instanceName]</codeph></p>
     
     <p class="- topic/p ">Verwenden Sie eines der folgenden Protokolle: <codeph class="+ topic/ph pr-d/codeph ">rtmp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpe</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmps</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpt</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpte</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">rtmfp</codeph>. Wenn die Verbindung erfolgreich hergestellt wurde, wird ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis mit der <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Success</codeph> zurückgegeben. Im Abschnitt über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph> finden Sie eine Liste aller Ereigniscodes, die als Antwort auf den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> zurückgegeben werden. </p>
     
     <p class="- topic/p ">Wird die Datei von demselben Host bereitgestellt, auf dem der Server installiert ist, können Sie den <codeph class="+ topic/ph pr-d/codeph ">//host</codeph>-Parameter auslassen. Wenn Sie den <codeph class="+ topic/ph pr-d/codeph ">/instanceName</codeph>-Parameter auslassen, stellt <ph class="- topic/ph ">Flash Player oder </ph>AIR eine Verbindung zu der Standardinstanz der Anwendung her.</p>
     
     <p class="- topic/p ">(Flash Player 10.1 oder AIR 2 oder höher) Um Peer-to-Peer-Anwendungen zu erstellen, verwenden Sie das <codeph class="+ topic/ph pr-d/codeph ">rtmfp</codeph>-Protokoll.</p>
     
     </li></ul>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Optionale Parameter beliebigen Typs, die an die in <codeph class="+ topic/ph pr-d/codeph ">command</codeph> angegebene Anwendung übergeben werden. Mit Flash Media Server werden die zusätzlichen Argumente an die Ereignisprozedur <codeph class="+ topic/ph pr-d/codeph ">application.onConnect()</codeph> im serverseitigen Programmcode der Anwendung übergeben. Sie müssen die Argumente in <codeph class="+ topic/ph pr-d/codeph ">onConnect()</codeph> definieren und verarbeiten.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt eine bidirektionale Verbindung mit einer Anwendung auf Flash Media Server oder mit Flash Remoting, oder erstellt einen bidirektionalen Netzwerkendpunkt für die RTMFP-Peer-to-Peer-Gruppenkommunikation. Um den Status oder eine Fehlerbedingung zu melden, setzt ein Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis ab.
     
     <p class="- topic/p ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> auf, um Folgendes auszuführen:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Übergeben Sie "null", um Video- und MP3-Dateien aus einem lokalen Dateisystem oder von einem Webserver abzuspielen.</li><li class="- topic/li ">Übergeben Sie eine http-URL, um eine Verbindung zu einem Anwendungsserver, auf dem Flash Remoting ausgeführt wird, herzustellen. Mit der NetServices-Klasse rufen Sie über ein NetConnection-Objekt Funktionen auf und Ergebnisse von Anwendungsservern auf. Weitere Informationen finden Sie in der <xref href="http://www.adobe.com/support/documentation" scope="external" class="- topic/xref ">Flash Remoting-Dokumentation</xref>. </li><li class="- topic/li ">Übergeben Sie eine "rtmp/e/s"-URL, um eine Verbindung zu einer Flash Media Server-Anwendung herzustellen.</li><li class="- topic/li ">Übergeben Sie eine "rtmfp"-URL, um einen bidirektionalen Netzwerkendpunkt für RTMFP-Client-Server-, Peer-to-Peer- und IP-Multicast-Kommunikation zu erstellen.</li><li class="- topic/li ">Übergeben Sie den String "rtmfp:", um einen serverlosen bidirektionalen Netzwerkendpunkt für die RTMFP IP-Multicast-Kommunikation zu erstellen.</li></ul>
     
     <p class="- topic/p ">Ziehen Sie das folgende Sicherheitsmodell in Betracht:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Standardmäßig lässt <ph class="- topic/ph ">Flash Player oder </ph>AIR Sandbox-übergreifende Zugriffe nicht zu. Eine Website kann den Zugriff auf eine Ressource gewähren, indem eine URL-Richtliniendatei verwendet wird. </li><li class="- topic/li ">Ihre Anwendung kann den Zugriff auf eine Ressource auf dem Server verhindern. Verwenden Sie in einer Flash Media Server-Anwendung serverseitigen ActionScript-Code, um den Zugriff zu verhindern. Lesen Sie dazu die <xref href="http://www.adobe.com/go/learn_fms_docs_en" scope="external" class="- topic/xref ">Flash Media Server-Dokumentation</xref>.</li><li class="- topic/li ">Sie können <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> nicht aufrufen, wenn sich die aufrufende Datei in der lokalen Sandbox des Dateisystems befindet.</li><li class="- topic/li "> Eine Verbindung mit normalerweise reservierten Ports ist nicht möglich. Eine vollständige Liste der gesperrten Ports finden Sie unter „Beschränken von Netzwerk-APIs“ im <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Entwicklerhandbuch</i>.</li><li class="- topic/li ">Um zu verhindern, dass eine SWF-Datei diese Methode aufruft, legen Sie in der HTML-Seite, die den SWF-Inhalt enthält, den Parameter <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> der Tags <codeph class="+ topic/ph pr-d/codeph ">object</codeph> und <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> fest.</li></ul>
     
     <p class="- topic/p ">In Adobe AIR unterliegt Inhalt in der Sicherheitssandbox <codeph class="+ topic/ph pr-d/codeph ">der Anwendung</codeph> (Inhalt, der mit der AIR-Anwendung installiert wird) nicht diesen Sicherheitseinschränkungen.</p>
     
     <p class="- topic/p ">Weitere Informationen zum Thema Sicherheit finden Sie im Adobe Flash Player Developer Center: <xref href="http://www.adobe.com/go/devnet_security_en" scope="external" class="- topic/xref ">Security</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetConnection:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft muss auf ein Objekt eingestellt werden, das nicht null ist.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt das Objekt an, bei dem Callback-Methoden aufgerufen werden. Standardeinstellung ist diese NetConnection-Instanz. Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">client</codeph>-Eigenschaft auf ein anderes Objekt einstellen, werden die Callback-Methoden bei dem eingestellten Objekt aufgerufen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:connectedProxyType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connectedProxyType</apiName><shortdesc class="- topic/shortdesc ">
     Der Proxytyp, der verwendet wird, um eine erfolgreiche Verbindung zu Flash Media Server herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This property is used in Breeze 5.5.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde versucht, ohne Verbindung der NetConnection-Instanz auf diese Eigenschaft zuzugreifen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Proxytyp, der verwendet wird, um eine erfolgreiche Verbindung zu Flash Media Server herzustellen. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTPS"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph>.
     
     <p class="- topic/p ">Der Wert ist <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>, wenn die Verbindung nicht getunnelt ist oder es sich um eine native SSL-Verbindung handelt.</p>
     
     <p class="- topic/p ">Der Wert ist <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph>, wenn die Verbindung über HTTP getunnelt wird.</p>
     
     <p class="- topic/p ">Der Wert ist <codeph class="+ topic/ph pr-d/codeph ">"HTTPS"</codeph>, wenn die Verbindung über HTTPS getunnelt wird.</p>
     
     <p class="- topic/p ">Der Wert ist <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph>, wenn die Verbindung mithilfe der CONNECT-Methode über einen Proxyserver getunnelt wird.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob die Anwendung über eine permanente RTMP-Verbindung mit einem Server verbunden ist (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob die Anwendung über eine permanente RTMP-Verbindung mit einem Server verbunden ist (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Bei einer Verbindung mit HTTP hat diese Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, es sei denn, die Verbindung besteht zu Flash Remoting-Diensten auf einem Anwendungsserver, in welchem Fall der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ist.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:defaultObjectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">defaultObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Die Standard-Objektkodierung für NetConnection-Objekte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Standard-Objektkodierung für NetConnection-Objekte. Wenn ein Objekt in Binärdaten geschrieben oder aus Binärdaten gelesen wird, gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> an, welche Action Message Format (AMF)-Version für die Serialisierung der Daten verwendet wird: ActionScript 3.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>) oder ActionScript 1.0 und ActionScript 2.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>).
     
     <p class="- topic/p ">Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>. Eine Änderung der Einstellung für <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph> wirkt sich nicht auf bereits vorhandene NetConnection-Instanzen, sondern nur auf nach der Änderung erstellte Instanzen aus.</p>
     
     <p class="- topic/p ">Um die Objektkodierungen separat einzustellen (anstatt einer Objektkodierung für die gesamte Anwendung), verwenden Sie hingegen die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> des NetConnection-Objekts.</p>
     
     <p class="- topic/p ">Nähere Informationen finden Sie in der Beschreibung der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.objectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:farID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farID</apiName><shortdesc class="- topic/shortdesc ">
     Der Bezeichner der Flash Media Server-Instanz, mit dem diese Flash Player- oder Adobe AIR-Instanz verbunden ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Bezeichner der Flash Media Server-Instanz, mit dem diese Flash Player- oder Adobe AIR-Instanz verbunden ist. Diese Eigenschaft ist nur für RTMFP-Verbindungen von Bedeutung. Der Wert dieser Eigenschaft ist nur verfügbar, nachdem eine RTMFP-Verbindung hergestellt wurde.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">nearID</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:farNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farNonce</apiName><shortdesc class="- topic/shortdesc ">
     Ein Wert, der vom Flash Media Server ausgewählt wird und für diese Verbindung eindeutig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Wert, der vom Flash Media Server ausgewählt wird und für diese Verbindung eindeutig ist. Dieser Wert erscheint für den Server als <codeph class="+ topic/ph pr-d/codeph ">client.nearNonce</codeph>-Wert. Dieser Wert wird nur für RTMFP-, RTMPE- und RTMPTE-Verbindungen definiert.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:httpIdleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">httpIdleTimeout</apiName><shortdesc class="- topic/shortdesc "> 
        Die Zeit in Millisekunden, die auf eine HTTP-Antwort gewartet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die Zeit in Millisekunden, die auf eine HTTP-Antwort gewartet wird.
        </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        Die Zeit in Millisekunden, die auf eine HTTP-Antwort gewartet wird. Der Standardwert ist 0.
	
	<ul class="- topic/ul "><li class="- topic/li ">Der <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph>-Wert ist vom Typ <codeph class="+ topic/ph pr-d/codeph ">Number</codeph>.</li><li class="- topic/li ">Bei Verwendung einer HTTP-Verbindung zeigt ein positiver Wert die Anzahl der Millisekunden an, für die eine inaktive Verbindung geöffnet bleiben soll.</li><li class="- topic/li ">Der Wert 0 zeigt an, dass der Netzwerkstandardwert für die Zeitüberschreitung für die Plattform verwendet werden soll.</li><li class="- topic/li ">Ein negativer Wert führt zu einem <codeph class="+ topic/ph pr-d/codeph ">RangeError</codeph>.</li><li class="- topic/li ">Beim Überschreiten des <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph>-Werts wird ein <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis abgesetzt.</li><li class="- topic/li ">Dieses Eigenschaft betrifft nur <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph>-Objekte, die mit HTTP-Verbindungen erstellt wurden. Auf <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph>-Objekte, die mit RTMP, RTMFP oder anderen HTTP-Kanälen erstellt wurden, hat diese Eigenschaft keine Auswirkungen.</li></ul>
	<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	//Set the timeout to 5 seconds
	connection = new NetConnection();
	connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
	connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
	connection.httpIdleTimeout = 5000;
	</codeblock>
	
	Auf Linux-basierten Systemen benötigt <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> möglicherweise mehr Sekunden als mit dem <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph>-Wert angegeben, bis die Zeitüberschreitung wirksam wird.
	
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:maxPeerConnections:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPeerConnections</apiName><shortdesc class="- topic/shortdesc ">
     Die Anzahl der eingehenden und ausgehenden Peer-Verbindungen, die diese Instanz von Flash Player oder Adobe AIR zulässt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Anzahl der eingehenden und ausgehenden Peer-Verbindungen, die diese Instanz von Flash Player oder Adobe AIR zulässt. Der Standardwert ist 8.
     <p class="- topic/p ">Dieser Wert unterscheidet nicht zwischen Herausgeber- und Abonnenten-Verbindungen. Wenn dieser Wert verringert wird, während Peer-Verbindungen vorhanden sind, wirkt sich der neue Wert nur auf neu eingehende Verbindungen aus. Bestehende Verbindungen werden nicht fallen gelassen.</p>
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:nearID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearID</apiName><shortdesc class="- topic/shortdesc ">
     Die ID dieser Flash Player- oder Adobe AIR-Instanz für diese NetConnection-Instanz.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die ID dieser Flash Player- oder Adobe AIR-Instanz für diese NetConnection-Instanz. Diese Eigenschaft ist nur für RTMFP-Verbindungen von Bedeutung.
     
     <p class="- topic/p ">Jede NetConnection-Instanz hat eine eindeutige <codeph class="+ topic/ph pr-d/codeph ">nearID</codeph>-Eigenschaft. Keine Flash Player-, Adobe AIR- oder NetConnection-Instanz hat die gleiche ID.</p>
     
     <p class="- topic/p ">Andere Flash Player- oder Adobe AIR-Instanzen verwenden diese ID als <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> für neue NetStream-Verbindungen für diesen Client. Somit ist diese ID die <codeph class="+ topic/ph pr-d/codeph ">farID</codeph> für alle Peer-NetStreams, die eine Verbindung zu dieser Instanz herstellen.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/farID" class="- topic/link "><linktext class="- topic/linktext ">farID</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:nearNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearNonce</apiName><shortdesc class="- topic/shortdesc ">
     Ein Wert, der von dieser Flash Player- oder Adobe AIR-Instanz ausgewählt wird und für diese Verbindung eindeutig ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Wert, der von dieser Flash Player- oder Adobe AIR-Instanz ausgewählt wird und für diese Verbindung eindeutig ist. Dieser Wert erscheint für den Server als <codeph class="+ topic/ph pr-d/codeph ">client.farNonce</codeph>-Wert. Dieser Wert wird nur für RTMFP-, RTMPE- und RTMPTE-Verbindungen definiert.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Die Objektkodierung für diese NetConnection-Instanz.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde versucht, bei bereits hergestellter Verbindung der NetConnection-Instanz den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> einzustellen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Für diese Eigenschaft wurde ein anderer Wert als <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph> eingestellt.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Objektkodierung für diese NetConnection-Instanz.
     
     <p class="- topic/p ">
     Wenn ein Objekt in Binärdaten geschrieben oder aus Binärdaten gelesen wird, gibt die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> an, welche Action Message Format (AMF)-Version für die Serialisierung der Daten verwendet wird: ActionScript 3.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>) oder ActionScript 1.0 und ActionScript 2.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>). Stellen Sie die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft ein, um eine AMF-Version für eine NetConnection-Instanz festzulegen.
     </p>
     
     <p class="- topic/p ">Es ist wichtig, die Funktionsweise dieser Eigenschaft zu verstehen, wenn die Kommunikation der Anwendung mit Servern erforderlich ist, die eine ältere Version als Flash Player 9 aufweisen. Die folgenden drei Szenarios sind möglich:
     </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Verbindung mit einem Server, der AMF3 unterstützt (zum Beispiel Flex Data Services 2 oder Flash Media Server 3). Der Standardwert für <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> ist <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>. Alle in dieser Datei erstellten NetConnection-Instanzen verwenden die AMF3-Serialisierung, deshalb brauchen Sie die <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>-Eigenschaft nicht festzulegen.</li><li class="- topic/li ">Verbindung mit einem Server, der AMF nicht unterstützt (zum Beispiel Flash Media Server 2). Setzen Sie in diesem Fall die statische Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>. Für alle in dieser SWF-Datei erstellten NetConnection-Instanzen wird die AMF0-Serialisierung verwendet. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> muss nicht gesetzt werden. </li><li class="- topic/li ">Herstellung einer Verbindung zu mehreren Servern mit verschiedenen Kodierungsversionen. Anstatt <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> zu verwenden, legen Sie die Objektkodierung pro Verbindung fest, indem Sie die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> für jede einzelne Verbindung verwenden. Setzen Sie die Eigenschaft für die Verbindung mit Servern, die AMF0-Kodierung verwenden (z. B. Flash Media Server 2), auf <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>, und für die Verbindung mit Servern, die AMF3-Kodierung verwenden (z. B. Flex Data Services 2), auf <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>.</li></ul>
     
     <p class="- topic/p ">Sobald die Verbindung für eine NetConnection-Instanz hergestellt ist, kann die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> nicht mehr geändert werden.</p>
     
     <p class="- topic/p ">Wenn Sie die falsche Kodierung für die Herstellung einer Serververbindung verwenden, löst das NetConnection-Objekt das <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis. Die <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph>-Eigenschaft enthält ein Informationsobjekt mit dem <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaftswert <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Failed</codeph> und einer Beschreibung, die angibt, dass die Objektkodierung ungültig ist.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/defaultObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">defaultObjectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:protocol:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">protocol</apiName><shortdesc class="- topic/shortdesc ">
     Das Protokoll, das zur Herstellung der Verbindung verwendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde versucht, ohne Verbindung der NetConnection-Instanz auf diese Eigenschaft zuzugreifen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Das Protokoll, das zur Herstellung der Verbindung verwendet wird. Diese Eigenschaft ist relevant, wenn Flash Media Server verwendet wird. Mögliche Werte sind wie folgt:
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmp"</codeph>: Real-Time Messaging Protocol (RTMP)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpe"</codeph>: Verschlüsseltes RTMP</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpt"</codeph>: RTMP über HTTP-Tunnel</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpte"</codeph>: Verschlüsseltes RTMP über HTTP-Tunnel</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmps"</codeph>: HTTPS-basiertes RTMP</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmfp"</codeph>: Real-Time Media Flow Protocol (RTMFP)</li></ul>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:proxyType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">proxyType</apiName><shortdesc class="- topic/shortdesc ">
     Legt fest, welche Fallback-Methoden zum Einsatz kommen, wenn der erste Verbindungsversuch mit Flash Media Server fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This property is used in Breeze 5.5. In the Breeze Add-in, the default value is <code>"best"</code>; if this value
     is not changed, native SSL sockets are used by default, and a fallback
     to other methods is used if necessary.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Legt fest, welche Fallback-Methoden zum Einsatz kommen, wenn der erste Verbindungsversuch mit Flash Media Server fehlschlägt. Legen Sie einen Wert für die <codeph class="+ topic/ph pr-d/codeph ">proxyType</codeph>-Eigenschaft fest, bevor Sie die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>-Methode aufrufen.
     
     <p class="- topic/p ">Mögliche Werte sind <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph> und <codeph class="+ topic/ph pr-d/codeph ">"best"</codeph>. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>.</p>
     
     <p class="- topic/p ">Um natives SSL zu verwenden, setzen Sie die Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">"best"</codeph>. Wenn der Player keine direkte Verbindung zum Server herstellen kann (über den Standardport 443 oder über einen anderen Port, den Sie angeben) und ein Proxyserver vorhanden ist, versucht der Player, die CONNECT-Methode zu verwenden. Wenn dieser Versuch fehlschlägt, tunnelt der Player über HTTPS. 
     </p>
     
     <p class="- topic/p ">Wenn für die Eigenschaft der Wert <codeph class="+ topic/ph pr-d/codeph ">„HTTP“</codeph> eingestellt ist und eine direkte Verbindung fehlschlägt, wird HTTP-Tunneling verwendet. Wenn für die Eigenschaft der Wert <codeph class="+ topic/ph pr-d/codeph ">„CONNECT“</codeph> eingestellt ist und eine direkte Verbindung fehlschlägt, wird die Tunneling-Methode <codeph class="+ topic/ph pr-d/codeph ">CONNECT</codeph> verwendet. Wenn diese Methode ebenfalls fehlschlägt, erfolgt kein Fallback auf HTTP-Tunneling.</p>
     
     <p class="- topic/p ">Diese Eigenschaft ist nur bei Verwendung von RTMP, RTMPS oder RTMPT anwendbar. Die <codeph class="+ topic/ph pr-d/codeph ">CONNECT</codeph>-Methode kann nur bei Benutzern angewendet werden, die über einen Proxyserver mit dem Netzwerk verbunden sind.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:unconnectedPeerStreams:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">unconnectedPeerStreams</apiName><shortdesc class="- topic/shortdesc ">
     
     Ein Objekt, das alle Peer-Subscriber-NetStream-Objekte enthält, die nicht mit Publishing-NetStream-Objekten verknüpft sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Ein Objekt, das alle Peer-Subscriber-NetStream-Objekte enthält, die nicht mit veröffentlichenden NetStream-Objekten verknüpft sind. NetStream-Abonnentenobjekte, die mit veröffentlichenden NetStream-Objekten verknüpft sind, sind im <codeph class="+ topic/ph pr-d/codeph ">NetStream.peerStreams</codeph>-Array.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/peerStreams" class="- topic/link "><linktext class="- topic/linktext ">NetStream.peerStreams</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:uri:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">uri</apiName><shortdesc class="- topic/shortdesc ">
     Der an die NetConnection.connect()-Methode übergebene URI.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: Documented this method with server-specific info in span tags. The
     info is relevant for Flex servers, as well as Flash Media Server.
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der an die NetConnection.connect()-Methode übergebene URI. Wenn die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>-Methode nicht aufgerufen oder kein URI übergeben wurde, weist diese Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph> auf.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:usingTLS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">usingTLS</apiName><shortdesc class="- topic/shortdesc ">
     Gibt an, ob eine sichere Verbindung über TLS (Transport Layer Security) statt HTTPS hergestellt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es wurde versucht, ohne Verbindung der NetConnection-Instanz auf diese Eigenschaft zuzugreifen.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Gibt an, ob eine sichere Verbindung über TLS (Transport Layer Security) statt HTTPS hergestellt wurde. Diese Eigenschaft ist nur gültig, wenn eine Verbindung mit einem NetConnection-Objekt besteht.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>