<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.desktop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.desktop</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.desktop:NativeProcess" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcess</apiName><shortdesc class="- topic/shortdesc ">
 Die NativeProcess-Klasse bietet Befehlszeilenintegration und allgemeine Startfähigkeiten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NativeProcess-Klasse bietet Befehlszeilenintegration und allgemeine Startfähigkeiten. Mithilfe der NativeProcess-Klasse kann eine AIR-Anwendung native Prozesse auf dem Host-Betriebssystem ausführen. Die AIR-Anwendung kann die Standardeingabestreams (stdin) und die Standardausgabestreams (stdout) des Prozesses sowie den Standardfehlerstream (stderr) des Prozesses überwachen.
 
 <p class="- topic/p ">Die NativeProcess-Klasse und ihre Fähigkeiten stehen nur AIR-Anwendungen zur Verfügung, die mit einem nativen Installationsprogramm installiert wurden (Anwendungen mit dem Profil „erweiterter Desktop“). Beim Debugging können Sie das <codeph class="+ topic/ph pr-d/codeph ">-profile extendedDesktop</codeph>-Argument an ADL übergeben, um die NativeProcess-Funktionalität zu aktivieren. Zur Laufzeit können Sie die <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>-Eigenschaft überprüfen, um festzustellen, ob die native Prozesskommunikation unterstützt wird. </p>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird von Anwendungen unterstützt, die über native Installer unter Desktopbetriebssystemen bereitgestellt werden. Die Funktion wird nicht auf mobilen Geräten oder Geräten mit AIR für TV unterstützt. Mit der <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
 <p class="- topic/p ">AIR-Anwendungen, die mit einem nativen Installationsprogramm installiert wurden (Anwendungen mit dem Profil „erweiterter Desktop“) können eine Anwendung auch mit <codeph class="+ topic/ph pr-d/codeph ">File.openWithDefaultApplication</codeph> öffnen. Die NativeProcess-Klasse ermöglicht jedoch den direkten Zugriff auf die Standardeingabe-, Standardausgabe und Standardfehler-Pipes.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b>AIR-für-TV-Anwendungen, die das <codeph class="+ topic/ph pr-d/codeph ">extendedTV</codeph>-Profil verwenden, können native ActionScript-Erweiterungen verwenden, um native Prozesse auszuführen.</p> 
 
 </apiDesc><example conref="examples\NativeProcessExample.as" class="- topic/example "> Im folgenden Beispiel wird überprüft, ob die native Prozesskommunikation auf dem Computer unterstützt wird. Ist dies der Fall, richtet die Anwendung Ereignis-Listener für den nativen Prozess ein und startet die Datei „test.py“ im Hauptanwendungsverzeichnis. :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.desktop.NativeProcess;
    import flash.desktop.NativeProcessStartupInfo;
    import flash.events.Event;
    import flash.events.ProgressEvent;
    import flash.events.IOErrorEvent;
    import flash.events.NativeProcessExitEvent;
    import flash.filesystem.File;
    
    public class NativeProcessExample extends Sprite
    {
        public var process:NativeProcess;

        public function NativeProcessExample()
        {
            if(NativeProcess.isSupported)
            {
                setupAndLaunch();
            }
            else
            {
                trace("NativeProcess not supported.");
            }
        }
        
        public function setupAndLaunch():void
        {     
            var nativeProcessStartupInfo:NativeProcessStartupInfo = new NativeProcessStartupInfo();
            var file:File = File.applicationDirectory.resolvePath("test.py");
            nativeProcessStartupInfo.executable = file;

            var processArgs:Vector.&lt;String> = new Vector.&lt;String>();
            processArgs[0] = "foo";
            nativeProcessStartupInfo.arguments = processArgs;

            process = new NativeProcess();
            process.start(nativeProcessStartupInfo);
            process.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA, onOutputData);
            process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onErrorData);
            process.addEventListener(NativeProcessExitEvent.EXIT, onExit);
            process.addEventListener(IOErrorEvent.STANDARD_OUTPUT_IO_ERROR, onIOError);
            process.addEventListener(IOErrorEvent.STANDARD_ERROR_IO_ERROR, onIOError);
        }

        public function onOutputData(event:ProgressEvent):void
        {
            trace("Got: ", process.standardOutput.readUTFBytes(process.standardOutput.bytesAvailable)); 
        }
        
        public function onErrorData(event:ProgressEvent):void
        {
            trace("ERROR -", process.standardError.readUTFBytes(process.standardError.bytesAvailable)); 
        }
        
        public function onExit(event:NativeProcessExitEvent):void
        {
            trace("Process exited with ", event.exitCode);
        }
        
        public function onIOError(event:IOErrorEvent):void
        {
             trace(event.toString());
        }
    }
}
</codeblock> Fügen Sie das folgende Python-Skript zur Datei „test.py“ in Ihrem Anwendungsverzeichnis hinzu (und stellen Sie sicher, dass Python installiert ist):
 
 <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph "> #!/usr/bin/python
 # ------------------------------------------------------------------------------
 # Sample Python script
 # ------------------------------------------------------------------------------
 
 import sys
 
 for word in sys.argv: #echo the command line arguments
     print word
 
 print "HI FROM PYTHON"
 print "Enter user name" 
 line = sys.stdin.readline()
 
 sys.stdout.write("hello," + line)</codeph></pre>
</example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExtensionContext" class="- topic/link "><linktext class="- topic/linktext ">flash.external.ExtensionContext</linktext></link></related-links><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.NativeProcessExitEvent_exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass der native Prozess beendet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NativeProcessExitEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NativeProcessExitEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass der native Prozess beendet wurde. Die <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph>-Eigenschaft enthält den Wert, den der Prozess beim Beenden an das Host-Betriebssystem zurückgibt. Wenn die AIR-Anwendung den Prozess durch einen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph>-Methode des NativeProcess-Objekts beendet, wird die <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph>-Eigenschaft auf NaN (not a number, keine Zahl) gesetzt.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardInputIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputIoError</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass nicht in den Standardeingabestream (stdin) geschrieben werden konnte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass nicht in den Standardeingabestream (stdin) geschrieben werden konnte. Das NativeProcess-Objekt setzt dieses Ereignis ab, wenn die <codeph class="+ topic/ph pr-d/codeph ">closeInput()</codeph>-Methode fehlschlägt oder wenn die Laufzeitumgebung keine Daten in die Standardeingabe-Pipe des nativen Prozesses schreiben kann.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardOutputIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputIoError</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass nicht vom stdout-Stream gelesen werden konnte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass nicht vom stdout-Stream gelesen werden konnte. Das NativeProcess-Objekt kann dieses Ereignis absetzen, wenn die Laufzeitumgebung keine Daten aus der Standardausgabepipe des nativen Prozesses lesen kann.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.IOErrorEvent_standardErrorIoError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorIoError</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, das nicht vom Standardfehlerstream (stderror) gelesen werden konnte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, das nicht vom Standardfehlerstream (stderror) gelesen werden konnte. Das NativeProcess-Objekt kann dieses Ereignis absetzen, wenn die Laufzeitumgebung keine Daten aus der Standardfehlergabepipe des nativen Prozesses lesen kann.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardInputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputClose</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass das NativeProcess-Objekt seinen Eingabestream durch einen Aufruf der closeInput()-Methode geschlossen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass das NativeProcess-Objekt seinen Eingabestream durch einen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">closeInput()</codeph>-Methode geschlossen hat. Das NativeProcess-Objekt setzt dieses Ereignis nicht ab, wenn der native Prozess selbst den Eingabestream schließt. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardInputProgress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputProgress</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass NativeProcess Daten für den untergeordneten Prozess geschrieben hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass NativeProcess Daten für den untergeordneten Prozess geschrieben hat. Das NativeProcess-Objekt setzt dieses Ereignis ab, wenn Daten in den Stream geschrieben werden. Dieses Ereignis gibt <i class="+ topic/ph hi-d/i ">nicht</i> an, ob der untergeordnete Prozess Daten gelesen hat oder nicht.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardErrorClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorClose</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass NativeProcess seinen Fehlerstream geschlossen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass NativeProcess seinen Fehlerstream geschlossen hat. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardErrorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardErrorData</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass der native Prozess Daten zur Verfügung hat, die vom Standardfehlerstream (stderror) gelesen werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass der native Prozess Daten zur Verfügung hat, die vom Standardfehlerstream (stderror) gelesen werden können. Das NativeProcess-Objekt setzt dieses Ereignis ab, wenn der untergeordnete Prozess seinen Standardfehlerstream löscht oder wenn der interne Puffer für die Kommunikation zwischen Prozessen voll ist. Schreiben Sie keinen Code, der von der Größe dieses internen Puffers abhängig ist; sie variiert je nach Version und Betriebssystem.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.Event_standardOutputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputClose</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass NativeProcess seinen Ausgabestream geschlossen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass NativeProcess seinen Ausgabestream geschlossen hat. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess_flash.events.ProgressEvent_standardOutputData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutputData</apiName><shortdesc class="- topic/shortdesc ">
 Gibt an, dass der native Prozess Daten zur Verfügung hat, die vom Ausgabestream gelesen werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Gibt an, dass der native Prozess Daten zur Verfügung hat, die vom Ausgabestream gelesen werden können. Das NativeProcess-Objekt setzt dieses Ereignis ab, wenn der untergeordnete Prozess seinen stdout-Stream löscht oder wenn der interne Puffer für die Kommunikation zwischen Prozessen voll ist. Schreiben Sie keinen Code, der von der Größe dieses internen Puffers abhängig ist; sie variiert je nach Version und Betriebssystem.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.desktop:NativeProcess:NativeProcess" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcess</apiName><shortdesc class="- topic/shortdesc ">
	Konstruiert ein nicht initialisiertes NativeProcess-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Konstruiert ein nicht initialisiertes NativeProcess-Objekt. Rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode auf, um den Prozess zu starten.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/start()" class="- topic/link "><linktext class="- topic/linktext ">start()</linktext></link></related-links></apiConstructor><apiOperation id="flash.desktop:NativeProcess:closeInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">closeInput</apiName><shortdesc class="- topic/shortdesc ">
	Schließt den Eingabestream für diesen Prozess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Schließt den Eingabestream für diesen Prozess. Einige Befehlzeilenanwendungen warten, bis der Eingabestream geschlossen ist, bevor bestimmte Vorgänge gestartet werden. Nachdem der Stream geschlossen wurde, kann er erst dann wieder geöffnet werden, wenn der Prozess beendet und erneut gestartet wurde. 
	
	</apiDesc></apiOperationDetail><adobeApiEvent id="flash.desktop:NativeProcess:closeInput_ioErrorStandardInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioErrorStandardInput</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Es gibt ein Problem beim Schließen des Eingabestreams für den Prozess.
	
	</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Es gibt ein Problem beim Schließen des Eingabestreams für den Prozess.
	
	</shortdesc></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeProcess:closeInput_standardInputClose" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">standardInputClose</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Eingabestream wurde geschlossen. 
	
	</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Der Eingabestream wurde geschlossen.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.desktop:NativeProcess:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
	Versucht den nativen Prozess zu beenden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">force</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ob die Anwendung versuchen soll, das Beenden des nativen Prozesses ggf. zu erzwingen.
	
	<p class="- topic/p ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">force</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, versucht diese Methode, den nativen Prozess ohne Fehler zu beenden. Diese Methode „bittet“ den nativen Prozess, sich zu schließen. Diese Anforderung kann vom nativen Prozess ignoriert werden, weshalb diese Methode keine Garantie darstellt, dass der native Prozess tatsächlich beendet wird. Das NativeProcess-Objekt setzt nur dann ein <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph>-Ereignis ab, wenn der native Prozess beendet wird. </p>
	
	<p class="- topic/p ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">force</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, versucht diese Methode, das Beenden des nativen Prozesses zu erzwingen. Der Aufruf dieser Methode, wenn der <codeph class="+ topic/ph pr-d/codeph ">force</codeph>-Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> hat, sollte nur als letzter Ausweg verwendet werden. Der Aufruf dieser Methode, während der <codeph class="+ topic/ph pr-d/codeph ">force</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, kann sich nachteilig auf den Zustand der Systemressourcen, die mit dem nativen Prozess verknüpft sind, auswirken. Geöffnete Dateien weisen zum Beispiel unter Umständen einen inkonsistenten Zustand auf. Die Laufzeitumgebung versucht, das Beenden des nativen Prozesses zu erzwingen. Es kann jedoch nicht garantiert werden, dass der native Prozess tatsächlich beendet wird. Das NativeProcess-Objekt setzt nur dann ein <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph>-Ereignis ab, wenn der native Prozess beendet wird.</p>  
	
	<p class="- topic/p ">Falls NativeProcess erfolgreich beendet wird, wird ein <codeph class="+ topic/ph pr-d/codeph ">NativeProcessExitEvent</codeph>-Ereignis abgesetzt.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Versucht den nativen Prozess zu beenden.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeProcess:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
	Startet den nativen Prozess, der durch die angegebene Start-Info identifiziert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn NativeProcess zurzeit ausgeführt wird.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn die nativePath-Eigenschaft von NativeProcessStartupInfo nicht vorhanden ist.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn NativeProcess nicht erfolgreich gestartet wurde.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeProcessStartupInfo</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">NativeProcessStartupInfo Definiert Informationen darüber, wie der native Prozess gestartet werden soll. 
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Startet den nativen Prozess, der durch die angegebene Start-Info identifiziert wird. Nachdem der Prozess gestartet wurde, werden alle Eingabe- und Ausgabestreams geöffnet. Diese Methode liefert sofort eine Rückgabe, nachdem die Anforderung, den angegebenen Prozess zu starten, an das Betriebssystem erfolgt ist. Das NativeProcess-Objekt gibt eine <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph>-Ausnahme aus, wenn der Prozess zurzeit ausgeführt wird. Der Prozess wird ausgeführt, wenn die <codeph class="+ topic/ph pr-d/codeph ">running</codeph>-Eigenschaft des NativeProcess-Objekts den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgibt. Wenn das Betriebssystem den Prozess nicht starten kann, wird ein <codeph class="+ topic/ph pr-d/codeph ">Error</codeph> ausgegeben. 
	
	<p class="- topic/p ">
	Eine NativeProcess-Instanz entspricht einem einzelnen Prozess auf dem zugrundeliegenden Betriebssystem. Wenn Sie mehrere Instanzen desselben Betriebssystemprozesses gleichzeitig ausführen möchten, können Sie für jeden untergeordneten Prozess eine NativeProcess-Instanz erstellen.</p>
	
	<p class="- topic/p ">
	Sie können diese Methode aufrufen, wenn die <codeph class="+ topic/ph pr-d/codeph ">running</codeph>-Eigenschaft des NativeProcess-Objekts den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgibt. Dies bedeutet, dass das NativeProcess-Objekt wiederverwendet werden kann. Anders ausgedrückt, Sie können eine NativeProcess-Instanz konstruieren, die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode aufrufen, auf das <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>-Ereignis warten und dann erneut die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode aufrufen. Sie können im nachfolgenden Aufruf der <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode ein anderes NativeProcessStartupInfo-Objekt verwenden als mit dem <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Parameter festgelegt.</p> 
	
	<p class="- topic/p ">Die NativeProcess-Klasse und ihre Fähigkeiten stehen nur AIR-Anwendungen zur Verfügung, die mit einem nativen Installationsprogramm installiert wurden. Beim Debugging können Sie das <codeph class="+ topic/ph pr-d/codeph ">-profile extendedDesktop</codeph>-Argument an ADL übergeben, um die NativeProcess-Funktionalität zu aktivieren. Überprüfen Sie die <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph>-Eigenschaft, um festzustellen, ob die native Prozesskommunikation unterstützt wird.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtige Sicherheitsüberlegungen:</b></p>
	
	<p class="- topic/p ">Die API für native Prozesse kann jede ausführbare Datei auf dem System des Benutzers ausführen. Seien Sie beim Konstruieren und Ausführen von Befehlen äußerst vorsichtig. Wenn ein Teil eines auszuführenden Befehls aus einer externen Quelle stammt, prüfen Sie sorgfältig, ob die Ausführung des Befehls sicher ist. Gleichermaßen sollte Ihre AIR-Anwendung Daten validieren, die an einen laufenden Prozess übergeben werden.</p>
	 
	<p class="- topic/p ">Die Validierung von Eingaben kann jedoch schwierig sein. Um diese Probleme zu vermeiden, schreiben Sie am besten eine native Anwendung (zum Beispiel eine EXE-Datei für Windows) mit spezifischen APIs. Diese APIs sollten nur diejenigen Befehle verarbeiten, die speziell für die AIR-Anwendung erforderlich sind. Zum Beispiel könnte die native Anwendung nur einen begrenzten Satz von Anweisungen über den Standardeingabestream akzeptieren.</p>
	 
	<p class="- topic/p ">AIR unter Windows lässt die direkte Ausführung von .bat-Dateien nicht zu. Windows-.bat-Dateien werden vom Befehlszeileninterpreter (cmd.exe) ausgeführt. Wenn Sie eine .bat-Datei aufrufen, kann diese Befehlsanwendung Argumente, die an den Befehl übergeben werden, als zusätzlich zu startende Anwendungen interpretieren. Durch das böswillige Einfügen von zusätzlichen Zeichen in den Argumentstring könnte cmd.exe eine schädliche oder unsichere Anwendung ausführen. Ohne eine gute Datenvalidierung könnte Ihre Anwendung zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">myBat.bat myArguments c:/evil.exe</codeph> aufrufen. Die Befehlsanwendung würde die Anwendung „evil.exe“ zusätzlich zu Ihrer Batchdatei ausführen.</p>
	
	<p class="- topic/p ">Wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode mit einer .bat-Datei aufrufen, gibt das NativeProcess-Objekt eine Ausnahme aus. Die <codeph class="+ topic/ph pr-d/codeph ">message</codeph>-Eigenschaft des Error-Objekts enthält den String "Fehler #3219: NativeProcess konnte nicht gestartet werden."</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcessStartupInfo" class="- topic/link "><linktext class="- topic/linktext ">NativeProcessStartupInfo</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeProcess:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob laufende native Prozesse im aktuellen Profil unterstützt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob laufende native Prozesse im aktuellen Profil unterstützt werden. Diese Eigenschaft gibt nur dann <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurück, wenn die Ausführung im extendedDesktop-Profil erfolgt. Außerdem ist <codeph class="+ topic/ph pr-d/codeph ">NativeProcess.isSupported</codeph> immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> bei Anwendungen, die als AIR-Datei installiert werden. Sie müssen eine AIR-Anwendung mit dem ADT-Flag <codeph class="+ topic/ph pr-d/codeph ">-target native</codeph> komprimieren, um die NativeProcess-Klasse zu verwenden.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcess:running:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">running</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob dieser native Prozess zurzeit ausgeführt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob dieser native Prozess zurzeit ausgeführt wird. Der Prozess wird ausgeführt, wenn Sie die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode aufgerufen haben und das NativeProcess-Objekt noch kein <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>-Ereignis abgesetzt hat. Eine NativeProcess-Instanz entspricht einem einzelnen Prozess auf dem zugrundeliegenden Betriebssystem. Diese Eigenschaft behält den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, solange der Prozess des zugrundeliegenden Betriebssystems ausgeführt wird (während der native Prozess gestartet wird und bis der Prozess einen Beenden-Code an das Betriebssystem zurückgibt.) 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcess:standardError:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardError</apiName><shortdesc class="- topic/shortdesc ">
	Ermöglicht den Zugriff auf die Standardfehlerausgabe von diesem nativen Prozess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataInput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn keine Daten vorhanden sind und ein Lesevorgang versucht wird.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ermöglicht den Zugriff auf die Standardfehlerausgabe von diesem nativen Prozess. Wenn Daten in dieser Pipe verfügbar werden, setzt das NativeProcess-Objekt ein ProgressEvent-Objekt ab. Wenn Sie versuchen, Daten aus diesem Stream zu lesen, wenn dort keine vorhanden sind, gibt das NativeProcess-Objekt eine EOFError-Ausnahme aus. 
	
	<p class="- topic/p ">Der Typ ist IDataInput, da aus der Perspektive des aktuellen Prozesses Daten eingegeben werden, obwohl es sich um einen Ausgabestream des untergeordneten Prozesses handelt.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link><link href="flash.utils.xml#IDataInput" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.IDataInput</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeProcess:standardInput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardInput</apiName><shortdesc class="- topic/shortdesc ">
	Ermöglicht den Zugriff auf die Standardeingabe dieses nativen Prozesses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataOutput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">beim Schreiben in diesen Wert, wenn <codeph class="+ topic/ph pr-d/codeph ">running</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgibt oder wenn versucht wird, Daten in einen geschlossenen Eingabestream zu schreiben.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ermöglicht den Zugriff auf die Standardeingabe dieses nativen Prozesses. Verwenden Sie diese Pipe, um Daten an diesen Prozess zu senden. Jedes Mal, wenn Daten in die <codeph class="+ topic/ph pr-d/codeph ">input</codeph>-Eigenschaft geschrieben werden, werden diese Daten in die Eingabe-Pipe des nativen Prozesses geschrieben, sobald dies möglich ist.  
	
	<p class="- topic/p ">Der Typ ist IDataOutput, da aus der Perspektive des aktuellen Prozesses Daten ausgegeben werden, obwohl es sich um einen Eingabestream des untergeordneten Prozesses handelt.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/closeInput()" class="- topic/link "><linktext class="- topic/linktext ">closeInput()</linktext></link><link href="flash.utils.xml#IDataOutput" class="- topic/link "><linktext class="- topic/linktext ">IDataOutput</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeProcess:standardOutput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">standardOutput</apiName><shortdesc class="- topic/shortdesc ">
	Ermöglicht den Zugriff auf die Standardausgabe-Pipe dieses nativen Prozesses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:IDataInput</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn keine Daten vorhanden sind und ein Lesevorgang versucht wird.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ermöglicht den Zugriff auf die Standardausgabe-Pipe dieses nativen Prozesses. Verwenden Sie diese Pipe, um Daten aus der Standardausgabe des nativen Prozesses zu lesen. Wenn in dieser Pipe Daten vorhanden sind, setzt das NativeProcess-Objekt ein ProgressEvent ab. Wenn Sie versuchen, Daten aus diesem Stream zu lesen, wenn dort keine vorhanden sind, gibt das NativeProcess-Objekt einen EOFError aus. 
	
	<p class="- topic/p ">Der Typ ist IDataInput, da aus der Perspektive des aktuellen Prozesses Daten eingegeben werden, obwohl es sich um einen Ausgabestream des untergeordneten Prozesses handelt.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#IDataInput" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.IDataInput</linktext></link><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:InteractiveIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InteractiveIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Die InteractiveIcon-Klasse ist die Basisklasse für die Betriebssystemsymbole der Anwendungen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:Icon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die InteractiveIcon-Klasse ist die Basisklasse für die Betriebssystemsymbole der Anwendungen. 
	 
	 <p class="- topic/p ">Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">icon</codeph>-Eigenschaft des NativeApplication-Objekts, um eine Instanz des Anwendungssymbols zu erhalten. Der Symboltyp ist eine der Unterklassen von InteractiveIcon: entweder DockIcon unter Mac OS X<sup class="+ topic/ph hi-d/sup ">®</sup> oder SystemTrayIcon unter Windows<sup class="+ topic/ph hi-d/sup ">®</sup> und Linux.</p>
	 
	 <p class="- topic/p ">Die InteractiveIcon-Klasse lässt sich nicht direkt instanziieren. Aufrufe des <codeph class="+ topic/ph pr-d/codeph ">new InteractiveIcon()</codeph>-Konstruktors führen zu einer ArgumentError-Ausnahme.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsDockIcon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsSystemTrayIcon</linktext></link></related-links><apiValue id="flash.desktop:InteractiveIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc ">
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.
	   
	 <p class="- topic/p ">Wenn ein Symbol in einem bestimmten Betriebssystemkontext angezeigt wird, wird die Bitmap aus dem Array verwendet, die der angezeigten Größe am nächsten kommt. Falls erforderlich, wird die Bitmap skaliert. Gebräuchliche Größen sind 16x16, 32x32, 48x48 und 128x128. (Mit einigen Betriebssystemen können in naher Zukunft Symbole in der Größe 512x512 Pixel verwendet werden.)</p>
	 
	 <p class="- topic/p ">In bestimmten Kontexten verwendet das Betriebssystem möglicherweise ein Standardsymbol, wenn der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft keine Eingabe zugewiesen wurde. In anderen Kontexten wird kein Symbol angezeigt.</p>
	 
	 <p class="- topic/p ">Um das Erscheinungsbild des Symbols festzulegen oder zu ändern, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein Array mit bitmapData-Objekten zu:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Das direkte Ändern des <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array hat keine Auswirkungen.</p>
	 
	 <p class="- topic/p ">Um das Symbolbild zu löschen, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein leeres Array zu.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Hinweis:</b> Beim Laden von Bilddateien für ein Symbol erzielen Sie die beste Alphamischung im Allgemeinen mit dem PNG-Dateiformat. Das GIF-Format unterstützt nur Transparenz oder keine Transparenz (keine Mischmodi). Das JPG-Format unterstützt keine Transparenz.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InteractiveIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc ">
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">height</codeph>-Eigenschaft gibt die Höhe des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigehöhe kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InteractiveIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc ">
		 Die aktuelle Anzeigebreite des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die aktuelle Anzeigebreite des Symbols in Pixel. 
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">width</codeph>-Eigenschaft gibt die Breite des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigebreite kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:InvokeEventReason" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEventReason</apiName><shortdesc class="- topic/shortdesc ">
	 Die InvokeEventReason-Klasse zählt Werte auf, die von der reason-Eigenschaft eines InvokeEvent-Objekts zurückgegeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Definiert Konstanten, die darstellen, auf welche Art eine Anwendung über das Betriebssystem aufgerufen werden kann.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die InvokeEventReason-Klasse zählt Werte auf, die von der <codeph class="+ topic/ph pr-d/codeph ">reason</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent</codeph>-Objekts zurückgegeben werden.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#InvokeEvent/reason" class="- topic/link "><linktext class="- topic/linktext ">flash.events.InvokeEvent.reason</linktext></link></related-links><apiValue id="flash.desktop:InvokeEventReason:LOGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOGIN</apiName><shortdesc class="- topic/shortdesc ">
			Zeigt an, dass das InvokeEvent-Ereignis durch das Anmelden des Benutzers ausgelöst wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">login</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Zeigt an, dass das InvokeEvent-Ereignis durch das Anmelden des Benutzers ausgelöst wurde.
			
			</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:InvokeEventReason:STANDARD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD</apiName><shortdesc class="- topic/shortdesc ">
			Zeigt an, dass das InvokeEvent-Ereignis aus einem anderen Grund als dem Anmelden des Benutzers ausgelöst wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standard</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Zeigt an, dass das InvokeEvent-Ereignis aus einem anderen Grund als dem Anmelden des Benutzers ausgelöst wurde.
			
			</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragActions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragActions</apiName><shortdesc class="- topic/shortdesc ">
Die NativeDragActions-Klasse definiert Stringkonstanten für die Namen der Ziehen-und-Ablegen-Aktionen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die NativeDragActions-Klasse definiert Stringkonstanten für die Namen der Ziehen-und-Ablegen-Aktionen.
 
 <p class="- topic/p ">Die NativeDragActions-Konstanten werden als Werte für die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft der NativeDragManager- und NativeDragEvent-Klasse verwendet.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link></related-links><apiValue id="flash.desktop:NativeDragActions:COPY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COPY</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den String, der für die Kopieren-Aktion verwendet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">copy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den String, der für die Kopieren-Aktion verwendet werden soll.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:LINK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINK</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den String, der für die Verknüpfen-Aktion verwendet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">link</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den String, der für die Verknüpfen-Aktion verwendet werden soll.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVE</apiName><shortdesc class="- topic/shortdesc ">
	 Definiert den String, der für die Verschieben-Aktion verwendet werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">move</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Definiert den String, der für die Verschieben-Aktion verwendet werden soll.
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragActions:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den String, der verwendet wird, wenn keine Aktion angegeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den String, der verwendet wird, wenn keine Aktion angegeben wurde.
	 
	 <p class="- topic/p ">In einem <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis zeigt die Aktion <codeph class="+ topic/ph pr-d/codeph ">none</codeph> an, dass der Ziehen-und-Ablegen-Vorgang vom Benutzer abgebrochen wurde.</p>
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:ClipboardFormats" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ClipboardFormats</apiName><shortdesc class="- topic/shortdesc ">
Die ClipboardFormats-Klasse definiert Konstanten für die Namen der Standarddatenformate, die mit der Clipboard-Klasse verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Clipboard, ClipboardFormats and ClipboardTransferMode were all added to AIR 1.0. These are also being added, with some exceptions listed in this file, to FP10.
</internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die ClipboardFormats-Klasse definiert Konstanten für die Namen der Standarddatenformate, die mit der Clipboard-Klasse verwendet werden. TEXT_FORMAT, RICH_TEXT_FORMAT und HTML_FORMAT wird nur von Flash Player 10 unterstützt.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links><apiValue id="flash.desktop:ClipboardFormats:BITMAP_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BITMAP_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Bilddaten (nur AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:bitmap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Bilddaten (nur AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:FILE_LIST_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FILE_LIST_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Ein Dateiarray (nur AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:file list</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Dateiarray (nur AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:FILE_PROMISE_LIST_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FILE_PROMISE_LIST_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Dateizusageliste (nur AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:file promise list</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Dateizusageliste (nur AIR).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:HTML_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	HTML-Daten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:html</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	HTML-Daten.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:RICH_TEXT_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RICH_TEXT_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Rich Text Format-Daten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:rtf</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Rich Text Format-Daten.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:TEXT_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Stringdaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Stringdaten.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardFormats:URL_FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">URL_FORMAT</apiName><shortdesc class="- topic/shortdesc ">
	Ein URL-String (nur AIR).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not supported in FP10.
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">air:url</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein URL-String (nur AIR).
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeApplication</apiName><shortdesc class="- topic/shortdesc ">
	 Die NativeApplication-Klasse stellt diese AIR-Anwendung dar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die NativeApplication-Klasse stellt diese AIR-Anwendung dar.
	 
	 <p class="- topic/p ">
	 Die NativeApplication-Klasse bietet Informationen zur Anwendung sowie anwendungsumfassende Funktionen und löst Ereignisse auf Anwendungsebene aus.
	 </p>
	 <p class="- topic/p ">
	 Das NativeApplication-Objekt ist ein Singleton-Objekt, das beim Programmstart automatisch erstellt wird. Sie rufen die NativeApplication-Instanz einer Anwendung mit der statischen Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph> ab.
	 </p>
	 
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_UP_keyUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyUp</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn der Benutzer eine Taste loslässt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.KeyboardEvent.KEY_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn der Benutzer eine Taste loslässt. Die NativeApplication-Instanz stellt dieses Ereignis bereit, um Tasturkurzbefehle zu unterstützen. Dieses Tastaturereignis wird zuerst an die NativeApplication abgesetzt. Das Abbrechen dieses Ereignisses hat keine Auswirkungen auf andere Objekte (zum Beispiel NativeWindow-Menükurzbefehle). Dieses Ereignis tritt nach einem <codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph>-Ereignis auf.
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.KeyboardEvent.KEY_DOWN_keyDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyDown</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn der Benutzer eine Taste drückt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.KeyboardEvent.KEY_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn der Benutzer eine Taste drückt. Die NativeApplication-Instanz stellt dieses Ereignis bereit, um Tasturkurzbefehle zu unterstützen. Dieses Tastaturereignis wird zuerst an die NativeApplication abgesetzt. Beim Abbrechen dieses Ereignisses werden auch NativeWindow-Menükurzbefehle abgebrochen. Dieses Ereignis tritt vor dem <codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph>-Ereignis ein.
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.USER_PRESENT_userPresent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userPresent</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn das Betriebssystem nach einer Inaktivitätsphase Maus- oder Tastaturaktivität erkennt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.USER_PRESENT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn das Betriebssystem nach einer Inaktivitätsphase Maus- oder Tastaturaktivität erkennt.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis wird auf mobilen Geräten oder auf Geräten mit AIR für TV nicht abgesetzt.</p>
	 
	 <p class="- topic/p ">Wie lang die Inaktivitätsphase dazu sein muss, kann mit der <codeph class="+ topic/ph pr-d/codeph ">idleThreshold</codeph>-Eigenschaft festgelegt werden. Die bisherige Dauer der Inaktivitätsphase kann anhand der <codeph class="+ topic/ph pr-d/codeph ">timeSinceLastUserInput</codeph>-Eigenschaft festgestellt werden.</p>
	 
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/idleThreshold" class="- topic/link "><linktext class="- topic/linktext ">idleThreshold</linktext></link><link href="flash.desktop.xml#NativeApplication/timeSinceLastUserInput" class="- topic/link "><linktext class="- topic/linktext ">timeSinceLastUserInput</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.USER_IDLE_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><shortdesc class="- topic/shortdesc ">
	 Wird bei Inaktivität des Benutzers abgesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.USER_IDLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird bei Inaktivität des Benutzers abgesetzt.
	 
	 <p class="- topic/p ">Geben Sie mithilfe der <codeph class="+ topic/ph pr-d/codeph ">idleThreshold</codeph>-Eigenschaft an, wie lange ein Benutzer inaktiv sein muss, bevor dieses Ereignis abgesetzt wird. Die bisherige Dauer der Inaktivitätsphase kann anhand der <codeph class="+ topic/ph pr-d/codeph ">timeSinceLastUserInput</codeph>-Eigenschaft festgestellt werden.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis wird auf mobilen Geräten oder auf Geräten mit AIR für TV nicht abgesetzt.</p>
	 
	 
	 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/idleThreshold" class="- topic/link "><linktext class="- topic/linktext ">idleThreshold</linktext></link><link href="flash.desktop.xml#NativeApplication/timeSinceLastUserInput" class="- topic/link "><linktext class="- topic/linktext ">timeSinceLastUserInput</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn eine neue Netzwerkverbindung verfügbar wird oder wenn eine vorhandene Netzwerkverbindung unterbrochen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn eine neue Netzwerkverbindung verfügbar wird oder wenn eine vorhandene Netzwerkverbindung unterbrochen wird. 
	 
	 <p class="- topic/p ">Ein <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph>-Ereignis bedeutet nicht unbedingt, dass der Hostcomputer online oder offline gebracht wurde. Möglicherweise erfolgt nur ein Übergang von einem Verbindungstyp zu einem anderen. Anwendungen können mit diesem Ereignis dazu beitragen, die Überwachung der Verfügbarkeit von Remoteressourcen zu optimieren. Wenn ein <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph>-Ereignis ausgelöst wird, ist die ein guter Zeitpunkt, um die Verfügbarkeit von Remoteressourcen zu überprüfen.
	 </p> 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b></p> 
	 <ul class="- topic/ul "><li class="- topic/li ">Zwischen dem Auftreten einer Netzwerkänderung und diesem Ereignis kann es eine kurze Verzögerung geben.</li><li class="- topic/li ">Unter Android kann das NativeApplication-Objekt mehrere networkChange-Ereignisse für jede Änderung bei einer Netzwerkverbindung absetzen.</li></ul>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.EXITING_exiting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exiting</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn die Beenden-Sequenz der Anwendung eingeleitet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.EXITING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn die Beenden-Sequenz der Anwendung eingeleitet wurde. 
	 
	 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis wird ausgelöst, wenn das Beenden der Anwendung vom Betriebssystem eingeleitet wurde, zum Beispiel, wenn der Benutzer unter Mac OS X die Tastenkombination <codeph class="+ topic/ph pr-d/codeph ">Cmd-Q</codeph> verwendet oder wenn die <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph>-Eigenschaft des NativeApplication-Objekts <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ist und das letzte Anwendungsfenster geschlossen wird. Beim Abbrechen dieses Ereignisses wird die Anwendung nicht beendet.</p>
	 
	 <p class="- topic/p ">AIR für TV setzt das <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis niemals ab. 
	 </p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Beim Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph>-Methode von NativeApplication wird kein <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis ausgelöst. Wenn eine Anwendung Komponenten über das bevorstehende Beenden informieren soll, sollte das <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis vor dem Aufruf von <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph> abgesetzt werden.</p>
	 
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn der Desktop-Fokus zu einer anderen Anwendung wechselt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn der Desktop-Fokus zu einer anderen Anwendung wechselt.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.Event.ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn diese Anwendung die aktive Desktopanwendung wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn diese Anwendung die aktive Desktopanwendung wird.
	  
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.BrowserInvokeEvent.Browser_INVOKE_browserInvoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">browserInvoke</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn die Anwendung durch eine SWF-Datei aufgerufen wird, die im Browser des Benutzers ausgeführt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.BrowserInvokeEvent.Browser_INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.BrowserInvokeEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn die Anwendung durch eine SWF-Datei aufgerufen wird, die im Browser des Benutzers ausgeführt wird. 
	 
	 <p class="- topic/p ">Der Aufruf durch den Browser ist nur dann zulässig, wenn in der Anwendungsdeskriptordatei einer Anwendung Folgendes angegeben ist:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">&lt;allowBrowserInvocation>true&lt;/allowBrowserInvocation></codeblock>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:NativeApplication_flash.events.InvokeEvent.INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><shortdesc class="- topic/shortdesc ">
	 Wird ausgelöst, wenn eine Anwendung aufgerufen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.InvokeEvent.INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.InvokeEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird ausgelöst, wenn eine Anwendung aufgerufen wird. 
	 
	 <p class="- topic/p ">Wenn eine Anwendung ein zweites Mal aufgerufen wird, wird keine weitere Instanz der Anwendung gestartet. Stattdessen erhält die erste Instanz ein zusätzliches Aufrufereignis. Die Anwendung ist dafür zuständig, weitere <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignisse entsprechend zu behandeln.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Alle <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignisse werden in eine Warteschlange gestellt. Wenn ein Listener für dieses Ereignis registriert ist, erhält er alle Ereignisse in der Warteschlange sowie alle neuen Ereignisse. In die Warteschlange gestellte Ereignisse können vor oder nach neuen <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignissen ausgegeben werden.</p>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.desktop:NativeApplication:activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
         Aktiviert diese Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">window</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:NativeWindow</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das NativeWindow-Objekt des Fensters, das gemeinsam mit der Anwendung aktiviert wird.
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Aktiviert diese Anwendung. 
         
		 <p class="- topic/p ">Diese Methode wird auf Plattformen, die die NativeWindow-Klasse nicht unterstützen, nicht unterstützt.</p> 
		  
         <p class="- topic/p ">Unter Umständen, die vom Betriebssystem bestimmt werden, aktiviert diese Methode eine Anwendung nicht. Die meisten Betriebssysteme schränken die Möglichkeiten einer Anwendung, sich selbst zu aktivieren, ein. Damit soll verhindert werden, dass es die Anwendung dem Benutzer (absichtlich oder nicht) unmöglich macht, andere Anwendungen zu verwenden.</p>
         
         <p class="- topic/p ">Wenn das Betriebssystem die Aktivierung zulässt, wird das festgelegte Fenster aktiviert und im Vordergrund des Desktops angezeigt, d. h. vor Fenstern anderer Anwendungen. (Wenn der <codeph class="+ topic/ph pr-d/codeph ">window</codeph>-Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> aufweist, wird jedes sichtbare Fenster dieser Anwendung aktiviert.)</p>
         
         <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">activate()</codeph>-Methode hat keine Auswirkungen, wenn die Anwendung keine sichtbaren Fenster hat.</p>
		 
		 <p class="- topic/p ">Der Aktivierungsvorgang ist ein synchroner Vorgang.</p>
		 
		 </apiDesc></apiOperationDetail><adobeApiEvent id="flash.desktop:NativeApplication:activate_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wird ausgelöst, wenn sich der Aktivierungsstatus ändert.
         
         </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Wird ausgelöst, wenn sich der Aktivierungsstatus ändert.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.desktop:NativeApplication:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
		
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Listener-Funktion, die das Ereignis verarbeitet. Diese Funktion muss ein Ereignisobjekt als einzigen Parameter akzeptieren und darf keinen Wert zurückgeben<ph class="- topic/ph ">, wie das nachfolgende Beispiel zeigt:</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Der Name der Funktion ist beliebig.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Bestimmt, ob der Listener in der Erfassungsphase oder in der Ziel- und Bubbling-Phase arbeitet. Ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, so verarbeitet der Listener das Ereignis nur während der Erfassungsphase und nicht während der Ziel- oder Bubbling-Phase. Hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> hingegen den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, verarbeitet der Listener das Ereignis nur während der Ziel- oder Bubbling-Phase. Um auf das Ereignis in allen drei Phasen zu warten, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> zweimal auf; einmal ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, und beim zweiten Mal hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Prioritätsstufe des Ereignis-Listeners. Die Priorität wird durch eine vorzeichenbehaftete 32-Bit-Ganzzahl zugewiesen. Je höher die Zahl, desto höher die Priorität. Alle Listener mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> werden vor Listenern mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> -1 verarbeitet. Wenn zwei oder mehr Listener die gleiche Priorität aufweisen, werden sie in der Reihenfolge verarbeitet, in der sie hinzugefügt wurden. Die Standardpriorität ist 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob der Verweis auf den Listener stark oder schwach ist. Ein starker Verweis (der Standard) verhindert, dass der Listener von einem Garbage Collector entfernt wird. Ein schwacher Verweis hingegen nicht. <p class="- topic/p ">Funktionen von Mitgliedern auf Klassenebene werden nicht vom Garbagekollektor entfernt. Daher können Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> für Mitgliedsfunktionen auf Klassenebene auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, ohne dass sie vom Garbagekollektor entfernt werden. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen bei einem Listener, der eine verschachtelte innere Funktion ist, wird die Funktion vom Garbagekollektor entfernt. Indem Sie Verweise auf die innere Funktion erstellen (d. h sie in einer anderen Variable speichern), umgehen Sie die Garbage Collection, sodass die Funktion permanent gespeichert bleibt.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird. <ph class="- topic/ph ">Sie können Ereignis-Listener bei allen Knoten in der Anzeigeliste für eine bestimmte Art von Ereignis, Phase oder Priorität registrieren.</ph>
	
	
	
	<p class="- topic/p ">Nachdem Sie einen Ereignis-Listener erfolgreich registriert haben, können Sie seine Priorität nicht durch weitere Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ändern. Um die Priorität eines Listeners zu ändern, müssen Sie zunächst <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph> aufrufen. Anschließend können Sie den Listener mit der neuen Prioritätsstufe erneut aufrufen. </p>
	
	<p class="- topic/p ">Nach der Registrierung des Listeners haben nachfolgende Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> mit einem anderen <codeph class="+ topic/ph pr-d/codeph ">type</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph>-Wert eine separate Listener-Registrierung zur Folge. <ph class="- topic/ph ">Wenn Sie beispielsweise zuerst einen Listener registrieren, für den <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird dieser nur während der Aufnahmephase aktiv sein. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> für dasselbe Listener-Objekt erneut aufrufen, diesmal aber <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, werden zwei separate Listener angelegt: einer, der während der Aufnahmephase aktiv ist und ein zweiter, der während der Ziel- und Bubbling-Phase aktiv ist.</ph>
	</p>
	
	<p class="- topic/p ">Sie können einen Ereignis-Listener nicht nur für die Ziel- oder Bubbling-Phase registrieren. Die beiden Phasen hängen während der Registrierung immer zusammen, da Bubbling nur für übergeordnete Elemente des Zielknotens gilt.</p>
	
	<p class="- topic/p ">Wenn Sie einen Ereignis-Listener nicht mehr brauchen, entfernen sie ihn, indem Sie <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> aufrufen. Andernfalls könnte es zu Speicherproblemen kommen. Ereignis-Listener werden nicht automatisch aus dem Speicher entfernt, da der Garbage Collector den Listener nicht entfernt, solange das auslösende Objekt vorhanden ist (sofern der <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist).</p>
		
	<p class="- topic/p ">Beim Kopieren einer EventDispatcher-Instanz werden zugewiesene Ereignis-Listener nicht kopiert. (Wenn ein neu angelegter Knoten einen Ereignis-Listener benötigt, müssen Sie den Listener nach dem Erstellen des Knotens zuweisen.) Wenn Sie jedoch eine EventDispatcher-Instanz verschieben, werden zugewiesene Ereignis-Listener ebenfalls verschoben.</p>
	
	
	<p class="- topic/p ">Wenn der Ereignis-Listener bei einem Knoten registriert wird, während mit diesem Knoten ein Ereignis durchgeführt wird, so wird der Ereignis-Listener während der aktuellen Phase nicht ausgelöst, kann aber während einer späteren Phase im Ereignisablauf ausgelöst werden, etwa während der Bubbling-Phase.</p>
	
	<p class="- topic/p ">Wird ein Ereignis-Listener von einem Knoten entfernt, während mit dem Knoten ein Ereignis durchgeführt wird, so wird er von den aktuellen Aktionen immer noch ausgelöst. Nachdem er entfernt worden ist, wird der Ereignis-Listener nicht wieder aufgerufen (es sei denn er wird für spätere Verarbeitungsvorgänge erneut aufgerufen). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
         Ruft einen internen Löschen-Befehl für das Anzeigeobjekt im Fokus auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ruft einen internen Löschen-Befehl für das Anzeigeobjekt im Fokus auf.
		 
         <p class="- topic/p ">Dieser Funktionsaufruf wird ignoriert, wenn das Objekt im Fokus den Befehl nicht implementiert. Derzeit implementieren nur Anzeigeobjekte, die von der TextField- oder HTMLLoader-Klasse abgeleitet sind, diesen Befehl.</p>
         
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph>-Befehl löscht ausgewählten Text. Wenn nichts ausgewählt ist, wird nicht der gesamte Text gelöscht.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><shortdesc class="- topic/shortdesc ">
         Ruft einen internen Kopieren-Befehl für das Anzeigeobjekt im Fokus auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ruft einen internen Kopieren-Befehl für das Anzeigeobjekt im Fokus auf.
         
         <p class="- topic/p ">Dieser Funktionsaufruf wird ignoriert, wenn die Komponente den Befehl nicht implementiert. Derzeit implementieren nur Anzeigeobjekte, die von der TextField- oder HTMLLoader-Klasse abgeleitet sind, diesen Befehl.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:cut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cut</apiName><shortdesc class="- topic/shortdesc ">
         Ruft einen internen Ausschneiden-Befehl für das Anzeigeobjekt im Fokus auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ruft einen internen Ausschneiden-Befehl für das Anzeigeobjekt im Fokus auf.
		 
         <p class="- topic/p ">Dieser Funktionsaufruf wird ignoriert, wenn die Komponente den Befehl nicht implementiert. Derzeit implementieren nur Anzeigeobjekte, die von der TextField- oder HTMLLoader-Klasse abgeleitet sind, diese Befehle.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
		
	Sendet ein Ereignis in den Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn das Ereignis erfolgreich ausgelöst wurde. Der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> weist entweder auf einen Fehler hin oder auf die Tatsache, dass <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> für das Ereignis aufgerufen worden ist.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ereignisobjekt, das in den Ereignisablauf integriert wird. Wenn das Ereignis erneut gesendet wird, wird automatisch ein Klon des Ereignisses erstellt. Nachdem ein Ereignis ausgelöst wurde, lässt sich seine <codeph class="+ topic/ph pr-d/codeph ">target</codeph>-Eigenschaft nicht mehr ändern, daher funktioniert ein Zurücksenden des Ereignisses nur, wenn Sie eine neue Kopie des Ereignisses erstellen.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Sendet ein Ereignis in den Ereignisablauf. Das Ereignisziel ist das EventDispatcher-Objekt, für das die Methode <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph> aufgerufen wird.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc ">
		 Beendet diese Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">errorCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Beenden-Code, der dem Betriebssystem gemeldet wird, wenn diese Anwendung beendet wird.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Beendet diese Anwendung. 
		 
		 
		 <p class="- topic/p ">Der Aufruf der <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph>-Methode erfolgt <i class="+ topic/ph hi-d/i ">erneut</i>; die Beenden-Sequenz beginnt erst, wenn der zurzeit ausgeführte Code (zum Beispiel eine Ereignisprozedur) abgeschlossen ist. Ausstehende asynchrone Vorgänge werden abgebrochen, egal, ob sie abgeschlossen sind oder nicht.</p>
		 
		 <p class="- topic/p ">Beachten Sie, dass kein <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis ausgelöst wird. Wenn die Anwendungslogik ein <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignis erfordert, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.dispatchEvent()</codeph> auf und übergeben Sie in Ereignisobjekt des Typs <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>. Für geöffnete Fenster setzen NativeWindow-Objekte <codeph class="+ topic/ph pr-d/codeph ">closing</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignisse ab. Der Aufruf der <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode des <codeph class="+ topic/ph pr-d/codeph ">closing</codeph>-Ereignisobjekts verhindert das Schließen der Anwendung.</p>
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Methode wird vom iOS-Betriebssystem nicht unterstützt.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:getDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Ruft die Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung ab.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Parameter keine der Dateierweiterungen enthält, die im Anwendungsdeskriptor deklariert sind.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Pfad der Standardanwendung
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String mit der Erweiterung des relevanten Dateityps (ohne „.“).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ruft die Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung ab.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Methode kann nur mit Dateitypen, die in der <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph>-Anweisung des Anwendungsdeskriptors deklariert sind, verwendet werden.</p>
		 
		 <p class="- topic/p ">Diese Methode gilt nicht für Geräte mit AIR für TV. Wenn Sie sie mit einem Dateityp aufrufen, der im Anwendungsdeskriptor deklariert wird, wird <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurückgegeben.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:isSetAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isSetAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt an, ob diese Anwendung zurzeit die Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Parameter keine der Dateierweiterungen enthält, die im Anwendungsdeskriptor deklariert sind.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn diese Anwendung die Standardanwendung ist.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String mit der Erweiterung des relevanten Dateityps (ohne „.“).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt an, ob diese Anwendung zurzeit die Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung ist.
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Mit der <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDefaultApplication</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:paste" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">paste</apiName><shortdesc class="- topic/shortdesc ">
         Ruft einen internen Einfügen-Befehl für das Anzeigeobjekt im Fokus auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ruft einen internen Einfügen-Befehl für das Anzeigeobjekt im Fokus auf.
		 
         <p class="- topic/p ">Dieser Funktionsaufruf wird ignoriert, wenn die Komponente den Befehl nicht implementiert. Derzeit implementieren nur Anzeigeobjekte, die von der TextField- oder HTMLLoader-Klasse abgeleitet sind, diesen Befehl.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:removeAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Entfernt diese Anwendung als Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Parameter keine der Dateierweiterungen enthält, die im Anwendungsdeskriptor deklariert sind.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String mit der Erweiterung des relevanten Dateityps (ohne „.“).
         
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Entfernt diese Anwendung als Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Methode kann nur mit Dateitypen, die in der <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph>-Anweisung im Anwendungsdeskriptors deklariert sind, verwendet werden.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:NativeApplication:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
		
	Entfernt einen Listener aus dem EventDispatcher-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu entfernende Listener-Objekt.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Gibt an, ob der Listener für die Erfassungsphase oder die Ziel- und Bubbling-Phase registriert wurde. Wenn der Listener sowohl für die Aufnahme- als auch für die Bubbling-Phase registriert wurde, sind auch zwei Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> erforderlich, um beide zu entfernen: ein Aufruf, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, und einer, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist.</ph>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
	Entfernt einen Listener aus dem EventDispatcher-Objekt. Wenn kein entsprechender Listener mit dem EventDispatcher-Objekt registriert ist, hat ein Aufruf dieser Methode keine Auswirkungen.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:selectAll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">selectAll</apiName><shortdesc class="- topic/shortdesc ">
         Ruft einen internen Alles-auswählen-Befehl für das Anzeigeobjekt im Fokus auf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ruft einen internen Alles-auswählen-Befehl für das Anzeigeobjekt im Fokus auf.
		 
         <p class="- topic/p ">Dieser Funktionsaufruf wird ignoriert, wenn die Komponente den Befehl nicht implementiert. Derzeit implementieren nur Anzeigeobjekte, die von der TextField- oder HTMLLoader-Klasse abgeleitet sind, diesen Befehl.</p>
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeApplication:setAsDefaultApplication" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setAsDefaultApplication</apiName><shortdesc class="- topic/shortdesc ">
		 Legt diese Anwendung als Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung fest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>-Parameter keine der Dateierweiterungen enthält, die im Anwendungsdeskriptor deklariert sind.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String mit der Erweiterung des relevanten Dateityps (ohne „.“).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Legt diese Anwendung als Standardanwendung zum Öffnen von Dateien mit der angegebenen Erweiterung fest.
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Diese Methode kann nur mit Dateitypen, die in der <codeph class="+ topic/ph pr-d/codeph ">fileTypes</codeph>-Anweisung im Anwendungsdeskriptors deklariert sind, verwendet werden.</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/applicationDescriptor" class="- topic/link "><linktext class="- topic/linktext ">applicationDescriptor</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDefaultApplication" class="- topic/link "><linktext class="- topic/linktext ">supportsDefaultApplication</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeApplication:activeWindow:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">activeWindow</apiName><shortdesc class="- topic/shortdesc ">
         Das aktive Fenster der Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeWindow</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Das aktive Fenster der Anwendung. 
		 
		 <p class="- topic/p ">Wenn das aktive Desktopfenster nicht zu dieser Anwendung gehört oder kein aktives Fenster vorhanden ist, weist <codeph class="+ topic/ph pr-d/codeph ">activeWindow</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> auf.</p>
		 
		 <p class="- topic/p ">Diese Eigenschaft wird auf Plattformen, die die NativeWindow-Klasse nicht unterstützen, nicht unterstützt.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:applicationDescriptor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationDescriptor</apiName><shortdesc class="- topic/shortdesc "> 
		 Der Inhalt der Anwendungsdeskriptordatei für diese AIR-Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">XML</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Der Inhalt der Anwendungsdeskriptordatei für diese AIR-Anwendung.
		 
		 
		 
		 </apiDesc><example conref="examples\NativeApplication.applicationDescriptor.1.as" class="- topic/example "> Im folgenden Beispiel werden die Elemente <codeph class="+ topic/ph pr-d/codeph ">copyright</codeph> und <codeph class="+ topic/ph pr-d/codeph ">version</codeph> aus der Anwendungsdeskriptordatei gelesen. Beachten Sie, dass Sie den Standard-Namespace verwenden müssen, der im XML-Code der Anwendungsdeskriptordatei definiert ist.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var appDescriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;
var ns:Namespace = appDescriptor.namespace();
var appCopyright:String = appDescriptor.ns::copyright;
var appVersion:String = appDescriptor.ns::version;
trace("appId:", appCopyright);
trace("version:", appVersion);
</codeblock><swfblock conref="examples\NativeApplication.applicationDescriptor.1.swf" xml:space="preserve"/></example></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:applicationID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationID</apiName><shortdesc class="- topic/shortdesc "> 
		 Die Anwendungs-ID dieser Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Die Anwendungs-ID dieser Anwendung. 
		 
		 <p class="- topic/p ">Der Wert dieser ID wird in der Anwendungsdeskriptordatei festgelegt.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:autoExit:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">autoExit</apiName><shortdesc class="- topic/shortdesc ">
		 Legt fest, ob die Anwendung automatisch beendet wird, wenn alle Fenster geschlossen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Legt fest, ob die Anwendung automatisch beendet wird, wenn alle Fenster geschlossen wurden.  
		 
		 <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> hat (Standardeinstellung), wird die Anwendung beendet, wenn alle Fenster geschlossen wurden. Es wird sowohl das <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>- als auch das <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>-Ereignis ausgelöst. Wenn <codeph class="+ topic/ph pr-d/codeph ">autoExit</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat, müssen Sie <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.exit()</codeph> aufrufen, um die Anwendung zu beenden. </p> 
		 
		 <p class="- topic/p ">Diese Eigenschaft wird auf Plattformen, die die NativeWindow-Klasse nicht unterstützen, nicht unterstützt.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:icon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">icon</apiName><shortdesc class="- topic/shortdesc ">
		 Das Anwendungssymbol.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:InteractiveIcon</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Anwendungssymbol.
		 
		 <p class="- topic/p ">Mit <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph> können Sie die Symbolklasse festlegen. Der Typ ist eine der Unterklassen von InteractiveIcon. Unter Mac<sup class="+ topic/ph hi-d/sup ">®</sup> OS X ist <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> ein Objekt vom Typ <codeph class="+ topic/ph pr-d/codeph ">DockIcon</codeph>. Unter Windows<sup class="+ topic/ph hi-d/sup ">®</sup> ist <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> ein Objekt vom Typ <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon</codeph>. Wenn ein Anwendungssymbol nicht unterstützt wird, sind <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph> beide <codeph class="+ topic/ph pr-d/codeph ">false</codeph> und die <codeph class="+ topic/ph pr-d/codeph ">icon</codeph>-Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>  
		 
		 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">icon</codeph>-Objekt wird automatisch erstellt, es wird jedoch nicht mit Bilddaten initialisiert. Unter manchen Betriebssystemen, z. B. Mac OS X, wird ein Standardbild bereitgestellt. Unter anderen, z. B. Windows, wird das Symbol erst angezeigt, wenn ihm Bilddaten zugewiesen werden. Um ein Symbolbild zuzuweisen, legen Sie für die <codeph class="+ topic/ph pr-d/codeph ">icon.bitmaps</codeph>-Eigenschaft ein Array fest, das mindestens ein BitmapData-Objekt enthält. Enthält das Array mehrere BitmapData-Objekte, wählt das Betriebssystem das Bild, dessen Größe den Abmessungen des Symbols am nächsten kommt, wobei das Bild bei Bedarf skaliert wird.</p>  
   		 
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">supportsDockIcon</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">supportsSystemTrayIcon</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:idleThreshold:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleThreshold</apiName><shortdesc class="- topic/shortdesc ">
		 Die Anzahl der Sekunden, die ohne Benutzereingabe verstreichen müssen, bevor ein userIdle-Ereignis ausgelöst wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn Sie versuchen, die Eigenschaft auf einen ungültigen Wert zu setzen. Der Bereich der erlaubten Werte reicht von (einschließlich) 5 (5 Sekunden) bis 86.400 (ein Tag).
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Anzahl der Sekunden, die ohne Benutzereingabe verstreichen müssen, bevor ein userIdle-Ereignis ausgelöst wird. 
		 
		 <p class="- topic/p ">Standardmäßig ist der Leerlaufwert auf 300 Sekunden (5 Minuten) eingestellt. Der Bereich der erlaubten Werte reicht von (einschließlich) 5 (5 Sekunden) bis 86.400 (ein Tag).</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">userIdle</linktext></link><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">userPresent</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Das Anwendungsmenü.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Anwendungsmenü.
		 
		 <p class="- topic/p ">Anwendungsmenüs werden unterstützt, wenn <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> aufweist. Nicht alle Betriebssysteme unterstützen Anwendungsmenüs. Anwendungsmenüs werden zum Beispiel unter Mac OS X unterstützt, nicht jedoch unter Windows oder Linux. Das Zuweisen eines NativeMenu-Objekts zu dieser Eigenschaft, wenn <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat, ist zwar zulässig, hat aber keine Auswirkungen. Sie sollten die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.supportsMenu</codeph>-Eigenschaft verwenden, um festzulegen, ob das Betriebssystem Fenstermenüs unterstützt. Die Verwendung anderer Vorgehensweisen (z. B. <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) zur Festlegung der Unterstützung kann zu Programmierfehlern führen (beispielsweise dann, wenn mögliche Zielbetriebssysteme nicht berücksichtigt werden).</p>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">AIR-Profilunterstützung:</i> Diese Funktion wird auf mobilen Geräten oder Geräten mit AIR für TV nicht unterstützt. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
 
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Unter Mac OS X verweist die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">menu</codeph> auf das vom Betriebssystem bereitgestellte Standardanwendungsmenü. Sie können die vorhandene Menüstruktur ändern, indem Sie Elemente und Untermenüs hinzufügen oder entfernen und indem Sie Ereignis-Listener hinzufügen. Sie können die Standardmenüs auch vollständig entfernen, indem Sie dieser <codeph class="+ topic/ph pr-d/codeph ">menu</codeph>-Eigenschaft ein neues NativeMenu-Objekt zuweisen.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu</linktext></link><link href="flash.display.xml#NativeWindow/supportsMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.supportsMenu</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:nativeApplication:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nativeApplication</apiName><shortdesc class="- topic/shortdesc "> 
		 Die Singleton-Instanz des NativeApplication-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:NativeApplication</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn der Zugriff durch Inhalte außerhalb der Sicherheitssandbox der Anwendung erfolgt.
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Die Singleton-Instanz des NativeApplication-Objekts.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:openedWindows:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">openedWindows</apiName><shortdesc class="- topic/shortdesc ">
		 Ein Array, das alle geöffneten nativen Fenster dieser Anwendung enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein Array, das alle geöffneten nativen Fenster dieser Anwendung enthält.
		 
		 <p class="- topic/p ">Diese Eigenschaft wird auf Plattformen, die die NativeWindow-Klasse nicht unterstützen, nicht unterstützt.</p> 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:publisherID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">publisherID</apiName><shortdesc class="- topic/shortdesc "> 
		 Die Veröffentlicher-ID dieser Anwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Die Veröffentlicher-ID dieser Anwendung. 
		 
		 <p class="- topic/p ">Der Wert dieser ID wird in der publisherid-Datei der Anwendung festgelegt. Diese Datei wird bei der Installation aus der Zertifikatskette, mit der die Anwendung signiert wird, generiert.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:runtimePatchLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">runtimePatchLevel</apiName><shortdesc class="- topic/shortdesc "> 
		 Die Patchebene der Laufzeitumgebung, die diese Anwendung hostet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Die Patchebene der Laufzeitumgebung, die diese Anwendung hostet.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:runtimeVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">runtimeVersion</apiName><shortdesc class="- topic/shortdesc "> 
		 Die Versionsnummer der Laufzeitumgebung, die diese Anwendung hostet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Die Versionsnummer der Laufzeitumgebung, die diese Anwendung hostet.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeApplication:startAtLogin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">startAtLogin</apiName><shortdesc class="- topic/shortdesc ">
        Legt fest, ob diese Anwendung automatisch gestartet wird, wenn sich der aktuelle Benutzer anmeldet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows, wenn eine andere Anwendung mit demselben Namen (aber einem anderen Pfad zur ausführbaren Datei) bereits gestartet wird, wenn sich der Benutzer anmeldet.
        
        </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn diese Anwendung nicht installiert ist, was der Fall sein kann, wenn sie vom AIR Debug Launcher (ADL) gestartet wurde.
        
		</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        Legt fest, ob diese Anwendung automatisch gestartet wird, wenn sich der aktuelle Benutzer anmeldet.
        
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Mit der <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsStartAtLogin</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
	
        <p class="- topic/p ">
        Die <codeph class="+ topic/ph pr-d/codeph ">startAtLogin</codeph>-Eigenschaft stellt den Status der vom Betriebssystem definierten Funktionalität dar, die festlegt, dass eine Anwendung automatisch gestartet wird, wenn sich ein Benutzer anmeldet. Der Benutzer kann den Status über die Benutzeroberfläche des Betriebsystems manuell ändern. Diese Eigenschaft stellt den aktuellen Status dar, unabhängig davon, ob er zuletzt von der AIR-Anwendung oder vom Betriebssystem geändert wurde.   
        </p>
        </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/supportsStartAtLogin" class="- topic/link "><linktext class="- topic/linktext ">supportsStartAtLogin</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsDefaultApplication:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsDefaultApplication</apiName><shortdesc class="- topic/shortdesc "> 
         Gibt an, ob setAsDefaultApplication(), removeAsDefaultApplication() und isSetAsDefaultApplication() von der aktuellen Plattform unterstützt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
         Gibt an, ob <codeph class="+ topic/ph pr-d/codeph ">setAsDefaultApplication()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeAsDefaultApplication()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">isSetAsDefaultApplication()</codeph> von der aktuellen Plattform unterstützt werden.
         
         <p class="- topic/p ">Bei dem Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> funktionieren die oben genannten Methoden wie beschrieben. Bei dem Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sind <codeph class="+ topic/ph pr-d/codeph ">setAsDefaultApplication()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">removeDefaultApplication()</codeph> ohne Auswirkungen und <codeph class="+ topic/ph pr-d/codeph ">isSetAsDefaultApplication()</codeph> gibt <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurück.</p>
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/setAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">setAsDefaultApplication()</linktext></link><link href="flash.desktop.xml#NativeApplication/removeAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">removeAsDefaultApplication()</linktext></link><link href="flash.desktop.xml#NativeApplication/isSetAsDefaultApplication()" class="- topic/link "><linktext class="- topic/linktext ">isSetAsDefaultApplication()</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsDockIcon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsDockIcon</apiName><shortdesc class="- topic/shortdesc "> 
	   Gibt an, ob AIR Anwendungssymbol im Dock-Stil unter dem aktuellen Betriebssystem unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	   Gibt an, ob AIR Anwendungssymbol im Dock-Stil unter dem aktuellen Betriebssystem unterstützt.
	  
	  <p class="- topic/p ">Wenn der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> lautet, hat die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>-Eigenschaft den Typ <codeph class="+ topic/ph pr-d/codeph ">DockIcon</codeph>.</p>
	  
      <p class="- topic/p ">Die Benutzeroberfläche von Mac OS X verfügt über ein Anwendungs-„Dock“ mit Symbolen für Anwendungen, die zurzeit ausgeführt oder häufig verwendet werden.</p>
	  
	  <p class="- topic/p ">Sie sollten die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph>-Eigenschaft verwenden, um festzulegen, ob das Betriebssystem Anwendungs-Dock-Symbole unterstützt. Die Verwendung anderer Vorgehensweisen (z. B. <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) zur Festlegung der Unterstützung kann zu Programmierfehlern führen (beispielsweise dann, wenn mögliche Zielbetriebssysteme nicht berücksichtigt werden).</p>
      
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">icon</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsMenu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsMenu</apiName><shortdesc class="- topic/shortdesc "> 
	   Legt fest, ob das aktuelle Betriebssystem eine globale Anwendungsmenüleiste unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	   Legt fest, ob das aktuelle Betriebssystem eine globale Anwendungsmenüleiste unterstützt.
	  
	  <p class="- topic/p ">Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> kann mit der <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.menu</codeph>-Eigenschaft ein natives Anwendungsmenü definiert bzw. auf dieses zugegriffen werden.</p> 
	  
	  <p class="- topic/p ">Sie sollten die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsMenu</codeph>-Eigenschaft verwenden, um festzulegen, ob das Betriebssystem die Anwendungsmenüleiste unterstützt. Die Verwendung anderer Vorgehensweisen (z. B. <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) zur Festlegung der Unterstützung kann zu Programmierfehlern führen (beispielsweise dann, wenn mögliche Zielbetriebssysteme nicht berücksichtigt werden).</p>
	  
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/menu" class="- topic/link "><linktext class="- topic/linktext ">menu</linktext></link><link href="flash.display.xml#NativeWindow/supportsMenu" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.supportsMenu</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsStartAtLogin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsStartAtLogin</apiName><shortdesc class="- topic/shortdesc "> 
         Gibt an, ob startAtLogin von der aktuellen Plattform unterstützt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
         Gibt an, ob startAtLogin von der aktuellen Plattform unterstützt wird.
         
         <p class="- topic/p ">Bei dem Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> funktioniert startAtLogin wie beschrieben. Bei dem Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat startAtLogin keine Auswirkungen.</p>
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/startAtLogin" class="- topic/link "><linktext class="- topic/linktext ">startAtLogin</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:supportsSystemTrayIcon:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsSystemTrayIcon</apiName><shortdesc class="- topic/shortdesc "> 
	  Legt fest, ob AIR Infobereich-Symbole unter dem aktuellen Betriebssystem unterstützt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	  Legt fest, ob AIR Infobereich-Symbole unter dem aktuellen Betriebssystem unterstützt.
	  
	  <p class="- topic/p ">Wenn der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> lautet, hat die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>-Eigenschaft den Typ <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon</codeph>.</p>
	  
      <p class="- topic/p ">Die Windows-Benutzeroberfläche verfügt über den <i class="+ topic/ph hi-d/i ">Infobereich</i> („System Tray“) in der Taskleiste, in dem Anwendungssymbole angezeigt werden können. Es wird kein Standardsymbol angezeigt. Sie müssen das <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array des Symbolobjekts festlegen, um ein Symbol anzuzeigen.</p>
      
	  <p class="- topic/p ">Sie sollten die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph>-Eigenschaft verwenden, um festzulegen, ob das Betriebssystem Infobereichsymbole unterstützt. Die Verwendung anderer Vorgehensweisen (z. B. <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>) zur Festlegung der Unterstützung kann zu Programmierfehlern führen (beispielsweise dann, wenn mögliche Zielbetriebssysteme nicht berücksichtigt werden).</p>
      
      </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">icon</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:systemIdleMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">systemIdleMode</apiName><shortdesc class="- topic/shortdesc ">
		 Bietet Anwendungen eine Möglichkeit zu verhindern, dass die Benutzeroberfläche in den „Leerlauf“ versetzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Bietet Anwendungen eine Möglichkeit zu verhindern, dass die Benutzeroberfläche in den „Leerlauf“ versetzt wird.
		 
		 <p class="- topic/p ">Ein Wert aus der SystemIdleMode-Klasse, um das Verhalten des Hostsystems im Leerlauf zu beeinflussen. Diese Eigenschaft wirkt sich nur auf die Anwendung mit dem Eingabefokus aus; und nur Inhalt, der in der Anwendungssandbox ausgeführt wird, kann auf diese Eigenschaft zugreifen.</p>
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf mobilen Geräten unterstützt, nicht jedoch auf Desktopbetriebssystemen oder Geräten mit AIR für TV. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#SystemIdleMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemIdleMode</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeApplication:timeSinceLastUserInput:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeSinceLastUserInput</apiName><shortdesc class="- topic/shortdesc ">
         Die Zeit in Sekunden seit der letzten Benutzereingabe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Die Zeit in Sekunden seit der letzten Benutzereingabe.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">userIdle</linktext></link><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">userPresent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Updater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Updater</apiName><shortdesc class="- topic/shortdesc ">
 Die Updater-Klasse wird verwendet, um die zurzeit ausgeführte Anwendung mit einer anderen Version zu aktualisieren.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die Updater-Klasse wird verwendet, um die zurzeit ausgeführte Anwendung mit einer anderen Version zu aktualisieren. Um sie zu verwenden, instanziieren Sie ein Updater-Objekt und rufen Sie dann dessen <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode auf.
 
 <p class="- topic/p ">Die Updater-Klasse wird nur im Desktop-Profil unterstützt. Sie wird weder für erweiterte Desktop-Anwendungen (Anwendungen, die mit einem nativen Installer installiert werden) noch im Mobil-AIR-Profil oder in AIR-für-TV-Profilen unterstützt. Überprüfen Sie die <codeph class="+ topic/ph pr-d/codeph ">Updater.isSupported</codeph>-Eigenschaft.</p>
 
 <p class="- topic/p ">Erweiterte Desktop-Anwendungen (Anwendungen, die mit einem nativen Installer installiert werden) können eine neue Version des nativen Installers herunterladen und diesen mithilfe der <codeph class="+ topic/ph pr-d/codeph ">File.openWithDefaultApplication()</codeph>-Methode starten.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdater</linktext></link><link href="air.update.xml#ApplicationUpdaterUI" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdaterUI</linktext></link></related-links><apiConstructor id="flash.desktop:Updater:Updater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Updater</apiName><shortdesc class="- topic/shortdesc ">
     Die Konstruktorfunktion für die Updater-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Konstruktorfunktion für die Updater-Klasse. Beachten Sie, dass die <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode kein statisches Mitglied der Klasse ist. Sie müssen ein Updater-Objekt instanziieren und dann die <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode dafür aufrufen.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.desktop:Updater:update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><shortdesc class="- topic/shortdesc ">
     Aktualisiert die zurzeit ausgeführte Anwendung mit der Version der Anwendung, die in der angegebenen AIR-Datei enthalten ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Methode wurde beim Ausführen in ADL aufgerufen. 
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">airFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das File-Objekt, das auf die AIR-Datei verweist, die die aktualisierte Version der Anwendung enthält.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">version</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die erforderliche Version in der neuen AIR-Datei. Der String im <codeph class="+ topic/ph pr-d/codeph ">version</codeph>-Attribut des Haupt-<codeph class="+ topic/ph pr-d/codeph ">application</codeph>-Elements der Anwendungsdeskriptordatei für die AIR-Datei muss mit diesem Wert übereinstimmen, damit die Aktualisierung erfolgreich verläuft.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Aktualisiert die zurzeit ausgeführte Anwendung mit der Version der Anwendung, die in der angegebenen AIR-Datei enthalten ist. Die Anwendung in der AIR-Datei muss dieselbe Anwendungskennung (<codeph class="+ topic/ph pr-d/codeph ">appID</codeph>) aufweisen wie die zurzeit ausgeführte Anwendung.
	 
     <p class="- topic/p ">Durch den Aufruf dieser Methode wird die aktuelle Anwendung beendet (wie beim Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.exit()</codeph>-Methode). Dies ist erforderlich, da Adobe AIR eine Anwendung nicht vollständig aktualisieren kann, wenn die Anwendung ausgeführt wird. Nachdem die neue Version der Anwendung erfolgreich installiert wurde, wird die Anwendung gestartet. Wenn die neue Version von der Laufzeitumgebung nicht erfolgreich installiert werden kann (weil zum Beispiel die Anwendungs-ID nicht mit der vorhandenen Version übereinstimmt), zeigt das AIR-Installationsprogramm eine Fehlermeldung an. Danach wird wieder die alte Version gestartet.</p>
	 
	 <p class="- topic/p ">Unabhängig davon, ob die Aktualisierung erfolgreich verläuft oder nicht, startet der Aktualisierungsprozess die Anwendung neu. Aktualisierungen können aus verschiedenen Gründen fehlschlagen, zum Teil, ohne dass die Anwendung Einfluss darauf nehmen kann (zum Beispiel, wenn der Benutzer nicht über die Berechtigung zum Installieren der Anwendung verfügt). Anwendungen sollten fehlgeschlagene Versuche erkennen und den fehlgeschlagenen Vorgang nicht wiederholen. Die resultierende unendliche Schleife würde die Anwendung praktisch deaktivieren. Eine Möglichkeit, den Erfolg einer Aktualisierung zu überprüfen, besteht darin, die aktuelle Versionsnummer vor der Aktualisierung in eine Datei zu schreiben und sie dann mit der Versionsnummer nach dem Neustart der Anwendung zu vergleichen.</p>
	 
	 <p class="- topic/p ">Wenn Sie eine Anwendung mit dem AIR Debug Launcher (ADL) testen, führt der Aufruf der <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode zu einer IllegalOperationError-Ausnahme.</p>
	 
	 <p class="- topic/p ">Wenn unter Mac OS eine aktualisierte Version der Anwendung installiert werden soll, benötigt der Benutzer die entsprechenden Systemberechtigungen, um im Anwendungsverzeichnis zu installieren. Unter Windows und Linux benötigt der Benutzer Administratorberechtigungen. </p>
	 
	 <p class="- topic/p ">Wenn für die aktualisierte Version der Anwendung eine aktualisierte Version der Laufzeitumgebung erforderlich ist, wird die neue Laufzeitversion installiert. Um die Laufzeitumgebung zu aktualisieren, muss der Benutzer über Administratorberechtigungen für den Computer verfügen.</p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Aus Sicherheitsgründen ist die Angabe des <codeph class="+ topic/ph pr-d/codeph ">version</codeph>-Parameters erforderlich. Durch das obligatorische Überprüfen der Versionsnummer in der AIR-Datei wird verhindert, dass die Anwendung unbeabsichtigt eine ältere Version installiert, die möglicherweise Sicherheitslücken aufweist, die in der neueren Version behoben wurden.</p>
	 
	 </apiDesc><example conref="examples\Updater.update.1.as" class="- topic/example "> Beachten Sie, dass es sich bei der <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode <i class="+ topic/ph hi-d/i ">nicht</i> um eine statische Methode der Klasse handelt. Sie instanziieren ein Updater-Objekt und rufen die <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode dieses Objekts auf.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.fileSystem.File;
import flash.desktop.Updater;
 
var updater:Updater = new Updater();
var airFile:File = File.applicationStorageDirectory.resolvePath("Example Application.air");
var version:String = "2.01";
updater.update(airFile, version);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdater</linktext></link><link href="air.update.xml#ApplicationUpdaterUI" class="- topic/link "><linktext class="- topic/linktext ">air.update.ApplicationUpdaterUI</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:Updater:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Die isSupported-Eigenschaft hat den Wert „true“, wenn die Updater-Klasse auf der aktuellen Plattform verfügbar ist, andernfalls hat sie den Wert „false“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph>-Eigenschaft hat den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Updater-Klasse auf der aktuellen Plattform verfügbar ist, andernfalls hat sie den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:SystemTrayIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemTrayIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Die SystemTrayIcon-Klasse stellt das Symbol im Stil des Taskleisten-Infobereichs von Windows dar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ein Taskleistensymbol.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:InteractiveIcon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die SystemTrayIcon-Klasse stellt das Symbol im Stil des Taskleisten<sup class="+ topic/ph hi-d/sup ">®</sup>-Infobereichs von Windows dar.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>	 
	 
	 <p class="- topic/p ">Nicht alle Desktop-Betriebssysteme verfügen über Infobereich-Symbole. Überprüfen Sie <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph>, um festzustellen, ob Symbole für den Infobereich auf dem aktuellen System unterstützt werden.</p>
	 
	 <p class="- topic/p ">Es kann keine Instanz der SystemTrayIcon-Klasse erstellt werden. Rufen Sie das Objekt, das das Infobereichsymbol darstellt, von der <codeph class="+ topic/ph pr-d/codeph ">icon</codeph>-Eigenschaft des „globalen“ NativeApplication-Objekts ab.
	 </p>
	 
	 <p class="- topic/p ">Wenn Infobereichsymbole unterstützt werden, hat das Symbol den Typ <i class="+ topic/ph hi-d/i ">SystemTrayIcon</i>. Andernfalls weist <codeph class="+ topic/ph pr-d/codeph ">icon</codeph> eine andere Unterklasse von InteractiveIcon, normalerweise DockIcon, auf.</p>
	 
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtig:</b> Beim Versuch, eine Methode der SystemTrayIcon-Klasse für das <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>-Objekt auf einem Betriebssystem aufzurufen, für das AIR keine Infobereichsymbole unterstützt, tritt ein Laufzeitausnahmefehler auf.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsSystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsSystemTrayIcon</linktext></link><link href="flash.desktop.xml#DockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon</linktext></link></related-links><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><shortdesc class="- topic/shortdesc ">
	 Wird beim Klicken mit der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird beim Klicken mit der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><shortdesc class="- topic/shortdesc ">
	 Wird beim Loslassen der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird beim Loslassen der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.RIGHT_MOUSE_DOWN_rightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseDown</apiName><shortdesc class="- topic/shortdesc ">
	 Wird beim Drücken der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wird beim Drücken der rechten Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><shortdesc class="- topic/shortdesc ">
 	 Wird beim Klicken mit der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Wird beim Klicken mit der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><shortdesc class="- topic/shortdesc ">
 	 Wird beim Loslassen der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Wird beim Loslassen der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.desktop:SystemTrayIcon_flash.events.ScreenMouseEvent.MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><shortdesc class="- topic/shortdesc ">
 	 Wird beim Drücken der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ScreenMouseEvent.MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ScreenMouseEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Wird beim Drücken der Maustaste von diesem SystemTrayIcon-Objekt ausgelöst.
 	 
 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiValue id="flash.desktop:SystemTrayIcon:MAX_TIP_LENGTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MAX_TIP_LENGTH</apiName><shortdesc class="- topic/shortdesc ">
		 Die zulässige Länge des Quickinfos für das Infobereich-Symbol.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">63</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die zulässige Länge des Quickinfos für das Infobereich-Symbol.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
		
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.
	   
	 <p class="- topic/p ">Wenn ein Symbol in einem bestimmten Betriebssystemkontext angezeigt wird, wird die Bitmap aus dem Array verwendet, die der angezeigten Größe am nächsten kommt. Falls erforderlich, wird die Bitmap skaliert. Gebräuchliche Größen sind 16x16, 32x32, 48x48 und 128x128. (Mit einigen Betriebssystemen können in naher Zukunft Symbole in der Größe 512x512 Pixel verwendet werden.)</p>
	 
	 <p class="- topic/p ">In bestimmten Kontexten verwendet das Betriebssystem möglicherweise ein Standardsymbol, wenn der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft keine Eingabe zugewiesen wurde. In anderen Kontexten wird kein Symbol angezeigt.</p>
	 
	 <p class="- topic/p ">Um das Erscheinungsbild des Symbols festzulegen oder zu ändern, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein Array mit bitmapData-Objekten zu:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Das direkte Ändern des <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array hat keine Auswirkungen.</p>
	 
	 <p class="- topic/p ">Um das Symbolbild zu löschen, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein leeres Array zu.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Hinweis:</b> Beim Laden von Bilddateien für ein Symbol erzielen Sie die beste Alphamischung im Allgemeinen mit dem PNG-Dateiformat. Das GIF-Format unterstützt nur Transparenz oder keine Transparenz (keine Mischmodi). Das JPG-Format unterstützt keine Transparenz.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">height</codeph>-Eigenschaft gibt die Höhe des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigehöhe kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Das Menü des Infobereich-Symbols.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Menü des Infobereich-Symbols.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:tooltip:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tooltip</apiName><shortdesc class="- topic/shortdesc ">
		 Das Quickinfo, das für das Infobereich-Symbol angezeigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Quickinfo, das für das Infobereich-Symbol angezeigt wird. Wenn der String länger ist als <codeph class="+ topic/ph pr-d/codeph ">SystemTrayIcon.MAX_TIP_LENGTH</codeph>, wird das Quickinfo abgeschnitten.
		 
	     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemTrayIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Die aktuelle Anzeigebreite des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Die aktuelle Anzeigebreite des Symbols in Pixel. 
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">width</codeph>-Eigenschaft gibt die Breite des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigebreite kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Clipboard</apiName><shortdesc class="- topic/shortdesc ">
 Die Clipboard-Klasse stellt einen Container zum Übertragen von Daten und Objekten mithilfe der Zwischenablage bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>NativeDragManager is AIR only and is not in FP10.
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die Clipboard-Klasse stellt einen Container zum Übertragen von Daten und Objekten mithilfe der Zwischenablage bereit. Auf die Zwischenablage des Betriebssystems kann über die statische <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph>-Eigenschaft zugegriffen werden.
 
 <p class="- topic/p ">Ein Clipboard-Objekt kann dieselben Informationen in mehreren Formaten enthalten. Auf diese Weise ist die Wahrscheinlichkeit größer, dass eine andere Anwendung diese Informationen verwenden kann. Mit der <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>-Methode können Sie einem Clipboard-Objekt Daten hinzufügen.</p> 
 
 <p class="- topic/p ">Die Standardformate sind:</p>
 <ul class="- topic/ul "><li class="- topic/li ">BITMAP_FORMAT: ein BitmapData-Objekt (nur AIR)</li><li class="- topic/li ">FILE_LIST_FORMAT: ein Array von File-Objekten (nur AIR)</li><li class="- topic/li ">HTML_FORMAT: Stringdaten im HTML-Format</li><li class="- topic/li ">TEXT_FORMAT: Stringdaten</li><li class="- topic/li ">RICH_TEXT_FORMAT: ein ByteArray, das Rich Text Format-Daten enthält</li><li class="- topic/li ">URL_FORMAT: ein URL-String (nur AIR)</li></ul>
 <p class="- topic/p ">Stringkonstanten für die Namen der Standardformate sind in der ClipboardFormats-Klasse definiert.</p>
 
 <p class="- topic/p ">Wenn eine Übertragung zum oder vom Betriebssystem stattfindet, werden die Standardformate automatisch zwischen <ph class="- topic/ph "> ActionScript</ph>-Datentypen und den Zwischenablagetypen des nativen Betriebssystems übersetzt.</p>
 
 <p class="- topic/p ">Sie können von der Anwendung definierte Formate verwenden, um einem Clipboard-Objekt <ph class="- topic/ph "> ActionScript</ph>-Objekte hinzuzufügen. Wenn ein Objekt serialisierbar ist, können sowohl ein Verweis als auch ein Klon des Objekts zur Verfügung gestellt werden. Objektverweise sind nur in der ursprünglichen Anwendung gültig.</p>
 
 <p class="- topic/p ">Wenn es rechnerisch aufwendig ist, die zu übertragenden Informationen in ein bestimmtes Format zu konvertieren. können Sie den Namen einer Funktion bereitstellen, die die Konvertierung ausführt. Die Funktion wird nur dann aufgerufen, wenn das betreffende Format von der Empfängerkomponente der Anwendung gelesen wird. Mit der <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>-Methode können Sie einem Clipboard-Objekt eine zurückgestellte Wiedergabefunktion hinzufügen. Beachten Sie, dass in einigen Fällen das Betriebssystem die Funktion aufruft, bevor ein Ablegen erfolgt. Wenn Sie zum Beispiel eine Prozedurfunktion verwenden, um die Daten für eine Datei, die aus einer AIR-Anwendung in das Betriebssystem gezogen wird, bereitzustellen, ruft das Betriebssystem die Datenprozedur auf, sobald die Ziehen-Geste die AIR-Anwendung verlässt. Dies führt normalerweise zu einer unerwünschten Pause, da die Dateidaten heruntergeladen oder erstellt werden.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis für AIR-Anwendungen:</b> Das Clipboard-Objekt, auf das von den Ereignisobjekten verwiesen wird, welche bei HTML-Ziehen-und-Ablegen- sowie Kopier-und Einfügeereignissen ausgelöst werden, hat nicht denselben Typ wie AIR-Clipboard-Objekte. Das JavaScript-Clipboard-Objekt wird im AIR Entwicklerhandbuch beschrieben.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis für Flash Player-Anwendungen:</b> In Flash Player 10 erfordert ein Einfügevorgang aus der Zwischenablage ein durch den Benutzer ausgelöstes Ereignis (z. B. Tastaturbefehl, „Einfügen“-Befehl, Mausklick auf den „Einfügen“-Befehl in einem Kontextmenü). <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> gibt die Inhalte der Zwischenablage nur zurück, wenn das InteractiveObject ein paste-Ereignis erhalten hat und darauf reagiert. Unter anderen Bedingungen ist der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> erfolglos. Dieselbe Einschränkung gilt in AIR für Inhalte außerhalb der Anwendungssandbox .</p> 
 
 <p class="- topic/p ">Unter Linux werden Daten in der Zwischenablage gelöscht, wenn die AIR-Anwendung geschlossen wird.</p>
  
 </apiDesc><example conref="examples\ClipboardExample.as" class="- topic/example "> Im folgenden Beispiel für Adobe AIR wird die ClipboardExample-Klasse verwendet, um einen String über die Systemzwischenablage von einer Variablen zu einer anderen zu kopieren. Dies wird in den folgenden Schritten erreicht:
 
 <ol class="- topic/ol "><li class="- topic/li ">Schreiben Sie die Daten, in diesem Fall ein String, in <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</li><li class="- topic/li ">Lesen Sie den Inhalt der Zwischenablage aus <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>.</li></ol>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Aufgrund von Sicherheitseinschränkungen beim Zugriff auf Daten in der Zwischenablage funktioniert dieses Beispiel in Flash Player nicht. In Flash Player können Sie die <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph>-Methode eines Clipboard-Objekts nur in einer <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>-Ereignisprozedur aufrufen.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.desktop.Clipboard;
    import flash.desktop.ClipboardFormats;
    import flash.desktop.ClipboardTransferMode;

    public class ClipboardExample extends Sprite
    {
        public function ClipboardExample()
        {
            var sally:String = "Sally";
            var person:String;
            
            copy(sally);
            person = paste();
            trace(person); //traces: "Sally"
        }

        private function copy(text:String):void 
        {
            Clipboard.generalClipboard.clear();
            Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, text);
        }
        
        private function paste():String
        {
            if(Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT))
            {
                return String(Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT));
            } 
            else 
            {
                return null;
            }
        }
        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links><apiConstructor id="flash.desktop:Clipboard:Clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Clipboard</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein leeres Clipboard-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>the example located at examples\Clipboard.clipboard.1.as should not be displayed with FP10 docs because FP10 will throw an error when new Clipboard() is called.
	</internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">new Clipboard()</codeph> wird in Flash Player nicht unterstützt, da in Flash Player nur die Zwischenablage des Betriebssystems verwendet werden kann. Verwenden Sie für Kopieren-und-Einfügen-Vorgänge, die die Systemzwischenablage benutzen, das Clipboard.generalClipboard-Objekt, anstatt ein neues Clipboard-Objekt zu erstellen. Gibt in einer AIR-Anwendung keinen Fehler aus.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein leeres Clipboard-Objekt.
	
	<p class="- topic/p ">Erstellen Sie Clipboard-Objekte, um die Daten einer nativen Drag &amp; Drop-Geste in Adobe AIR aufzunehmen. Clipboard-Objekte können nur für eine Drag &amp; Drop-Geste verwendet werden; sie lassen sich nicht wiederverwenden.</p>
	
	<p class="- topic/p ">Erstellen Sie Clipboard-Objekte nicht für Kopieren-und-Einfügen-Vorgänge. Verwenden Sie stattdessen ein einzelnes <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>-Objekt.</p>
	
	</apiDesc><example conref="examples\Clipboard.clipboard.1.as" class="- topic/example "> Im folgenden Beispiel wird eine neue Zwischenablage zur Verwendung mit der NativeDragManager-Klasse erstellt.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Verwenden Sie für Kopieren-und-Einfügen-Vorgänge, die die Zwischenablage einbeziehen, das <codeph class="+ topic/ph pr-d/codeph ">Clipboard.generalClipboard</codeph>-Objekt, anstatt eine neue Zwischenablage zu erstellen.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.Clipboard;
 
 var clipboard:Clipboard = new Clipboard();
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/generalClipboard" class="- topic/link "><linktext class="- topic/linktext ">generalClipboard</linktext></link></related-links></apiConstructor><apiOperation id="flash.desktop:Clipboard:clearData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clearData</apiName><shortdesc class="- topic/shortdesc ">
	Löscht alle Datendarstellungen für das angegebene Format.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">In diesem Kontext ist ein Aufruf von generalClipboard.clearData() nicht zulässig. In Flash Player können Sie diese Methode nur während der Verarbeitung eines durch den Benutzer ausgelösten Ereignisses (Tastendruck oder Mausklick) erfolgreich aufrufen. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu entfernende Datenformat.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Löscht alle Datendarstellungen für das angegebene Format.
	
 	</apiDesc><example conref="examples\Clipboard.clearData.1.as" class="- topic/example "> Im folgenden Beispiel werden alle Daten des Formats <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph> aus der Zwischenablage des Betriebssystems gelöscht:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 Clipboard.generalClipboard.clearData(ClipboardFormats.TEXT_FORMAT);
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:Clipboard:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
	Löscht alle Datendarstellungen aus diesem Clipboard-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">In diesem Kontext ist ein Aufruf von generalClipboard.clear() nicht zulässig. In Flash Player können Sie diese Methode nur während der Verarbeitung eines durch den Benutzer ausgelösten Ereignisses (Tastendruck oder Mausklick) erfolgreich aufrufen. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.
  	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Löscht alle Datendarstellungen aus diesem Clipboard-Objekt.
	
 	</apiDesc><example conref="examples\Clipboard.clear.1.as" class="- topic/example "> Im folgenden Beispiel wird der Inhalt der Systemzwischenablage gelöscht:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 Clipboard.generalClipboard.clear();
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:Clipboard:getData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getData</apiName><shortdesc class="- topic/shortdesc ">
	Ruft die Daten in der Zwischenablage ab, falls Daten im angegebenen Format vorhanden sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph> ist keiner der Namen, die in der ClipboardTransferMode-Klasse definiert sind.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das angeforderte Clipboard-Objekt befindet sich nicht mehr in diesem Bereich (nur AIR).
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Lesen aus und Schreiben in die Zwischenablage ist in diesem Kontext nicht erlaubt. In Flash Player kann diese Methode nur während der Verarbeitung eines <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>-Ereignisses erfolgreich aufgerufen werden. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Objekt des Typs, der dem Datenformat entspricht.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zurückzugebende Datenformat. Der Formatstring kann einen der Standardnamen, der in der ClipboardFormats-Klasse enthalten ist, oder einen von der Anwendung definierten Namen enthalten.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">transferMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">originalPreferred</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob ein Verweis oder eine serialisierte Kopie zurückgegeben werden soll, wenn auf ein von der Anwendung definiertes Datenformat zugegriffen wird. Der Wert muss einer der Namen sein, die in der ClipboardTransferMode-Klasse definiert sind. Dieser Wert wird bei Standarddatenformaten ignoriert und es wird immer eine Kopie zurückgegeben.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ruft die Daten in der Zwischenablage ab, falls Daten im angegebenen Format vorhanden sind.
	
	<p class="- topic/p ">In Flash Player muss die <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph>-Methode in einer <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>-Ereignisprozedur aufgerufen werden. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.</p>
	
	<p class="- topic/p ">Wenn auf ein Standarddatenformat zugegriffen wird, werden die Daten als ein neues Objekt des entsprechenden Flash-Datentyps zurückgegeben.</p>
	
	<p class="- topic/p ">Wenn auf ein von der Anwendung definiertes Format zugegriffen wird, bestimmt der Wert des <codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph>-Parameters, ob ein Verweis auf das ursprüngliche Objekt oder ein anonymes Objekt mit einer serialisierten Kopie des ursprünglichen Objekts zurückgegeben wird. Wenn ein <codeph class="+ topic/ph pr-d/codeph ">originalPreferred</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">clonePreferred</codeph>-Modus festgelegt ist, geben Flash Player oder AIR die alternative Version zurück, wenn die ursprüngliche nicht verfügbar ist. Wenn ein <codeph class="+ topic/ph pr-d/codeph ">originalOnly</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">cloneOnly</codeph>-Modus festgelegt ist, geben Flash Player oder AIR <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück, wenn die angeforderte Version nicht verfügbar ist.</p>
	
	</apiDesc><example conref="examples\Clipboard.getData.1.as" class="- topic/example "> Im folgenden Beispiel wird Text aus der Systemzwischenablage gelesen, falls verfügbar:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;

 var pasteData:String = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String;
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setData()" class="- topic/link "><linktext class="- topic/linktext ">setData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:hasFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasFormat</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob in diesem Clipboard-Objekt Daten im angegebenen Format vorhanden sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das angeforderte Clipboard-Objekt befindet sich nicht mehr in diesem Bereich.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Lesen aus und Schreiben in die Zwischenablage ist in diesem Kontext nicht erlaubt.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn Daten im angegebenen Format vorliegen.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der zu überprüfende Formattyp.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob in diesem Clipboard-Objekt Daten im angegebenen Format vorhanden sind.
	
	<p class="- topic/p ">Verwenden Sie für Verweise auf Standardformatnamen die Konstanten der ClipboardFormats-Klasse.</p>
	
	</apiDesc><example conref="examples\Clipboard.hasFormat.1.as" class="- topic/example "> Im folgenden Beispiel wird die Systemzwischenablage überprüft, um festzustellen, ob textformatierte Daten verfügbar sind:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
if(Clipboard.generalClipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)){
    //do something 
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:setDataHandler" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDataHandler</apiName><shortdesc class="- topic/shortdesc ">
	Fügt eine Prozedurfunktion hinzu, die die zu übertragenden Daten produziert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">format</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">handler</codeph> hat den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das angeforderte Clipboard-Objekt befindet sich nicht mehr in diesem Bereich (nur AIR).
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Lesen aus und Schreiben in die Zwischenablage ist in diesem Kontext nicht erlaubt. In Flash Player können Sie diese Methode nur während der Verarbeitung eines durch den Benutzer ausgelösten Ereignisses (z. B. Tastendruck oder Mausklick) erfolgreich aufrufen. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Prozedur erfolgreich festgelegt wurde; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Funktion, die die zu übertragenden Daten zurückgibt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">handler</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Format der Daten. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">serializable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Geben Sie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> an, wenn das von <codeph class="+ topic/ph pr-d/codeph ">handler</codeph> zurückgegebene Objekt serialisierbar (und deserialisierbar) ist.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Fügt eine Prozedurfunktion hinzu, die die zu übertragenden Daten produziert.
	
	<p class="- topic/p ">Verwenden Sie eine Prozedurfunktion, um die Erstellung oder Wiedergabe der Daten zurückzustellen, bis tatsächlich auf sie zugegriffen wird.</p>
	
	<p class="- topic/p ">Die Prozedurfunktion muss den entsprechenden Datentyp für das angegebene Format zurückweisen:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Format</entry><entry class="- topic/entry ">Rückgabetyp</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.HTML_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph> (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.RICH_TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph> (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">Array von <codeph class="+ topic/ph pr-d/codeph ">File</codeph> (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_PROMISE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">Array von <codeph class="+ topic/ph pr-d/codeph ">File</codeph> (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Benutzerdefinierter Formatname</entry><entry class="- topic/entry ">Nicht ungültig</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p ">Die Prozedurfunktion wird nur dann aufgerufen, wenn die Daten im angegebenen Format gelesen werden. Beachten Sie, dass in einigen Fällen das Betriebssystem die Funktion aufruft, bevor ein Ablegen erfolgt. Wenn Sie zum Beispiel eine Prozedurfunktion verwenden, um die Daten für eine Datei, die aus einer AIR-Anwendung in das Betriebssystem gezogen wird, bereitzustellen, ruft das Betriebssystem die Datenprozedur auf, sobald die Ziehen-Geste die AIR-Anwendung verlässt. Dies führt normalerweise zu einer unerwünschten Pause, da die Dateidaten heruntergeladen oder erstellt werden. Sie können stattdessen eine URLFilePromise zu diesem Zweck verwenden.</p>
	 
	<p class="- topic/p ">Beachten Sie, dass die zugrunde liegenden Daten zwischen dem Hinzufügen der Prozedur und dem Lesen der Daten geändert werden können, falls Ihre Anwendung die Daten nicht schützt. Das Verhalten, das auftritt, wenn durch eine Prozedurfunktion dargestellte Daten in der Zwischenablage mehrmals gelesen werden, kann nicht garantiert werden. Die Zwischenablage gibt entweder die Daten zurück, die durch den ersten Funktionsaufruf generiert wurden, oder die Funktion wird erneut aufgerufen. Keine der beiden Verhaltensweisen kann garantiert werden.</p>
	
	
	<p class="- topic/p ">In der Anwendungssandbox von Adobe AIR kann <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph> jederzeit aufgerufen werden. In anderen Kontexten kann <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph> nur als Reaktion auf ein vom Benutzer generiertes Ereignis, zum Beispiel Tastenbetätigung oder Mausklick, aufgerufen werden.</p>
	
	<p class="- topic/p ">Wenn Sie diesem Clipboard-Objekt Daten direkt hinzufügen möchten, verwenden Sie stattdessen die <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>-Methode. Wenn sowohl die <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>- als auch die <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>-Methode mit demselben Formatnamen aufgerufen wird, wird die Prozedurfunktion nie aufgerufen.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Sie auf Mac OS den <codeph class="+ topic/ph pr-d/codeph ">format</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph> setzen, wird die URL nur übertragen, wenn die Prozedurfunktion eine gültige URL zurückgibt. Andernfalls wird das Clipboard-Objekt geleert (und das Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> ergibt <codeph class="+ topic/ph pr-d/codeph ">null</codeph>).</p>
	
	</apiDesc><example conref="examples\Clipboard.setDataHandler.1.as" class="- topic/example "> Im folgenden Beispiel wird der Systemzwischenablage über eine zurückgestellte Datenfunktion eine zufällige Zahl hinzugefügt:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 Clipboard.generalClipboard.setDataHandler(ClipboardFormats.TEXT_FORMAT, randomNumberGenerator);

 public function randomNumberGenerator():String{
     return Math.random().toString();
 }
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setData()" class="- topic/link "><linktext class="- topic/linktext ">setData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="" invalidHref="flash.desktop.URLFilePromise.xml" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.URLFilePromise</linktext></link></related-links></apiOperation><apiOperation id="flash.desktop:Clipboard:setData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setData</apiName><shortdesc class="- topic/shortdesc ">
	Fügt eine Darstellung der Informationen hinzu, die in das angegebene Datenformat übertragen werden sollen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das angeforderte Clipboard-Objekt befindet sich nicht mehr in diesem Bereich (was passieren kann, wenn Zwischenablagen für Drag-and-Drop-Vorgänge erstellt werden).
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Lesen aus und Schreiben in die Zwischenablage ist in diesem Kontext nicht erlaubt. In Flash Player können Sie diese Methode nur während der Verarbeitung eines durch den Benutzer ausgelösten Ereignisses (Tastendruck oder Mausklick) erfolgreich aufrufen. In AIR gilt diese Einschränkung nur für Inhalte außerhalb der Sicherheitssandbox der Anwendung.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">format</codeph> oder<codeph class="+ topic/ph pr-d/codeph ">data</codeph> hat den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Daten erfolgreich festgelegt wurden; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Gibt in Flash Player den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurück, wenn <codeph class="+ topic/ph pr-d/codeph ">format</codeph> ein nicht unterstütztes Mitglied der ClipboardFormats-Klasse ist. (Flash Player unterstützt nicht <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_PROMISE_LIST_FORMAT</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph>).
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Format der Daten.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die hinzuzufügenden Informationen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">serializable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Geben Sie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> an für Objekte, die serialisiert (und deserialisiert) sein können.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Fügt eine Darstellung der Informationen hinzu, die in das angegebene Datenformat übertragen werden sollen.
	
	<p class="- topic/p ">In der Anwendungssandbox von Adobe AIR kann <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> jederzeit aufgerufen werden. In anderen Kontexten kann <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph> nur als Reaktion auf ein vom Benutzer generiertes Ereignis, zum Beispiel Tastenbetätigung oder Mausklick, aufgerufen werden.</p>
	
	<p class="- topic/p ">Verschiedene Darstellungen derselben Informationen können der Zwischenablage in verschiedenen Formaten hinzugefügt werden, sodass anderen Komponenten oder Anwendungen die verfügbaren Daten mit größerer Wahrscheinlichkeit nutzen können. Ein Bild kann zum Beispiel in Form von Bitmapdaten für Bildbearbeitungsanwendungen hinzufügt werden, als URL und als codierte PNG-Datei für die Übertragung in das native Dateisystem.</p>
	
	<p class="- topic/p ">Der data-Parameter muss den entsprechenden Datentyp für das angegebene Format aufweisen:</p>
	<adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Format</entry><entry class="- topic/entry ">Typ</entry><entry class="- topic/entry ">Beschreibung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">Stringdaten</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.HTML_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">HTML-Stringdaten</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">String</codeph></entry><entry class="- topic/entry ">URL-String (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.RICH_TEXT_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph></entry><entry class="- topic/entry ">Rich Text Format-Daten</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.BITMAP_FORMAT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BitmapData</codeph></entry><entry class="- topic/entry ">Bitmapdaten (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.FILE_LIST_FORMAT</codeph></entry><entry class="- topic/entry ">Array von <codeph class="+ topic/ph pr-d/codeph ">File</codeph></entry><entry class="- topic/entry ">ein Dateiarray (nur AIR)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Benutzerdefinierter Formatname</entry><entry class="- topic/entry ">beliebig</entry><entry class="- topic/entry ">Objektverweis und serialisierter Klon</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p ">Benutzerdefinierte Formatnamen dürfen nicht mit „air:“ oder „flash:“ beginnen. Um Konflikte bei der Benennung zu vermeiden, wenn Sie benutzerdefinierte Formate verwenden, können Sie die Anwendungs-ID oder einen Paketnamen als Präfix für den Formatnamen verwenden, zum Beispiel „com.example.applicationName.dataPacket“.</p>
	
	<p class="- topic/p ">Beim Übertragen innerhalb von oder zwischen Anwendungen bestimmt der <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph>-Parameter, ob sowohl ein Verweis und eine Kopie verfügbar sind, oder ob nur ein Verweis auf ein Objekt verfügbar ist. Stellen Sie <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, damit sowohl ein Verweis als auch eine Kopie der Daten verfügbar sind. Stellen Sie <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, damit nur der Objektverweis verfügbar ist. Objektverweise sind nur innerhalb der aktuellen Anwendung gültig, sodass die Einstellung von <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> auch bedeutet, dass die Daten in diesem Format nicht für andere Flash Player- oder AIR-Anwendungen verfügbar sind. Eine Komponente kann wahlweise den Verweis oder die Objektkopie abrufen, indem der entsprechende Übertragungsmodus für die Zwischenablage eingestellt wird, wenn auf die Daten für dieses Format zugegriffen wird.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die Standardformate werden immer in native Formate konvertiert, wenn Daten außerhalb einer unterstützten Anwendung eingefügt oder gezogen werden, sodass der Wert des <codeph class="+ topic/ph pr-d/codeph ">serializable</codeph>-Parameters keinen Einfluss auf die Verfügbarkeit der Daten in Standardformaten für nicht Flash-basierte Anwendungen hat.</p>
	
	<p class="- topic/p ">Verwenden Sie stattdessen die <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>-Methode, um die Wiedergabe von Daten eines bestimmten Formats zurückzustellen. Wenn sowohl die <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>- als auch die <codeph class="+ topic/ph pr-d/codeph ">setDataHandler()</codeph>-Methode verwendet wird, um eine Datendarstellung mit demselben Formatnamen hinzuzufügen, wird die Prozedurfunktion nie aufgerufen.</p>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Sie auf Mac OS den <codeph class="+ topic/ph pr-d/codeph ">format</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">ClipboardFormats.URL_FORMAT</codeph> setzen, wird die URL nur übertragen, wenn es sich um eine gültige URL handelt. Andernfalls wird das Clipboard-Objekt geleert (und das Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> ergibt <codeph class="+ topic/ph pr-d/codeph ">null</codeph>).</p> 
	
	</apiDesc><example conref="examples\Clipboard.setData.1.as" class="- topic/example "> Im folgenden Beispiel werden der Systemzwischenablage Inhalte im Text- und HTML-Format hinzugefügt:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var htmlString:String = "&lt;html>&lt;body>Body content&lt;/body>&lt;/html>";
 Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, urlString);
 Clipboard.generalClipboard.setData(ClipboardFormats.HTML_FORMAT, urlString);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/setDataHandler()" class="- topic/link "><linktext class="- topic/linktext ">setDataHandler()</linktext></link><link href="flash.desktop.xml#Clipboard/getData()" class="- topic/link "><linktext class="- topic/linktext ">getData()</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#ClipboardTransferMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardTransferMode</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:Clipboard:formats:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">formats</apiName><shortdesc class="- topic/shortdesc ">
	Ein Array von Strings, das die Namen der Datenformate enthält, die in diesem Clipboard-Objekt verfügbar sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Array von Strings, das die Namen der Datenformate enthält, die in diesem Clipboard-Objekt verfügbar sind.
	
	<p class="- topic/p ">Stringkonstanten für die Namen der Standardformate sind in der ClipboardFormats-Klasse definiert. Auch andere durch die Anwendung definierte Strings können als Formatnamen für die Übertragung von Daten als Objekt verwendet werden.</p>
	
	</apiDesc><example conref="examples\Clipboard.formats.1.as" class="- topic/example "> Im folgenden Beispiel wird das <codeph class="+ topic/ph pr-d/codeph ">formats</codeph>-Array der Systemzwischenablage gelesen:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var availableFormats:Array = Clipboard.generalClipboard.formats;
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link></related-links></apiValue><apiValue id="flash.desktop:Clipboard:generalClipboard:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">generalClipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Die Zwischenablage des Betriebssystems.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:Clipboard</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Zwischenablage des Betriebssystems.
	 
	 <p class="- topic/p ">Alle Daten, die in die Zwischenablage kopiert werden, sind für andere Anwendungen verfügbar. Dazu kann auch unsicherer Remotecode gehören, der in einem Webbrowser ausgeführt wird.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> In Flash Player 10-Anwendungen erfordert ein Einfügevorgang aus der Zwischenablage ein durch den Benutzer ausgelöstes Ereignis (z. B. Tastaturbefehl, „Einfügen“-Befehl, Mausklick auf den „Einfügen“-Befehl in einem Kontextmenü). <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> gibt die Inhalte der Zwischenablage nur zurück, wenn das InteractiveObject ein paste-Ereignis erhalten hat und darauf reagiert. Unter anderen Bedingungen ist der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph> erfolglos. Dieselbe Einschränkung gilt in AIR für Inhalte außerhalb der Anwendungssandbox .</p>
	 
	 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph>-Objekt wird automatisch erstellt. Sie können dieser Eigenschaft keine weitere Clipboard-Instanz zuweisen. Verwenden Sie stattdessen die Methoden <codeph class="+ topic/ph pr-d/codeph ">getData()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">setData()</codeph>, um Daten in das vorhandene Objekt zu schreiben bzw. daraus zu lesen.</p>
	 
	 <p class="- topic/p ">Sie sollten die Zwischenablage immer leeren, bevor Sie neue Daten hineinschreiben, um sicher zu sein, dass alte Daten aller Formate gelöscht wurden.</p>
	 
	 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">generalClipboard</codeph>-Objekt kann nicht an den AIR-NativeDragManager übergeben werden. Erstellen Sie ein neues Clipboard-Objekt für native Drag&amp;Drop-Operationen in einer AIR-Anwendung.</p>
	 
	 </apiDesc><example conref="examples\Clipboard.generalClipboard.1.as" class="- topic/example "> Schreiben in die Betriebssystemzwischenablage:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var copy:String = "A string to copy to the system clipboard.";
 Clipboard.generalClipboard.clear();
 Clipboard.generalClipboard.setData(ClipboardFormats.TEXT_FORMAT, copy);
</codeblock></example><example conref="examples\Clipboard.generalClipboard.2.as" class="- topic/example "> Lesen aus der Betriebssystemzwischenablage:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.ClipboardFormats;
 
 var pasteData:String  = Clipboard.generalClipboard.getData(ClipboardFormats.TEXT_FORMAT) as String;
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.desktop:Clipboard:supportsFilePromise:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supportsFilePromise</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob das Zwischenablageformat der Dateizusage vom Clientsystem unterstützt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob das Zwischenablageformat der Dateizusage vom Clientsystem unterstützt wird. 
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NotificationType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NotificationType</apiName><shortdesc class="- topic/shortdesc ">
 Die NotificationType-Klasse definiert Konstanten für die Verwendung im priority-Parameter der bounce()-Methode von DockIcon und im type-Parameter der notifyUser()-Methode von NativeWindow.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><Defines>constants for the supported urgency ratings of a notification.
 
 </Defines></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NotificationType-Klasse definiert Konstanten für die Verwendung im <codeph class="+ topic/ph pr-d/codeph ">priority</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">bounce()</codeph>-Methode von DockIcon und im <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">notifyUser()</codeph>-Methode von NativeWindow.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#DockIcon/bounce()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.DockIcon.bounce()</linktext></link><link href="flash.display.xml#NativeWindow/notifyUser()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.notifyUser()</linktext></link></related-links><apiValue id="flash.desktop:NotificationType:CRITICAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CRITICAL</apiName><shortdesc class="- topic/shortdesc ">
	 Legt fest, dass eine Benachrichtigung eine kritische Benachrichtigung ist und der Benutzer sofort darauf reagieren sollte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">critical</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Legt fest, dass eine Benachrichtigung eine kritische Benachrichtigung ist und der Benutzer sofort darauf reagieren sollte.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NotificationType:INFORMATIONAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INFORMATIONAL</apiName><shortdesc class="- topic/shortdesc ">
	 Legt fest, dass eine Benachrichtigung eine Informationsbenachrichtigung ist und vom Benutzer ignoriert werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">informational</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Legt fest, dass eine Benachrichtigung eine Informationsbenachrichtigung ist und vom Benutzer ignoriert werden kann.
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:IFilePromise" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IFilePromise</apiName><shortdesc class="- topic/shortdesc ">
 Die IFilePromise-Schnittstelle definiert die Schnittstelle, die von der AIR-Laufzeitumgebung verwendet wird, um Daten für eine Dateizusage zu lesen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die IFilePromise-Schnittstelle definiert die Schnittstelle, die von der AIR-Laufzeitumgebung verwendet wird, um Daten für eine Dateizusage zu lesen.
 
 <p class="- topic/p ">Eine Dateizusage ist ein Drag-and-Drop-Zwischenablageformat, das es einem Benutzer ermöglicht, eine Datei, die noch nicht vorhanden ist, aus einer AIR-Anwendung zu ziehen. AIR verwendet die Methoden und Eigenschaften, die von der IFilePromise-Schnittstelle definiert werden, um auf die zu schreibenden Daten zuzugreifen, wenn die Dateizusage abgelegt wird.</p>
 
 <p class="- topic/p ">Wenn eine Dateizusage auf einem geeigneten Ziel abgelegt wird, ruft AIR die <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>-Methode von IFilePromise auf. Die Implementierung dieser Methode muss den Datenprovider als ein Objekt, das die IDataInput-Schnittstelle implementiert, zurückgeben. Das Providerobjekt kann eine der integrierten Klassen sein, zum Beispiel ByteArray, FileStream, Socket und URLStream, oder eine benutzerdefinierte Klasse.</p>
  
 <p class="- topic/p ">Wenn synchron auf die Daten vom Datenprovider zugegriffen wird, wie zum Beispiel bei einem ByteArray, liest AIR die Menge der Daten, die von der <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph>-Eigenschaft von IDataInput angegeben wird, und schreibt sie in die Zieldatei.</p>
 
 <p class="- topic/p ">Wenn asynchron auf die Daten vom Datenprovider zugegriffen wird, wie zum Beispiel bei einem Socket, verwendet AIR die Ereignisse, die vom Provider abgesetzt werden, um den Datenleseprozess zu steuern und die Daten in die Datei zu schreiben. Daten werden bei jedem Fortschrittsereignis gelesen, bis ein complete- oder close-Ereignis empfangen wird. Die Laufzeitumgebung wartet auf die folgenden Ereignisse (ein Datenprovider muss jedoch nicht jedes Ereignis absetzen):</p>
 <ul class="- topic/ul "><li class="- topic/li ">Event.OPEN</li><li class="- topic/li ">ProgressEvent.PROGRESS</li><li class="- topic/li ">ProgressEvent.SOCKET_DATA</li><li class="- topic/li ">Event.COMPLETE</li><li class="- topic/li ">Event.CLOSE</li><li class="- topic/li ">IOErrorEvent.IOERROR</li><li class="- topic/li ">SecurityErrorEvent.SECURITY_ERROR</li><li class="- topic/li ">HTTPStatusEvent.HTTP_STATUS</li><li class="- topic/li ">HTTPStatusEvent.HTTP_RESPONSE_STATUS</li></ul>
 
 <p class="- topic/p ">Benutzerdefinierte Datenproviderklassen sollten entweder ein <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignis oder ein <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>-Ereignis absetzen, wenn Daten verfügbar sind. Desgleichen sollte entweder ein <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> oder ein <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis abgesetzt werden, wenn alle erforderlichen Daten gelesen wurden. Die Fehlerereignisse informieren die Laufzeitumgebung darüber, dass die Datenübertragung fehlgeschlagen ist und abgebrochen werden sollte. Die anderen Ereignisse sollten wie angebracht abgesetzt werden, um bei der Fehlerverarbeitung und beim Debugging der Anwendungslogik helfen.</p>
 
 <p class="- topic/p "> Die von IFilePromise definierten Methoden sind nur dazu gedacht, von der AIR-Laufzeitumgebung aufgerufen zu werden, nachdem ein Drag-and-Drop-Vorgang abgeschlossen wurde. Entwickler sollten diese Methoden normalerweise nicht aus ihrem eigenen Code aufrufen. </p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die URLFilePromise-Klasse, verfügbar in der air.desktop-Bibliothek, implementiert die IFilePromise-Schnittstelle und verwendet den URLStream als Datenprovider. Die air.desktop-Bibliothek ist in Form separater SWF- und SWC-Dateien im AIR-SDK verfügbar.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.ClipboardFormats</linktext></link><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link></related-links><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
    Wird von der AIR-Laufzeitumgebung aufgerufen, wenn diese alle Daten gelesen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird von der AIR-Laufzeitumgebung aufgerufen, wenn diese alle Daten gelesen hat.
    
    <p class="- topic/p ">Es werden keine Methoden für den Objektverweis aufgerufen, der von der <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>-Methode zurückgegeben wird, nachdem die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode aufgerufen wurde. Das Datenproviderobjekt kann sicher gelöscht werden.</p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
    Gibt das Dataprovider-Objekt zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">IDataInput Ein Objekt, das die IDataInput-Schnittstelle implementiert. Wenn die Daten asynchron bereitgestellt werden, muss das zurückgegebene Objekt ebenfalls die IEventDispatcher-Schnittstelle implementieren.
    
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:IDataInput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt das Dataprovider-Objekt zurück.
    
    <p class="- topic/p ">Das Datenproviderobjekt muss die IDataInput-Schnittstelle implementieren, die Methoden zum Lesen der Daten definiert. Wenn die <codeph class="+ topic/ph pr-d/codeph ">isAsync</codeph>-Eigenschaft von IFilePromise <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgibt, muss das Datenproviderobjekt ebenfalls die IEventDispatcher-Schnittstelle implementieren. Die folgenden integrierten Klassen können als Datenprovider verwendet werden:</p>
    <ul class="- topic/ul "><li class="- topic/li ">ByteArray (synchron)</li><li class="- topic/li ">FileStream (synchron oder asynchron)</li><li class="- topic/li ">Socket (asynchron)</li><li class="- topic/li ">URLStream (asynchron)</li></ul>
    <p class="- topic/p ">Sie können auch ein Objekt einer benutzerdefinierten Klasse bereitstellen, die die erforderlichen Schnittstellen implementiert (oder eine andere Klasse erweitert, die sie implementiert).</p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:reportError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">reportError</apiName><shortdesc class="- topic/shortdesc ">
    Wird von der AIR-Laufzeitumgebung aufgerufen, um die IFilePromise-Implementierung über Fehler zu informieren, die beim Lesen von Daten aus dem Dataprovider-Objekt auftreten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">e</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:ErrorEvent</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Fehlerereignis, das ausführliche Fehlerinformationen enthält.
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Wird von der AIR-Laufzeitumgebung aufgerufen, um die IFilePromise-Implementierung über Fehler zu informieren, die beim Lesen von Daten aus dem Dataprovider-Objekt auftreten.
     
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:isAsync:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAsync</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die asynchrone Datenübertragung unterstützt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die asynchrone Datenübertragung unterstützt wird.
    
    <p class="- topic/p ">Bei dem Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> muss das von der <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>-Methode zurückgegebene Datenproviderobjekt die IEventDispatcher-Schnittstellen implementieren (oder eine Klasse erweitern, die diese Schnittstelle implementiert). Die Datenübertragung wird von <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>-Ereignissen ermöglicht. AIR wartet auf diese Datenfortschrittereignisse, bis ein <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder ein <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis abgesetzt wird.</p>  
    
    <p class="- topic/p ">Wenn <codeph class="+ topic/ph pr-d/codeph ">isAsync</codeph> den Wert „false“ zurückgibt, geht die AIR-Laufzeitumgebung davon aus, dass alle Daten sofort verfügbar sind. In diesem Fall liest die Laufzeitumgebung die <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph>-Eigenschaft des Datenproviderobjekts, um die verfügbare Datenmenge zu bestimmen, und liest diese Datenmenge synchron.</p> 
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:IFilePromise:flash.desktop:IFilePromise:relativePath:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relativePath</apiName><shortdesc class="- topic/shortdesc ">
    Der relative Pfad und der Dateiname der Datei, die von dieser Dateizusage erstellt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">falls der relative Pfad ..- Abkürzungen verwendet, um ein oder mehrere übergeordnete Verzeichnisse des Ablageziels zu durchlaufen. 
	
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der relative Pfad und der Dateiname der Datei, die von dieser Dateizusage erstellt wird.
    
    <p class="- topic/p ">Diese Eigenschaft muss einen gültigen Pfad bereitstellen oder es wird ein Argumentfehler ausgegeben, wenn die Dateizusage abgelegt wird.</p>
    
    <p class="- topic/p ">Der Pfad kann Unterverzeichnisse enthalten, die basierend auf dem Ablegeziel aufgelöst werden. Die Unterverzeichnisse werden erstellt, falls erforderlich. Wenn Unterverzeichnisse einbezogen werden, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">File.separator</codeph>-Konstante, um das richtige Pfadtrennzeichen für das aktuelle Betriebssystem einzufügen. Die Verwendung der Kurzform .., um zu einem übergeordneten Verzeichnis zu navigieren, ist nicht zulässig. Bei einem Versuch wird ein Argumentfehler ausgegeben. Ungültige Dateisystemzeichen werden aus dem Pfad entfernt, ohne dass ein Fehler ausgegeben wird.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Damit Client-Code den Pfad festlegen kann, können Sie eine Setter-Funktion mit der folgenden Signatur implementieren: <codeph class="+ topic/ph pr-d/codeph ">function set relativePath( value:String ):void</codeph>.</p>
    
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeProcessStartupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessStartupInfo</apiName><shortdesc class="- topic/shortdesc ">
 Diese Klasse stellt die grundlegenden Informationen bereit, um einen Prozess auf dem Host-Betriebssystem zu starten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Diese Klasse stellt die grundlegenden Informationen bereit, um einen Prozess auf dem Host-Betriebssystem zu starten. Sie wird konstruiert und an die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode eines NativeProcess-Objekts übergeben.
 
 <p class="- topic/p ">Der Zugriff auf native Prozesse ist nur bei AIR-Anwendungen verfügbar, die mit nativen Installationsprogrammen installiert wurden (Anwendungen im Profil „erweiterter Desktop“).  </p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="NativeProcess.html#start()" class="- topic/link "><linktext class="- topic/linktext ">NativeProcess.html#start()</linktext></link></related-links><apiConstructor id="flash.desktop:NativeProcessStartupInfo:NativeProcessStartupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessStartupInfo</apiName><shortdesc class="- topic/shortdesc ">
	Konstruiert ein leeres NativeProcessStartupInfo-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Konstruiert ein leeres NativeProcessStartupInfo-Objekt.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.desktop:NativeProcessStartupInfo:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
	Die Befehlszeilenargumente, die beim Start an den Prozess übergeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Befehlszeilenargumente, die beim Start an den Prozess übergeben werden. 
	
	<p class="- topic/p ">Jeder String im <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Vektor wird als separates Argument an die ausführbare Datei übergeben, unabhängig davon, welche Zeichen der String enthält. Anders ausgedrückt, es gibt eine exakte Eins-zu-Eins-Entsprechung, es erfolgt keine Neuinterpretation. AIR stellt Zeichen, bei denen dies erforderlich ist (zum Beispiel Leerzeichen), automatisch ein Maskierungszeichen voran.</p>

	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcessStartupInfo:executable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">executable</apiName><shortdesc class="- topic/shortdesc ">
    Das File-Objekt, das auf eine ausführbare Datei auf dem Host-Betriebssystem verweist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn der angegebene Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist, wenn er auf ein Verzeichnis verweist oder wenn er auf eine nicht vorhandene Datei verweist.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das File-Objekt, das auf eine ausführbare Datei auf dem Host-Betriebssystem verweist. Dies sollte der vollständige Pfad zur der ausführbaren Datei sein, einschließlich der ggf. erforderlichen Erweiterung.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Um unter Mac OS eine ausführbare Datei innerhalb eines Anwendungspakets zu starten, muss der Pfad des File-Objekts den vollständigen Pfad der ausführbaren Datei (innerhalb des Pakets) enthalten, nicht nur den Pfad zu der Anwendungsdatei. </p>
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeProcessStartupInfo:workingDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">workingDirectory</apiName><shortdesc class="- topic/shortdesc ">
	Das File-Objekt, das auf das anfängliche Arbeitsverzeichnis für den neuen nativen Prozess verweist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">wenn der Wert nicht vorhanden ist oder kein Verzeichnis ist
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das File-Objekt, das auf das anfängliche Arbeitsverzeichnis für den neuen nativen Prozess verweist. Wenn ein Wert zugewiesen wird, bei dem <codeph class="+ topic/ph pr-d/codeph ">isDirectory</codeph> „false“ ist, wird ein ArgumentError ausgegeben.
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:SystemIdleMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemIdleMode</apiName><shortdesc class="- topic/shortdesc ">
	 Die SystemIdleMode-Klasse stellt Konstantenwerte für Systemleerlaufverhalten bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die SystemIdleMode-Klasse stellt Konstantenwerte für Systemleerlaufverhalten bereit. Diese Konstanten werden in der <codeph class="+ topic/ph pr-d/codeph ">systemIdleMode</codeph>-Eigenschaft der NativeApplication-Klasse verwendet.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/systemIdleMode" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.systemIdleMode</linktext></link></related-links><apiValue id="flash.desktop:SystemIdleMode:KEEP_AWAKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEEP_AWAKE</apiName><shortdesc class="- topic/shortdesc ">
		 Verhindert, dass das System in den Leerlaufmodus wechselt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keepAwake</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Verhindert, dass das System in den Leerlaufmodus wechselt.
		 
		 <p class="- topic/p ">Unter Android muss die Anwendung die Android-Berechtigungen für DISABLE_KEYGUARD und WAKE_LOCK im Anwendungsdeskriptor spezifizieren, andernfalls beachtet das Betriebssystem diese Einstellung nicht.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:SystemIdleMode:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
		 Das System folgt dem normalen Verhalten bei inaktivem Benutzer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das System folgt dem normalen Verhalten bei inaktivem Benutzer.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:ClipboardTransferMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ClipboardTransferMode</apiName><shortdesc class="- topic/shortdesc ">
 Die ClipboardTransferMode-Klasse definiert Konstanten für die Modi, die als Werte für den transferMode-Parameter der Clipboard.getData()-Methode verwendet werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Clipboard, ClipboardFormats and ClipboardTransferMode were all added to AIR 1.0. These are also being added, with some exceptions listed in this file, to FP10.
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Definiert Konstanten für die Zwischenablageübertragungsmodi. 
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die ClipboardTransferMode-Klasse definiert Konstanten für die Modi, die als Werte für den <codeph class="+ topic/ph pr-d/codeph ">transferMode</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">Clipboard.getData()</codeph>-Methode verwendet werden.
 
 <p class="- topic/p ">Der Übertragungsmodus gibt einen Hinweis darauf, ob ein Verweis oder eine Kopie zurückgegeben werden soll, wenn auf ein in der Zwischenablage enthaltenes Objekt zugegriffen wird.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard/getData()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard.getData()</linktext></link></related-links><apiValue id="flash.desktop:ClipboardTransferMode:CLONE_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLONE_ONLY</apiName><shortdesc class="- topic/shortdesc ">
    Das Clipboard-Objekt sollte nur eine Kopie zurückgeben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cloneOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das Clipboard-Objekt sollte nur eine Kopie zurückgeben.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:CLONE_PREFERRED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLONE_PREFERRED</apiName><shortdesc class="- topic/shortdesc ">
    Das Clipboard-Objekt gibt eine Kopie zurück, falls verfügbar, und einen Verweis, falls nicht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">clonePreferred</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das Clipboard-Objekt gibt eine Kopie zurück, falls verfügbar, und einen Verweis, falls nicht.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:ORIGINAL_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIGINAL_ONLY</apiName><shortdesc class="- topic/shortdesc ">
    Das Clipboard-Objekt sollte nur einen Verweis zurückgeben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">originalOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das Clipboard-Objekt sollte nur einen Verweis zurückgeben.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:ClipboardTransferMode:ORIGINAL_PREFERRED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIGINAL_PREFERRED</apiName><shortdesc class="- topic/shortdesc ">
    Das Clipboard-Objekt gibt einen Verweis zurück, falls verfügbar, und eine Kopie, falls nicht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">originalPreferred</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Das Clipboard-Objekt gibt einen Verweis zurück, falls verfügbar, und eine Kopie, falls nicht.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragManager" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragManager</apiName><shortdesc class="- topic/shortdesc ">
 Die NativeDragManager-Klasse koordiniert Drag &amp; Drop-Vorgänge.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NativeDragManager-Klasse koordiniert Ziehen-und-Ablegen-Vorgänge. Mit der nativen Ziehen-und-Ablegen-API können Sie es dem Benutzer ermöglichen, Daten durch Ziehen und Ablegen zwischen einer AIR-Anwendung und dem nativen Betriebssystem, zwischen zwei Anwendungen oder zwischen Komponenten einer einzelnen Anwendung zu kopieren.
 
 <p class="- topic/p ">Die folgenden Datentypen können übertragen werden:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Bitmaps</li><li class="- topic/li ">Dateien</li><li class="- topic/li ">Text</li><li class="- topic/li ">URL-Strings</li><li class="- topic/li ">Serialisierte Objekte</li><li class="- topic/li ">Objektverweise (nur gültig in der ursprünglichen Anwendung)</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Alle NativeDragManager-Mitglieder sind statisch. Es muss keine Instanz dieser Klasse erstellt werden.</p>
 
 <p class="- topic/p ">Ein Ziehen-und-Ablegen-Vorgang ist eine Bewegung auf der Benutzeroberfläche, die mit dem Klicken auf ein sichtbares Element beginnt, das dann an eine andere Position gezogen wird. Während der Ziehbewegung durch das AIR-Anwendungsfenster lösen interaktive Objekte in der Anzeigeliste native Ziehereignisse aus. Prozeduren für diese Ereignisse können Methoden der NativeDragManager-Klasse aufrufen, um anzuzeigen, ob das gezogene Element auf einem anderen Objekt abgelegt werden kann. Daraufhin ändert der NativeDragManager den Mauszeiger, sodass der Benutzer informiert wird.</p>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">AIR-Profilunterstützung:</i> Diese Funktion wird auf Geräten mit AIR für TV nicht unterstützt. Des Weiteren wird sie nicht auf allen mobilen Geräten unterstützt. Mit der <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.
 </p> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Ziehen-Aktionen</b></p>
 <p class="- topic/p ">Ziehen-und-Ablegen-Bewegungen werden normalerweise für drei Arten von Vorgängen, <i class="+ topic/ph hi-d/i ">Aktionen</i> genannt, verwendet. Da die Bedeutung dieser Aktionen vom Anwendungskontext abhängig ist, wird zur Laufzeit kein bestimmtes Verhalten bezüglich der Aktionen erzwungen. Mit der richtigen Implementierung der Aktionen können Sie die Benutzerfreundlichkeit der Anwendung jedoch verbessern.
 </p> 
 
 <p class="- topic/p ">Mögliche Aktionen sind:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Kopieren: Es wird eine Kopie der Daten erstellt. Das Original bleibt unverändert. (Beim Ziehen von Objekten innerhalb einer Anwendung sollte darauf geachtet werden, dass das Originalobjekt selbst und nicht ein Verweis auf dieses Objekt kopiert wird.)</li><li class="- topic/li ">Verschieben: Die Daten werden aus dem ursprünglichen Kontext in den vom Drop-Ziel definierten Kontext verschoben, zum Beispiel wenn ein Element aus einer Liste in eine andere verschoben wird.</li><li class="- topic/li ">Verknüpfen: Es wird ein Verweis auf die Originaldaten oder eine Verknüpfung damit erstellt. Das Element verbleibt dabei in seinem ursprünglichen Kontext.</li></ul>
 
 <p class="- topic/p ">Die zulässigen Aktionen können für eine Ziehbewegung festgelegt werden, indem ein <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph>-Parameter an den <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>-Aufruf übergeben wird, der den Ziehvorgang startet. Wenn kein <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph>-Parameter angegeben wird, sind alle Aktionen zulässig. Potenzielle Drop-Ziele können anhand der <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph>-Eigenschaft eines NativeDragEvent-Objekts überprüfen, welche Aktionen zulässig sind, und sollten kein Ablegen akzeptieren, das nur inkompatible Aktionen zulässt (dies wird von der Laufzeitumgebung jedoch nicht erzwungen).</p>
 
 <p class="- topic/p ">Wenn ein Ablageziel nur eine einzelne Aktion implementiert, kann das Objekt die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft von NativeDragManager sowohl in den Prozeduren für <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>- als auch für <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignisse setzen. Wird die Eigenschaft vor dem Ablegen gesetzt, kann der Ziehmanager den Mauszeiger aktualisieren, sodass die unterstützte Aktion angegeben wird und Benutzer davon abgehalten werden, mit Zusatztasten eine nicht unterstützte Aktion zu wählen. Handelt es sich bei der festgelegten Aktion nicht um eine der folgenden, so ist das Ablegen nicht erlaubt, selbst wenn das Ziel die <codeph class="+ topic/ph pr-d/codeph ">acceptDrop()</codeph>-Methode aufruft.</p>
 
 <p class="- topic/p ">Wenn das Ablegen akzeptiert wird, sollte ein potenzielles Ablageziel die gewählte Aktion anzeigen, indem die <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.dropAction</codeph>-Eigenschaft als Antwort auf das <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis gesetzt wird. Diese Aktion wird im <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis an das auslösende Anzeigeobjekt gemeldet. Wenn von einem Ablageziel keine Aktion festgelegt wurde, wird aus der Liste der zulässigen Aktionen in der folgenden Reihenfolge eine Standardaktion gewählt: Kopieren, Verschieben, Verknüpfen. Das auslösende Objekt ist für die Aktualisierung des internen Status als Folge der gewählte Aktion zuständig.</p> 
 
 <p class="- topic/p ">Stringkonstanten für die Aktionsnamen sind in der NativeDragActions-Klasse definiert.</p>
  
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Reihenfolge der Ereignisse</b></p>
 <p class="- topic/p ">Die Ziehbewegung beginnt mit dem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>-Methode innerhalb einer <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignisprozedur und wird in Reaktion auf Benutzeraktionen in der folgenden Ereignisreihenfolge fortgesetzt:</p>
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>-Ereignis: Wenn <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> aufgerufen wird, wird das als Parameter an die Methode übergebene interaktive Objekt zum Initiatorobjekt und löst ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>-Ereignis aus.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>-Ereignis: Während des Ziehens löst das Initiatorobjekt kontinuierlich <codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>-Ereignisse aus.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignisse: Wenn eine Ziehbewegung über ein interaktives Objekt verläuft, löst dieses Objekt ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>-Ereignis aus. Verweilt die Ziehbewegung über dem interaktiven Objekt, löst dieses kontinuierlich <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignisse aus. Als Antwort auf jedes dieser Ereignisse sollte ein Objekt, das ein potenzielles Drop-Ziel ist, die Eigenschaften des Ereignisobjekts überprüfen, um festzustellen, ob das Ablegen akzeptiert werden kann. Wenn das Datenformat und die zulässigen Aktionen geeignet sind, muss die Ereignisprozedur für diese Ereignisse <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph> aufrufen und dabei einen Verweis auf das Anzeigeobjekt übergeben, das als Ablageziel dient (normalerweise das Objekt, das das <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>-Ereignis ausgelöst hat). Der Benutzer kann das gezogene Element auf dem Ziel ablegen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>-Ereignis: Wenn eine Ziehbewegung über ein interaktives Objekt hinaus verläuft, löst das Objekt ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>-Ereignis aus. Wenn das Objekt von einem früheren Aufruf der <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph>-Methode als Ablageziel bestimmt wurde, ist dieser Aufruf nicht mehr gültig und <codeph class="+ topic/ph pr-d/codeph ">acceptDrop()</codeph> muss erneut aufgerufen werden, wenn die Bewegung wieder über das interaktive Objekt verläuft.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis: Das Zielanzeigeobjekt löst ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis aus, wenn der Benutzer die Maustaste über dem Objekt loslässt. Die Prozedur für dieses Ereignis kann auf die Daten in der <codeph class="+ topic/ph pr-d/codeph ">transferable</codeph>-Eigenschaft des Ereignisobjekts zugreifen und sollte die <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.dropAction</codeph>-Eigenschaft setzen, um anzugeben, welche Aktion vom Initiatorobjekt ausgeführt werden sollte.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>: Wenn der Benutzer am Ende einer Ziehbewegung die Maustaste loslässt, löst das Initiatorobjekt ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis aus (unabhängig davon, ob das Element tatsächlich abgelegt wird oder nicht). Die Prozedur für dieses Ereignis kann die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft des Ereignisobjekts überprüfen, um festzustellen, welche Änderungen am internen Datenstatus vorgenommen werden sollten, zum Beispiel das Entfernen eines Elements aus einer Liste, nachdem es in eine andere Liste gezogen wurdet. Wenn <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> die Einstellung <codeph class="+ topic/ph pr-d/codeph ">NativeDragActions.NONE</codeph> hat, wurde das gezogene Element nicht auf einem geeigneten Ziel abgelegt.</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Bewegungen zwischen Anwendungen</b></p>
 <p class="- topic/p ">Wenn ein Element aus einer Nicht-AIR-Anwendung in ein AIR-Anwendungsfenster gezogen wird, gibt es kein Initiatorobjekt, das die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> auslösen könnte. Davon abgesehen folgen die während der Bewegung ausgelösten Ereignisse demselben Muster wie bei einer Bewegung, die innerhalb derselben AIR-Anwendung stattfindet.</p>
 
 <p class="- topic/p ">Wenn ein Element aus einem AIR-Anwendungsfenster hinausgezogen wird, gibt es kein Zielobjekt, das die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>, <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph> auslösen könnte. Das Initiatorobjekt löst dennoch ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis aus, das die vom nativen Betriebssystem festgelegte Ziehaktion meldet (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, falls das Ablegen des Elements nicht akzeptiert wurde).</p>
 
 <p class="- topic/p ">Wenn ein Element aus einer AIR-Anwendung in eine andere gezogen wird, lösen die Initiator- und Zielanzeigeobjekte wie gewohnt Ereignisse in den jeweiligen Anwendungen aus.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Übertragen von Informationen</b></p>
 <p class="- topic/p ">Die Daten, die beim Ziehen und Ablegen übertragen werden, sind in einem Clipboard-Objekt enthalten. Dieses Datenobjekt wird dem Ziehvorgang mit der <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>-Methode hinzugefügt, die die Ziehbewegung startet. Potenzielle Ablageziele können auf das Clipboard-Objekt über die <codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph>-Eigenschaft des nativen Ziehereignisobjekts zugreifen. Nachdem ein Ziehvorgang begonnen hat, kann nur über die Ereignisprozedur des NativeDragEvent auf das Clipboard-Objekt zugegriffen werden. Bei allen anderen Zugriffsversuchen auf das Objekt kommt es zu einem Laufzeitfehler.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Sicherheitserwägungen</b></p>
 <p class="- topic/p ">Die Sicherheits-Sandboxen des Initiator- und des potenziellen Zielobjekts bestimmen, wie auf die gezogenen Daten zugegriffen werden kann. Wenn sich beide Objekte in derselben Sandbox befinden, kann von jedem NativeDragEvent-Objekt auf die Daten zugegriffen werden. Befinden sich die Initiator- und Zielobjekte dagegen in unterschiedlichen Sandboxen, kann nur in der Ziel-Sandbox innerhalb der Ereignisprozedur für das <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis auf die Daten zugegriffen werden. Andere native Ziehereignisprozeduren können weiterhin auf das in der <codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph>-Eigenschaft referenzierte Clipboard-Objekt zugreifen und ermitteln, welche Datenformate verfügbar sind. Das Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">clipboard.getData()</codeph>-Methode löst jedoch einen Sicherheitsfehler aus.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links><apiOperation id="flash.desktop:NativeDragManager:acceptDragDrop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">acceptDragDrop</apiName><shortdesc class="- topic/shortdesc ">
	 Informiert das NativeDragManager-Objekt , dass das angegebene interaktive Zielobjekt das Ablegen entsprechend des aktuellen Ziehereignisses akzeptiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">target</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Informiert das NativeDragManager-Objekt , dass das angegebene interaktive Zielobjekt das Ablegen entsprechend des aktuellen Ziehereignisses akzeptiert.
	 
     <p class="- topic/p ">Diese Methode sollte nur aufgerufen werden, wenn es im angegebenen Zielobjekt eine <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Prozedur gibt, die mindestens eines der Datenformate des gezogenen Elements und mindestens eine der zulässigen Aktionen verarbeiten kann.</p>
     
	 <p class="- topic/p ">Diese Funktion kann nur innerhalb einer <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignisprozedur aufgerufen werden.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.desktop:NativeDragManager:doDrag" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">doDrag</apiName><shortdesc class="- topic/shortdesc ">
	 Startet einen Ziehen-und-Ablegen-Vorgang.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dragInitiator</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Normalerweise das Objekt, bei dem die Ziehbewegung begann. Empfängt die <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignisse.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clipboard</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:Clipboard</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Containerobjekt für die gezogenen Daten.
	 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dragImage</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:BitmapData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein optionales Proxybild, das während der Ziehbewegung unter dem Mauszeiger angezeigt wird. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">null</codeph> wird kein Bild angezeigt.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Point</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Versatz zwischen dem Maus-Hotspot und der linken oberen Ecke des Ziehbilds. Bei negativen Koordinaten wird das Bild in Relation zum Hotspot nach links oben verschoben. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ist die linke obere Ecke des Ziehbilds beim Maus-Hotspot platziert. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">allowedActions</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeDragOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Beschränkt die für diesen Vorgang zulässigen Ziehen-und-Ablegen-Aktionen. Bei der Einstellung <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sind alle Aktionen zulässig.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Startet einen Ziehen-und-Ablegen-Vorgang.
	 
	 <p class="- topic/p ">So starten Sie einen Ziehvorgang:</p>
	 <ol class="- topic/ol "><li class="- topic/li ">Erstellen Sie ein neues Clipboard-Objekt.</li><li class="- topic/li ">Fügen Sie die zu übertragenden Daten in einem oder mehreren Formaten hinzu.</li><li class="- topic/li ">Erstellen Sie optional ein BitmapData-Objekt, das beim Ziehen als Proxybild dient.</li><li class="- topic/li ">Erstellen Sie optional ein NativeDragOptions-Objekt, um die für diesen Vorgang zulässigen Aktionen zu beschränken. (Wenn der <codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph>-Parameter den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat, sind alle Aktionen zulässig.)</li><li class="- topic/li ">Rufen Sie <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> auf.</li></ol>
	 
     <p class="- topic/p ">Das Initiatorobjekt löst ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>-Ereignis aus, nachdem diese Methode aufgerufen wurde, <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>-Ereignisse, während das Element gezogen wird, und ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis, wenn der Benutzer die Maustaste loslässt und die Ziehbewegung damit beendet. Die Prozedur für das <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis kann die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft des Ereignisses überprüfen, um festzustellen, ob der Ziehen-und-Ablegen-Vorgang erfolgreich abgeschlossen wurde. Wenn <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> die Einstellung <codeph class="+ topic/ph pr-d/codeph ">NativeDragActions.NONE</codeph> hat, wurde das gezogene Element nicht auf einem geeigneten Ziel abgelegt.</p>
	 
     <p class="- topic/p ">Diese Methode kann nur von einer <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignisprozedur aufgerufen werden. (Erfolgt der Aufruf als Antwort auf ein <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignis, muss die Maustaste gedrückt sein.)</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:NativeDragManager:dragInitiator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dragInitiator</apiName><shortdesc class="- topic/shortdesc ">
	Das interaktive Objekt, das an den NativeDragManager.doDrag()-Aufruf übergeben wird, der den Ziehvorgang eingeleitet hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das interaktive Objekt, das an den <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>-Aufruf übergeben wird, der den Ziehvorgang eingeleitet hat.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragManager:dropAction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dropAction</apiName><shortdesc class="- topic/shortdesc ">
	Die vom Drop-Ziel angegebene Ziehen-Aktion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vom Drop-Ziel angegebene Ziehen-Aktion.
	 
     <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft sollte in der Prozedur für das <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis festgelegt werden. Wird die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft nicht vor <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> eingestellt, legt NativeDragManager den Wert fest anhand der ersten erlaubten Aktion der folgenden Liste: Kopieren, Verschieben oder Verknüpfen (in dieser Reihenfolge).</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiValue><apiValue id="flash.desktop:NativeDragManager:isDragging:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDragging</apiName><shortdesc class="- topic/shortdesc ">
	Meldet, ob zurzeit ein Ziehvorgang stattfindet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Meldet, ob zurzeit ein Ziehvorgang stattfindet.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragManager:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Die isSupported-Eigenschaft hat den Wert „true“, wenn die NativeDragManager-Klasse von der aktuellen Plattform unterstützt wird, andernfalls hat sie den Wert „false“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Meldet, ob native Drag-and-Drop-Operationen unterstützt werden.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph>-Eigenschaft hat den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die NativeDragManager-Klasse von der aktuellen Plattform unterstützt wird, andernfalls hat sie den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:NativeDragOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragOptions</apiName><shortdesc class="- topic/shortdesc ">
 Die NativeDragOptions-Klasse definiert Konstanten für die Namen von Ziehen-und-Ablegen-Aktionen, die in Ziehen-und-Ablegen-Vorgängen erlaubt sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die NativeDragOptions-Klasse definiert Konstanten für die Namen von Ziehen-und-Ablegen-Aktionen, die in Ziehen-und-Ablegen-Vorgängen erlaubt sind.
 
 <p class="- topic/p ">Ziehaktionen sind Teil eines Rückmeldungsmechanismus, um dem auslösenden Objekt und dem Zielobjekt die Zusammenarbeit beim Ziehen und Ablegen zu ermöglichen. Die Aktionen sind nur ein <i class="+ topic/ph hi-d/i ">Hinweis</i> für das Betriebssystem. Es liegt am Auslöser des Ziehvorgangs und an den Zielobjekten, die an der Transaktion beteiligt sind, das richtige Verhalten zu implementieren.</p>
 
 <p class="- topic/p ">Ein auslösendes Objekt sollte nur die Aktionen zulassen, die es auch unterstützt. Ein auslösendes Objekt sollte zum Beispiel nur dann die <i class="+ topic/ph hi-d/i ">move</i>-Aktion zulassen, wenn die interne Logik des Objekts die Quelldaten entfernt, wenn ein Ziel das Ablegen im Rahmen einer Verschiebungsaktion zulässt.</p>
 
 
 <p class="- topic/p ">Bei einem neuen NativeDragOptions-Objekt sind alle Eigenschaften auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> eingestellt (alle Aktionen sind zulässig).</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.events.xml#NativeDragEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeDragEvent</linktext></link></related-links><apiOperation id="flash.desktop:NativeDragOptions:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Konstruiert einen String, der die aktuellen Einstellungen dieses NativeDragOptions-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">String Die aktuellen Einstellungen dieses Objekts in einem String.
	 
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Konstruiert einen String, der die aktuellen Einstellungen dieses NativeDragOptions-Objekts enthält.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.desktop:NativeDragOptions:allowCopy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowCopy</apiName><shortdesc class="- topic/shortdesc ">
	Ein Ablegen-Ziel kann die gezogenen Daten kopieren.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Ablegen-Ziel kann die gezogenen Daten kopieren.
	
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragOptions:allowLink" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowLink</apiName><shortdesc class="- topic/shortdesc ">
	 Ein Ablegen-Ziel kann eine Verknüpfung mit den gezogenen Daten erstellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein Ablegen-Ziel kann eine Verknüpfung mit den gezogenen Daten erstellen.
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:NativeDragOptions:allowMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowMove</apiName><shortdesc class="- topic/shortdesc ">
	Ein Ablegen-Ziel kann die gezogenen Daten verschieben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Ablegen-Ziel kann die gezogenen Daten verschieben.
	
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:DockIcon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DockIcon</apiName><shortdesc class="- topic/shortdesc ">
	 Die DockIcon-Klasse stellt das Dock-Symbol im Mac OS X&amp;#xAE;-Stil dar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Das Dock-Symbol im Mac OS X-Stil.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.desktop:InteractiveIcon</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die DockIcon-Klasse stellt das Dock-Symbol im Mac OS X<sup class="+ topic/ph hi-d/sup ">®</sup>-Stil dar.
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Unterstützung von AIR-Profilen:</i> Diese Funktion wird auf allen Desktopbetriebssystemen unterstützt, jedoch nicht auf mobilen Geräten oder Geräten mit AIR für TV. Mit der <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.isSupported</codeph>-Eigenschaft können Sie testen, ob zur Laufzeit Unterstützung gegeben ist. Weitere Informationen zum AIR-Support über mehrere Profile finden Sie unter <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Unterstützung von AIR-Profilen</xref>.</p>
	 
	 <p class="- topic/p ">Mit der DockIcon-Klasse können Sie das Erscheinungsbild des Standardsymbols ändern. Sie können das Symbol zum Beispiel animieren oder Informationsgrafiken hinzufügen. Sie können dem Dock-Symbolmenü auch Elemente hinzufügen. Die hinzugefügten Menüelemente werden über den Standardmenüelementen angezeigt.</p>
	 
	 <p class="- topic/p ">Es kann keine Instanz der DockIcon-Klasse erstellt werden. Rufen Sie das Objekt, welches das Docksymbol des Betriebssystems darstellt, aus <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> ab.
	 </p>
	 
	 <p class="- topic/p ">Nicht alle Betriebssysteme verfügen über Docksymbole. Überprüfen Sie <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph>, um festzustellen, ob Dock-Symbole vom aktuellen System unterstützt werden. Wenn Dock-Symbole unterstützt werden, hat die <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>-Eigenschaft den Typ DockIcon. Andernfalls weist <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph> eine andere Unterklasse von InteractiveIcon auf, normalerweise SystemTrayIcon.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtig:</b> Beim Versuch, eine Methode der DockIcon-Klasse für das <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.icon</codeph>-Objekt aufzurufen, wird eine Laufzeitausnahme ausgelöst, wenn AIR keine Dock-Symbole unterstützt.</p>
	 
	 </apiDesc><example conref="examples\DockIconExample.as" class="- topic/example "> Im folgenden Beispiel wird eine Bildfolge geladen und das Symbolbild animiert, wenn der Timer mit dem Dock-Symbolmenü gestartet wird. (Damit das Beispiel funktioniert, müssen Sie einen Satz an Symbolbildern bereitstellen und die URLs im ImageURLs-Array ändern.)
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

 package {
    import flash.desktop.DockIcon;
    import flash.desktop.NativeApplication;
    import flash.display.Loader;
    import flash.display.NativeMenu;
    import flash.display.NativeMenuItem;
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.TimerEvent;
    import flash.net.URLRequest;
    import flash.utils.Timer;

    public class AnimatedDockIcon extends Sprite
    {
        private var imageURLs:Array =  ['gfx/frame01.png',
                                        'gfx/frame02.png',
                                        'gfx/frame03.png',
                                        'gfx/frame04.png'];
        
        private var images:Array = new Array();
        private var animTimer:Timer = new Timer(100);
                                        
        public function AnimatedDockIcon()
        {
            NativeApplication.nativeApplication.autoExit = false;
            
            addEventListener(Event.COMPLETE, loadImages);
            loadImages();
            
            animTimer.addEventListener(TimerEvent.TIMER,advanceFrame);
            addMenu();
            stage.nativeWindow.close();
        }
        
        private function addMenu():void{
            var menu:NativeMenu = new NativeMenu();
            var start:NativeMenuItem = menu.addItem(new NativeMenuItem("Start animation"));
            var stop:NativeMenuItem = menu.addItem(new NativeMenuItem("Stop animation"));
            start.addEventListener(Event.SELECT, startTimer);
            stop.addEventListener(Event.SELECT, stopTimer);
            
            var dockIcon:DockIcon =    NativeApplication.nativeApplication.icon as DockIcon;
            dockIcon.menu = menu;
        }
        
        private function startTimer(event:Event):void{
            animTimer.start();
        }

        private function stopTimer(event:Event):void{
            animTimer.stop();
        }

        private var currentFrame:int = 0;
        private function advanceFrame(event:Event):void{
            if(currentFrame &lt; images.length){
                currentFrame++;
            } else {
                currentFrame = 0;
            }
            NativeApplication.nativeApplication.icon.bitmaps = [images[currentFrame]];
        }
        

        private function loadImages(event:Event = null):void{
            if(event != null){
                images.push(event.target.content.bitmapData);
            }
            if(imageURLs.length > 0){
                var urlString:String = imageURLs.pop();
                var loader:Loader = new Loader();
                loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadImages, false, 0, true);
                loader.load(new URLRequest(urlString));
            } else {
                var complete:Event = new Event(Event.COMPLETE,false,false);
                dispatchEvent(complete);
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.icon</linktext></link><link href="flash.desktop.xml#NativeApplication/supportsDockIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.supportsDockIcon</linktext></link><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link></related-links><apiOperation id="flash.desktop:DockIcon:bounce" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bounce</apiName><shortdesc class="- topic/shortdesc ">
		 Benachrichtigt den Benutzer, dass ein Ereignis aufgetreten ist, das möglicherweise sein Eingreifen erfordert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDefaultValue>NotificationType.Informational
		 
		 </apiDefaultValue><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">informational</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Dringlichkeit, mit der das Docksymbol springt.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Benachrichtigt den Benutzer, dass ein Ereignis aufgetreten ist, das möglicherweise sein Eingreifen erfordert.
		 
		 <p class="- topic/p ">Beim Aufrufen dieser Methode beginnt das Dock-Symbol zu „springen“, jedoch nur, wenn sich die Anwendung im Hintergrund befindet. Wenn <codeph class="+ topic/ph pr-d/codeph ">priority</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">NotificationType.Informational</codeph> aufweist, springt das Symbol einmal. Wenn <codeph class="+ topic/ph pr-d/codeph ">priority</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">NotificationType.Critical</codeph> aufweist, springt das Symbol so lange, bis die Anwendung in den Vordergrund geholt wird.</p>
		 
		 </apiDesc><example conref="examples\DockIcon.bounce.1.as" class="- topic/example "> Im folgenden Beispiel springt das Dock-Symbol so lange, bis der Benutzer die Anwendung aktiviert.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.display.DockIcon;
 import flash.display.NotificationType;
 import flash.desktop.NativeApplication;

 if(NativeApplication.supportsDockIcon){
     var dockIcon:DockIcon = NativeApplication.nativeApplication.icon As DockIcon;
     dockIcon.bounce(NotificationType.CRITICAL);
 }
 
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NotificationType" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NotificationType</linktext></link><link href="flash.display.xml#NativeWindow/notifyUser()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.notifyUser()</linktext></link></related-links></apiOperation><apiValue id="flash.desktop:DockIcon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
        
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen. 
        </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        
		  
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.
	   
	 <p class="- topic/p ">Wenn ein Symbol in einem bestimmten Betriebssystemkontext angezeigt wird, wird die Bitmap aus dem Array verwendet, die der angezeigten Größe am nächsten kommt. Falls erforderlich, wird die Bitmap skaliert. Gebräuchliche Größen sind 16x16, 32x32, 48x48 und 128x128. (Mit einigen Betriebssystemen können in naher Zukunft Symbole in der Größe 512x512 Pixel verwendet werden.)</p>
	 
	 <p class="- topic/p ">In bestimmten Kontexten verwendet das Betriebssystem möglicherweise ein Standardsymbol, wenn der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft keine Eingabe zugewiesen wurde. In anderen Kontexten wird kein Symbol angezeigt.</p>
	 
	 <p class="- topic/p ">Um das Erscheinungsbild des Symbols festzulegen oder zu ändern, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein Array mit bitmapData-Objekten zu:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Das direkte Ändern des <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array hat keine Auswirkungen.</p>
	 
	 <p class="- topic/p ">Um das Symbolbild zu löschen, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein leeres Array zu.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Hinweis:</b> Beim Laden von Bilddateien für ein Symbol erzielen Sie die beste Alphamischung im Allgemeinen mit dem PNG-Dateiformat. Das GIF-Format unterstützt nur Transparenz oder keine Transparenz (keine Mischmodi). Das JPG-Format unterstützt keine Transparenz.  
	 </p>
	  
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:height:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Die aktuelle Anzeigehöhe des Symbols in Pixel.
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">height</codeph>-Eigenschaft gibt die Höhe des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigehöhe kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:menu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">menu</apiName><shortdesc class="- topic/shortdesc ">
		 Das vom System bereitgestellte Menü dieses Docksymbols.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:NativeMenu</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das vom System bereitgestellte Menü dieses Docksymbols.
		 
		 <p class="- topic/p ">Alle Elemente im Menü werden über den Standardelementen angezeigt. Die Standardelemente können nicht geändert oder entfernt werden.</p>
		 
		 </apiDesc><example conref="examples\DockIcon.menu.1.as" class="- topic/example "> Im folgenden Beispiel wird dem Dockmenü ein Element hinzugefügt:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 import flash.desktop.NativeApplication;
 import flash.events.Event;
 
private function createDockIconMenu():void{
    if(NativeApplication.supportsDockIcon){                
        var dockIcon:DockIcon = NativeApplication.nativeApplication.icon as DockIcon;
        
        var dockMenu:NativeMenu = new NativeMenu();
        var command:NativeMenuItem = dockMenu.addItem(new NativeMenuItem("Command"));
        command.addEventListener(Event.SELECT, onCommand);
        
        dockIcon.menu = dockMenu;
    }
}

 private function onCommand(event:Event):void{
     //do command...
 }
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.desktop:DockIcon:width:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc "> 
		
		 Die aktuelle Anzeigebreite des Symbols in Pixel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		
		 Die aktuelle Anzeigebreite des Symbols in Pixel. 
		 
		 <p class="- topic/p ">Einige Symbolkontexte unterstützen dynamische Größen. Die <codeph class="+ topic/ph pr-d/codeph ">width</codeph>-Eigenschaft gibt die Breite des Symbols an, das für den aktuellen Kontext aus dem <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array ausgewählt wurde. Die tatsächliche Anzeigebreite kann davon abweichen, falls das Betriebssystem das Symbol skaliert hat.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.desktop:Icon" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Icon</apiName><shortdesc class="- topic/shortdesc "> 
	 Die Icon-Klasse stellt ein Betriebssystemsymbol dar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Die Icon-Klasse stellt ein Betriebssystemsymbol dar. 
	 
	 <p class="- topic/p ">Ein Icon-Objekt hat eine Eigenschaft, <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>, die ein Array von BitmapData-Objekten darstellt. Es wird jeweils nur ein Bild angezeigt. Das Betriebssystem wählt das Bild aus, dessen Größe der aktuellen Anzeigegröße des Symbols am nächsten kommt; ggf. wird skaliert.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File.icon</linktext></link><link href="flash.display.xml#BitmapData" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData</linktext></link></related-links><apiValue id="flash.desktop:Icon:bitmaps:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmaps</apiName><shortdesc class="- topic/shortdesc "> 
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Das Symbolbild als ein Array von BitmapData-Objekten in verschiedenen Größen.
	   
	 <p class="- topic/p ">Wenn ein Symbol in einem bestimmten Betriebssystemkontext angezeigt wird, wird die Bitmap aus dem Array verwendet, die der angezeigten Größe am nächsten kommt. Falls erforderlich, wird die Bitmap skaliert. Gebräuchliche Größen sind 16x16, 32x32, 48x48 und 128x128. (Mit einigen Betriebssystemen können in naher Zukunft Symbole in der Größe 512x512 Pixel verwendet werden.)</p>
	 
	 <p class="- topic/p ">In bestimmten Kontexten verwendet das Betriebssystem möglicherweise ein Standardsymbol, wenn der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft keine Eingabe zugewiesen wurde. In anderen Kontexten wird kein Symbol angezeigt.</p>
	 
	 <p class="- topic/p ">Um das Erscheinungsbild des Symbols festzulegen oder zu ändern, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein Array mit bitmapData-Objekten zu:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 icon.bitmaps = new Array(icon16x16.bitmapData, icon128x128.bitmapData);
	 </codeblock>
	  
	 <p class="- topic/p ">Das direkte Ändern des <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Array hat keine Auswirkungen.</p>
	 
	 <p class="- topic/p ">Um das Symbolbild zu löschen, weisen Sie der <codeph class="+ topic/ph pr-d/codeph ">bitmaps</codeph>-Eigenschaft ein leeres Array zu.</p>
	 
	 <p class="- topic/p ">
	 <b class="+ topic/ph hi-d/b ">Hinweis:</b> Beim Laden von Bilddateien für ein Symbol erzielen Sie die beste Alphamischung im Allgemeinen mit dem PNG-Dateiformat. Das GIF-Format unterstützt nur Transparenz oder keine Transparenz (keine Mischmodi). Das JPG-Format unterstützt keine Transparenz.  
	 </p>
	  
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File/icon" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File.icon</linktext></link><link href="flash.display.xml#BitmapData" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData</linktext></link></related-links></apiValue></apiClassifier></apiPackage>