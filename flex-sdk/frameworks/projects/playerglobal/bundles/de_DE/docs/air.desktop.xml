<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="air.desktop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">air.desktop</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="air.desktop:URLFilePromise" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLFilePromise</apiName><shortdesc class="- topic/shortdesc ">
 Die URLFilePromise-Klasse ermöglicht, dass Ressourcen, die über eine URL zugänglich sind, als Dateizusage aus einer AIR-Anwendung gezogen werden können.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.desktop:IFilePromise</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die URLFilePromise-Klasse ermöglicht, dass Ressourcen, die über eine URL zugänglich sind, als Dateizusage aus einer AIR-Anwendung gezogen werden können.
 
 <p class="- topic/p ">Die URLFilePromise-Klasse implementiert die IFilePromise-Schnittstelle unter Verwendung von URLStream- und URLRequest-Objekten als Datenquelle. Die Implementierung bietet Drag-and-Drop-Unterstützung für Dateien, die mithilfe von HTTP oder anderen von der URLStream-Klasse unterstützten Protokollen abgerufen werden.</p>
 
 <p class="- topic/p ">So erstellen Sie eine URL-Dateizusage: </p>
 <ol class="- topic/ol "><li class="- topic/li ">Konstruieren und initialisieren Sie ein oder mehrere URLFilePromise-Objekte.</li><li class="- topic/li ">Fügen Sie die URLFilePromise-Objekte einem Array hinzu.</li><li class="- topic/li ">Fügen Sie das Array einem neuen Clipboard-Objekt hinzu, indem Sie ClipboardFormat, <codeph class="+ topic/ph pr-d/codeph ">FILE_PROMISE_LIST</codeph> verwenden.</li><li class="- topic/li ">Rufen Sie als Antwort auf eine Benutzergeste die <codeph class="+ topic/ph pr-d/codeph ">startDrag()</codeph>-Methode von NativeDragManager auf, wobei Sie das Clipboard-Objekt übergeben, das das Array von Dateizusagen enthält.</li></ol>
 
 <p class="- topic/p ">Wenn der Benutzer den Ziehen-Vorgang abschließt, lädt die Laufzeitumgebung die Daten für jede Dateizusage herunter. Die Daten werden an der von der <codeph class="+ topic/ph pr-d/codeph ">request</codeph>-Eigenschaft des URLFilePromise-Objekts angebebenen URL aufgerufen und in der von der <codeph class="+ topic/ph pr-d/codeph ">relativePath</codeph>-Eigenschaft angegebenen Datei gespeichert. Die Datei wird relativ zu ihrer Ablageposition gespeichert. Wenn der relative Pfad <codeph class="+ topic/ph pr-d/codeph ">foo/bar.txt</codeph> ist und die Dateizusage in einem Verzeichnis namens <codeph class="+ topic/ph pr-d/codeph ">home</codeph> abgelegt wird, ist der Speicherort der erstellten Datei demzufolge: <codeph class="+ topic/ph pr-d/codeph ">home/foo/bar.txt</codeph>. Wenn ein Fehler auftritt, wird die Datei nicht erstellt.</p>
 
 <p class="- topic/p ">Um Datenquellen zu unterstützen, auf die nicht über die URLStream-Klasse zugegriffen werden kann, implementieren Sie die IFilePromise-Schnittstelle.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die AIR-Laufzeitumgebung ruft die IFilePromise-Methoden <codeph class="+ topic/ph pr-d/codeph ">open()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">reportError()</codeph> automatisch auf. Diese Methoden sollten niemals von Ihrer Anwendungslogik aufgerufen werden. In ähnlicher Weise werden die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>, <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> und <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, die von diesem URLFilePromise-Objekt abgesetzt werden, hauptsächlich für Debugging-Zwecke bereitgestellt. Ihre Anwendung braucht nicht auf diese Ereignisse zu reagieren.</p>
 
 <p class="- topic/p ">Diese Klasse ist in der Datei „aircore.swc“ enthalten. Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Builder lädt diese Klasse automatisch, wenn Sie ein Projekt für Adobe <sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">™</sup> erstellen. Das Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex<sup class="+ topic/ph hi-d/sup ">™</sup> SDK enthält ebenfalls die Datei „aircore.swc“, die Sie beim Kompilieren der Anwendung einschließen sollten, wenn Sie das Flex SDK verwenden.
 </p>
 
 <p class="- topic/p ">So verwenden Sie das air.desktop-Paket in Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Professional (CS4 oder höher): </p>
 
 <ol class="- topic/ol "><li class="- topic/li ">Wählen Sie „Datei“ > „Einstellungen für Veröffentlichungen“.</li><li class="- topic/li ">Klicken Sie im Flash-Bedienfeld auf die Schaltfläche „Einstellungen“ für ActionScript 3.0. Wählen Sie „Bibliothekspfad“.</li><li class="- topic/li ">Klicken Sie auf die Schaltfläche „Zur SWC-Datei navigieren“. Navigieren Sie zur Datei „Adobe Flash CS<i class="+ topic/ph hi-d/i ">n</i>/AIK<i class="+ topic/ph hi-d/i ">n.n</i>/frameworks/libs/air/aircore.swc“ im Adobe Flash Professional-Installationsordner.</li><li class="- topic/li ">Klicken Sie auf „OK“.</li><li class="- topic/li ">Fügen Sie dem ActionScript 3.0-Code folgende <codeph class="+ topic/ph pr-d/codeph ">import</codeph>-Anweisung hinzu: <codeph class="+ topic/ph pr-d/codeph ">import air.desktop.~~;</codeph></li></ol>
 
 
 
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#IFilePromise" class="- topic/link "><linktext class="- topic/linktext ">IFilePromise-Schnittstelle</linktext></link><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">Clipboard-Klasse</linktext></link><link href="flash.desktop.xml#ClipboardFormats" class="- topic/link "><linktext class="- topic/linktext ">ClipboardFormats-Klasse</linktext></link><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">NativeDragManager-Klasse</linktext></link><link href="flash.net.xml#URLStream" class="- topic/link "><linktext class="- topic/linktext ">URLStream-Klasse</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest-Klasse</linktext></link></related-links><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
Wird ausgelöst, wenn ein Sicherheitsfehler den Dateidownload verhindert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird ausgelöst, wenn ein Sicherheitsfehler den Dateidownload verhindert. 

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
Wird für HTTP-Anforderungen ausgelöst, um den Anforderungsstatuscode zu melden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird für HTTP-Anforderungen ausgelöst, um den Anforderungsstatuscode zu melden.

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
Wird für HTTP-Anforderungen ausgelöst, um die Antwort-Header zu melden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird für HTTP-Anforderungen ausgelöst, um die Antwort-Header zu melden. 

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
Wird abgesetzt, wenn ein IOError den Dateidownload verhindert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird abgesetzt, wenn ein IOError den Dateidownload verhindert. 

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
Wird ausgelöst, wenn ein Datenblock zum Lesen aus dem zugrundeliegenden URLStream verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird ausgelöst, wenn ein Datenblock zum Lesen aus dem zugrundeliegenden URLStream verfügbar ist. 

<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die AIR-Laufzeitumgebung verwendet dieses Ereignis, um den asynchronen Datenabruf zu verwalten. Normalerweise besteht für Ihre Anwendung keinerlei Notwendigkeit, als Reaktion auf dieses Ereignis Aktionen auszuführen.</p>

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
Wird ausgelöst, wenn die Daten für die Datei vollständig heruntergeladen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird ausgelöst, wenn die Daten für die Datei vollständig heruntergeladen wurden. 

<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die AIR-Laufzeitumgebung verwendet dieses Ereignis, um den asynchronen Datenabruf zu verwalten. Normalerweise besteht für Ihre Anwendung keinerlei Notwendigkeit, als Reaktion auf dieses Ereignis Aktionen auszuführen.</p>

</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.desktop:URLFilePromise_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
Wird ausgelöst, wenn die zugrundeliegende URLStream-Verbindung geöffnet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Wird ausgelöst, wenn die zugrundeliegende URLStream-Verbindung geöffnet wird. 

<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die AIR-Laufzeitumgebung verwendet dieses Ereignis, um den asynchronen Datenabruf zu verwalten. Normalerweise besteht für Ihre Anwendung keinerlei Notwendigkeit, als Reaktion auf dieses Ereignis Aktionen auszuführen.</p>

</apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.desktop:URLFilePromise:URLFilePromise" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLFilePromise</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein URLFilePromise-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein URLFilePromise-Objekt.
    
    <p class="- topic/p ">Sie müssen die <codeph class="+ topic/ph pr-d/codeph ">request</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">relativePath</codeph>-Eigenschaft festlegen, bevor Sie dieses URLFilePromise-Objekt verwenden.</p>
    
 	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.desktop:URLFilePromise:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung die Datenquelle zur richtigen Zeit während des Drag-and-Drop-Vorgangs schließt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung die Datenquelle zur richtigen Zeit während des Drag-and-Drop-Vorgangs schließt.
    
    <p class="- topic/p ">Rufen Sie diese Funktion nicht in Ihrer Anwendungslogik aus. </p>
    
 	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.desktop:URLFilePromise:open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung die Datenquelle zur richtigen Zeit während des Drag-and-Drop-Vorgangs öffnet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:IDataInput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung die Datenquelle zur richtigen Zeit während des Drag-and-Drop-Vorgangs öffnet.
    
    <p class="- topic/p ">Rufen Sie diese Funktion nicht in Ihrer Anwendungslogik aus. </p>
    
 	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.desktop:URLFilePromise:reportError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">reportError</apiName><shortdesc class="- topic/shortdesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung Fehler meldet, die während des Drag-and-Drop-Vorgangs auftreten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">e</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:ErrorEvent</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Lässt zu, dass die AIR-Laufzeitumgebung Fehler meldet, die während des Drag-and-Drop-Vorgangs auftreten.
    
    <p class="- topic/p ">Das URLFilePromise-Objekt setzt alle gemeldeten Fehlerereignisse erneut ab. Rufen Sie diese Funktion nicht in Ihrer Anwendungslogik aus. </p>
    
 	</apiDesc></apiOperationDetail></apiOperation><apiValue id="air.desktop:URLFilePromise:isAsync:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAsync</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die Ressourcendaten asynchron verfügbar sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die Ressourcendaten asynchron verfügbar sind.
     
    <p class="- topic/p ">Die isAsync-Eigenschaft eines URLFilePromise-Objekts ist immer <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, da URL-Streams naturgemäß asynchron sind.</p>
    
 	</apiDesc></apiValueDetail></apiValue><apiValue id="air.desktop:URLFilePromise:relativePath:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relativePath</apiName><shortdesc class="- topic/shortdesc "> 
    Der Pfad und der Dateiname der erstellten Datei relativ zur Ablegeposition. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Der Pfad und der Dateiname der erstellten Datei relativ zur Ablegeposition. 
    
    <p class="- topic/p ">Der Pfad kann Unterverzeichnisse enthalten, die basierend auf dem Ablegeziel aufgelöst werden. Die Unterverzeichnisse werden erstellt, falls erforderlich. Wenn Unterverzeichnisse einbezogen werden, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">File.separator</codeph>-Konstante, um das richtige Pfadtrennzeichen für das aktuelle Betriebssystem einzufügen. Die Verwendung der Kurzform .., um zu einem übergeordneten Verzeichnis zu navigieren, ist nicht zulässig.</p>
    
    <p class="- topic/p ">Der Dateiname muss nicht mit dem Dateinamen der Remoteressource identisch sein. </p>
    
 	</apiDesc></apiValueDetail></apiValue><apiValue id="air.desktop:URLFilePromise:request:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">request</apiName><shortdesc class="- topic/shortdesc "> 
    Der URLRequest, der die Ressource identifiziert, die als Ergebnis des Drag-and-Drop-Vorgangs kopiert werden soll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:URLRequest</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Der URLRequest, der die Ressource identifiziert, die als Ergebnis des Drag-and-Drop-Vorgangs kopiert werden soll.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>