<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.events" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.events:NetMonitorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitorEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein NetMonitor-Objekt setzt NetMonitorEvent-Objekte ab, wenn ein NetStream-Objekt erstellt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein NetMonitor-Objekt setzt NetMonitorEvent-Objekte ab, wenn ein NetStream-Objekt erstellt wird.
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:NetMonitorEvent:NET_STREAM_CREATE_netStreamCreate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStreamCreate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NetMonitorEvent:NET_STREAM_CREATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NetMonitorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:NetMonitorEvent:NetMonitorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über netStreamCreate-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Ereignistyp: <codeph class="+ topic/ph pr-d/codeph ">NetMonitorEvent.NET_STREAM_CREATE</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netStream</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das neue NetStream-Objekt, das erstellt wurde. Ereignis-Listener können über die <codeph class="+ topic/ph pr-d/codeph ">netStream</codeph>-Eigenschaft auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für NetMonitorEvent-Objekte.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über netStreamCreate-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetMonitorEvent/NET_STREAM_CREATE" class="- topic/link "><linktext class="- topic/linktext ">NetMonitorEvent.NET_STREAM_CREATE</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:NetMonitorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
 	 Erstellt eine Kopie des NetMonitorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NetMonitorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Erstellt eine Kopie des NetMonitorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetMonitorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt einen String zurück, der alle Eigenschaften des NetMonitorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des NetMonitorEvent-Objekts enthält.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt einen String zurück, der alle Eigenschaften des NetMonitorEvent-Objekts enthält. Das folgende Format wird verwendet:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetMonitorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> netStream=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetMonitorEvent:NET_STREAM_CREATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NET_STREAM_CREATE</apiName><shortdesc class="- topic/shortdesc ">
	 Die NetMonitorEvent.NET_STREAM_CREATE-Konstante definiert den Wert der type-Eigenschaft eines netStreamCreate-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">netStreamCreate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">NetMonitorEvent.NET_STREAM_CREATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph>-Ereignisobjekts. 
	 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph>-Ereignis hat folgende Eigenschaften:</p>
	  <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netStream</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt, das erstellt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, das eine Sitzung beginnt oder beendet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetMonitorEvent:netStream:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">netStream</apiName><shortdesc class="- topic/shortdesc ">
 	 Das neue NetStream-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStream</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Das neue NetStream-Objekt.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TimerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TimerEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein Timer-Objekt löst ein TimerEvent-Objekt aus, wenn das Timer-Objekt das von der Timer.delay-Eigenschaft angegebene Intervall erreich.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für Timer-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein Timer-Objekt löst ein TimerEvent-Objekt aus, wenn das Timer-Objekt das von der <codeph class="+ topic/ph pr-d/codeph ">Timer.delay</codeph>-Eigenschaft angegebene Intervall erreich.
 
 </apiDesc><example conref="examples\TimerEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klasse „TimerExample“ erläutert, wie die Listener-Methode <codeph class="+ topic/ph pr-d/codeph ">timerHandler()</codeph> instanziiert und für auszulösende neue „TimerEvent“-Ereignisse (bei Aufruf der Timer-Methode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>) konfiguriert werden kann.  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.utils.Timer;
    import flash.events.TimerEvent;
    import flash.display.Sprite;

    public class TimerEventExample extends Sprite {

        public function TimerEventExample() {
            var myTimer:Timer = new Timer(1000, 2);
            myTimer.addEventListener(TimerEvent.TIMER, timerHandler);
            myTimer.start();
        }

        public function timerHandler(event:TimerEvent):void {
            trace("timerHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer</linktext></link></related-links><adobeApiEvent id="flash.events:TimerEvent:TIMER_COMPLETE_timerComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">timerComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TimerEvent:TIMER_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TimerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timerComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timerComplete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TimerEvent:TIMER_timer" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">timer</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TimerEvent:TIMER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TimerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timer</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TimerEvent:TimerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TimerEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für timer-Ereignisse wichtig sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt eine Bubbling-Phase durchführt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für TimerEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für <codeph class="+ topic/ph pr-d/codeph ">timer</codeph>-Ereignisse wichtig sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:TimerEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des TimerEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues TimerEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des TimerEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TimerEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des TimerEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des TimerEvent-Objekts enthält.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des TimerEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph "> [TimerEvent type= <i class="+ topic/ph hi-d/i ">value</i> bubbles= <i class="+ topic/ph hi-d/i ">value</i> cancelable= <i class="+ topic/ph hi-d/i ">value</i> ] </codeph></p>
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TimerEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Weist Flash Player oder die AIR-Laufzeitumgebung nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Weist <ph class="- topic/ph ">Flash Player oder </ph>die AIR-Laufzeitumgebung nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.
 	
 	</apiDesc><example conref="examples\TimerEvent.updateAfterEventExample.as" class="- topic/example "> Nachstehend finden Sie ein Beispiel für die <codeph class="+ topic/ph pr-d/codeph ">TimerEvent.updateAfterEvent()</codeph>-Methode.   
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
function onTimer(event:TimerEvent):void {
    if (40 &lt; my_mc.x &amp;&amp; my_mc.x &lt; 375) {
        my_mc.x-= 50;
    } else {
        my_mc.x=374;
    }
    event.updateAfterEvent();
}

var moveTimer:Timer=new Timer(50,250);
moveTimer.addEventListener(TimerEvent.TIMER,onTimer);
moveTimer.start();
</codeblock></example></apiOperationDetail></apiOperation><apiValue id="flash.events:TimerEvent:TIMER_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TIMER_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der Eigenschaft „type“ eines timerComplete-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">timerComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">timerComplete</codeph>-Ereignisobjekts.
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Timer-Objekt, das seine Anforderungen abgearbeitet hat.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timerComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timerComplete</linktext></link></related-links></apiValue><apiValue id="flash.events:TimerEvent:TIMER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TIMER</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der Eigenschaft „type“ eines timer-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">timer</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">timer</codeph>-Ereignisobjekts.
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Timer-Objekt, das sein Intervall erreicht hat.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein IOErrorEvent-Objekt wird ausgelöst, wenn ein Eingabe- oder Ausgabevorgang aufgrund eines Fehlers fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für IOErrorEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein IOErrorEvent-Objekt wird ausgelöst, wenn ein Eingabe- oder Ausgabevorgang aufgrund eines Fehlers fehlschlägt.

<p class="- topic/p ">Sie können prüfen, ob error-Ereignisse ohne Listener vorliegen, indem Sie die Debugger-Version von Flash Player oder AIR Debug Launcher (ADL) verwenden. Es wird der String angezeigt, der vom <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Parameter des IOErrorEvent-Konstruktors definiert wird. </p>

</apiDesc><example conref="examples\IOErrorEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klasse <codeph class="+ topic/ph pr-d/codeph ">IOErrorEventExample</codeph> gezeigt, wie ein Fehlerereignisobjekt ausgelöst wird, wenn versucht wird, eine nicht vorhandene Datei zu laden. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Der Klassenkonstruktor erstellt eine neue Instanz eines URLLoader-Objekts und weist ihr die Variable <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> zu.</li><li class="- topic/li ">Mit der URLLoader-Instanz wird ein Ereignis-Listener vom Typ <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph> instanziiert, die mit der Abonnentenmethode <codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> verknüpft ist. Die Methode dient zum Drucken von Informationen über das Ereignis mithilfe der Methode <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.</li><li class="- topic/li ">Der Konstruktor erstellt eine neue Instanz eines URLRequest-Objekts (<codeph class="+ topic/ph pr-d/codeph ">request</codeph>) und übergibt dabei <codeph class="+ topic/ph pr-d/codeph ">MissingFile.xml</codeph>, damit der Dateiname und -speicherort bekannt sind.</li><li class="- topic/li ">Die Variable <codeph class="+ topic/ph pr-d/codeph ">request</codeph> wird anschließend an <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph> übergeben. Diese Methode versucht, die fehlende Datei zu laden. Da die Datei fehlt, sendet die Ereignisprozedur ein <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignis.</li></ol>
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweise:</b>
 <ul class="- topic/ul "><li class="- topic/li ">Für die Kompilierung der SWF-Datei müssen Sie die Option „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf lokale Dateien zugreifen“ einstellen.</li><li class="- topic/li ">Auf der Ebene der SWF-Datei darf sich keine Datei mit dem Namen „MissingFile.xml“ befinden. </li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.IOErrorEvent;
    import flash.net.URLLoader;
    import flash.net.URLRequest;

    public class IOErrorEventExample extends Sprite {
        public function IOErrorEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);

            var request:URLRequest = new URLRequest("MissingFile.xml");
            loader.load(request);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IOErrorEvent/IO_ERROR" class="- topic/link "><linktext class="- topic/linktext ">IO_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:IOErrorEvent:IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.ioError</linktext></link><link href="flash.media.xml#Sound/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.ioError</linktext></link><link href="flash.net.xml#SecureSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SecureSocket.ioError</linktext></link><link href="flash.net.xml#Socket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.ioError</linktext></link><link href="flash.net.xml#FileReference/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.ioError</linktext></link><link href="flash.net.xml#NetConnection/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.ioError</linktext></link><link href="flash.net.xml#NetStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.ioError</linktext></link><link href="flash.net.xml#URLLoader/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.ioError</linktext></link><link href="flash.net.xml#URLStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.ioError</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.ioError</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:IOErrorEvent:IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über ioError-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Eingabe/Ausgabe-Fehlerereignisses: <codeph class="+ topic/ph pr-d/codeph ">IOErrorEvent.IO_ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der als Fehlermeldung anzuzeigende Text. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine mit dem spezifischen Fehler verknüpfte Referenznummer (wird nur in Adobe AIR unterstützt). 
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für IOErrorEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IOErrorEvent/IO_ERROR" class="- topic/link "><linktext class="- topic/linktext ">IO_ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:IOErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des IOErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues IOErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des IOErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IOErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des IOErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des IOErrorEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des IOErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[IOErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i> errorID=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph> Die <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Eigenschaft ist nur in Adobe AIR verfügbar</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:IOErrorEvent:IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines ioError-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ioError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignisobjekts.
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Die Referenznummer des spezifischen Fehlers (nur AIR).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, bei dem der Eingabe/Ausgabe-Fehler auftritt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.ioError</linktext></link><link href="flash.media.xml#Sound/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.ioError</linktext></link><link href="flash.net.xml#SecureSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SecureSocket.ioError</linktext></link><link href="flash.net.xml#Socket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.ioError</linktext></link><link href="flash.net.xml#FileReference/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.ioError</linktext></link><link href="flash.net.xml#NetConnection/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.ioError</linktext></link><link href="flash.net.xml#NetStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.ioError</linktext></link><link href="flash.net.xml#URLLoader/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.ioError</linktext></link><link href="flash.net.xml#URLStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.ioError</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.ioError</linktext></link></related-links></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 Das standardErrorIoError-Ereignis wird abgesetzt, wenn beim Lesen von Daten aus dem standardError-Stream eines NativeProcess-Objekts ein Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das <codeph class="+ topic/ph pr-d/codeph ">standardErrorIoError</codeph>-Ereignis wird abgesetzt, wenn beim Lesen von Daten aus dem standardError-Stream eines NativeProcess-Objekts ein Fehler auftritt.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">Nein. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Die Verweisnummer, die dem spezifischen Fehler zugeordnet ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, bei dem der Fehler aufgetreten ist. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 Das standardInputIoError-Ereignis wird abgesetzt, wenn beim Schreiben von Daten in den standardInput-Stream eines NativeProcess-Objekts ein Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das <codeph class="+ topic/ph pr-d/codeph ">standardInputIoError</codeph>-Ereignis wird abgesetzt, wenn beim Schreiben von Daten in den standardInput-Stream eines NativeProcess-Objekts ein Fehler auftritt.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">Nein. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Die Verweisnummer, die dem spezifischen Fehler zugeordnet ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, bei dem der Fehler aufgetreten ist. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 Das standardOutputIoError-Ereignis wird abgesetzt, wenn beim Lesen von Daten aus dem standardOutput-Stream eines NativeProcess-Objekts ein Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das <codeph class="+ topic/ph pr-d/codeph ">standardOutputIoError</codeph>-Ereignis wird abgesetzt, wenn beim Lesen von Daten aus dem standardOutput-Stream eines NativeProcess-Objekts ein Fehler auftritt.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">Nein. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Die Verweisnummer, die dem spezifischen Fehler zugeordnet ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, bei dem der Fehler aufgetreten ist. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NetStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein NetConnection-, NetStream- oder SharedObject-Objekt löst NetStatusEvent-Objekte aus, wenn es seinen Status meldet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für NetStatusEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein NetConnection-, NetStream- oder SharedObject-Objekt löst NetStatusEvent-Objekte aus, wenn es seinen Status meldet. Es gibt nur einen Typ eines status-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.NET_STATUS</codeph>.

</apiDesc><example conref="examples\NetStatusEventExample.as" class="- topic/example "> Im folgenden Beispiel wird ein Video-Objekt mit den Klassen NetConnection und NetStream verwendet, um eine FLV-Datei zu laden und abzuspielen.
 <p class="- topic/p ">Bei diesem Beispiel wird die <codeph class="+ topic/ph pr-d/codeph ">netStatusHandler</codeph>-Methode als Listener für das NetStatusEvent-Ereignis <codeph class="+ topic/ph pr-d/codeph ">NetConnection.netStatus</codeph> registriert. Sobald der Status (Erfolg/Fehler) des <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>-Versuchs feststeht, wird diese Methode vom <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis ausgelöst. Wenn der Versuch, eine Verbindung zum NetConnection-Objekt herzustellen, erfolgreich ist (wenn also die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info</codeph> des vom <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignis ausgelösten NetStatusEvent-Objekts die <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft für Erfolg aufweist), werden die Video- und NetStream-Objekte erstellt und die Methoden <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> aufgerufen.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Zur Ausführung dieses Beispiels benötigen Sie eine FLV-Datei, deren Name und Speicherort mit der an <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph> übergebenen Variablen übereinstimmt. In diesem Fall ist das eine FLV-Datei mit dem Namen „Video.flv“, die in dem Ordner abgelegt ist, in dem sich die SWF-Datei befindet.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

 package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class NetStatusEventExample extends Sprite {
        private var videoURL:String = "Video.flv";
        private var connection:NetConnection;
        private var stream:NetStream;

        public function NetStatusEventExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            var video:Video = new Video();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
        
        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

    }
 }
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.net.xml#SharedObject" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject</linktext></link><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">NetStatusEvent.NET_STATUS</linktext></link></related-links><adobeApiEvent id="flash.events:NetStatusEvent:NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NetStatusEvent:NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NetStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link><link href="flash.net.xml#NetConnection/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.netStatus</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.netStatus</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.netStatus</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NetStatusEvent:NetStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt, das Informationen über netStatus-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines status-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.NET_STATUS</codeph>.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Objekt mit Eigenschaften, die den Status des Objekts beschreiben. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info</codeph> auf dieses Objekt zugreifen.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für NetStatusEvent-Objekte.
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt, das Informationen über <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.NET_STATUS</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:NetStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des NetStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NetStatusEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des NetStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt eine Zeichenfolge zurück, die alle Eigenschaften des NetStatusEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des NetStatusEvent-Objekts enthält.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt eine Zeichenfolge zurück, die alle Eigenschaften des NetStatusEvent-Objekts enthält. Der String liegt im folgenden Format vor:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetStatusEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> info=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetStatusEvent:NET_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NET_STATUS</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der Eigenschaft type eines netStatus-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">netStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>-Ereignisobjekts.
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">info</codeph></entry><entry class="- topic/entry ">Ein Objekt mit Eigenschaften, die den Status oder die Fehlerbedingung des Objekts beschreiben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetConnection- oder NetStream-Objekt, dessen Status protokolliert wird. </entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link><link href="flash.net.xml#NetConnection/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.netStatus</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.netStatus</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.netStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:NetStatusEvent:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Ein Objekt mit Eigenschaften, die den Status oder die Fehlerbedingung des Objekts beschreiben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Objekt mit Eigenschaften, die den Status oder die Fehlerbedingung des Objekts beschreiben.
     
     <p class="- topic/p ">Das Informationsobjekt kann eine <codeph class="+ topic/ph pr-d/codeph ">code</codeph>-Eigenschaft besitzen, in der eine Zeichenfolge enthalten ist, die ein bestimmtes Ereignis oder eine <codeph class="+ topic/ph pr-d/codeph ">level</codeph>-Eigenschaft darstellt, die wiederum eine <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph> lautende Zeichenfolge enthält. </p>
     
     <p class="- topic/p ">Das Informationsobjekt kann auch etwas anderes sein. Die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">code</codeph> und <codeph class="+ topic/ph pr-d/codeph ">level</codeph> funktionieren bei einigen Implementierungen möglicherweise nicht korrekt, und einige Server senden andere Objekte.  </p>
     
     <p class="- topic/p ">P2P-Verbindungen senden Meldungen an eine <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> mit einem <codeph class="+ topic/ph pr-d/codeph ">stream</codeph>-Parameter im Informationsobjekt, der angibt, zu welchem <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph> die Meldung gehört.</p>
     
     <p class="- topic/p ">Beispielsweise senden die Flex Data Services sogenannte Message-Objekte, die zu Fehlermeldungen führen, wenn Sie versuchen, auf eine der Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">code</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">level</codeph> zuzugreifen.</p>
     
     <p class="- topic/p ">In der folgenden Tabelle sind die möglichen Stringwerte der Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">code</codeph> und <codeph class="+ topic/ph pr-d/codeph ">level</codeph> aufgeführt.</p>
 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Code-Eigenschaft</entry><entry class="- topic/entry ">Level-Eigenschaft</entry><entry class="- topic/entry ">Bedeutung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.BadVersion"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Paket wurde in einem nicht erkannten Format kodiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>-Methode konnte die serverseitige Methode bzw. den serverseitigen Befehl nicht aufrufen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.Prohibited"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Ein Action Message Format (AMF)-Vorgang wurde aus Sicherheitsgründen verhindert. Entweder befindet sich die AMF URL nicht in derselben Domäne wie die Datei mit dem Code, der die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>-Methode aufruft, oder der AMF-Server hat keine Richtliniendatei, die die Domäne der Datei mit dem Code, der die <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>-Methode aufruft, als vertrauenswürdig einstuft. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.AppShutdown"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Die serverseitige Anwendung wird heruntergefahren.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Closed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die Verbindung wurde erfolgreich geschlossen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der Versuch zur Herstellung einer Verbindung ist fehlgeschlagen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.IdleTimeout"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Flash Media Server hat die Verbindung zum Client getrennt, da der Client länger als die für <codeph class="+ topic/ph pr-d/codeph ">&lt;MaxIdleTime></codeph> konfigurierte Zeit im Leerlauf war. Bei Flash Media Server ist <codeph class="+ topic/ph pr-d/codeph ">&lt;AutoCloseIdleClients></codeph> standardmäßig deaktiviert. Wenn die Funktion aktiviert ist, ist der Standardwert für die Zeitüberschreitung 3600 Sekunden (1 Stunde). Weitere Informationen finden Sie unter <xref href="http://help.adobe.com/en_US/flashmediaserver/configadmin/WS5b3ccc516d4fbf351e63e3d119f2925e64-7ff0.html#WS5b3ccc516d4fbf351e63e3d119f2925e64-7fe9" scope="external" class="- topic/xref ">Close idle connections</xref>. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.InvalidApp"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der Anwendungsname, der im Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> angegeben wurde, ist ungültig.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.NetworkChange"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry "><p class="- topic/p ">Flash Player hat eine Netzwerkänderung erkannt, zum Beispiel eine unterbrochene drahtlose Verbindung, ein erfolgreicher drahtloses Verbindungsaufbau oder ein abgetrenntes Netzwerkkabel.</p>
     <p class="- topic/p ">Verwenden Sie dieses Ereignis, um zu prüfen, ob es eine Netzwerkschnittstellenänderung gab. Verwenden Sie dieses Ereignis nicht, um Ihre NetConnection-Neuverbindungslogik zu implementieren. Ihre NetConnection-Neuverbindungslogik können Sie mit <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Closed"</codeph> implementieren.</p></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Rejected"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der Verbindungsversuch verfügt nicht über eine Berechtigung für den Zugriff auf die Anwendung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Versuch zur Herstellung einer Verbindung war erfolgreich.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Connect_Failed" name="code_NetGroup_Connect_Failed" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Failed"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der Versuch zur Herstellung einer NetGroup-Verbindung ist fehlgeschlagen. Die <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph>-Eigenschaft gibt an, welche NetGroup fehlgeschlagen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Connect_Rejected" name="code_NetGroup_Connect_Rejected" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Rejected"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Die NetGroup ist nicht autorisiert zu funktionieren. Die <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph>-Eigenschaft gibt an, welche NetGroup abgelehnt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref name="code_NetGroup_Connect_Success" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Succcess"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die NetGroup wurde erfolgreich konstruiert und zum Funktionieren autorisiert. Die <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph>-Eigenschaft gibt an, welche NetGroup erfolgreich war.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_LocalCoverage_Notify" name="code_NetGroup_LocalCoverage_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.LocalCoverage.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein Teil des Gruppenadressraums, für den dieser Knoten zuständig ist, geändert wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_MulticastStream_PublishNotify" name="code_NetGroup_MulticastStream_PublishNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.MulticastStream.PublishNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein neuer benannter Stream in der NetGroup-Gruppe erkannt wird. Die <codeph class="+ topic/ph pr-d/codeph ">info.name:String</codeph>-Eigenschaft ist der Name des erkannten Streams.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_MulticastStream_UnpublishNotify" name="code_NetGroup_MulticastStream_UnpublishNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.MulticastStream.UnpublishNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein benannter Stream nicht mehr in der Gruppe verfügbar ist. Die <codeph class="+ topic/ph pr-d/codeph ">info.name:String</codeph>-Eigenschaft ist der Name des Streams, der nicht mehr verfügbar ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Neighbor_Connect" name="code_NetGroup_Neighbor_Connect" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Neighbor.Connect"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein Nachbar eine Verbindung zu diesem Knoten herstellt. Die <codeph class="+ topic/ph pr-d/codeph ">info.neighbor:String</codeph>-Eigenschaft ist die Gruppenadresse des Nachbarn. Die <codeph class="+ topic/ph pr-d/codeph ">info.peerID:String</codeph>-Eigenschaft ist die Peer-ID des Nachbarn.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Neighbor_Disconnect" name="code_NetGroup_Neighbor_Disconnect" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Neighbor.Disconnect"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein Nachbar die Verbindung zu diesem Knoten trennt. Die <codeph class="+ topic/ph pr-d/codeph ">info.neighbor:String</codeph>-Eigenschaft ist die Gruppenadresse des Nachbarn. Die <codeph class="+ topic/ph pr-d/codeph ">info.peerID:String</codeph>-Eigenschaft ist die Peer-ID des Nachbarn.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Posting_Notify" name="code_NetGroup_Posting_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein neues Gruppenposting empfangen wird. Die <codeph class="+ topic/ph pr-d/codeph ">info.message:Object</codeph>-Eigenschaft ist die Nachricht. Die <codeph class="+ topic/ph pr-d/codeph ">info.messageID:String</codeph>-Eigenschaft ist die messageID dieser Nachricht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_Failed" name="code_NetGroup_Replication_Fetch_Failed" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.Failed"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn eine Abrufanforderung für ein Objekt (zuvor mit NetGroup.Replication.Fetch.SendNotify angekündigt) fehlschlägt oder abgelehnt wird. Es wird ein neuer Versuch für das Objekt gestartet, wenn es immer noch angefordert wird. Die <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph>-Eigenschaft ist der Index des angeforderten Objekts.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_Result" name="code_NetGroup_Replication_Fetch_Result" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.Result"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn eine Abrufanforderung von einem Nachbarn erfüllt wurde. Die <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph>-Eigenschaft ist der Objektindex dieses Ergebnisses. Die <codeph class="+ topic/ph pr-d/codeph ">info.object:Object</codeph>-Eigenschaft ist der Wert dieses Objekts. Dieser Index wird automatisch aus dem Want-Satz entfernt. Wenn das Objekt ungültig ist, kann dieser Index dem Want-Satz mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.addWantObjects()</codeph> erneut hinzugefügt werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_SendNotify" name="code_NetGroup_Replication_Fetch_SendNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.SendNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn das Objektreplikationssystem eine Anforderung für ein Objekt an einen Nachbarn sendet. Die <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph>-Eigenschaft ist der Index des angeforderten Objekts.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Request" name="code_NetGroup_Replication_Request" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Request"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn ein Nachbar ein Objekt angefordert hat, das dieser Knoten mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.addHaveObjects()</codeph> angekündigt hat. Diese Anforderung <b class="+ topic/ph hi-d/b ">muss</b> letztendlich entweder mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.writeRequestedObject()</codeph> oder mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.denyRequestedObject()</codeph> beantwortet werden. Beachten Sie, dass die Antwort asynchron sein kann. Die <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph>-Eigenschaft ist der Index des angeforderten Objekts. Die <codeph class="+ topic/ph pr-d/codeph ">info.requestID:int</codeph>-Eigenschaft ist die ID dieser Anforderung, die von <codeph class="+ topic/ph pr-d/codeph ">NetGroup.writeRequestedObject()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">NetGroup.denyRequestedObject()</codeph> verwendet wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref name="code_NetGroup_SendTo_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.SendTo.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Wird gesendet, wenn eine an diesen Knoten gerichtete Nachricht nicht empfangen wurde. Die <codeph class="+ topic/ph pr-d/codeph ">info.message:Object</codeph>-Eigenschaft ist die Nachricht. Die <codeph class="+ topic/ph pr-d/codeph ">info.from:String</codeph>-Eigenschaft ist die groupAddress, von der die Nachricht empfangen wurde. Die <codeph class="+ topic/ph pr-d/codeph ">info.fromLocal:Boolean</codeph>-Eigenschaft hat den Wert TRUE, wenn die Nachricht von diesem Knoten gesendet wurde (der lokale Knoten also der Zielgruppenaddresse am nächsten ist) und FALSE, wenn die Nachricht von einem anderen Knoten empfangen wurde. <codeph class="+ topic/ph pr-d/codeph "/><codeph class="+ topic/ph pr-d/codeph "/> Um rekursives Routing zu implementieren, muss die Nachricht mit <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph> erneut gesendet werden, wenn <codeph class="+ topic/ph pr-d/codeph ">info.fromLocal</codeph><codeph class="+ topic/ph pr-d/codeph "> den Wert FALSE hat</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Empty"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Flash Player empfängt Daten nicht schnell genug, um den Puffer zu füllen. Der Datenfluss wird unterbrochen, bis der Pufferspeicher wieder gefüllt ist. Dann wird die <codeph class="+ topic/ph pr-d/codeph ">NetStream.Buffer.Full</codeph>-Meldung gesendet und die Wiedergabe des Streams fortgesetzt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Flush"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Datenstream ist abgeschlossen, der Puffer wird geleert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Full"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Puffer ist voll, und der Stream wird wiedergegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Closed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die P2P-Verbindung wurde erfolgreich beendet. Die <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph>-Eigenschaft gibt an, welcher Stream beendet wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der P2P-Verbindungsversuch ist fehlgeschlagen. Die <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph>-Eigenschaft gibt an, welcher Stream fehlgeschlagen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetStream_Connect_Rejected" name="code_NetStream_Connect_Rejected" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Rejected"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der P2P-Verbindungsversuch verfügt nicht über die Berechtigung für den Zugriff auf den anderen Peer. Die <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph>-Eigenschaft gibt an, welcher Stream abgelehnt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetStream_Connect_Success" name="code_NetStream_Connect_Success" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Success"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der P2P-Verbindungsversuch war erfolgreich. Die <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph>-Eigenschaft gibt an, welcher Stream erfolgreich war.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.DRM.UpdateNeeded"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Ein NetStream-Objekt versucht, geschützten Inhalt abzuspielen, das erforderliche Flash Access-Modul ist jedoch entweder nicht vorhanden oder aufgrund der geltenden Richtlinie nicht berechtigt oder nicht mit dem aktuellen Player kompatibel. Um das Modul oder den Player zu aktualisieren, verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>-Methode von flash.system.SystemUpdater. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(Flash Media Server) Aus einem anderen als in den anderen Ereigniscodes aufgeführten Gründen ist ein Fehler aufgetreten. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.MulticastStream.Reset"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Ein Multicast-Abonnement hat den Fokus auf einen anderen Stream geändert, der mit demselben Namen in derselben Gruppe veröffentlicht wird. Lokale Überschreibungen von Multicast-Streamparametern gehen verloren. Wenden Sie die lokalen Überschreibungen erneut an, andernfalls werden die Standardparameter des neuen Streams verwendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Pause.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Stream wurde unterbrochen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Es ist ein Fehler bei der Wiedergabe aufgetreten. Die Ursache für diesen Fehler wird nicht in dieser Tabelle aufgeführt. Eventuell hat der Abonnent keinen Lesezugriff.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.FileStructureInvalid"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(AIR and Flash Player 9.0.115.0) Die Anwendung erkennt eine ungültige Dateistruktur und versucht nicht, diesen Dateityp abzuspielen.      </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.InsufficientBW"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">„Warnung“</codeph></entry><entry class="- topic/entry ">(Flash Media Server) Der Client verfügt nicht über ausreichend Bandbreite, um die Daten mit normaler Geschwindigkeit abzuspielen. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.NoSupportedTrackFound"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(AIR and Flash Player 9.0.115.0) Die Anwendung erkennt keine unterstützten Titel (Video, Audio oder Daten) und versucht nicht, die Datei abzuspielen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.PublishNotify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die erste Veröffentlichung an einen Stream wird an alle Abonnenten gesendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Reset"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Verursacht durch das Zurücksetzen der Wiedergabeliste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die Wiedergabe hat begonnen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Stop"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die Wiedergabe wurde angehalten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.StreamNotFound"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Die an die Methode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> übergebene Datei wurde nicht gefunden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Transition"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">(Flash Media Server 3.5) Der Server hat den Befehl zum Wechseln auf einen anderen Stream infolge eines Bitrate-Streamwechsels erhalten. Dieser Code zeigt ein Erfolgsstatusereignis für den <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>-Aufruf zum Initiieren eines Streamwechsels an. Ist der Wechsel nicht erfolgreich, so sendet der Server stattdessen ein <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph>-Ereignis. Beim Streamwechsel wird ein <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph>-Ereignis mit dem Code „NetStream.Play.TransitionComplete“ ausgelöst. Für Flash Player 10 und neuere Versionen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.UnpublishNotify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Eine Anweisung zur Rücknahme der Veröffentlichung aus einem Stream wird an alle Abonnenten gesendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.BadName"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Versuch, einen Stream zu veröffentlichen, der bereits von einer anderen Person veröffentlicht wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.Idle"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Herausgeber des Streams ist inaktiv und überträgt keine Daten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Das Veröffentlichen war erfolgreich.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.AlreadyExists"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Stream, der aufgezeichnet wird, ist einer Datei zugeordnet, die bereits von einem anderen Stream aufgezeichnet wird. Dies kann durch eine falsche Konfiguration virtueller Ordner verursacht werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Ein Versuch, einen Stream aufzuzeichnen, ist fehlgeschlagen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.NoAccess"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Versuch, einen Stream aufzuzeichnen, der noch wiedergegeben wird, oder der Client besitzt keine Zugriffsrechte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Die Aufzeichnung hat begonnen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Stop"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Aufzeichnung angehalten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Die Suche schlug fehlt. Dies kann auftreten, wenn der Stream nicht gesucht werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.InvalidTime"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Bei einem progressiv heruntergeladenen Video hat der Benutzer eine Position gesucht, die hinter dem Ende der bisher heruntergeladenen Videodaten bzw. hinter dem Ende der fertig heruntergeladenen Videodatei liegt. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">info.details</codeph> des Ereignisobjekts enthält einen Zeitcode, der die letzte gültige Suchposition angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry "><p class="- topic/p ">Der Suchvorgang ist abgeschlossen. </p>
<p class="- topic/p ">Wird gesendet, wenn <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> für einen Stream im AS3 NetStream-Datengenerierungsmodus aufgerufen wird. Das Info-Objekt wird erweitert, um <codeph class="+ topic/ph pr-d/codeph ">info.seekPoint</codeph> einzubeziehen, das denselben Wert hat, der an <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> übergeben wird.</p></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Step.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Schrittvorgang ist abgeschlossen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Unpause.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Stream wird fortgesetzt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Unpublish.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Unveröffentlichungs-Vorgang war erfolgreich.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.BadPersistence"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Es wurde eine Anfrage zur Erstellung eines freigegebenen Objekts mit Persistenzflags gestellt. Diese Anforderung kann jedoch nicht gewährt werden, da das Objekt bereits mit anderen Flags erstellt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.Flush.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Der Status „pending“ ist aufgelöst, aber der Aufruf <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> ist fehlgeschlagen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.Flush.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Der Status „pending“ ist aufgelöst, und der Aufruf <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> wurde erfolgreich durchgeführt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.UriMismatch"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Es wurde versucht, eine Verbindung mit einem NetConnection-Objekt herzustellen, das einen anderen URI (URL) als das freigegebene Objekt aufweist.</entry></row></tbody></tgroup></adobetable>
    <p class="- topic/p ">Falls wiederholt Pufferfehler angezeigt werden, sollten Sie versuchen, den Puffer mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> zu ändern.</p>

    
    </apiDesc><example conref="examples\NetStatusEvent_invalidseek.as" class="- topic/example "> Das folgende Beispiel zeigt eine Ereignisprozedurfunktion, die auf den <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.InvalidTime"</codeph>-Fehler prüft. Der <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.InvalidTime"</codeph>-Fehler tritt auf, wenn der Benutzer versucht, über das Ende des heruntergeladenen Streams hinaus einen Suchlauf durchzuführen. Im Beispiel wird der Wert der <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>-Eigenschaft des Ereignisobjekts getestet. Falls der Fehler auftritt, wird die <codeph class="+ topic/ph pr-d/codeph ">eventObj.info.details</codeph>-Eigenschaft einer Variablen zugewiesen, die als Parameter für die <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph>-Methode des Streams verwendet wird. Die <codeph class="+ topic/ph pr-d/codeph ">eventObj.info.details</codeph>-Eigenschaft enthält die letzte gültige Position, die zur Verarbeitung des Fehlers verfügbar ist. Der Benutzer geht also zu einer gültigen Position am Ende des heruntergeladenen Streams.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
function videoStatus(eventObj:NetStatusEvent):Void
{
    switch(eventObj.info.code)
    {
        case "NetStream.Seek.InvalidTime":
        {
            var validSeekTime:Number = eventObj.info.details;
            nStream.seek(validSeekTime);
            break;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection-Klasse</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream-Klasse</linktext></link><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">NetGroup-Klasse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:UncaughtErrorEvents" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvents</apiName><shortdesc class="- topic/shortdesc ">
     Die UncaughtErrorEvents-Klasse bietet eine Möglichkeit, Ereignisse für nicht erfasste Fehler zu empfangen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die UncaughtErrorEvents-Klasse bietet eine Möglichkeit, Ereignisse für nicht erfasste Fehler zu empfangen. Eine Instanz dieser Klasse setzt ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis ab, wenn ein Laufzeitfehler auftritt und der Fehler in Ihrem Code nicht erfasst und verarbeitet wird.
	 
	 <p class="- topic/p ">Mit den folgenden Eigenschaften können Sie auf eine UncaughtErrorEvents-Instanz zugreifen:</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in derselben SWF-Datei definiert ist.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in der SWF-Datei definiert ist, die von einem Loader-Objekt geladen wird.</li></ul>
	 
	 <p class="- topic/p ">Um einen Fehler direkt abzufangen und ein nicht erfasstes Fehlerereignis zu verhindern, gehen Sie folgendermaßen vor:</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li ">Verwenden Sie einen <codeph class="+ topic/ph pr-d/codeph "><xref href="../../statements.html#try..catch..finally" class="- topic/xref ">try..catch</xref></codeph>-Block, um Code zu isolieren, der möglicherweise einen synchronen Fehler ausgibt.</li><li class="- topic/li ">Wenn Sie einen Vorgang ausführen, der beim Auftreten eines Fehlers ein Ereignis absetzt, registrieren Sie einen Listener für dieses Fehlerereignis.</li></ul>
	 
	 <p class="- topic/p ">Wenn es sich bei dem von einem Loader-Objekt geladenen Inhalt um eine AVM1 (ActionScript 2)-SWF-Datei handelt, führen nicht erfasste Fehler in der AVM1-SWF-Datei nicht zu einem <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis. Außerdem führen JavaScript-Fehler in HTML-Inhalten, die in ein HTMLLoader-Objekt (einschließlich eines Flex-HTML-Steuerungselements) geladen werden, nicht zu einem <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis.</p>
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link><link href="flash.events.xml#UncaughtErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvent</linktext></link></related-links><adobeApiEvent id="flash.events:UncaughtErrorEvents_flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR_uncaughtError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtError</apiName><shortdesc class="- topic/shortdesc ">
     Wird abgesetzt, wenn ein Fehler auftritt und der Entwicklercode den Fehler nicht erkennt und verarbeitet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.UncaughtErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Wird abgesetzt, wenn ein Fehler auftritt und der Entwicklercode den Fehler nicht erkennt und verarbeitet.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:UncaughtErrorEvents:UncaughtErrorEvents" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvents</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine UncaughtErrorEvents-Instanz.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine UncaughtErrorEvents-Instanz. Entwickler sollten UncaughtErrorEvents-Instanzen nicht direkt erstellen. Um auf ein UncaughtErrorEvents-Objekt zuzugreifen, verwenden Sie eine der folgenden Eigenschaften:
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in derselben SWF-Datei definiert ist.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in der SWF-Datei definiert ist, die von einem Loader-Objekt geladen wird.</li></ul>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier languages="" id="flash.events:MouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">MouseEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein MouseEvent-Objekt wird in den Ereignisablauf gesendet, wenn Mausereignisse auftreten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für Mouse-Ereignisse.
  
  </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein MouseEvent-Objekt wird in den Ereignisablauf gesendet, wenn Mausereignisse auftreten. Ein Mausereignis wird im Allgemeinen durch ein Benutzereingabegerät wie z. B. eine Maus oder ein Trackball erzeugt, das einen Zeiger verwendet. 
 
 <p class="- topic/p ">Wenn verschachtelte Knoten involviert sind, zielen Mausereignisse auf den tiefstmöglich verschachtelten Knoten, der in der Anzeigeliste sichtbar ist. Dieser Knoten wird als <i class="+ topic/ph hi-d/i ">Zielknoten</i> bezeichnet. Damit ein übergeordnetes Element eines Zielknotens eine Benachrichtigung bei einem Mausereignis empfängt, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> an dem übergeordneten Knoten. Dabei muss der Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf das Mausereignis gesetzt werden, das Sie erfassen möchten.</p>
 
 </apiDesc><example conref="examples\MouseEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klassen <codeph class="+ topic/ph pr-d/codeph ">MouseEventExample</codeph> und <codeph class="+ topic/ph pr-d/codeph ">ChildSprite</codeph> erläutert, wie Mausereignisse bei einem einfachen Bild ausgelöst werden. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Im Beispiel werden Eigenschaften für die Größe (100 x 100 Pixel) und die Hintergrundfarbe (Orange) zur späteren Verwendung beim Zeichnen des Quadrats deklariert.</li><li class="- topic/li ">Der Konstruktor erstellt das neue ChildSprite-Objekt <codeph class="+ topic/ph pr-d/codeph ">child</codeph>. Der Konstruktor zeichnet zuerst ein orangefarbenes Quadrat mit einer Größe von 100 x 100 Pixeln an den Koordinaten (0,0), indem er die Methode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> aufruft und anschließend sieben Ereignis-Listener bzw. -Abonnenten hinzufügt.
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">click</codeph>/<codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>: Wird ausgelöst, wenn der Benutzer einmal mit der linken Maustaste auf das Quadrat klickt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph>/<codeph class="+ topic/ph pr-d/codeph ">doubleClickHandler()</codeph>: Wird ausgelöst, wenn der Benutzer mit der linken Maustaste auf das Quadrat doppelklickt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph>: Wenn auf das ChildSprite-Objekt (das orangefarbene Quadrat) geklickt wird, wird eine <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>-Meldung angezeigt. <codeph class="+ topic/ph pr-d/codeph ">ChildSprite.draw()</codeph> wird aufgerufen, wodurch ein dunkelgelbes Quadrat anstelle des hellblauen aus <codeph class="+ topic/ph pr-d/codeph ">mouseOverHandler()</codeph> gezeichnet wird. Mit der Methode <codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph> werden auch ein <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignis-Listener und ein <codeph class="+ topic/ph pr-d/codeph ">mouseMoveHandler()</codeph>-Abonnent (siehe Beschreibung unten) für die Verarbeitung der Mausbewegungen hinzugefügt. Als Nächstes wird die <codeph class="+ topic/ph pr-d/codeph ">startDrag()</codeph>-Methode aufgerufen, die das Ziehen des Sprite-Objekts ermöglicht.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseOutHandler()</codeph>: Wird ausgelöst, wenn der Mauszeiger vom Quadrat wegbewegt wird. Die <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>-Methode wird aufgerufen, um die normale Größe und Farbe des Quadrats wiederherzustellen.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseOverHandler()</codeph>: Wird ausgelöst, wenn sich der Mauszeiger über dem Quadrat befindet. Mit dieser Methode wird das Quadrat größer und mit dunkelgelber Hintergrundfarbe neu gezeichnet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseUpHandler()</codeph>: Wenn die Maustaste losgelassen wird, wird der <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignis-Listener entfernt, und <codeph class="+ topic/ph pr-d/codeph ">stopDrag</codeph> wird aufgerufen. Hiermit wird das Quadrat an seiner Position fixiert.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseMoveHandler()</codeph>: Wird als Teil der <codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph>-Funktion aufgerufen und ausgelöst, wenn der Benutzer die linke Maustaste gedrückt hält und das Quadrat zieht.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseWheel</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseWheelHandler()</codeph>: Wird ausgelöst, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger auf dem Quadrat befindet.</li></ul></li><li class="- topic/li ">Die ChildSprite-Instanz <codeph class="+ topic/ph pr-d/codeph ">child</codeph> wird der Anzeigeliste mithilfe der Methode <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>, die ein sofortiges Zeichnen des orangefarbenen Quadrats bewirkt, hinzugefügt.</li></ol> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweise:</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Die <codeph class="+ topic/ph pr-d/codeph ">MouseEventExample</codeph>-Klasse muss der Dokumentenstamm sein.</li><li class="- topic/li ">Bei einigen der oben aufgeführten Ereignis-Listener-Methoden wird eine lokale <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph>-Variable deklariert, der die Umwandlung von <codeph class="+ topic/ph pr-d/codeph ">event.target</codeph> in den Typ „Sprite“ zugewiesen wird.</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;

    public class MouseEventExample extends Sprite {
        private var size:uint = 100;
        private var bgColor:uint = 0xFFCC00;

        public function MouseEventExample() {
            var child:ChildSprite = new ChildSprite();
            addChild(child);
        }
    }
}

import flash.display.Sprite;
import flash.events.MouseEvent;

class ChildSprite extends Sprite {
    private var size:uint = 50;
    private var overSize:uint = 60;
    private var backgroundColor:uint = 0xFFCC00;
    private var overColor:uint = 0xCCFF00;
    private var downColor:uint = 0x00CCFF;

    public function ChildSprite() {
        draw(size, size, backgroundColor);
            doubleClickEnabled = true;
        addEventListener(MouseEvent.CLICK, clickHandler);
        addEventListener(MouseEvent.DOUBLE_CLICK, doubleClickHandler);
        addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
        addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);
        addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);
        addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);
        addEventListener(MouseEvent.MOUSE_WHEEL, mouseWheelHandler);
    }

    private function draw(w:uint, h:uint, bgColor:uint):void {
        graphics.clear();
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, w, h);
        graphics.endFill();
    }

    private function clickHandler(event:MouseEvent):void {
        trace("clickHandler");
    }

    private function doubleClickHandler(event:MouseEvent):void {
        trace("doubleClickHandler");
    }

    private function mouseDownHandler(event:MouseEvent):void {
        trace("mouseDownHandler");
        draw(overSize, overSize, downColor);

        var sprite:Sprite = Sprite(event.target);
        sprite.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        sprite.startDrag();
    }

    private function mouseMoveHandler(event:MouseEvent):void {
        trace("mouseMoveHandler");
        event.updateAfterEvent();
    }

    private function mouseOutHandler(event:MouseEvent):void {
        trace("mouseOutHandler");
        draw(size, size, backgroundColor);
    }

    private function mouseOverHandler(event:MouseEvent):void {
        trace("mouseOverHandler");
        draw(overSize, overSize, overColor);
    }

    private function mouseWheelHandler(event:MouseEvent):void {
        trace("mouseWheelHandler delta: " + event.delta);
    }

    private function mouseUpHandler(event:MouseEvent):void {
        trace("mouseUpHandler");
        var sprite:Sprite = Sprite(event.target);
        sprite.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        sprite.stopDrag();
        draw(overSize, overSize, overColor);
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:MouseEvent:CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:click" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.click</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:CONTEXT_MENU_contextMenu" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">contextMenu</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:CONTEXT_MENU</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:DOUBLE_CLICK_doubleClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">doubleClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:DOUBLE_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:doubleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.doubleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_CLICK_middleClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN_middleMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_MOUSE_UP_middleMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_MOVE_mouseMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseMove</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\MouseEvent_MOUSE_MOVEExample.as" class="- topic/example "> Das folgende Beispiel ist ein einfaches Zeichenprogramm. Der Benutzer kann auf dem Haupt-Sprite-Objekt zeichnen oder auf einen kleineren rechteckigen Sprite-Objekt. 
   
 <p class="- topic/p ">Im Konstruktor wird ein rechteckiges <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt erstellt und der Linienstil wird auf grün eingestellt. Der Linienstil für das Zeichnen im <codeph class="+ topic/ph pr-d/codeph ">MouseEvent_MOUSE_MOVEExample</codeph>-Sprite-Container wird auf rot eingestellt. Separate Ereignis-Listeners für die <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph>-Ereignisse werden für das Haupt-Sprite-Objekt der Anwendung und das <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt hinzugefügt. In beiden Fällen verschieben die Listener-Methoden für Mouse-Down-Ereignisse die aktuelle Zeichenposition zur Position des Mauszeigers und fügen einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>-Ereignis hinzu. Wenn der Mauszeiger verschoben wird, folgen die aufgerufenen Listener-Methoden dem Zeiger und zeichnen mit der <codeph class="+ topic/ph pr-d/codeph ">graphics.LineTo()</codeph>-Methode eine Linie. (<b class="+ topic/ph hi-d/b ">Hinweis:</b> Das <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt verdeckt die roten Linien des Haupt-Sprite-Objekts, die hinter dem Rechteck gezeichnet sind.) Wenn das <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>-Ereignis auftritt, wird der Listener für das <codeph class="+ topic/ph pr-d/codeph ">MOUSE_MOVE</codeph>-Ereignis entfernet und das Zeichnen wird beendet.</p>     
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.Graphics;
    import flash.events.MouseEvent;

    public class MouseEvent_MOUSE_MOVEExample extends Sprite {
        private var innerRect:Sprite = new Sprite();
        
        public function MouseEvent_MOUSE_MOVEExample() {

            graphics.lineStyle(3, 0xFF0000, 1);
            stage.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
            stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);

            innerRect.graphics.lineStyle(1, 0x00FF00, 1);
            innerRect.graphics.beginFill(0xFFFFFF);
            innerRect.graphics.drawRect(10, 10, 200, 200);
            innerRect.graphics.endFill();
            innerRect.addEventListener(MouseEvent.MOUSE_DOWN, innerRectMouseDownHandler);
            innerRect.addEventListener(MouseEvent.MOUSE_UP, innerRectMouseUpHandler);
            addChild(innerRect);
        }

        private function mouseDownHandler(event:MouseEvent):void {
            graphics.moveTo(event.stageX, event.stageY);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }
    
        private function mouseMoveHandler(event:MouseEvent):void {
            graphics.lineTo(event.stageX, event.stageY);
        }    
    
        private function mouseUpHandler(event:MouseEvent):void {
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }

        private function innerRectMouseDownHandler(event:MouseEvent):void {
            innerRect.graphics.moveTo(event.localX, event.localY);
            innerRect.addEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    
        private function innerRectMouseMoveHandler(event:MouseEvent):void {
            innerRect.graphics.lineTo(event.localX, event.localY);
        }    
    
        private function innerRectMouseUpHandler(event:MouseEvent):void {
            innerRect.removeEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseMove</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_OUT_mouseOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_OVER_mouseOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_WHEEL_mouseWheel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseWheel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_WHEEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseWheel" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseWheel</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_MOUSE_DOWN_RightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">RightMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:ROLL_OUT_rollOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:ROLL_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:ROLL_OVER_rollOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:ROLL_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOver</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:MouseEvent:MouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">MouseEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein Ereignisobjekt, das Informationen über Mausereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.DOUBLE_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_WHEEL</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.ROLL_OUT</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.ROLL_OVER</codeph>. 
	 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die andere InteractiveObject-Instanz, die von dem Ereignis betroffen ist. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> das Anzeigelistenobjekt dar, auf das das Zeigegerät jetzt zeigt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows oder Linux wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist (nur Windows oder Linux).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">buttonDown</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die primäre Maustaste gedrückt wird.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">delta</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, wie viele Zeilen pro Raststellung des Mausrads durchlaufen werden sollen. Ein positiver Deltawert bedeutet einen Bildlauf nach oben. Ein negativer Wert steht für einen Bildlauf nach unten. Typische Werte sind 1 bis 3, wobei ein schnellerer Bildlauf größere Werte zur Folge haben kann. Dieser Parameter wird nur für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseWheel</codeph> verwendet.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Dieser Parameter wird nur für die folgenden Ereignisse verwendet <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.click</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.doubleClick</codeph>. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Ctrl- oder Strg-Taste aktiviert ist. Dieser Parameter wird nur für die folgenden Ereignisse verwendet <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.click</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.doubleClick</codeph>. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clickCount</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob das Mausereignis Teil einer Sequenz mit mehreren Klicks ist oder nicht. Dieser Parameter hat den Wert null für alle Mausereignisse außer <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph>. Das Warten auf einfache Klicks, Doppelklicks und Sequenzen mit mehreren Klicks ist mit dem <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph>-Parameter möglich. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für MouseEvent-Objekte.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein Ereignisobjekt, das Informationen über Mausereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
     
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:MouseEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des MouseEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues MouseEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des MouseEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MouseEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des MouseEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des MouseEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des MouseEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph "> [MouseEvent type= <i class="+ topic/ph hi-d/i ">value</i> bubbles= <i class="+ topic/ph hi-d/i ">value</i> cancelable= <i class="+ topic/ph hi-d/i ">value</i> ... delta= <i class="+ topic/ph hi-d/i ">value</i> ] </codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MouseEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Weist Flash Player oder Adobe AIR nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Weist Flash Player oder Adobe AIR nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:MouseEvent:CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines Klickereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">click</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Für Klick-Ereignisse ist dieser Wert immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:click" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.click</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:CONTEXT_MENU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONTEXT_MENU</apiName><shortdesc class="- topic/shortdesc ">
		Die MouseEvent.CONTEXT_MENU-Konstante definiert den Wert der type-Eigenschaft eines contextMenu-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">contextMenu</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.CONTEXT_MENU</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">contextMenu</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die rechte Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:DOUBLE_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DOUBLE_CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines doubleClick-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">doubleClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph>-Ereignisobjekts. Die <codeph class="+ topic/ph pr-d/codeph ">doubleClickEnabled</codeph>-Eigenschaft muss <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sein, damit ein Objekt das <codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph>-Ereignis auslösen kann.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Für Doppelklick-Ereignisse ist dieser Wert immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:doubleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.doubleClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_CLICK</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines middleClick-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">middleClick</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Für Mittelklick-Ereignisse ist diese Eigenschaft immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines middleMouseDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">middleMouseDown</codeph>-Ereignisobjekts. 
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die mittlere Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines middleMouseUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">middleMouseUp</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die mittlere Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows und Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Konstante wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht. 
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_MOVE</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseMove-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseMove</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example conref="examples\MouseEvent_MOUSE_MOVEExample.as" class="- topic/example "> Das folgende Beispiel ist ein einfaches Zeichenprogramm. Der Benutzer kann auf dem Haupt-Sprite-Objekt zeichnen oder auf einen kleineren rechteckigen Sprite-Objekt. 
   
 <p class="- topic/p ">Im Konstruktor wird ein rechteckiges <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt erstellt und der Linienstil wird auf grün eingestellt. Der Linienstil für das Zeichnen im <codeph class="+ topic/ph pr-d/codeph ">MouseEvent_MOUSE_MOVEExample</codeph>-Sprite-Container wird auf rot eingestellt. Separate Ereignis-Listeners für die <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph>-Ereignisse werden für das Haupt-Sprite-Objekt der Anwendung und das <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt hinzugefügt. In beiden Fällen verschieben die Listener-Methoden für Mouse-Down-Ereignisse die aktuelle Zeichenposition zur Position des Mauszeigers und fügen einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>-Ereignis hinzu. Wenn der Mauszeiger verschoben wird, folgen die aufgerufenen Listener-Methoden dem Zeiger und zeichnen mit der <codeph class="+ topic/ph pr-d/codeph ">graphics.LineTo()</codeph>-Methode eine Linie. (<b class="+ topic/ph hi-d/b ">Hinweis:</b> Das <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>-Sprite-Objekt verdeckt die roten Linien des Haupt-Sprite-Objekts, die hinter dem Rechteck gezeichnet sind.) Wenn das <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>-Ereignis auftritt, wird der Listener für das <codeph class="+ topic/ph pr-d/codeph ">MOUSE_MOVE</codeph>-Ereignis entfernet und das Zeichnen wird beendet.</p>     
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.Graphics;
    import flash.events.MouseEvent;

    public class MouseEvent_MOUSE_MOVEExample extends Sprite {
        private var innerRect:Sprite = new Sprite();
        
        public function MouseEvent_MOUSE_MOVEExample() {

            graphics.lineStyle(3, 0xFF0000, 1);
            stage.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
            stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);

            innerRect.graphics.lineStyle(1, 0x00FF00, 1);
            innerRect.graphics.beginFill(0xFFFFFF);
            innerRect.graphics.drawRect(10, 10, 200, 200);
            innerRect.graphics.endFill();
            innerRect.addEventListener(MouseEvent.MOUSE_DOWN, innerRectMouseDownHandler);
            innerRect.addEventListener(MouseEvent.MOUSE_UP, innerRectMouseUpHandler);
            addChild(innerRect);
        }

        private function mouseDownHandler(event:MouseEvent):void {
            graphics.moveTo(event.stageX, event.stageY);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }
    
        private function mouseMoveHandler(event:MouseEvent):void {
            graphics.lineTo(event.stageX, event.stageY);
        }    
    
        private function mouseUpHandler(event:MouseEvent):void {
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }

        private function innerRectMouseDownHandler(event:MouseEvent):void {
            innerRect.graphics.moveTo(event.localX, event.localY);
            innerRect.addEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    
        private function innerRectMouseMoveHandler(event:MouseEvent):void {
            innerRect.graphics.lineTo(event.localX, event.localY);
        }    
    
        private function innerRectMouseUpHandler(event:MouseEvent):void {
            innerRect.removeEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseMove</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseOut-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das das Zeigegerät jetzt zeigt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOut</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_OVER</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseOver-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das das Zeigegerät gezeigt hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOver</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Konstante wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht. 
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_WHEEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_WHEEL</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines mouseWheel-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseWheel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseWheel</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">delta</codeph></entry><entry class="- topic/entry ">Die Anzahl der Zeilen, die jede Raststellung im Mausrad repräsentiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseWheel" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseWheel</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_CLICK</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines rightClick-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightClick</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Für Rechtsklick-Ereignisse ist diese Eigenschaft immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines rightMouseDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightMouseDown</codeph>-Ereignisobjekts. 
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Für Rechtsklick-Ereignisse ist diese Eigenschaft immer <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines rightMouseUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightMouseUp</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die rechte Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Anzahl der Mausklicks, um anzuzeigen, ob das Ereignis Teil einer Sequenz mit mehreren Klicks ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:ROLL_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLL_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines rollOut-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das das Zeigegerät jetzt zeigt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:ROLL_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLL_OVER</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines rollOver-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiv ist (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das das Zeigegerät gezeigt hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Zeigegerät. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOver</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die Alt-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	 </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die Alt-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Wird nur für Windows unterstützt. Unter anderen Betriebssystemen ist diese Eigenschaft immer auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:buttonDown:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">buttonDown</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die primäre Maustaste gedrückt (true) ist oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die primäre Maustaste gedrückt (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ist oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:clickCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">clickCount</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob das Mouse-Down-Ereignis Teil einer Sequenz mit mehreren Klicks ist oder nicht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob das Mouse-Down-Ereignis Teil einer Sequenz mit mehreren Klicks ist oder nicht. Dieser Parameter hat den Wert null für alle Mausereignisse außer <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph>. Das Warten auf einfache Klicks, Doppelklicks und Sequenzen mit mehreren Klicks ist mit dem <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph>-Parameter möglich. Zum Beispiel haben die ersten Ereignisse <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph> und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph> für <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph> den Wert 1 und die zweiten <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>-Ereignisse in einer Doppelklicksequenz haben für <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph> den Wert 2. Wenn die Maus ausreichend bewegt wird oder die Mehrfachklicksequenz unterbrochen wird, hat das nächste <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph> für clickCount den Wert 1. Das doubleClick-Ereignis wird weiterhin wie erwartet ausgelöst.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Der Wert der commandKey-Eigenschaft hat denselben Wert wie die ctrlKey-Eigenschaft auf dem Mac.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac). 
		
		<p class="- topic/p ">Der Wert der <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph>-Eigenschaft hat denselben Wert wie die <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>-Eigenschaft auf dem Mac. Ist unter Windows und Linux immer „false“.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Unter Mac wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:delta:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">delta</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, wie viele Zeilen pro Raststellung des Mausrads durchlaufen werden sollen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, wie viele Zeilen pro Raststellung des Mausrads durchlaufen werden sollen. Ein positiver Deltawert bedeutet einen Bildlauf nach oben. Ein negativer Wert steht für einen Bildlauf nach unten. Typische Werte sind 1 bis 3, wobei ein schnellerer Bildlauf größere Werte zur Folge haben kann. Diese Einstellung hängt von dem Gerät und dem Betriebssystem ab und wird in der Regel vom Benutzer eingestellt. Diese Eigenschaft gilt nur für das Ereignis <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseWheel</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Falls „true“, ist die relatedObject-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf null gesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, ist die <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph>-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf <codeph class="+ topic/ph pr-d/codeph ">null </codeph> gesetzt. Ist der Nominalwert von <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> ein Verweis auf ein DisplayObject in einer anderen Sandbox, wird <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt, es sei denn, die Berechtigung gilt über die Sandboxgrenzen hinweg für beide Richtungen. Die Berechtigung wird eingerichtet, indem aus einer SWF-Datei <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufgerufen wird oder eine Richtliniendatei vom Server einer Bilddatei bereitgestellt und die <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph>-Eigenschaft beim Laden des Bilds gesetzt wird.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Eigenschaft wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht.
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Eigenschaft wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht.
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> das Anzeigelistenobjekt dar, auf das das Zeigegerät jetzt zeigt. Diese Eigenschaft gilt für die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> und <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph>.
	<p class="- topic/p ">Der Wert dieser Eigenschaft kann in zwei Fällen <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sein: Wenn es kein verwandtes Objekt gibt oder wenn es eines gibt, dieses aber eine Sicherheitssandbox ist, auf die Sie keinen Zugriff haben. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>-Eigenschaft, um festzustellen, welcher dieser Gründe zutrifft.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Umschalttaste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Umschalttaste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> eingerichtet wird.
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Eigenschaft wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht. 
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> eingerichtet wird.
	
	</apiDesc><example class="- topic/example ">Die Verwendung dieser Eigenschaft wird im Beispiel für die <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref>-Konstante veranschaulicht.
	 
	 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IEventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IEventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
Die IEventDispatcher-Schnittstelle definiert Methoden zum Hinzufügen bzw. Entfernen von Ereignis-Listenern, prüft, ob bestimmte Typen von Ereignis-Listenern registriert sind und löst Ereignisse aus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die IEventDispatcher-Schnittstelle definiert Methoden zum Hinzufügen bzw. Entfernen von Ereignis-Listenern, prüft, ob bestimmte Typen von Ereignis-Listenern registriert sind und löst Ereignisse aus.

<p class="- topic/p ">Ereignisziele sind ein wichtiger Bestandteil des Ereignismodells in Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player und Adobe AIR. Das Ereignisziel dient als zentraler Punkt bei dem Ablauf der Ereignisse durch die Hierarchie der Anzeigeliste. Wenn ein Ereignis wie ein Mausklick oder ein Tastenanschlag eintritt, wird vom Root der Anzeigeliste aus ein Ereignisobjekt in den Ereignisablauf gesendet. Dieser Weg zum Ereignisziel und zurück ist im Prinzip in drei Phasen unterteilt: die Aufnahmephase umfasst den Weg vom Root zum letzten Knoten vor dem Ereigniszielknoten, die Zielphase umfasst nur den Ereigniszielknoten, und die Bubbling-Phase umfasst alle weiteren Knoten, auf die das Objekt auf dem Rückweg zum Root der Anzeigeliste trifft.</p>

<p class="- topic/p ">Im Allgemeinen besteht der einfachste Weg für eine benutzerdefinierte Klasse, die Fähigkeit zum Auslösen eines Ereignisses zu erhalten darin, die EventDispatcher-Klasse zu erweitern. Wenn dies nicht möglich ist (d. h., wenn die Klasse bereits eine andere Klasse erweitert), können Sie stattdessen die IEventDispatcher-Schnittstelle implementieren, ein EventDispatcher-Mitglied erstellen und einfache Hooks schreiben, um alle Aufrufe an einen aggregierten EventDispatcher zu leiten.</p>

</apiDesc><example conref="examples\IEventDispatcherExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klassen IEventDispatcherExample und DecoratedDispatcher erläutert, wie die IEventDispatcher-Klasse implementiert und verwendet werden kann. Im Beispiel wird jede DecoratedDispatcher-Methode auf die gleiche Weise wie bei EventDispatcher implementiert. Innerhalb des Kontruktors für IEventDispatcherExample wird eine neue Instanz (<codeph class="+ topic/ph pr-d/codeph ">decorDispatcher</codeph>) der DecoratedDispatcher-Klasse erstellt, und die Variable <codeph class="+ topic/ph pr-d/codeph ">decorDispatcher</codeph> wird verwendet, um <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> zusammen mit dem benutzerdefinierten <codeph class="+ topic/ph pr-d/codeph ">doSomething</codeph>-Ereignis aufzurufen. Letzteres wird im Anschluss von <codeph class="+ topic/ph pr-d/codeph ">didSomething()</codeph> verarbeitet, und es wird eine Textzeile unter Verwendung von <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> gedruckt.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
package {
        import flash.events.Event;
        import flash.display.Sprite;
       
        public class IEventDispatcherExample extends Sprite {
                public function IEventDispatcherExample() {
                        var decorDispatcher:DecoratedDispatcher = new DecoratedDispatcher();
                        decorDispatcher.addEventListener("doSomething", didSomething);
                        decorDispatcher.dispatchEvent(new Event("doSomething"));
                }
               
                public function didSomething(evt:Event):void {
                        trace(">> didSomething");
                }
        }
}

import flash.events.IEventDispatcher;
import flash.events.EventDispatcher;
import flash.events.Event;
               
class DecoratedDispatcher implements IEventDispatcher {       
    private var dispatcher:EventDispatcher;
               
    public function DecoratedDispatcher() {
        dispatcher = new EventDispatcher(this);
    }
           
    public function addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void{
        dispatcher.addEventListener(type, listener, useCapture, priority);
    }
           
    public function dispatchEvent(evt:Event):Boolean{
        return dispatcher.dispatchEvent(evt);
    }
    
    public function hasEventListener(type:String):Boolean{
        return dispatcher.hasEventListener(type);
    }
    
    public function removeEventListener(type:String, listener:Function, useCapture:Boolean = false):void{
        dispatcher.removeEventListener(type, listener, useCapture);
    }
                   
    public function willTrigger(type:String):Boolean {
        return dispatcher.willTrigger(type);
    }
}
</codeblock></example></apiClassifierDetail><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Listener-Funktion, die das Ereignis verarbeitet. Diese Funktion muss, wie das nachfolgende Beispiel zeigt, ein Ereignisobjekt als einzigen Parameter akzeptieren und keinen Wert zurückgeben:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">function(evt:Event):void</codeph></p>
	Der Name der Funktion ist beliebig.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob der Listener in der Erfassungsphase oder in der Ziel- und Bubbling-Phase arbeitet. Ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, so verarbeitet der Listener das Ereignis nur während der Erfassungsphase und nicht während der Ziel- oder Bubbling-Phase. Hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> hingegen den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, verarbeitet der Listener das Ereignis nur während der Ziel- oder Bubbling-Phase. Damit das Ereignis in allen drei Phasen aktiv ist, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> zweimal auf; einmal ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, und beim zweiten Mal hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Prioritätsstufe des Ereignis-Listeners. Prioritäten werden über eine 32-Bit-Ganzzahl zugewiesen. Je höher die Zahl, desto höher die Priorität. Alle Listener mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> werden vor Listenern mit der Priorität <i class="+ topic/ph hi-d/i ">n-1</i> verarbeitet. Wenn zwei oder mehr Listener die gleiche Priorität aufweisen, werden sie in der Reihenfolge verarbeitet, in der sie hinzugefügt wurden. Die Standardpriorität ist 0. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob der Verweis auf den Listener stark oder schwach ist. Ein starker Verweis (der Standard) verhindert, dass der Listener von einem Garbage Collector entfernt wird. Ein schwacher Verweis hingegen nicht. <p class="- topic/p ">Funktionen von Mitgliedern auf Klassenebene werden nicht vom Garbagekollektor entfernt. Daher können Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> für Mitgliedsfunktionen auf Klassenebene auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, ohne dass sie vom Garbagekollektor entfernt werden. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> für einen Listener, der eine verschachtelte innere Funktion ist, auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, wird Garbage Collection auf diese Funktion angewendet, die damit nicht mehr permanent gespeichert wird. Indem Sie Verweise auf die innere Funktion erstellen (d. h sie in einer anderen Variable speichern), umgehen Sie die Garbage Collection, sodass die Funktion permanent gespeichert bleibt.</p>
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird. Sie können Ereignis-Listener bei allen Knoten in der Anzeigeliste für eine bestimmte Art von Ereignis, Phase oder Priorität registrieren.
	<p class="- topic/p ">Nachdem Sie einen Ereignis-Listener erfolgreich registriert haben, können Sie seine Priorität nicht durch weitere Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ändern. Um die Priorität eines Listeners zu ändern, müssen Sie zunächst <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> aufrufen. Anschließend können Sie den Listener mit der neuen Prioritätsstufe erneut aufrufen.</p>
	<p class="- topic/p ">Nach der Registrierung des Listeners haben nachfolgende Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> mit einem anderen <codeph class="+ topic/ph pr-d/codeph ">type</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph>-Wert eine separate Listener-Registrierung zur Folge. Wenn Sie beispielsweise zuerst einen Listener registrieren, für den <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird dieser nur während der Erfassungsphase aktiv sein. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> für dasselbe Listener-Objekt erneut aufrufen, diesmal aber <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, werden zwei separate Listener angelegt: einer, der während der Erfassungsphase aktiv ist und ein zweiter, der während der Ziel- und Bubbling-Phase aktiv ist.</p>
	<p class="- topic/p ">Sie können einen Ereignis-Listener nicht nur für die Ziel- oder Bubbling-Phase registrieren. Die beiden Phasen hängen während der Registrierung immer zusammen, da Bubbling nur für übergeordnete Elemente des Zielknotens gilt.</p>
	<p class="- topic/p ">Wenn Sie einen Ereignis-Listener nicht mehr benötigen, entfernen sie ihn, indem Sie <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.removeEventListener()</codeph> aufrufen, andernfalls könnte es zu Speicherproblemen kommen. Objekte mit registrierten Ereignis-Listenern werden nicht automatisch aus dem Speicher entfernt, da der Garbagekollektor (Speichermanagement) keine Objekte entfernt, die noch Verweise enthalten.</p>
	<p class="- topic/p ">Beim Kopieren einer EventDispatcher-Instanz werden zugewiesene Ereignis-Listener nicht kopiert. (Wenn ein neu angelegter Knoten einen Ereignis-Listener benötigt, müssen Sie den Listener nach dem Erstellen des Knotens zuweisen.) Wenn Sie jedoch eine EventDispatcher-Instanz verschieben, werden zugewiesene Ereignis-Listener ebenfalls verschoben.</p>
	<p class="- topic/p ">Wenn der Ereignis-Listener bei einem Knoten registriert ist und dieser Knoten ein Ereignis durchgeführt, so wird der Ereignis-Listener nicht während der aktuellen Phase ausgelöst, kann aber in einer späteren Phase im Ereignisablauf gesendet werden, etwa in der Bubbling-Phase.</p>
	<p class="- topic/p ">Wird ein Ereignis-Listener von einem Knoten entfernt, während mit dem Knoten ein Ereignis durchgeführt wird, so wird er von den aktuellen Aktionen immer noch ausgelöst. Nachdem er entfernt worden ist, wird der Ereignis-Listener nicht wieder aufgerufen (es sei denn er wird für spätere Verarbeitungsvorgänge erneut aufgerufen). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
	Sendet ein Ereignis in den Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> (sofern nicht <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>) wird bei dem Ereignis aufgerufen. In diesem Fall wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ereignisobjekt, das in den Ereignisablauf gesendet wird.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sendet ein Ereignis in den Ereignisablauf. Das Ereignisziel ist das EventDispatcher-Objekt, für das die Methode <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph> aufgerufen wird.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:hasEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob das EventDispatcher-Objekt Listener für einen bestimmten Ereignistyp registriert hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn ein Listener des angegebenen Typs registriert ist; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob das EventDispatcher-Objekt Listener für einen bestimmten Ereignistyp registriert hat. Dadurch können Sie bestimmen, wo ein EventDispatcher-Objekt die Verarbeitung eines Ereignistyps in der Ereignisablaufhierarchie geändert hat. Um festzustellen, ob ein bestimmter Ereignistyp einen Ereignis-Listener auslöst, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">IEventDispatcher.willTrigger()</codeph>.
	<p class="- topic/p ">Der Unterschied zwischen <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> besteht darin, dass <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> nur das Objekt untersucht, zu dem es gehört, während <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> den gesamten Ereignisablauf auf das im Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph> angegebene Ereignis untersucht.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IEventDispatcher/willTrigger()" class="- topic/link "><linktext class="- topic/linktext ">willTrigger()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Entfernt einen Listener aus dem EventDispatcher-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu entfernende Listener-Objekt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Listener für die Erfassungsphase oder die Ziel- und Bubbling-Phase registriert wurde. Wenn der Listener sowohl für die Erfassungs- als auch für die Bubbling-Phase registriert wurde, sind auch zwei Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> erforderlich, um beide zu entfernen: ein Aufruf, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, und einer, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist. 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Entfernt einen Listener aus dem EventDispatcher-Objekt. Wenn kein entsprechender Listener mit dem EventDispatcher-Objekt registriert ist, hat ein Aufruf dieser Methode keine Auswirkungen.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:willTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">willTrigger</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob bei diesem EventDispatcher-Objekt oder bei einem seiner übergeordneten Objekte ein Ereignis-Listener für einen bestimmten Ereignistyp registriert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn ein Listener des angegebenen Typs ausgelöst wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob bei diesem EventDispatcher-Objekt oder bei einem seiner Vorgänger ein Ereignis-Listener für einen bestimmten Ereignistyp registriert ist. Diese Methode liefert den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn während irgendeiner Phase des Ereignisablaufs ein Ereignis-Listener aufgerufen wird, wenn ein Ereignis des angegebenen Typs für dieses EventDispatcher-Objekt oder eines seiner nachfolgenden Elemente ausgelöst wird.
	<p class="- topic/p ">Der Unterschied zwischen <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> besteht darin, dass <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> nur das Objekt untersucht, zu dem es gehört, während <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> den gesamten Ereignisablauf auf das im Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph> angegebene Ereignis untersucht.</p>
	
	</apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.events:SQLErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
 Eine SQLErrorEvent-Instanz wird von einer SQLConnection- oder SQLStatement-Instanz ausgelöst, wenn während der Ausführung eines Datenbankvorgangs im asynchronen Modus ein Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Eine SQLErrorEvent-Instanz wird von einer SQLConnection- oder SQLStatement-Instanz ausgelöst, wenn während der Ausführung eines Datenbankvorgangs im asynchronen Modus ein Fehler auftritt. Die SQLErrorEvent-Instanz, die als Ereignisobjekt an Listener übergeben wird, ermöglicht den Zugriff auf Informationen über die Ursache des Fehlers und den Vorgang, der ausgeführt werden sollte.
 
 <p class="- topic/p ">Die spezifischen Details des Fehlers finden sich im SQLError-Objekt der <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft der SQLErrorEvent-Instanz.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link></related-links><adobeApiEvent id="flash.events:SQLErrorEvent:ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLErrorEvent:ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SQLErrorEvent:SQLErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein SQLErrorEvent-Objekt, das als Argument an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, aufrufbar über die <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft. Das SQLErrorEvent definiert einen Ereignistyp, das <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis, das von der <codeph class="+ topic/ph pr-d/codeph ">SQLErrorEvent.ERROR</codeph>-Konstante repräsentiert wird.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:SQLError</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das SQLError-Objekt, das die Details zum Fehler enthält.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Dient zum Erstellen eines neuen SQLErrorEvent-Objekts.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein SQLErrorEvent-Objekt, das als Argument an Ereignis-Listener übergeben wird.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.errors.SQLError;.xml" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError;</linktext></link><link href="flash.events.xml#SQLErrorEvent/ERROR" class="- topic/link "><linktext class="- topic/linktext ">ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SQLErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des SQLErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SQLErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des SQLErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SQLErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt einen String zurück, der alle Eigenschaften des SQLErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des SQLErrorEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt einen String zurück, der alle Eigenschaften des SQLErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SQLErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> error=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 <p class="- topic/p ">Der Fehlerwert hat das folgende Format: <codeph class="+ topic/ph pr-d/codeph ">SQLError : <i class="+ topic/ph hi-d/i ">Meldungswert</i> code=<i class="+ topic/ph hi-d/i ">Wert</i> operation=<i class="+ topic/ph hi-d/i ">Wert</i></codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLErrorEvent:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLErrorEvent.ERROR-Konstante definiert den Wert der type-Eigenschaft eines error-Ereignisses, das ausgelöst wird, wenn ein Aufruf einer Methode einer SQLConnection-Instanz oder einer SQLStatement-Instanz mit einem Fehler beendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLErrorEvent.ERROR</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines error-Ereignisses, das ausgelöst wird, wenn ein Aufruf einer Methode einer SQLConnection-Instanz oder einer SQLStatement-Instanz mit einem Fehler beendet wird. Das <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">Ein SQLError-Objekt, das Informationen über den aufgetretenen Fehlertyp und den Vorgang, der den Fehler ausgelöst hat, enthält.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection- oder SQLStatement-Objekt, dessen Fehlerstatus gemeldet wird.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLErrorEvent:error:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
     Ein SQLError-Objekt, das ausführliche Informationen zur Ursache des Fehlers enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.errors:SQLError</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein SQLError-Objekt, das ausführliche Informationen zur Ursache des Fehlers enthält.
     
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein Objekt setzt ein ErrorEvent-Objekt ab, wenn ein Fehler zum Fehlschlagen eines asynchronen Vorgangs führt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für ErrorEvent-Ereignisse.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein Objekt setzt ein ErrorEvent-Objekt ab, wenn ein Fehler zum Fehlschlagen eines asynchronen Vorgangs führt.

<p class="- topic/p ">Die ErrorEvent-Klasse definiert nur einen Typ von <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis: <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>. Die ErrorEvent-Klasse dient auch als Basisklasse für verschiedene andere Fehlerereignisklassen, darunter AsyncErrorEvent, IOErrorEvent, SecurityErrorEvent, SQLErrorEvent und UncaughtErrorEvent.</p>

<p class="- topic/p ">Sie können feststellen, ob es <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignisse gibt, die keine Listener haben, indem Sie einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis (UncaughtErrorEvent.UNCAUGHT_ERROR) registrieren.</p>

<p class="- topic/p ">Ein nicht erfasster Fehler produziert auch ein Fehlerdialogfeld mit dem Fehlerereignis, wenn Inhalt in der <ph class="- topic/ph ">Debugger-Version von Flash Player oder der</ph> Anwendung „AIR Debug Launcher“ (ADL) ausgeführt wird.</p>

</apiDesc><example conref="examples\ErrorEventExample.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung einer einzelnen Fehlerprozedur (<codeph class="+ topic/ph pr-d/codeph ">errorHandler()</codeph>), die mehrere Arten von Fehlerereignissen erfasst, demonstriert. Wenn ein <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>-Ereignis eintritt, versucht die Prozedur einen Ladevorgang aus dem Netzwerk. Hierbei wird ein <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph> ausgelöst.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Dieses Beispiel funktioniert nicht, wenn sich eine Datei mit dem Namen „MissingFile.xml“ im gleichen Ordner wie die SWF-Datei befindet.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.*;

    public class ErrorEventExample extends Sprite {
        private var loader:URLLoader;
        private var request:URLRequest;
        
        public function ErrorEventExample() {
            loader = new URLLoader();
            loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandler);

            request = new URLRequest();
            loadFromFileSystem();
        }
        
        private function loadFromFileSystem():void {
            request.url = "MissingFile.xml";
            loader.load(request);
        }

        private function loadFromNetwork():void {
            request.url = "http://www.[yourDomain].com/MissingFile.xml";
            loader.load(request);
        }
        
        private function errorHandler(event:ErrorEvent):void {
            trace("errorHandler: " + event);
            if(event is IOErrorEvent) {
                loadFromNetwork();
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#UncaughtErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvent</linktext></link></related-links><adobeApiEvent id="flash.events:ErrorEvent:ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ErrorEvent:ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:ErrorEvent:ErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Fehlerereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Fehlerereignisses: <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt eine Bubbling-Phase durchführt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der als Fehlermeldung anzuzeigende Text. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine mit dem spezifischen Fehler verknüpfte Referenznummer (wird nur in Adobe AIR unterstützt).
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für ErrorEvent-Objekte.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Fehlerereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des ErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des ErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des ErrorEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i> errorID=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Der <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Wert, der von der <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>-Methode zurückgegeben wird, ist nur für Adobe AIR verfügbar. Während Flash Player 10.1 die <codeph class="+ topic/ph pr-d/codeph ">errorID</codeph>-Eigenschaft unterstützt, wird durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> für das ErrorEvent-Objekt in Flash Player nicht der <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Wert bereitgestellt.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ErrorEvent:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines error-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, bei dem der Netzwerkvorgang fehlschlägt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ErrorEvent:errorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">errorID</apiName><shortdesc class="- topic/shortdesc ">
	Enthält die Verweisnummer, die dem spezifischen Fehler zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Enthält die Verweisnummer, die dem spezifischen Fehler zugeordnet ist. Bei einem selbst definierten ErrorEvent-Objekt entspricht diese Nummer dem Wert des im Konstruktor bereitgestellten <codeph class="+ topic/ph pr-d/codeph ">id</codeph>-Parameters. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SoftKeyboardTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardTrigger</apiName><shortdesc class="- topic/shortdesc ">
	Die SoftKeyboardTrigger-Klasse definiert die möglichen Werte für die triggerType-Eigenschaft der SoftKeyboardEvent-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Definiert die möglichen Werte für die triggerType-Eigenschaft der SoftKeyboardEvent-Klasse.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die SoftKeyboardTrigger-Klasse definiert die möglichen Werte für die <codeph class="+ topic/ph pr-d/codeph ">triggerType</codeph>-Eigenschaft der SoftKeyboardEvent-Klasse. Diese Werte geben an, welcher Aktionstyp ein SoftKeyboard-Aktivierungsereignis ausgelöst hat.
	
	</apiDesc></apiClassifierDetail><apiValue id="flash.events:SoftKeyboardTrigger:CONTENT_TRIGGERED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONTENT_TRIGGERED</apiName><shortdesc class="- topic/shortdesc ">
	Ein Funktionsaufruf hat das Ereignis ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">contentTriggered</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Zeigt an, dass das Ereignis durch einen Funktionsaufruf ausgelöst wurde.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Funktionsaufruf hat das Ereignis ausgelöst.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardTrigger:USER_TRIGGERED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_TRIGGERED</apiName><shortdesc class="- topic/shortdesc ">
	Eine Benutzeraktion hat das Ereignis ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userTriggered</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Zeigt an, dass das Ereignis durch eine Benutzeraktion ausgelöst wurde.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Eine Benutzeraktion hat das Ereignis ausgelöst. Typische Benutzeraktionen, die dieses Ereignis auslösen können, sind das Schließen der Tastatur oder das Betätigen der Zurück-Taste. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TransformGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TransformGestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Die TransformGestureEvent-Klasse ermöglicht die Verarbeitung komplexer Bewegungseingabeereignisse (zum Beispiel das Bewegen von Fingern über einen Touchscreen), die das Gerät oder Betriebssystem als Geste interpretiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">bietet Unterstützung für die Ereignisverarbeitung bei Berührungsbewegungsinteraktionen
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:GestureEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Die TransformGestureEvent-Klasse ermöglicht die Verarbeitung komplexer Bewegungseingabeereignisse (zum Beispiel das Bewegen von Fingern über einen Touchscreen), die das Gerät oder Betriebssystem als Geste interpretiert. Eine Geste kann einen oder mehrere Berührungspunkte aufweisen. Wenn ein Benutzer mit einem Gerät mit Touchscreen, zum Beispiel Mobiltelefon oder Tablet, interagiert, setzt er normalerweise einen Finger oder Touchpen auf den Bildschirm und bewegt ihn. Mithilfe der GestureEvent-, PressAndTapGestureEvent- und TransformGestureEvent-Klasse können Sie Anwendungen entwickeln, die auf diese Benutzerinteraktion reagieren. Erstellen Sie mit den hier oder in den verwandten GestureEvent- und TouchEvent-Klassen definierten Ereignistypen Ereignis-Listener. Verwenden Sie außerdem die Eigenschaften und Methoden dieser Klassen, um Ereignisprozeduren zu konstruieren, die auf die Berührung des Benutzers mit dem Gerät reagieren.
 <p class="- topic/p ">Ein Gerät oder Betriebssystem interpretiert die Gesteneingabe. Verschiedene Geräte oder Betriebssysteme haben unterschiedliche Anforderungen für die einzelnen Gestentypen. Eine Swipe-Geste auf einem Gerät kann andere Eingabebewegungen erfordern als eine Swipe-Geste auf einem anderen Gerät. Wie das Gerät oder Betriebssystem Berührungen als eine bestimmte Geste interpretiert, können Sie der Dokumentation der jeweiligen Hardware oder des Betriebssystems entnehmen.</p>
 <p class="- topic/p ">Stellen Sie mithilfe der Multitouch-Klasse fest, welche Berührungsinteraktionen die aktuelle Umgebung unterstützt, und verwalten Sie die ggf. unterstützten Berührungsinteraktionen.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Objekte auf der Anzeigeliste verschachtelt sind, zielen Berührungsereignisse auf das am weitesten verschachtelte Objekt, das auf der Anzeigeliste zu sehen ist. Dieses Objekt wird als Zielknoten bezeichnet. Damit der Vorfahre des Knotens (ein Objekt in der Anzeigeliste, das den Zielknoten enthält) über ein Berührungsereignis benachrichtigt wird, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> für den Vorfahrenknoten. Dabei sollte der type-Parameter auf das Berührungsereignis gesetzt werden, das Sie erkennen möchten.</p>
 <p class="- topic/p ">Während der Benutzer das Gerät berührt, sind die scale-, rotation- und offset-Eigenschaft des TransformGestureEvent-Objekts inkrementelle Werte aus dem vorherigen Gestenereignis. Wenn eine Geste zum Beispiel ein Anzeigeobjekt vergrößert, ändern sich die scale-Werte nacheinander vielleicht auf <codeph class="+ topic/ph pr-d/codeph ">1.03</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.01</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.01</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.02</codeph> und zeigen damit an, dass das Anzeigeobjekt beim Ende der Geste das 1,0717-Fache der ursprünglichen Größe aufweist.</p>
 <p class="- topic/p ">Für TransformGestureEvent-Objekte werden Eigenschaften, die von der aktuellen Geste nicht geändert werden, auf Identitätswerte gesetzt. Eine Bildlaufgeste weist zum Beispiel keine Dreh- oder Skalierungstransformation auf, weshalb der <codeph class="+ topic/ph pr-d/codeph ">rotation</codeph>-Wert des Ereignisobjekts <codeph class="+ topic/ph pr-d/codeph ">0</codeph> ist und die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph> und <codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph> haben.</p>
 </apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>-Ereignisse. Während der Benutzer eine Drehgeste auf dem berührungsempfindlichen Gerät ausführt, dreht sich mySprite und in myTextField wird die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example><example conref="examples\TransformGestureExample2.as" class="- topic/example "> Das folgende Beispiel zeigt, wie Transformationsgestenereignisse verarbeitet werden. In diesem Beispiel wird davon ausgegangen, dass Sie auf Ihrem lokalen System ein Bild namens „african_elephant.jpg“ im selben Verzeichnis wie die TransformGestureExample2-Klasse vorliegen haben. Das Beispiel stammt von Christian Cantrell und wird ausführlicher in seiner Kurzanleitung beschrieben: <xref href="http://www.adobe.com/devnet/flash/articles/multitouch_gestures.html" scope="external" class="- topic/xref ">Multi-touch and gesture support on the Flash Platform</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package
{
    import flash.display.Bitmap;
    import flash.display.Sprite;
    import flash.events.TransformGestureEvent;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.ui.Multitouch;
    import flash.ui.MultitouchInputMode;
    
    [SWF(width=320, height=460, frameRate=24, backgroundColor=0x000000)]
    public class TransformGestureExample2 extends Sprite
    {
        [Embed(source="african_elephant.jpg")]
        public var ElephantImage:Class;
        public var scaleDebug:TextField;
        public var rotateDebug:TextField;

        public function TransformGestureExample2()
        {
            // Debug
            var tf:TextFormat = new TextFormat();
            tf.color = 0xffffff;
            tf.font = "Helvetica";
            tf.size = 11;
            this.scaleDebug = new TextField();
            this.scaleDebug.width = 310;
            this.scaleDebug.defaultTextFormat = tf;
            this.scaleDebug.x = 2;
            this.scaleDebug.y = 2;
            this.stage.addChild(this.scaleDebug);
            this.rotateDebug = new TextField();
            this.rotateDebug.width = 310;
            this.rotateDebug.defaultTextFormat = tf;
            this.rotateDebug.x = 2;
            this.rotateDebug.y = 15;
            this.stage.addChild(this.rotateDebug);

            var elephantBitmap:Bitmap = new ElephantImage();
            var elephant:Sprite = new Sprite();
            
            elephant.addChild(elephantBitmap);
            
            elephant.x = 160;
            elephant.y = 230;
            
            elephantBitmap.x = (300 - (elephantBitmap.bitmapData.width / 2)) * -1;
            elephantBitmap.y = (400 - (elephantBitmap.bitmapData.height / 2)) *-1;
            
            this.addChild(elephant);

            Multitouch.inputMode = MultitouchInputMode.GESTURE;
            elephant.addEventListener(TransformGestureEvent.GESTURE_ZOOM, onZoom);
            elephant.addEventListener(TransformGestureEvent.GESTURE_ROTATE, onRotate);
        }
        
        private function onZoom(e:TransformGestureEvent):void
        {
            this.scaleDebug.text = (e.scaleX + ", " + e.scaleY);
            var elephant:Sprite = e.target as Sprite;
            elephant.scaleX *= e.scaleX;
            elephant.scaleY *= e.scaleY;
        }
        
        private function onRotate(e:TransformGestureEvent):void
        {
            var elephant:Sprite = e.target as Sprite;
            this.rotateDebug.text = String(e.rotation);
            elephant.rotation += e.rotation;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_PAN_gesturePan" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gesturePan</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_PAN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_pan.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>-Ereignisse. Während der Benutzer eine Bildlaufgeste auf dem berührungsempfindlichen Gerät ausführt, wird in myTextField die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPan(evt:TransformGestureEvent):void {

    evt.target.localX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePan" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePan</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_ROTATE_gestureRotate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureRotate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_ROTATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>-Ereignisse. Während der Benutzer eine Drehgeste auf dem berührungsempfindlichen Gerät ausführt, dreht sich mySprite und in myTextField wird die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureRotate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureRotate</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_SWIPE_gestureSwipe" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureSwipe</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_SWIPE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_swipe.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>-Ereignisse. Während der Benutzer eine Swipe-Geste auf dem berührungsempfindlichen Gerät ausführt, wird myTextField mit der Phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> ausgefüllt, welche die einzige Phase für Swipe-Ereignisse ist.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE , onSwipe);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onSwipe(evt:TransformGestureEvent):void {

    if (evt.offsetX == 1 ) {
    myTextField.text = "right";
    }
    if (evt.offsetY == -1) {
    myTextField.text = "up";
    }
    myTextField.text = evt.phase;

}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureSwipe" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureSwipe</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_ZOOM_gestureZoom" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureZoom</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_ZOOM</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_zoom.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>-Ereignisse. Während der Benutzer eine Zoom-Geste auf dem berührungsempfindlichen Gerät ausführt, wird in myTextField die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ZOOM , onZoom);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onZoom(evt:TransformGestureEvent):void {

    evt.target.scaleX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureZoom" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureZoom</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TransformGestureEvent:TransformGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TransformGestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Event-Objekt, das Informationen zu komplexen Multitouch-Ereignissen enthält, zum Beispiel, wenn ein Benutzer seinen Finger über einen Bildschirm bewegt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_PAN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_ROTATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_SWIPE</codeph> und <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_ZOOM</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Wert verfolgt den Anfang, den Fortschritt und das Ende einer Berührungsgeste. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> und <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">scaleX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Skalierung des Anzeigeobjekts.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">scaleY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Skalierung des Anzeigeobjekts.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">rotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der aktuelle Drehwinkel des Anzeigeobjekt entlang der z-Achse in Grad.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offsetX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Versetzung des Anzeigeobjekts von seiner ursprünglichen Position.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offsetY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Versetzung des Anzeigeobjekts von seiner ursprünglichen Position.	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows oder Linux wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist (nur Windows oder Linux).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Ctrl- oder Strg-Taste aktiviert ist. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für TransformGestureEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Event-Objekt, das Informationen zu komplexen Multitouch-Ereignissen enthält, zum Beispiel, wenn ein Benutzer seinen Finger über einen Bildschirm bewegt. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:TransformGestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des TransformGestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues TransformGestureEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des TransformGestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TransformGestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des TransformGestureEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des TransformGestureEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des TransformGestureEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TransformGestureEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TransformGestureEvent:GESTURE_PAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_PAN</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_PAN-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gesturePan</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TransformGestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf; ein Wert aus der GesturePhase-Klasse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Die horizontale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis. Für Bildlaufgesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Die vertikale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis. Für Bildlaufgesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Der aktuelle Drehwinkel des Anzeigeobjekts um die z-Achse seit dem vorherigen Gestenereignis in Grad. Für Bildlaufgesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Die horizontale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Die vertikale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_pan.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>-Ereignisse. Während der Benutzer eine Bildlaufgeste auf dem berührungsempfindlichen Gerät ausführt, wird in myTextField die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPan(evt:TransformGestureEvent):void {

    evt.target.localX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePan" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePan</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_ROTATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_ROTATE</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_ROTATE-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureRotate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TransformGestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf; ein Wert aus der GesturePhase-Klasse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Die horizontale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Die vertikale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Der aktuelle Drehwinkel des Anzeigeobjekts um die z-Achse seit dem vorherigen Gestenereignis in Grad.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Die horizontale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Die vertikale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>-Ereignisse. Während der Benutzer eine Drehgeste auf dem berührungsempfindlichen Gerät ausführt, dreht sich mySprite und in myTextField wird die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureRotate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureRotate</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_SWIPE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_SWIPE</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_SWIPE-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureSwipe</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TransformGestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf. Für Swipe-Ereignisse ist dieser Wert immer <codeph class="+ topic/ph pr-d/codeph ">all</codeph> entsprechend dem Wert <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>, nachdem dieses Ereignis abgesetzt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Die horizontale Skalierung des Anzeigeobjekts. Für Swipe-Gesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Die vertikale Skalierung des Anzeigeobjekts. Für Swipe-Gesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">1</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Der aktuelle Drehwinkel des Anzeigeobjekt entlang der z-Achse in Grad. Für Swipe-Gesten ist dieser Wert <codeph class="+ topic/ph pr-d/codeph ">0</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Gibt die horizontale Richtung an: 1 für „nach rechts“ und -1 für „nach links“.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Gibt die vertikale Richtung an: 1 für „nach unten“ und -1 für „nach oben“.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_swipe.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>-Ereignisse. Während der Benutzer eine Swipe-Geste auf dem berührungsempfindlichen Gerät ausführt, wird myTextField mit der Phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> ausgefüllt, welche die einzige Phase für Swipe-Ereignisse ist.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE , onSwipe);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onSwipe(evt:TransformGestureEvent):void {

    if (evt.offsetX == 1 ) {
    myTextField.text = "right";
    }
    if (evt.offsetY == -1) {
    myTextField.text = "up";
    }
    myTextField.text = evt.phase;

}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureSwipe" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureSwipe</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_ZOOM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_ZOOM</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_ZOOM-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureZoom</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TransformGestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf; ein Wert aus der GesturePhase-Klasse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Die horizontale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Die vertikale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Der aktuelle Drehwinkel des Anzeigeobjekts um die z-Achse seit dem vorherigen Gestenereignis in Grad.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Die horizontale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Die vertikale Versetzung des Anzeigeobjekts von seiner Position beim vorherigen Gestenereignis.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_zoom.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>-Ereignisse. Während der Benutzer eine Zoom-Geste auf dem berührungsempfindlichen Gerät ausführt, wird in myTextField die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ZOOM , onZoom);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onZoom(evt:TransformGestureEvent):void {

    evt.target.scaleX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureZoom" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureZoom</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:offsetX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offsetX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Versetzung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Versetzung des Anzeigeobjekts seit dem vorherigen Gestenereignis. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:offsetY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offsetY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Versetzung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Versetzung des Anzeigeobjekts seit dem vorherigen Gestenereignis. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:rotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rotation</apiName><shortdesc class="- topic/shortdesc ">
	Der aktuelle Drehwinkel des Anzeigeobjekts um die z-Achse seit dem vorherigen Gestenereignis in Grad.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der aktuelle Drehwinkel des Anzeigeobjekts um die z-Achse seit dem vorherigen Gestenereignis in Grad. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:scaleX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scaleX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:scaleY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scaleY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Skalierung des Anzeigeobjekts seit dem vorherigen Gestenereignis. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeDragEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragEvent</apiName><shortdesc class="- topic/shortdesc ">
 Native Drag-Ereignisse werden von den interaktiven Objekten ausgelöst, die an einem Drag &amp; Drop-Vorgang beteiligt sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Native Drag-Ereignisse werden von den interaktiven Objekten ausgelöst, die an einem Drag &amp; Drop-Vorgang beteiligt sind.
 
 <p class="- topic/p ">Das initiierende Objekt löst folgende Ereignisse aus:</p> 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>: Zu Beginn des Ziehvorgangs.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>: Während des Ziehvorgangs.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>: Wenn der Benutzer das gezogene Element loslässt (egal, ob das Ablegen akzeptiert wurde oder nicht).</li></ul>
 
 <p class="- topic/p ">Das initiierende Objekt ist das interaktive Objekt, das im Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph>, mit dem der Ziehvorgang beginnt, an das NativeDragManager-Objekt übergeben wird.</p>
 
 <p class="- topic/p ">Potenzielle interaktive Zielobjekte lösen folgende Ereignisse aus:</p>
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>: Wenn sich die Ziehbewegung über die Objektgrenzen auf das Objekt bewegt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>: Wenn die Ziehbewegung innerhalb der Objektgrenzen verbleibt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>: Wenn die Ziehbewegung die Objektgrenzen verlässt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>: Wenn der Benutzer das gezogene Element über dem Objekt loslässt und das Objekt das Ablegen durch einen früheren Aufruf von <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDragDrop()</codeph> akzeptiert hat.</li></ul>
 
 <p class="- topic/p ">Normalerweise evaluiert die Prozedur für das <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignis die gezogenen Daten zusammen mit den zulässigen Ziehaktionen, um festzustellen, ob ein interaktives Objekt das Ablegen akzeptieren kann. Um festzulegen, dass ein interaktives Objekt ein gültiges Ziel ist, muss die Ereignisprozedur die <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph>-Funktion aufrufen, die einen Verweis an das Objekt übergibt. Wenn der Benutzer die Maustaste über dem vorgesehenen Objekt loslässt, wird dieses zum Ablageziel und löst das <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis aus.</p>
 
 <p class="- topic/p ">Jedes Objekt vom Typ InteractiveObject kann ein Ziehinitiator oder ein Ablageziel sein.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link><link href="flash.display.xml#InteractiveObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject</linktext></link></related-links><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE_nativeDragComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom Quell-InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste endet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragComplete</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_DROP_nativeDragDrop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragDrop</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_DROP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste über dem Objekt endet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragDrop" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragDrop</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_ENTER_nativeDragEnter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragEnter</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_ENTER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste in die Objektbegrenzungen eintritt.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragEnter" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragEnter</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_EXIT_nativeDragExit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragExit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_EXIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste die Objektbegrenzungen verlässt.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragExit" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragExit</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_OVER_nativeDragOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, während sich eine Drag-and-Drop-Geste über dem Objekt abspielt.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_START_nativeDragStart" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragStart</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_START</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird zu Beginn einer nativen Drag-and-Drop-Geste vom Quell-InteractiveObject abgesetzt.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragStart" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragStart</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE_nativeDragUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragUpdate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom Quell-InteractiveObject abgesetzt, während eine Drag-and-Drop-Geste stattfindet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragUpdate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragUpdate</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeDragEvent:NativeDragEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Event-Objekt mit spezifischen Informationen, die für native Ziehen-und-Ablegen-Ereignisse relevant sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_START</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_ENTER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_EXIT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_DROP</codeph> und <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_COMPLETE</codeph>.
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs beteiligt ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das entsprechende interaktive Anzeigeobjekt. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clipboard</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:Clipboard</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Clipboard-Objekt mit den zu übertragenden Daten.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">allowedActions</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeDragOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das NativeDragOptions-Objekt, das die zulässigen Aktionen definiert (verschieben, kopieren und verknüpfen).
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dropAction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die aktuelle Aktion.
    
 	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Strg-Taste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Befehlstaste aktiviert ist.
	
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Event-Objekt mit spezifischen Informationen, die für native Ziehen-und-Ablegen-Ereignisse relevant sind.
    
	<p class="- topic/p ">Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. Das Auslösen eines Ziehereignisses löst nicht das zugehörige Verhalten aus.</p>
	
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeDragEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie dieses NativeDragEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NativeDragEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie dieses NativeDragEvent-Objekts.
	
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeDragEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Formatiert die Eigenschaften dieses NativeDragEvent-Objekts als ein String.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Eigenschaften dieses NativeDragEvent-Objekts als ein String.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Formatiert die Eigenschaften dieses NativeDragEvent-Objekts als ein String.
	 
	 <p class="- topic/p ">Der String liegt im folgenden Format vor:</p>
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeDragEvent type=Wert bubbles=Wert cancelable=Wert ... commandKey=Wert]</codeph></p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_COMPLETE definiert den Wert der type-Eigenschaft eines nativeDragComplete-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom Quell-InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste endet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_COMPLETE definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragComplete</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_DROP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_DROP</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_DROP definiert den Wert der type-Eigenschaft eines nativeDragDrop-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragDrop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste über dem Objekt endet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_DROP definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen dieses Ereignisses bricht den Ziehvorgang ab.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. Die Zwischenablage kann auch gelesen werden, wenn das Objekt, das dieses Ereignis auslöst, sich nicht in derselben Sicherheitsdomäne wie der Initiator befindet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragDrop" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragDrop</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_ENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_ENTER</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_ENTER definiert den Wert der type-Eigenschaft eines nativeDragEnter-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragEnter</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste in die Objektbegrenzungen eintritt.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_ENTER definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. Die Zwischenablage kann nur gelesen werden, wenn das Objekt, das dieses Ereignis auslöst, sich in derselben Sicherheitsdomäne wie der Initiator befindet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragEnter" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragEnter</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_EXIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_EXIT</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_EXIT definiert den Wert der type-Eigenschaft eines nativeDragExit-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragExit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, wenn eine Drag-and-Drop-Geste die Objektbegrenzungen verlässt.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_EXIT definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. Die Zwischenablage kann nur gelesen werden, wenn das Objekt, das dieses Ereignis auslöst, sich in derselben Sicherheitsdomäne wie der Initiator befindet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragExit" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragExit</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_OVER</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_OVER definiert den Wert der type-Eigenschaft eines nativeDragOver-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom InteractiveObject abgesetzt, während sich eine Drag-and-Drop-Geste über dem Objekt abspielt.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_OVER definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen dieses Ereignisses bricht den Ziehvorgang ab.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. Die Zwischenablage kann nur gelesen werden, wenn das Objekt, das dieses Ereignis auslöst, sich in derselben Sicherheitsdomäne wie der Initiator befindet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragOver</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_START" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_START</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_START definiert den Wert der type-Eigenschaft eines nativeDragStart-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragStart</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird zu Beginn einer nativen Drag-and-Drop-Geste vom Quell-InteractiveObject abgesetzt.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_START definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen dieses Ereignisses bricht den Ziehvorgang ab.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragStart" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragStart</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_UPDATE definiert den Wert der type-Eigenschaft eines nativeDragUpdate-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragUpdate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom Quell-InteractiveObject abgesetzt, während eine Drag-and-Drop-Geste stattfindet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_UPDATE definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">Das NativeDragOptions-Objekt, das die für diesen Ziehvorgang relevanten Aktionen angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">Das Clipboard-Objekt, das die gezogenen Daten enthält. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Die vom Ablageziel gewählte Aktion (oder <codeph class="+ topic/ph pr-d/codeph ">none</codeph>, wenn keine Aktion festgelegt wurde).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragUpdate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragUpdate</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:allowedActions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowedActions</apiName><shortdesc class="- topic/shortdesc ">
	Das NativeDragOptions-Objekt, das die Aktionen festlegt, die vom Anzeigeobjekt, das diesen Ziehvorgang eingeleitet hat, zugelassen sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:NativeDragOptions</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das NativeDragOptions-Objekt, das die Aktionen festlegt, die vom Anzeigeobjekt, das diesen Ziehvorgang eingeleitet hat, zugelassen sind.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">clipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Das Clipboard-Objekt, das in diesem Ziehvorgang die Daten enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:Clipboard</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das Clipboard-Objekt, das in diesem Ziehvorgang die Daten enthält.
	 
	 <p class="- topic/p ">Wenn sich das Objekt, das das Ereignis auslöst, nicht in derselben Sicherheitsdomäne befindet wie das initiierende Objekt, kann die Zwischenablage nur in der Prozedur für ein <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>-Ereignis gelesen werden.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:dropAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dropAction</apiName><shortdesc class="- topic/shortdesc ">
	Die aktuelle Aktion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die aktuelle Aktion. Im <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>-Ereignis protokolliert die <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph>-Eigenschaft die endgültige Aktion. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:PressAndTapGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PressAndTapGestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Mit der PressAndTapGestureEvent-Klasse können Sie Drücken-und-Tippen-Gesten auf berührungsempfindlichen Geräten verarbeiten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">bietet Unterstützung für die Ereignisverarbeitung für Drücken-und-Tippen-Gesten
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:GestureEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Mit der PressAndTapGestureEvent-Klasse können Sie Drücken-und-Tippen-Gesten auf berührungsempfindlichen Geräten verarbeiten. Objekte, die Eigenschaften von der InteractiveObject-Klasse erben, erfassen den primären Berührungspunkt (Drücken) und einen sekundären Berührungspunkt (Tippen) im abgesetzten Ereignisobjekt. Die Drücken-und-Tippen-Geste wird normalerweise verwendet, um ein Kontextmenü aufzurufen.
 </apiDesc><example conref="examples\GesturePressAndTap.as" class="- topic/example "> Das folgende Beispiel zeigt die Ereignisverarbeitung für das <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PRESS_AND_TAP</codeph>-Ereignis. Während der Benutzer eine Drücken-und-Tippen-Geste auf dem berührungsempfindlichen Gerät ausführt, dreht sich mySprite und in myTextField wird die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP , onPressAndTap );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPressAndTap(evt:PressAndTapGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.display.xml#InteractiveObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP_gesturePressAndTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gesturePressAndTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:PressAndTapGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePressAndTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePressAndTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:PressAndTapGestureEvent:PressAndTapGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">PressAndTapGestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Event-Objekt, das Informationen zu komplexen Mehrfinger-Ereignissen enthält, zum Beispiel, wenn ein Benutzer ein kontextabhängiges Popupmenü aufruft.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dieser Wert verfolgt den Anfang, den Fortschritt und das Ende einer Berührungsgeste. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tapLocalX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tapLocalY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows oder Linux wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist (nur Windows oder Linux).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Ctrl- oder Strg-Taste aktiviert ist. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für PressAndTapGestureEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Event-Objekt, das Informationen zu komplexen Mehrfinger-Ereignissen enthält, zum Beispiel, wenn ein Benutzer ein kontextabhängiges Popupmenü aufruft. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:PressAndTapGestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des PressAndTapGestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues PressAndTapGestureEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des PressAndTapGestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:PressAndTapGestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des PressAndTapGestureEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des PressAndTapGestureEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des PressAndTapGestureEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[PressAndTapGestureEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_PRESS_AND_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_PRESS_AND_TAP-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gesturePressAndTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PRESS_AND_TAP</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte PressAndTapGestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase, während das Ereignis die Objekthierarchie durchläuft; ein numerischer Wert, der angibt, ob das Ereignis erfasst wird (1), beim Ziel angekommen ist (2) oder aufsteigt (3).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Anzeigeobjekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase in einem Ereignisablauf; ein Wert aus der GesturePhase-Klasse. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>. Eine Drücken-und-Tippen-Geste generiert entweder eine Abfolge von <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> oder die Geste generiert eine einzelne <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>-Phase.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapLocalY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapStageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapStageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePressAndTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePressAndTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapLocalX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapLocalX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapLocalY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapLocalY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden interaktiven Objekt steht.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapStageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapStageX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapStageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapStageY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der die Tippberührung aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GeolocationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GeolocationEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein Geolocation-Objekt setzt GeolocationEvent-Objekte ab, wenn es Updates vom Lokalisierungssender, der in das Gerät eingebaut ist, empfängt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein Geolocation-Objekt setzt GeolocationEvent-Objekte ab, wenn es Updates vom Lokalisierungssender, der in das Gerät eingebaut ist, empfängt.

</apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:GeolocationEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:GeolocationEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:GeolocationEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:GeolocationEvent:GeolocationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GeolocationEvent</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt ein GeolocationEvent-Objekt, das Informationen über den Standort des Geräts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Gibt den Ereignistyp an. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Updateereignisses: <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent.UPDATE</codeph>.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Ereignis ein Bubbling-Ereignis ist (propagiert werden kann). Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">latitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Breitengrad an. Der Wert kann im folgenden Bereich liegen: (-90 &lt;= Breite &lt;= +90).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">longitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Längengrad an. Der Wert kann im folgenden Bereich liegen: (-180 &lt;= Länge &lt;= +180).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Höhe in Metern an.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">hAccuracy</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die horizontale Genauigkeit in Metern an.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">vAccuracy</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die vertikale Genauigkeit in Metern an.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">speed</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Geschwindigkeit in Meter pro Sekunde.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">heading</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Bewegungsrichtung in Grad an (in Relation zum geografischen Norden).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Zeitstempel des Updates der Geolokalisierung an.
		
		</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für GeolocationEvent-Objekte.
		 
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt ein <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent</codeph>-Objekt, das Informationen über den Standort des Geräts enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:GeolocationEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des GeolocationEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues GeolocationEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des GeolocationEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GeolocationEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
		Gibt einen String zurück, der alle Eigenschaften des GeolocationEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des GeolocationEvent-Objekts enthält.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Gibt einen String zurück, der alle Eigenschaften des GeolocationEvent-Objekts enthält. Der String liegt im folgenden Format vor:
		
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[GeolocationEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> status=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:GeolocationEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines GeolocationEvent-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent</codeph>-Ereignisobjekts.  
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Geolocation-Objekt, das Daten empfängt.</entry></row></tbody></tgroup></adobetable>
		
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:altitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altitude</apiName><shortdesc class="- topic/shortdesc "> 
		Die Höhe in Metern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die Höhe in Metern.
		
		<p class="- topic/p ">Wenn Höhenangaben vom Gerät nicht unterstützt werden, wird diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph> gesetzt.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:heading:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">heading</apiName><shortdesc class="- topic/shortdesc "> 
		Die Bewegungsrichtung in Grad (in Relation zum geografischen Norden).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die Bewegungsrichtung in Grad (in Relation zum geografischen Norden). Dies ist nicht das Gleiche wie die Peilung („bearing“), wobei die Bewegungsrichtung in Bezug auf einen anderen Punkt angegeben wird.
		
	 	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Bei Android-Geräten wird „heading“ nicht unterstützt. Der Wert der <codeph class="+ topic/ph pr-d/codeph ">heading</codeph>-Eigenschaft ist immer <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph> (Not a Number, keine Zahl).</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:horizontalAccuracy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">horizontalAccuracy</apiName><shortdesc class="- topic/shortdesc "> 
		Die horizontale Genauigkeit in Metern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die horizontale Genauigkeit in Metern.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:latitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">latitude</apiName><shortdesc class="- topic/shortdesc ">
		Der Breitengrad.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Der Breitengrad. Der Breitengradwert liegt im folgenden Bereich: (-90 &lt;= <codeph class="+ topic/ph pr-d/codeph ">latitude</codeph> &lt;= 90). Negative Breite ist „Süd“ und positive Breite ist „Nord“.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:longitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">longitude</apiName><shortdesc class="- topic/shortdesc ">
		Der Längengrad.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Der Längengrad. Der Längengradwert liegt im folgenden Bereich: (-180 &lt;= <codeph class="+ topic/ph pr-d/codeph ">longitude</codeph> &lt; 180). Negative Länge ist „West“ und positive Länge ist „Ost“.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:speed:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">speed</apiName><shortdesc class="- topic/shortdesc "> 
		Die Geschwindigkeit in Meter pro Sekunde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die Geschwindigkeit in Meter pro Sekunde.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc "> 
		Die Anzahl der Millisekunden seit der Initialisierung der Laufzeitumgebung bis zum Auftreten des Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die Anzahl der Millisekunden seit der Initialisierung der Laufzeitumgebung bis zum Auftreten des Ereignisses. Wenn das Gerät zum Beispiel 4 Sekunden nach der Initialisierung der Anwendung Beschleunigungsdaten erfasst, wird die timestamp-Eigenschaft des Ereignisses auf 4000 gesetzt. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:verticalAccuracy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">verticalAccuracy</apiName><shortdesc class="- topic/shortdesc "> 
		Die vertikale Genauigkeit in Metern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die vertikale Genauigkeit in Metern.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:MediaEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">MediaEvent</apiName><shortdesc class="- topic/shortdesc ">
 Die CameraRoll- und CameraUI-Klassen setzen MediaEvent-Objekte ab, wenn ein Medienstream verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die CameraRoll- und CameraUI-Klassen setzen MediaEvent-Objekte ab, wenn ein Medienstream verfügbar ist. 
  
 <p class="- topic/p ">Die CameraRoll-Klasse setzt ein MediaEvent-Objekt des Typs<codeph class="+ topic/ph pr-d/codeph ">select</codeph> ab, wenn der Benutzer ein Bild auswählt. Die CameraUI-Klasse setzt ein MediaEvent-Objekt des Typs <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ab, wenn ein Bild oder Video, dass mit der Gerätekamera aufgenommen wurde, zurückgegeben wird.</p>
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#CameraRoll" class="- topic/link "><linktext class="- topic/linktext ">CameraRoll</linktext></link><link href="flash.media.xml#CameraUI" class="- topic/link "><linktext class="- topic/linktext ">CameraUI</linktext></link></related-links><adobeApiEvent id="flash.events:MediaEvent:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MediaEvent:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MediaEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der complete-Ereignistyp.
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:MediaEvent:SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MediaEvent:SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MediaEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der select-Ereignistyp.
		 </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:MediaEvent:MediaEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">MediaEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein MediaEvent-Objekt, das Informationen zu der verfügbaren Mediendatei enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt eine Bubbling-Phase durchführt.   
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:MediaPromise</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das MediaPromise-Objekt, das dem ausgewählten Bild entspricht.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für MediaEvent-Objekte.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein MediaEvent-Objekt, das Informationen zu der verfügbaren Mediendatei enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:MediaEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
		Erstellt eine Kopie des MediaEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ein neues MediaEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	    
	    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Erstellt eine Kopie des MediaEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
		  
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MediaEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
		Gibt eine Zeichenfolge zurück, die alle Eigenschaften des MediaEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ein neues MediaEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	     	
	     	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Gibt eine Zeichenfolge zurück, die alle Eigenschaften des MediaEvent-Objekts enthält. Das folgende Format wird verwendet:
		
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[MediaEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> data=<i class="+ topic/ph hi-d/i ">Wert</i> ] </codeph></p> 
		  
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:MediaEvent:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	Eine Konstante für das complete-MediaEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der complete-Ereignistyp.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Eine Konstante für das <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-MediaEvent. 
	
	<p class="- topic/p ">Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">MediaEvent</codeph>-Ereignisobjekts. Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Das MediaPromise-Objekt der verfügbaren Medieninstanz.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MediaEvent:SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT</apiName><shortdesc class="- topic/shortdesc ">
		 Eine Konstante für das select-MediaEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">select</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der select-Ereignistyp.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Eine Konstante für das <codeph class="+ topic/ph pr-d/codeph ">select</codeph>-MediaEvent.
		 
		 <p class="- topic/p ">Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">MediaEvent</codeph>-Ereignisobjekts. Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Das MediaPromise-Objekt der verfügbaren Medieninstanz.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MediaEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
		Das MediaPromise-Objekt für die verfügbare Mediendatei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.media:MediaPromise</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Das MediaPromise-Objekt für die verfügbare Mediendatei.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageVideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein StageVideo-Objekt setzt ein StageVideoEvent-Objekt ab, nachdem sowohl die attachNetStream()-Methode des StageVideo-Objekts als auch die play()-Methode des angehängten NetStream-Objekts aufgerufen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für StageVideo-Ereignisse.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein StageVideo-Objekt setzt ein StageVideoEvent-Objekt ab, nachdem sowohl die <codeph class="+ topic/ph pr-d/codeph ">attachNetStream()</codeph>-Methode des StageVideo-Objekts als auch die <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>-Methode des angehängten NetStream-Objekts aufgerufen wurden. Je nach Plattform können außerdem Änderungen am Wiedergabestatus zum Absetzen des Ereignisses führen. Der Typ von StageVideoEvent ist <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph>.
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:StageVideoEvent:RENDER_STATE_renderState" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">renderState</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StageVideoEvent:RENDER_STATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StageVideoEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StageVideoEvent:StageVideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoEvent</apiName><shortdesc class="- topic/shortdesc ">
			Erstellt ein Ereignisobjekt, das Informationen über StageVideo-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Der Typ von StageVideoEvent ist <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph>.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Status des StageVideo-Zielobjekts an.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">colorSpace</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Farbraum, der vom angezeigten Video verwendet wird.
			
			</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für StageVideoEvent-Objekte.
			</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Erstellt ein Ereignisobjekt, das Informationen über StageVideo-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
			
			</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageVideo" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideo</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link></related-links></apiConstructor><apiValue id="flash.events:StageVideoEvent:RENDER_STATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATE</apiName><shortdesc class="- topic/shortdesc ">
		Die StageVideoEvent.RENDER_STATE-Konstante definiert den Wert der type-Eigenschaft eines renderState-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">renderState</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">renderState</codeph>-Ereignisobjekts. 
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">colorSpace</codeph></entry><entry class="- topic/entry ">Die verfügbaren Farbräume für die Wiedergabe des Videos.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das StageVideoEvent-Objekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Video von der Hardware gerendert (dekodiert und angezeigt) wird, von der Software, oder gar nicht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das StageVideo-Objekt, dessen Zustand sich geändert hat.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_ACCELERATED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_ACCELERATED</apiName><shortdesc class="- topic/shortdesc ">
		Zeigt an, dass das Video von der Hardware dekodiert und angezeigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">accelerated</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.ACCELERATED" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Zeigt an, dass das Video von der Hardware dekodiert und angezeigt wird. 
		
		<p class="- topic/p ">Dieser Wert ist einer der möglichen Werte der <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Eigenschaft des StageVideoEvent-Objekts.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_SOFTWARE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_SOFTWARE</apiName><shortdesc class="- topic/shortdesc ">
		Zeigt an, dass das Video von der Software dekodiert und angezeigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">software</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.SOFTWARE" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Zeigt an, dass das Video von der Software dekodiert und angezeigt wird. 
		
		<p class="- topic/p ">Dieser Wert ist einer der möglichen Werte der <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Eigenschaft des StageVideoEvent-Objekts.</p>
		
		<p class="- topic/p ">Wenn die Plattform zum Beispiel das Dekodieren und Anzeigen des Audio- oder Videocodecs des Videos nicht unterstützt, hat das StageVideoEvent-Objekt diesen status-Wert.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_UNAVAILABLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_UNAVAILABLE</apiName><shortdesc class="- topic/shortdesc ">
		Zeigt an, dass die Anzeige des Videos mit dem StageVideo-Objekt nicht möglich war.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unavailable</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.UNAVAILABLE" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Zeigt an, dass die Anzeige des Videos mit dem StageVideo-Objekt nicht möglich war. 
		
		<p class="- topic/p ">Dieser Wert ist einer der möglichen Werte der <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Eigenschaft des StageVideoEvent-Objekts.</p>
		
		<p class="- topic/p ">Beispiel: Eine Plattform unterstützt das Decodieren und Anzeigen des Audio- oder Videocodecs des Videos weder mit Software noch mit Hardware. In diesem Fall hat das StageVideoEvent-Objekt diesen status-Wert.</p>
		
		<p class="- topic/p ">Dieser status-Wert wird auch verwendet, wenn keine Hardware-Decoder verfügbar sind. Dies kann bei AIR für TV vorkommen. Aus Gründen der Abwärtskompatibilität mit früheren Versionen ermöglicht AIR für TV die Verwendung eines Video-Objekts für die Hardwaredekodierung und -anzeige. Mit einem Video-Objekt verwenden Sie den zugrunde liegenden Hardware-Decoder und haben deshalb ein StageVideo-Objekt weniger zur Verfügung. Es wird empfohlen, ein StageVideo-Objekt für die Videodekodierung und -anzeige mittels Hardware zu verwenden.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:colorSpace:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">colorSpace</apiName><shortdesc class="- topic/shortdesc ">
		Der Farbraum, der vom Video verwendet wird, das im StageVideo-Objekt angezeigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Der Farbraum, der vom Video verwendet wird, das im StageVideo-Objekt angezeigt wird. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageVideo" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideo</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
		Der Status des StageVideo-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Der Status des StageVideo-Objekts. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:LocationChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LocationChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
     Ein HTMLLoader- oder StageWebView-Objekt setzt ein LocationChangeEvent-Objekt ab, wenn eine neue Seite geladen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein HTMLLoader- oder StageWebView-Objekt setzt ein LocationChangeEvent-Objekt ab, wenn eine neue Seite geladen wird.
	  
	 <p class="- topic/p ">Es gibt zwei LocationChangeEvent-Typen: </p>
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LocationChangeEvent.LOCATION_CHANGING</codeph>: wird vor einer Änderung abgesetzt, die über den in einem StageWebView-Objekt angezeigten Inhalt initiiert wird. Kann abgebrochen werden.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LocationChangeEvent.LOCATION_CHANGE</codeph>: wird nach jeder Positionsänderung abgesetzt. Kann nicht abgebrochen werden.</li></ul>
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageWebView" class="- topic/link "><linktext class="- topic/linktext ">StageWebView</linktext></link></related-links><apiConstructor id="flash.events:LocationChangeEvent:LocationChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LocationChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
     	Erstellt ein LocationChangeEvent-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">location</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Erstellt ein LocationChangeEvent-Objekt.
     	
     	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:LocationChangeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
     	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><inheritDocs>
     	
     	</inheritDocs></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:LocationChangeEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
 		Gibt einen String zurück, der alle Eigenschaften des LocationChangeEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 		Gibt einen String zurück, der alle Eigenschaften des LocationChangeEvent-Objekts enthält. Der String liegt im folgenden Format vor:
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[LocationChangeEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> eventPhase=<i class="+ topic/ph hi-d/i ">Wert</i> location=<i class="+ topic/ph hi-d/i ">Wert</i></codeph></p>
    	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:LocationChangeEvent:LOCATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
     	Wird nach jeder Positionsänderung abgesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Wird nach jeder Positionsänderung abgesetzt.
     	
     	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:LocationChangeEvent:LOCATION_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
     	Die LOCATION_CHANGING-Konstante definiert den Wert der type-Eigenschaft des LocationChangeEvent-Objekts, das vor einer Änderung der Seitenposition abgesetzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Die <codeph class="+ topic/ph pr-d/codeph ">LOCATION_CHANGING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des LocationChangeEvent-Objekts, das vor einer Änderung der Seitenposition abgesetzt wird. 
     	
     	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:LocationChangeEvent:location:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">location</apiName><shortdesc class="- topic/shortdesc ">
     	Die Ziel-URL der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Die Ziel-URL der Änderung.
     	
     	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NetDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetDataEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein NetStream-Objekt setzt ein NetDataEvent-Objekt ab, wenn im Medienstream eine Datennachricht erkannt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein NetStream-Objekt setzt ein NetDataEvent-Objekt ab, wenn im Medienstream eine Datennachricht erkannt wird.

<p class="- topic/p ">Ein NetDataEvent wird für die folgenden Nachrichten abgesetzt:</p>
<ul class="- topic/ul "><li class="- topic/li ">onCuePoint</li><li class="- topic/li ">onImageData</li><li class="- topic/li ">onMetaData</li><li class="- topic/li ">onPlayStatus (für den Code NetStream.Play.Complete)</li><li class="- topic/li ">onTextData</li><li class="- topic/li ">onXMPData</li></ul>

</apiDesc></apiClassifierDetail><apiConstructor id="flash.events:NetDataEvent:NetDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetDataEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Mediendatenereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Zeitstempel der Datenmeldung
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Datenmeldungsobjekt
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Mediendatenereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NetDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des NetDataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NetDataEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des NetDataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt einen String zurück, der alle Eigenschaften des NetDataEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des NetMediaEvent-Objekts enthält.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt einen String zurück, der alle Eigenschaften des NetDataEvent-Objekts enthält. Das folgende Format wird verwendet:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetDataEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> timestamp=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetDataEvent:MEDIA_TYPE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MEDIA_TYPE_DATA</apiName><shortdesc class="- topic/shortdesc ">
	 Die NetDataEvent.MEDIA_TYPE_DATA-Konstante definiert den Wert der type-Eigenschaft des NetDataEvent-Objekts, das abgesetzt wird, wenn das NetStream-Objekt eine Datennachricht im Medienstream erkennt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mediaTypeData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">NetDataEvent.MEDIA_TYPE_DATA</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des NetDataEvent-Objekts, das abgesetzt wird, wenn das NetStream-Objekt eine Datennachricht im Medienstream erkennt.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetDataEvent:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
	 Ein Datenobjekt, das die Nachricht beschreibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein Datenobjekt, das die Nachricht beschreibt. Das <codeph class="+ topic/ph pr-d/codeph ">info</codeph>-Objekt hat zwei Eigenschaften: <codeph class="+ topic/ph pr-d/codeph ">info.handler</codeph> und <codeph class="+ topic/ph pr-d/codeph ">info.args</codeph>. <codeph class="+ topic/ph pr-d/codeph ">info.handler</codeph> ist der Name der Prozedur, zum Beispiel „onMetaData“ oder „onXMPData“. <codeph class="+ topic/ph pr-d/codeph ">info.args</codeph> ist ein Array von Argumenten.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetDataEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc ">
	 Der Zeitstempel der Datenmeldung im Medienstream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der Zeitstempel der Datenmeldung im Medienstream.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeProcessExitEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessExitEvent</apiName><shortdesc class="- topic/shortdesc ">
 Dieses Ereignis wird vom NativeProcess-Objekt abgesetzt, wenn der Prozess beendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Dieses Ereignis wird vom NativeProcess-Objekt abgesetzt, wenn der Prozess beendet wird. Es ist möglich, dass dieses Ereignis nie abgesetzt wird. Wenn zum Beispiel der untergeordnete Prozess länger andauert als die AIR-Anwendung, die ihn erstellt hat, wird das Ereignis nicht abgesetzt.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess</linktext></link></related-links><adobeApiEvent id="flash.events:NativeProcessExitEvent:EXIT_exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeProcessExitEvent:EXIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeProcessExitEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:NativeProcessExitEvent:NativeProcessExitEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessExitEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein NativeProcessExitEvent, das spezifische Informationen zum Beenden-Code eines NativeProcess enthält
	
	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, auf den als <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph> zugegriffen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert lautet <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">exitCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Zahl, die der Prozess beim Beenden an das Betriebssystem zurückgegeben hat.
	
	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein NativeProcessExitEvent, das spezifische Informationen zum Beenden-Code eines NativeProcess enthält
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeProcessExitEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des NativeProcessExitEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NativeProcessExitEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des NativeProcessExitEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeProcessExitEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des NativeProcessExitEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>-Objekts enthält.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des NativeProcessExitEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeProcessExitEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> exitCode=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeProcessExitEvent:EXIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXIT</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines exit-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>-Ereignisobjekts.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeProcessExitEvent:exitCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exitCode</apiName><shortdesc class="- topic/shortdesc ">
	Der Beenden-Code, den der native Prozess beim Beenden an das Host-Betriebssystem zurückgegeben hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Beenden-Code, den der native Prozess beim Beenden an das Host-Betriebssystem zurückgegeben hat. Wenn die AIR-Anwendung den Prozess durch einen Aufruf der <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph>-Methode des NativeProcess-Objekts beendet, wird die <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph>-Eigenschaft auf NaN (not a number, keine Zahl) gesetzt. <i class="+ topic/ph hi-d/i ">HINWEIS: Unter Windows-Betriebssystemen kann dieser Wert auf 259 (STILL_ACTIVE) gesetzt werden, wenn der Prozess nicht beendet wurde, aber die Laufzeitumgebung beendet wird oder ein Fehler aufgetreten ist. Um die Verwechslung mit diesem Zustand zu vermeiden, verwenden Sie 259 nicht als Rückgabecode in einem nativen Prozess.</i>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DNSResolverEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DNSResolverEvent</apiName><shortdesc class="- topic/shortdesc ">
 Die DNSResolverEvent-Klasse stellt die Ergebnisse einer DNS-Nachschlageoperation dar.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die DNSResolverEvent-Klasse stellt die Ergebnisse einer DNS-Nachschlageoperation dar.
 
 <p class="- topic/p ">Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph>-Methode von DNSResolver, um eine DNS-Abfrage zu initiieren. Von der Abfrage zurückgegebene Ressourcendatensätze werden im Array <codeph class="+ topic/ph pr-d/codeph ">resourceRecords</codeph> dieses DNSResolverEvent-Objekts platziert.</p>
 
 </apiDesc><example conref="examples\DNSResolverEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.dns.xml#DNSResolver" class="- topic/link "><linktext class="- topic/linktext ">DNSResolver</linktext></link></related-links><adobeApiEvent id="flash.events:DNSResolverEvent:LOOKUP_lookup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">lookup</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DNSResolverEvent:LOOKUP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DNSResolverEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem DNSResolver-Objekt abgesetzt, wenn eine Nachschlageoperation beendet ist.
     
     </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:DNSResolverEvent:DNSResolverEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DNSResolverEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein DNSResolverEvent-Objekt, das die Ergebnisse einer DNS-Nachschlageoperation enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind:<codeph class="+ topic/ph pr-d/codeph ">DNSResolverEvent.LOOKUP</codeph>
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Abfragestring, zum Beispiel Hostname, IP-Adresse oder der Service-Locator, der im Aufruf der <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph>-Methode der DNSResolver-Klasse verwendet wurde, auf die das neue Ereignis reagiert.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">resourceRecords</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Liste der zurückgegebenen DNS-Ressourcendatensätze.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein DNSResolverEvent-Objekt, das die Ergebnisse einer DNS-Nachschlageoperation enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DNSResolverEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des DNSResolverEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ServerSocketConnectEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des DNSResolverEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DNSResolverEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des DNSResolverEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des DNSResolverEvent-Objekts enthält. Der String liegt im folgenden Format vor:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DNSResolverEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> host=<i class="+ topic/ph hi-d/i ">Wert</i> resourceRecords=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DNSResolverEvent:LOOKUP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOOKUP</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines Nachschlageereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lookup</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem DNSResolver-Objekt abgesetzt, wenn eine Nachschlageoperation beendet ist.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">lookup</codeph>-Ereignisobjekts.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DNSResolverEvent:host:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">host</apiName><shortdesc class="- topic/shortdesc ">
    Der Abfragestring, zum Beispiel Hostname, IP-Adresse oder der Service-Locator, der im Aufruf der lookup()-Methode der DNSResolver-Klasse verwendet wurde, auf die dieses Ereignis reagiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Abfragestring, der in der Nachschlageoperation verwendet wird.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Abfragestring, zum Beispiel Hostname, IP-Adresse oder der Service-Locator, der im Aufruf der <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph>-Methode der DNSResolver-Klasse verwendet wurde, auf die dieses Ereignis reagiert.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DNSResolverEvent:resourceRecords:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">resourceRecords</apiName><shortdesc class="- topic/shortdesc ">
	Ein Array, das die Ressourcendatensätze enthält, die von der DNS-Nachschlageoperation zurückgegeben wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Array, das die Ressourcendatensätze enthält, die von der DNS-Nachschlageoperation zurückgegeben wurden.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Event</apiName><shortdesc class="- topic/shortdesc ">
 Die Event-Klasse wird als Basisklasse bei der Erstellung von Ereignisobjekten verwendet, die beim Auftreten eines Ereignisses als Parameter an Ereignis-Listener übergeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Basisklasse des Ereignisobjekts.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die Event-Klasse wird als Basisklasse bei der Erstellung von Ereignisobjekten verwendet, die beim Auftreten eines Ereignisses als Parameter an Ereignis-Listener übergeben werden.
 
 <p class="- topic/p ">Die Eigenschaften der Event-Klasse enthalten allgemeine Informationen über ein Ereignis, z. B. den Ereignistyp und ob das Standardverhalten eines Ereignisses abgebrochen werden kann. Für viele Ereignisse, beispielsweise die von den Konstanten der Event-Klasse dargestellten Ereignisse, sind die allgemeinen Informationen ausreichend. Andere Ereignisse benötigen jedoch ausführlichere Informationen. <ph class="- topic/ph ">Ereignisse, die mit einem Mausklick verknüpft sind, erfordern beispielsweise zusätzliche Informationen über die Position des Klick-Ereignisses, und ob bestimmte Tasten während des Klick-Ereignisses gedrückt wurden. Diese zusätzlichen Informationen können Sie durch das Erweitern der Event-Klasse an Ereignis-Listener übergeben. Genau dies wird von der MouseEvent-Klasse vorgenommen. Die ActionScript 3.0</ph>-API definiert verschiedene Unterklassen der Event-Klasse für allgemeine Ereignisse, die zusätzliche Informationen erfordern. Ereignisse, die mit den einzelnen Event-Unterklassen verknüpft sind, sind in der Dokumentation der einzelnen Klassen beschrieben.</p>
 
 <p class="- topic/p ">Die Methoden der Event-Klasse können in den Ereignis-Listener-Funktionen eingesetzt werden, um das Verhalten des Ereignisobjekts zu beeinflussen. Einigen Ereignissen ist ein Standardverhalten zugewiesen.<ph class="- topic/ph "> So markiert das <codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph>-Ereignis z. B. standardmäßig das zum Zeitpunkt des Ereignisses unter dem Mauszeiger befindliche Wort.</ph> Ihr Ereignis-Listener kann dieses Verhalten abbrechen, indem er die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode aufruft. <ph class="- topic/ph ">Sie können auch den aktuellen Ereignis-Listener zum letzten Listener machen, der ein Ereignis verarbeitet, indem Sie die <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph>-Methode aufrufen.</ph></p>
 <p class="- topic/p ">Weitere Informationsquellen:</p>
 <ul class="- topic/ul "><li class="- topic/li ">Eine hilfreiche Beschreibung der Zeitgebung von Ereignissen, Codeausführung und Darstellung zur Laufzeit im Blogeintrag von Ted Patrick: <xref href="http://www.onflex.org/ted/2005/07/flash-player-mental-model-elastic.php" scope="external" class="- topic/xref ">Flash Player Mental Model - The Elastic Racetrack</xref>.</li><li class="- topic/li ">Ein Blogeintrag von Johannes Tacskovics zur Zeitgebung von Bildereignissen wie ENTER_FRAME, EXIT_FRAME: <xref href="http://blog.johannest.com/2009/06/15/the-movieclip-life-cycle-revisited-from-event-added-to-event-removed_from_stage/" scope="external" class="- topic/xref ">The MovieClip Lifecycle</xref>.</li><li class="- topic/li ">Ein Artikel von Trevor McCauley über die Reihenfolge von ActionScript-Operationen: <xref href="http://www.senocular.com/flash/tutorials/orderofoperations/" scope="external" class="- topic/xref ">Order of Operations in ActionScript</xref>.</li><li class="- topic/li ">Ein Blogeintrag von Matt Przybylski zum Erstellen von benutzerdefinierten Ereignissen: <xref href="http://evolve.reintroducing.com/2007/10/23/as3/as3-custom-events/" scope="external" class="- topic/xref ">AS3: Custom Events</xref>.</li></ul>
 
 
 </apiDesc><example conref="examples\EventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der <codeph class="+ topic/ph pr-d/codeph ">EventExample</codeph>-Klasse und der benutzerdefinierten Klasse <codeph class="+ topic/ph pr-d/codeph ">Square</codeph> die Verwaltung von Ereignis-Bubbling demonstriert.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.MouseEvent;

    public class EventExample extends Sprite {
        
        public function EventExample() {
            var square_0:Square = new Square(300, 0x336633);
            addChild(square_0);
            
            var square_1:Square = new Square(250, 0x669966);
            square_0.addChild(square_1);

            var square_2:Square = new Square(200, 0x66CC66);
            square_1.addChild(square_2);

            var square_3:Square = new Square(150, 0xAA0000);
            square_3.shouldBubble = false;
            square_2.addChild(square_3);

            var square_4:Square = new Square(100, 0x66FF66);
            square_3.addChild(square_4);

            var square_5:Square = new Square(50, 0xCC0000);
            square_5.shouldBubble = false;
            square_4.addChild(square_5);

            this.addEventListener(MouseEvent.CLICK, clickHandler);
        }
        
        private function clickHandler(e:Event):void {
            trace(">> stage: " + e.type + " event from " + e.target.name + " called on " + this.name);
            trace(">> --------------------------------------------");
        }
    }
}

import flash.display.Sprite;
import flash.events.Event;
import flash.events.MouseEvent;

class Square extends Sprite {
    private var sideLen:int;
    private var color:Number;
    public var shouldBubble:Boolean = true;

    public function Square(sideLen:int, color:Number) {
        this.sideLen = sideLen;
        this.color = color;
        init();
        draw();
    }
        
    private function init():void {
        buttonMode = true;
        this.addEventListener(MouseEvent.CLICK, firstClickHandler);
        this.addEventListener(MouseEvent.CLICK, secondClickHandler);
        this.addEventListener(MouseEvent.CLICK, thirdClickHandler);
    }
        
    private function draw():void {
        this.graphics.beginFill(color);
        this.graphics.drawRect(0, 0, sideLen, sideLen);
    }
        
    private function firstClickHandler(e:Event):void {
        trace(">> 1e: " + e.type + " event from " + e.target.name + " called on " + this.name);
        if(!shouldBubble) {
            e.stopPropagation();
        }
    }

    private function secondClickHandler(e:Event):void {
        trace(">> 2e: " + e.type + " event from " + e.target.name + " called on " + this.name);
        if(!shouldBubble) {
            e.stopImmediatePropagation();
            trace(">> --------------------------------------------");
        }
    }

    private function thirdClickHandler(e:Event):void {
        trace(">> 3e: " + e.type + " event from " + e.target.name + " called on " + this.name);
    }
}
</codeblock></example><example conref="examples\EventExample2.as" class="- topic/example "> Im folgenden Beispiel wird der Unterschied zwischen den Ereignissen <codeph class="+ topic/ph pr-d/codeph ">ADDED</codeph> und <codeph class="+ topic/ph pr-d/codeph ">ADDED_TO_STAGE</codeph> sowie den Ereignissen <codeph class="+ topic/ph pr-d/codeph ">REMOVED</codeph> und <codeph class="+ topic/ph pr-d/codeph ">REMOVED_FROM_STAGE</codeph> interaktiv gezeigt. Durch Klicken auf ein Sprite wird es mit seinem gesamten geschachtelten Inhalt von der Bühne entfernt. Durch Klicken auf das größte Sprite werden ein <codeph class="+ topic/ph pr-d/codeph ">REMOVED</codeph>-Ereignis sowie drei <codeph class="+ topic/ph pr-d/codeph ">REMOVED_FROM_STAGE</codeph>-Ereignisse ausgelöst.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.events.*;

    public class EventExample2 extends Sprite {
        public function EventExample2():void {
            var parentSprite:Sprite = createSprite("parentSprite",200);
            var childSprite:Sprite = createSprite("childSprite",100);
            var childOfChildSprite:Sprite = createSprite("childOfChildSprite",50);
            
            trace(":: Adding to Stage ::");
            this.addChild(parentSprite);
            trace(":: Adding to Stage ::");
            parentSprite.addChild(childSprite);
            trace(":: Adding to Stage ::");
            childSprite.addChild(childOfChildSprite);
        }
        private function createSprite(name:String,size:uint):Sprite {
            trace(":: Creating Sprite ::");
            var newSprite:Sprite = new Sprite();
            newSprite.name = name;
            newSprite.graphics.beginFill(0xFFFFFF * Math.random(),1);
            newSprite.graphics.drawRect(0,0,size,size);
            newSprite.graphics.endFill();
            newSprite.addEventListener(Event.ADDED, spriteAdded);
            newSprite.addEventListener(Event.ADDED_TO_STAGE, spriteAddedToStage);
            newSprite.addEventListener(Event.REMOVED, spriteRemoved);
            newSprite.addEventListener(Event.REMOVED_FROM_STAGE, spriteRemovedFromStage);
            newSprite.addEventListener(MouseEvent.CLICK, remove);
            return newSprite;
        }
        private function remove(event:Event) {
            if(event.target == event.currentTarget) {
                trace(":: Removing Clicked Sprite ::");
                var target:Sprite = Sprite(event.target);
                target.parent.removeChild(target);
            }
        }
        private function spriteRemovedFromStage(event:Event):void {
            trace("REMOVED_FROM_STAGE: " + event.target.name + " : " + event.currentTarget.name);
        }
        private function spriteRemoved(event:Event):void {
            trace("REMOVED: " + event.target.name + " from " + event.currentTarget.name);
        }
        private function spriteAddedToStage(event:Event):void {
            trace("ADDED_TO_STAGE: " + event.target.name + " : " + event.currentTarget.name);
        }
        private function spriteAdded(event:Event):void {
            trace("ADDED: " + event.target.name + " within " + event.currentTarget.name);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link></related-links><adobeApiEvent id="flash.events:Event:ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:activate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.activate</linktext></link><link href="flash.events.xml#Event/DEACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">DEACTIVATE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ADDED_TO_STAGE_addedToStage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">addedToStage</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ADDED_TO_STAGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:addedToStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.addedToStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ADDED_added" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">added</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ADDED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:added" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.added</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal><code>ProductManager</code> pulled from table 
	</internal></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.cancel</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CHANGE_change" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">change</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:change" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.change</linktext></link><link href="flash.events.xml#TextEvent/TEXT_INPUT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TextEvent.TEXT_INPUT</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLEAR_copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLEAR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:clear" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.clear</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.close</linktext></link><link href="flash.net.xml#XMLSocket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.close</linktext></link><link href="flash.display.xml#NativeWindow/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.close</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLOSING_closing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">closing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLOSING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow/event:closing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.closing</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.complete</linktext></link><link href="../../flash/html/HTMLLoader.html#event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.complete</linktext></link><link href="flash.media.xml#Sound/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.complete</linktext></link><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.complete</linktext></link><link href="flash.net.xml#URLLoader/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.complete</linktext></link><link href="flash.net.xml#URLStream/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.complete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.connect</linktext></link><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.connect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:COPY_copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:COPY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:copy" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.copy</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CUT_cut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:cut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.cut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:deactivate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.deactivate</linktext></link><link href="flash.events.xml#Event/ACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">ACTIVATE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:DISPLAYING_displaying" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displaying</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:DISPLAYING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.displaying</linktext></link><link href="flash.display.xml#NativeMenuItem/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.displaying</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ENTER_FRAME_enterFrame" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">enterFrame</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ENTER_FRAME</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:enterFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.enterFrame</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:EXITING_exiting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exiting</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:EXITING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:exiting" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exiting</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:EXIT_FRAME_exitFrame" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exitFrame</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:EXIT_FRAME</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:exitFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.exitFrame</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:FRAME_CONSTRUCTED_frameConstructed" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">frameConstructed</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:FRAME_CONSTRUCTED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:frameConstructed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.frameConstructed</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:FULLSCREEN_fullScreen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:FULLSCREEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:fullScreen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.fullScreen</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_BOUNDS_CHANGE_htmlBoundsChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlBoundsChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_BOUNDS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlBoundsChange" class="- topic/link "><linktext class="- topic/linktext ">htmlBoundsChange-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_DOM_INITIALIZE_htmlDOMInitialize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlDOMInitialize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_DOM_INITIALIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlDOMInitialize" class="- topic/link "><linktext class="- topic/linktext ">htmlDOMInitialize-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_RENDER_htmlRender" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlRender</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_RENDER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlRender" class="- topic/link "><linktext class="- topic/linktext ">htmlRender-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ID3_id3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">id3</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ID3</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:id3" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.id3</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:INIT_init" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">init</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:INIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:init" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.init</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:LOCATION_CHANGE_locationChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">locationChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:LOCATION_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:locationChange" class="- topic/link "><linktext class="- topic/linktext ">locationChange-Ereignis</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:MOUSE_LEAVE_mouseLeave" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseLeave</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:MOUSE_LEAVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:mouseLeave" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.mouseLeave</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:networkChange" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.networkChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.open</linktext></link><link href="flash.media.xml#Sound/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.open</linktext></link><link href="flash.net.xml#FileReference/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.open</linktext></link><link href="flash.net.xml#URLLoader/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.open</linktext></link><link href="flash.net.xml#URLStream/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.open</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:PASTE_paste" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">paste</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:PASTE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:paste" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.paste</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:PREPARING_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:PREPARING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.preparing</linktext></link><link href="flash.display.xml#NativeMenuItem/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.preparing</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:REMOVED_FROM_STAGE_removedFromStage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">removedFromStage</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:REMOVED_FROM_STAGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removedFromStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removedFromStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:REMOVED_removed" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">removed</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:REMOVED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removed</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:RENDER_render" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">render</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:RENDER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:render" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.render</linktext></link><link href="flash.display.xml#Stage/invalidate()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.invalidate()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:RESIZE_resize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:RESIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:resize" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.resize</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SCROLL_scroll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">scroll</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SCROLL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scroll</linktext></link><link href="../../flash/html/HTMLLoader.html#event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.scroll</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SELECT_ALL_selectAll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">selectAll</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SELECT_ALL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:selectAll" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.selectAll</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.select</linktext></link><link href="flash.display.xml#NativeMenu/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.select</linktext></link><link href="flash.display.xml#NativeMenuItem/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.select</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SOUND_COMPLETE_soundComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">soundComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SOUND_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundChannel/event:soundComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundChannel.soundComplete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_ERROR_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_ERROR_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_INPUT_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_INPUT_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_OUTPUT_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_OUTPUT_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_CHILDREN_CHANGE_tabChildrenChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabChildrenChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_CHILDREN_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabChildrenChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabChildrenChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_ENABLED_CHANGE_tabEnabledChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabEnabledChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_ENABLED_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabEnabledChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabEnabledChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_INDEX_CHANGE_tabIndexChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabIndexChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_INDEX_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabIndexChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabIndexChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TEXT_INTERACTION_MODE_CHANGE_textInteractionModeChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInteractionModeChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TEXT_INTERACTION_MODE_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInteractionModeChange" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInteractionModeChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:UNLOAD_unload" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">unload</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:UNLOAD</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:unload" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.unload</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:USER_IDLE_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:USER_IDLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userIdle</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:USER_PRESENT_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:USER_PRESENT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userPresent</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:Event:Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Event</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein Ereignisobjekt, das als ein Parameter an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, auf den als <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph> zugegriffen werden kann.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert lautet <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Dient zum Erstellen eines neuen Ereignisobjekts.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein Ereignisobjekt, das als ein Parameter an Ereignis-Listener übergeben wird.
     
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:Event:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Dupliziert eine Instanz einer Event-Unterklasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein mit dem Original identisches neues Ereignisobjekt.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Dupliziert eine Instanz einer Event-Unterklasse.
	 
     <p class="- topic/p ">Gibt ein neues Ereignisobjekt zurück, das eine Kopie der ursprünglichen Instanz des Ereignisobjekts ist. Normalerweise rufen Sie <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> nicht auf; es wird automatisch von der EventDispatcher-Klasse aufgerufen, wenn Sie ein Ereignis neu auslösen, das heißt, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> von einer Prozedur aus aufrufen, die <codeph class="+ topic/ph pr-d/codeph ">event</codeph> verarbeitet.</p>
	 
	 <p class="- topic/p ">Das neue Ereignisobjekt übernimmt alle Eigenschaften des Originals.</p> 
	 
	 <p class="- topic/p ">Wenn Sie Ihre eigene benutzerdefinierte Event-Klasse erstellen, müssen Sie die übernommene <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph>-Methode außer Kraft setzen, um die Eigenschaften Ihrer benutzerdefinierten Klasse zu duplizieren. Wenn Sie nicht alle der Ereignis-Unterklasse hinzugefügten Eigenschaften eingestellt haben, weisen sie nicht die korrekten Werte auf, wenn Listener das neu ausgelöste Ereignis verarbeiten.</p>
	 
	 <p class="- topic/p ">In dem folgenden Beispiel ist <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> eine Unterklasse von <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> und implementiert aus diesem Grund eine eigene Version von <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:Event:formatToString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatToString</apiName><shortdesc class="- topic/shortdesc ">
	 Eine Dienstprogrammfunktion zur Implementierung der toString()-Methode in benutzerdefinierten ActionScript 3.0 Event-Klassen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name Ihrer benutzerdefinierten Event-Klasse und der String-Wert Ihres <codeph class="+ topic/ph pr-d/codeph ">...arguments</codeph>-Parameters.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">className</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name Ihrer benutzerdefinierten Event-Klasse. <ph class="- topic/ph ">Im obigen Beispiel lautet der <codeph class="+ topic/ph pr-d/codeph ">className</codeph>-Parameter <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph>.</ph>
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Eigenschaften der Event-Klasse<ph class="- topic/ph "> und die Eigenschaften, die Sie Ihrer benutzerdefinierten Event-Klasse hinzufügen. Im vorigen Beispiel umfasst der <codeph class="+ topic/ph pr-d/codeph ">...arguments</codeph>-Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph>, <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph>, <codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph> und <codeph class="+ topic/ph pr-d/codeph ">URL</codeph></ph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Eine Dienstprogrammfunktion zur Implementierung der <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>-Methode in benutzerdefinierten ActionScript 3.0 Event-Klassen. <ph class="- topic/ph ">Das Außerkraftsetzen der <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>-Methode wird empfohlen, ist jedoch nicht erforderlich.</ph>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 class PingEvent extends Event {
	  var URL:String;
	 
	 public override function toString():String { 
	  return formatToString("PingEvent", "type", "bubbles", "cancelable", "eventPhase", "URL"); 
	    }
	 }
	 </pre>
	 
	 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:Event:isDefaultPrevented" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isDefaultPrevented</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob die preventDefault()-Methode bei dem Ereignis aufgerufen wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> aufgerufen wurde, wird <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgegeben, andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode bei dem Ereignis aufgerufen wurde. Wenn die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode aufgerufen wurde, wird <codeph class="+ topic/ph pr-d/codeph ">true</codeph> zurückgegeben, andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:preventDefault" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">preventDefault</apiName><shortdesc class="- topic/shortdesc ">
	Bricht das Standardverhalten eines Ereignisses ab, wenn dieses Verhalten abgebrochen werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Bricht das Standardverhalten eines Ereignisses ab, wenn dieses Verhalten abgebrochen werden kann.
	
	<p class="- topic/p ">Vielen Ereignissen sind Standardverhalten zugewiesen, die standardmäßig ausgeführt werden. <ph class="- topic/ph ">Wenn ein Benutzer beispielsweise Text in ein Textfeld eingibt, so besteht das Standardverhalten darin, dass die Zeichen in dem Textfeld angezeigt werden. Da das Standardverhalten des <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>-Ereignisses abgebrochen werden kann, können Sie die Anzeige der Zeichen mithilfe der Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> verhindern.</ph>
	
	</p>
	
    <p class="- topic/p ">Ein Beispiel für ein Verhalten, das nicht abgebrochen werden kann, ist das Standardverhalten, das dem <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED</codeph>-Ereignis zugewiesen ist. Dieses Verhalten wird immer dann erzeugt, wenn Flash Player ein Anzeigeobjekt aus der Anzeigeliste entfernt. Dieses Standardverhalten (das Entfernen des Elements) kann nicht abgebrochen werden, daher hat die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> keine Auswirkung auf dieses Standardverhalten. </p>
	
	<p class="- topic/p ">Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">Event.cancelable</codeph> können Sie überprüfen, ob Sie das einem bestimmten Ereignis zugewiesene Standardverhalten abbrechen können. Wenn der Wert von <codeph class="+ topic/ph pr-d/codeph ">Event.cancelable</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> lautet, kann <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> zum Abbruch des Ereignisses verwendet werden. Ansonsten hat <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> keine Auswirkungen.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/isDefaultPrevented()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.isDefaultPrevented()</linktext></link><link href="flash.events.xml#Event/cancelable" class="- topic/link "><linktext class="- topic/linktext ">Event.cancelable</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:stopImmediatePropagation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">stopImmediatePropagation</apiName><shortdesc class="- topic/shortdesc ">
	Verhindert die Verarbeitung von Ereignis-Listenern im aktuellen Knoten und in Knoten, die dem aktuellen Knoten im Ereignisablauf nachfolgen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Verhindert die Verarbeitung von Ereignis-Listenern im aktuellen Knoten und in Knoten, die dem aktuellen Knoten im Ereignisablauf nachfolgen. <ph class="- topic/ph ">Diese Methode wirkt sich sofort und auf die Ereignis-Listener im aktuellen Knoten aus. Im Gegensatz dazu wirkt sich die Methode <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph> nicht aus, bis alle Ereignis-Listener im aktuellen Knoten vollständig verarbeitet wurden.</ph>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Diese Methode bricht nicht das diesem Ereignis zugewiesene Standardverhalten ab. Weitere Informationen zu dieser Funktionalität finden Sie unter <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>.</p>
	
	
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/stopPropagation()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.stopPropagation()</linktext></link><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:stopPropagation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">stopPropagation</apiName><shortdesc class="- topic/shortdesc ">
	Verhindert die Verarbeitung von Ereignis-Listenern in Knoten, die dem aktuellen Knoten im Ereignisablauf nachfolgen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Verhindert die Verarbeitung von Ereignis-Listenern in Knoten, die dem aktuellen Knoten im Ereignisablauf nachfolgen. <ph class="- topic/ph ">Diese Methode wirkt sich nicht auf Ereignis-Listener im aktuellen Knoten (<codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph>) aus. Im Gegensatz dazu verhindert die Methode <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph> die Verarbeitung von Ereignis-Listenern im aktuellen und in den nachfolgenden Knoten. Weitere Aufrufe dieser Methode haben keine Auswirkungen. Diese Methode kann in jeder Phase des Ereignisablaufs aufgerufen werden.</ph>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Diese Methode bricht nicht das diesem Ereignis zugewiesene Standardverhalten ab. Weitere Informationen zu dieser Funktionalität finden Sie unter <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>.</p>
	
	
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/stopImmediatePropagation()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.stopImmediatePropagation()</linktext></link><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des Ereignisobjekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des Ereignisobjekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des Ereignisobjekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[Event type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:Event:ACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ACTIVATE</apiName><shortdesc class="- topic/shortdesc ">
	Die ACTIVATE-Konstante bestimmt den Wert der type-Eigenschaft eines activate-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">activate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ACTIVATE</codeph>-Konstante bestimmt den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">activate</codeph>-Ereignisobjekts. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
	<p class="- topic/p ">AIR für TV setzt dieses Ereignis niemals ab. Sie können es jedoch manuell absetzen.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">activate</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:activate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.activate</linktext></link><link href="flash.events.xml#Event/DEACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">DEACTIVATE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ADDED_TO_STAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ADDED_TO_STAGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.ADDED_TO_STAGE-Konstante definiert den Wert der type-Eigenschaft eines addedToStage-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">addedToStage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.ADDED_TO_STAGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">addedToStage</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die DisplayObject-Instanz, die der Anzeigeliste für die Bühne hinzugefügt wird. Dies erfolgt entweder direkt oder über das Hinzufügen einer Unterstruktur, die die DisplayObject-Instanz enthält. Wenn die DisplayObject-Instanz direkt hinzugefügt wird, findet das <codeph class="+ topic/ph pr-d/codeph ">added</codeph>-Ereignis vor diesem Ereignis statt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:addedToStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.addedToStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ADDED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ADDED</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.ADDED-Konstante definiert den Wert der type-Eigenschaft eines added-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">added</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">added</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die DisplayObject-Instanz, die in die Anzeigeliste aufgenommen wird. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:added" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.added</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CANCEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CANCEL</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CANCEL-Konstante definiert den Wert der type-Eigenschaft eines cancel-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal><code>ProductManager</code> pulled from table 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cancel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CANCEL</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Ein Verweis auf das Objekt, dessen Operation abgebrochen wurde.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.cancel</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CHANGE-Konstante definiert den Wert der type-Eigenschaft eines change-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">change</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">change</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen Wert geändert wurde. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:change" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.change</linktext></link><link href="flash.events.xml#TextEvent/TEXT_INPUT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TextEvent.TEXT_INPUT</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLEAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLEAR</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CLEAR-Konstante definiert den Wert der type-Eigenschaft eines clear-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">clear</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CLEAR</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede IntertactiveObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> TextField-Objekte lösen folgende Ereignisse <i class="+ topic/ph hi-d/i ">nicht</i> aus: <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> und <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. TextField-Objekte enthalten die Befehle „Ausschneiden“, „Kopieren“, „Einfügen“, „Löschen“ und „Alles auswählen“ immer im Kontextmenü. Diese Befehle können aus dem Kontextmenü von TextField-Objekten nicht entfernt werden. Bei TextField-Objekten werden beim Auswählen dieser Befehle (oder der entsprechenden Zugriffstastenkombinationen) keine <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignisse ausgelöst. Andere Klassen, die die InteractiveObject-Klasse erweitern, darunter Komponenten, die mit der Flash Text Engine (FTE) erstellt wurden, setzen diese Ereignisse jedoch in Reaktion auf Benutzeraktionen wie Tastaturbefehle und Kontextmenüs ab.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:clear" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.clear</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CLOSE-Konstante definiert den Wert der type-Eigenschaft eines close-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">close</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CLOSE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen Verbindung geschlossen wurde.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.close</linktext></link><link href="flash.net.xml#XMLSocket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.close</linktext></link><link href="flash.display.xml#NativeWindow/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.close</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLOSING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSING</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CLOSING-Konstante definiert den Wert der type-Eigenschaft eines closing-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">closing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CLOSING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">closing</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen dieses Ereignisobjekts stoppt den Schließvorgang.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen Verbindung geschlossen werden soll.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow/event:closing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.closing</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.COMPLETE-Konstante definiert den Wert der type-Eigenschaft eines complete-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, dessen Ladevorgang beendet ist. 
	    </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.complete</linktext></link><link href="../../flash/html/HTMLLoader.html#event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.complete</linktext></link><link href="flash.media.xml#Sound/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.complete</linktext></link><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.complete</linktext></link><link href="flash.net.xml#URLLoader/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.complete</linktext></link><link href="flash.net.xml#URLStream/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.complete</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CONNECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.CONNECT-Konstante definiert den Wert der type-Eigenschaft eines connect-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.CONNECT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Socket- oder XMLSocket-Objekt, das eine Netzwerkverbindung hergestellt hat.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.connect</linktext></link><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.connect</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:COPY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COPY</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der type-Eigenschaft eines copy-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">copy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede IntertactiveObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> TextField-Objekte lösen folgende Ereignisse <i class="+ topic/ph hi-d/i ">nicht</i> aus: <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> und <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. TextField-Objekte enthalten die Befehle „Ausschneiden“, „Kopieren“, „Einfügen“, „Löschen“ und „Alles auswählen“ immer im Kontextmenü. Diese Befehle können aus dem Kontextmenü von TextField-Objekten nicht entfernt werden. Bei TextField-Objekten werden beim Auswählen dieser Befehle (oder der entsprechenden Zugriffstastenkombinationen) keine <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignisse ausgelöst. Andere Klassen, die die InteractiveObject-Klasse erweitern, darunter Komponenten, die mit der Flash Text Engine (FTE) erstellt wurden, setzen diese Ereignisse jedoch in Reaktion auf Benutzeraktionen wie Tastaturbefehle und Kontextmenüs ab.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:copy" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.copy</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CUT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der type-Eigenschaft eines cut-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede IntertactiveObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> TextField-Objekte lösen folgende Ereignisse <i class="+ topic/ph hi-d/i ">nicht</i> aus: <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> und <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. TextField-Objekte enthalten die Befehle „Ausschneiden“, „Kopieren“, „Einfügen“, „Löschen“ und „Alles auswählen“ immer im Kontextmenü. Diese Befehle können aus dem Kontextmenü von TextField-Objekten nicht entfernt werden. Bei TextField-Objekten werden beim Auswählen dieser Befehle (oder der entsprechenden Zugriffstastenkombinationen) keine <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignisse ausgelöst. Andere Klassen, die die InteractiveObject-Klasse erweitern, darunter Komponenten, die mit der Flash Text Engine (FTE) erstellt wurden, setzen diese Ereignisse jedoch in Reaktion auf Benutzeraktionen wie Tastaturbefehle und Kontextmenüs ab.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:cut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.cut</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:DEACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEACTIVATE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.DEACTIVATE-Konstante definiert den Wert der type-Eigenschaft eines deactivate-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">deactivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.DEACTIVATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">deactivate</codeph>-Ereignisobjekts. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
    <p class="- topic/p ">AIR für TV setzt dieses Ereignis niemals ab. Sie können es jedoch manuell absetzen.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">deactivate</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:deactivate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.deactivate</linktext></link><link href="flash.events.xml#Event/ACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">ACTIVATE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:DISPLAYING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAYING</apiName><shortdesc class="- topic/shortdesc ">
	 Die Event.DISPLAYING-Konstante definiert den Wert der type-Eigenschaft eines displaying-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displaying</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">Event.DISPLAYING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">displaying</codeph>-Ereignisobjekts. 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis durchläuft keine "Erfassungsphase" und wird direkt an das Ziel gesendet – unabhängig davon, ob sich dieses auf der Anzeigeliste befindet.</p>
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, das angezeigt werden soll.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.displaying</linktext></link><link href="flash.display.xml#NativeMenuItem/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.displaying</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ENTER_FRAME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENTER_FRAME</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.ENTER_FRAME-Konstante definiert den Wert der type-Eigenschaft eines enterFrame-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">enterFrame</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.ENTER_FRAME</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>-Ereignisobjekts. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:enterFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.enterFrame</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:EXITING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXITING</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.EXITING-Konstante definiert den Wert der type-Eigenschaft eines exiting-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exiting</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.EXITING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen dieses Ereignisobjekts stoppt den Beenden-Vorgang.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das NativeApplication-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeApplication-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:exiting" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exiting</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:EXIT_FRAME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXIT_FRAME</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.EXIT_FRAME-Konstante definiert den Wert der type-Eigenschaft eines exitFrame-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exitFrame</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.EXIT_FRAME</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">exitFrame</codeph>-Ereignisobjekts. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:exitFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.exitFrame</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:FRAME_CONSTRUCTED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FRAME_CONSTRUCTED</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.FRAME_CONSTRUCTED-Konstante definiert den Wert der type-Eigenschaft eines frameConstructed-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">frameConstructed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.FRAME_CONSTRUCTED</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">frameConstructed</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">frameConstructed</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:frameConstructed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.frameConstructed</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:FULLSCREEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULLSCREEN</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.FULL_SCREEN-Konstante definiert den Wert der type-Eigenschaft eines fullScreen-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">fullScreen</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.FULL_SCREEN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:fullScreen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.fullScreen</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_BOUNDS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_BOUNDS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.HTML_BOUNDS_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines htmlBoundsChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlBoundsChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_BOUNDS_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">htmlBoundsChange</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlBoundsChange" class="- topic/link "><linktext class="- topic/linktext ">htmlBoundsChange-Ereignis</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_DOM_INITIALIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_DOM_INITIALIZE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.HTML_DOM_INITIALIZE-Konstante definiert den Wert der type-Eigenschaft eines htmlDOMInitialize-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlDOMInitialize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_DOM_INITIALIZE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">htmlDOMInitialize</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlDOMInitialize" class="- topic/link "><linktext class="- topic/linktext ">htmlDOMInitialize-Ereignis</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_RENDER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_RENDER</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.HTML_RENDER-Konstante definiert den Wert der type-Eigenschaft eines htmlRender-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlRender</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_RENDER</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">htmlRender</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlRender" class="- topic/link "><linktext class="- topic/linktext ">htmlRender-Ereignis</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ID3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ID3</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.ID3-Konstante definiert den Wert der type-Eigenschaft eines id3-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">id3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.ID3</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">id3</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Sound-Objekt, über das die MP3-Datei geladen wird, für die nun ID3-Daten verfügbar sind. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:id3" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.id3</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:INIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INIT</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.INIT-Konstante definiert den Wert der type-Eigenschaft eines init-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">init</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.INIT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">init</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das LoaderInfo-Objekt, das mit der zu ladenden SWF-Datei verknüpft ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:init" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.init</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:LOCATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.LOCATION_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines locationChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.LOCATION_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">locationChange</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:locationChange" class="- topic/link "><linktext class="- topic/linktext ">locationChange-Ereignis</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:MOUSE_LEAVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_LEAVE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.MOUSE_LEAVE-Konstante definiert den Wert der type-Eigenschaft eines mouseLeave-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseLeave</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.MOUSE_LEAVE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">mouseLeave</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:mouseLeave" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.mouseLeave</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:NETWORK_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NETWORK_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.NETWORK_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines networkChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">networkChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.NETWORK_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeApplication-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:networkChange" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.networkChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:OPEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPEN</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.OPEN-Konstante definiert den Wert der type-Eigenschaft eines open-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">open</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.OPEN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">open</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, über das eine Verbindung geöffnet wurde. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.open</linktext></link><link href="flash.media.xml#Sound/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.open</linktext></link><link href="flash.net.xml#FileReference/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.open</linktext></link><link href="flash.net.xml#URLLoader/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.open</linktext></link><link href="flash.net.xml#URLStream/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.open</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:PASTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PASTE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.PASTE-Konstante definiert den Wert der type-Eigenschaft eines paste-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">paste</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.PASTE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede IntertactiveObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> TextField-Objekte lösen folgende Ereignisse <i class="+ topic/ph hi-d/i ">nicht</i> aus: <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> und <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. TextField-Objekte enthalten die Befehle „Ausschneiden“, „Kopieren“, „Einfügen“, „Löschen“ und „Alles auswählen“ immer im Kontextmenü. Diese Befehle können aus dem Kontextmenü von TextField-Objekten nicht entfernt werden. Bei TextField-Objekten werden beim Auswählen dieser Befehle (oder der entsprechenden Zugriffstastenkombinationen) keine <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignisse ausgelöst. Andere Klassen, die die InteractiveObject-Klasse erweitern, darunter Komponenten, die mit der Flash Text Engine (FTE) erstellt wurden, setzen diese Ereignisse jedoch in Reaktion auf Benutzeraktionen wie Tastaturbefehle und Kontextmenüs ab.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:paste" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.paste</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:PREPARING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PREPARING</apiName><shortdesc class="- topic/shortdesc ">
	 Die Event.PREPARING-Konstante definiert den Wert der type-Eigenschaft eines preparing-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">preparing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">Event.PREPARING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">preparing</codeph>-Ereignisobjekts. 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis durchläuft keine "Erfassungsphase" und wird direkt an das Ziel gesendet – unabhängig davon, ob sich dieses auf der Anzeigeliste befindet.</p>
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das dieses Ereignis abgesetzt hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, das dieses Ereignis abgesetzt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.preparing</linktext></link><link href="flash.display.xml#NativeMenuItem/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.preparing</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:REMOVED_FROM_STAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOVED_FROM_STAGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.REMOVED_FROM_STAGE-Konstante definiert den Wert der type-Eigenschaft eines removedFromStage-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">removedFromStage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED_FROM_STAGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">removedFromStage</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die DisplayObject-Instanz, die aus der Anzeigeliste für die Bühne entfernt wird. Dies erfolgt entweder direkt oder über das Entfernen einer Unterstruktur, die die DisplayObject-Instanz enthält. Wenn die DisplayObject-Instanz direkt entfernt wird, findet das <codeph class="+ topic/ph pr-d/codeph ">removed</codeph>-Ereignis vor diesem Ereignis statt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removedFromStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removedFromStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:REMOVED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOVED</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.REMOVED-Konstante definiert den Wert der type-Eigenschaft eines removed-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">removed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">removed</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die DisplayObject-Instanz, die aus der Anzeigeliste entfernt werden soll. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removed</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:RENDER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.RENDER-Konstante definiert den Wert der type-Eigenschaft eines render-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">render</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.RENDER</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">render</codeph>-Ereignisobjekts. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Dieses Ereignis verfügt weder über eine Aufnahmephase noch über eine Bubbling-Phase. Das bedeutet, dass Ereignis-Listener potenziellen Zielen direkt hinzugefügt werden müssen, unabhängig davon, ob sich das Ziel in der Anzeigeliste befindet oder nicht.</p>
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Das Standardverhalten kann nicht abgebrochen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede DisplayObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">render</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:render" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.render</linktext></link><link href="flash.display.xml#Stage/invalidate()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.invalidate()</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:RESIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.RESIZE-Konstante definiert den Wert der type-Eigenschaft eines resize-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.RESIZE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:resize" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.resize</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SCROLL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SCROLL</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.SCROLL-Konstante definiert den Wert der type-Eigenschaft eines scroll-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">scroll</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.SCROLL</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">scroll</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das TextField-Objekt, für das ein Bildlauf durchgeführt wurde. Die <codeph class="+ topic/ph pr-d/codeph ">target</codeph>-Eigenschaft entspricht nicht immer dem Objekt in der Anzeigeliste, das den Ereignis-Listener registriert hat. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scroll</linktext></link><link href="../../flash/html/HTMLLoader.html#event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.scroll</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SELECT_ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT_ALL</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.SELECT_ALL-Konstante definiert den Wert der type-Eigenschaft eines selectALL-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">selectAll</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.SELECT_ALL</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">selectALL</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Jede IntertactiveObject-Instanz, die einen Listener besitzt, der für das <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignis registriert ist.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> TextField-Objekte lösen folgende Ereignisse <i class="+ topic/ph hi-d/i ">nicht</i> aus: <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> und <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. TextField-Objekte enthalten die Befehle „Ausschneiden“, „Kopieren“, „Einfügen“, „Löschen“ und „Alles auswählen“ immer im Kontextmenü. Diese Befehle können aus dem Kontextmenü von TextField-Objekten nicht entfernt werden. Bei TextField-Objekten werden beim Auswählen dieser Befehle (oder der entsprechenden Zugriffstastenkombinationen) keine <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>-Ereignisse ausgelöst. Andere Klassen, die die InteractiveObject-Klasse erweitern, darunter Komponenten, die mit der Flash Text Engine (FTE) erstellt wurden, setzen diese Ereignisse jedoch in Reaktion auf Benutzeraktionen wie Tastaturbefehle und Kontextmenüs ab.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:selectAll" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.selectAll</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.SELECT-Konstante definiert den Wert der type-Eigenschaft eines select-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">select</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.SELECT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">select</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, auf dem ein Objekt ausgewählt wurde.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.select</linktext></link><link href="flash.display.xml#NativeMenu/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.select</linktext></link><link href="flash.display.xml#NativeMenuItem/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.select</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SOUND_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOUND_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.SOUND_COMPLETE-Konstante definiert den Wert der type-Eigenschaft eines soundComplete-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">soundComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.SOUND_COMPLETE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">soundComplete</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SoundChannel-Objekt, in dem die Wiedergabe eines Sounds beendet wurde.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundChannel/event:soundComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundChannel.soundComplete</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:STANDARD_ERROR_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.STANDARD_ERROR_CLOSE-Konstante definiert den Wert der type-Eigenschaft eines standardErrorClose-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_ERROR_CLOSE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardErrorClose</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:STANDARD_INPUT_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.STANDARD_INPUT_CLOSE-Konstante definiert den Wert der type-Eigenschaft eines standardInputClose-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_INPUT_CLOSE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardInputClose</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:STANDARD_OUTPUT_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.STANDARD_OUTPUT_CLOSE-Konstante definiert den Wert der type-Eigenschaft eines standardOutputClose-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_OUTPUT_CLOSE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardOutputClose</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:TAB_CHILDREN_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_CHILDREN_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.TAB_CHILDREN_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines tabChildrenChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabChildrenChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_CHILDREN_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">tabChildrenChange</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen tabChildren-Flag sich geändert hat. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabChildrenChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabChildrenChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TAB_ENABLED_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_ENABLED_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.TAB_ENABLED_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines tabEnabledChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabEnabledChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_ENABLED_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">tabEnabledChange</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das interaktive Objekt (InteractiveObject), dessen tabEnabled-Flag sich geändert hat. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabEnabledChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabEnabledChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TAB_INDEX_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_INDEX_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.TAB_INDEX_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines tabIndexChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabIndexChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_INDEX_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">tabIndexChange</codeph>-Ereignisobjekts. 
	
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt dessen Tabulatorindex (tabIndex) sich geändert hat. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabIndexChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabIndexChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TEXT_INTERACTION_MODE_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_INTERACTION_MODE_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.TEXT_INTERACTION_MODE_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines Interaktionsmodusereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">textInteractionModeChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.TEXT_INTERACTION_MODE_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">interaction mode</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das TextField-Objekt, dessen „interaction mode“-Eigenschaft geändert wird. Unter Android kann der Interaktionsmodus zum Beispiel über das Kontextmenü zu SELECTION (Auswahl) geändert werden. Die <codeph class="+ topic/ph pr-d/codeph ">target</codeph>-Eigenschaft entspricht nicht immer dem Objekt in der Anzeigeliste, das den Ereignis-Listener registriert hat. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInteractionModeChange" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInteractionModeChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:UNLOAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNLOAD</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.UNLOAD-Konstante definiert den Wert der type-Eigenschaft eines unload-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unload</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.UNLOAD</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">unload</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das LoaderInfo-Objekt, das mit der zu entfernenden oder zu ersetzenden SWF-Datei verknüpft ist.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:unload" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.unload</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:USER_IDLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_IDLE</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.USER_IDLE-Konstante definiert den Wert der type-Eigenschaft eines userIdle-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userIdle</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.USER_IDLE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">userIdle</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeApplication-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userIdle</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:USER_PRESENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_PRESENT</apiName><shortdesc class="- topic/shortdesc ">
	Die Event.USER_PRESENT-Konstante definiert den Wert der type-Eigenschaft eines userPresent-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userPresent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">Event.USER_PRESENT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">userPresent</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeApplication-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userPresent</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:bubbles:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bubbles</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob es sich bei dem Ereignis um ein Bubbling-Ereignis handelt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob es sich bei dem Ereignis um ein Bubbling-Ereignis handelt. Wenn das Ereignis eine Bubbling-Phase ausführen kann, lautet der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	
	
	<p class="- topic/p ">Wenn ein Ereignis auftritt, durchläuft es die drei Phasen des Ereignisablaufs: die Aufnahmephase, die vom Anfang der Anzeigelistenhierarchie bis zum Knoten direkt vor dem Zielknoten verläuft; die Zielphase, die den Zielknoten umfasst; und die Bubbling-Phase, die von dem Zielknoten nachfolgenden Knoten bis zur Anzeigelistenhierarchie verläuft.</p>
	
	<p class="- topic/p ">Einige Ereignisse, wie zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">activate</codeph> und <codeph class="+ topic/ph pr-d/codeph ">unload</codeph>, haben keine Bubbling-Phase. Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> weist für Ereignisse ohne Bubbling-Phase den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> auf.</p>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:cancelable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cancelable</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob das mit dem Ereignis verknüpfte Verhalten verhindert werden kann. Wenn das Verhalten abgebrochen werden kann, lautet der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">Event.preventDefault()</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:currentTarget:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentTarget</apiName><shortdesc class="- topic/shortdesc ">
	Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet. Wenn ein Benutzer auf eine OK-Schaltfläche klickt, kann es sich bei dem Zielknoten um den Knoten handeln, in dem die Schaltfläche enthalten ist, oder um eines der übergeordneten Elemente, die einen Ereignis-Listener für dieses Ereignis registriert hatten.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:eventPhase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">eventPhase</apiName><shortdesc class="- topic/shortdesc ">
	Die aktuelle Phase im Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die aktuelle Phase im Ereignisablauf. Diese Eigenschaft kann die folgenden numerischen Werte enthalten:
	<ul class="- topic/ul "><li class="- topic/li "> Die Aufnahmephase (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.CAPTURING_PHASE</codeph>).</li><li class="- topic/li "> Die Zielphase (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.AT_TARGET</codeph>).</li><li class="- topic/li "> Die Bubbling-Phase (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.BUBBLING_PHASE</codeph>).</li></ul>
	
	
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:target:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">target</apiName><shortdesc class="- topic/shortdesc ">
	Das Ereignis-Ziel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das Ereignis-Ziel. Diese Eigenschaft enthält den Zielknoten. Wenn ein Benutzer beispielsweise auf eine OK-Schaltfläche klickt, ist der Zielknoten der Anzeigelistenknoten, der diese Schaltfläche enthält.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:type:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">type</apiName><shortdesc class="- topic/shortdesc ">
	Der Typ des Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Ereignistyp. Der Typ ist abhängig von der Groß- und Kleinschreibung.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TextEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein Objekt sendet ein TextEvent-Objekt, wenn ein Benutzer Text in ein Textfeld eingibt oder auf einen Hyperlink in einem HTML-konformen Textfeld klickt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für TextEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein Objekt sendet ein TextEvent-Objekt, wenn ein Benutzer Text in ein Textfeld eingibt oder auf einen Hyperlink in einem HTML-konformen Textfeld klickt. Es gibt zwei Arten von Textereignissen: <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph> und <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>.
 
 </apiDesc><example conref="examples\TextEventExample.as" class="- topic/example "> Im folgenden Beispiel werden mit der Klasse „TextEventExample“ Textfelder erstellt und Listener für verschiedene Textereignisse in diesen Textfeldern eingerichtet. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Im Beispiel werden Konstanten für die beiden später verwendeten URLs deklariert.</li><li class="- topic/li ">Im Beispiel werden zwei Variablen vom Typ „TextField“ für die spätere Verwendung deklariert.</li><li class="- topic/li ">Der Klassenkonstruktor ruft die folgenden beiden Methoden auf:
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">init()</codeph> initialisiert die TextField-Objekte und fügt Ereignis-Listener hinzu.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> fügt die TextField-Objekte der Anzeigeliste hinzu und weist den anzuzeigenden Text zu.</li></ul></li><li class="- topic/li ">Die Listener <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> reagieren auf die für ihren Ereignistyp relevanten Ereignisse. Mit der Methode <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph> wird ein Webbrowser geöffnet (falls dies noch nicht der Fall ist), und die URL-Adresse, auf die geklickt wurde, wird angesteuert. Mit der Methode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> werden lediglich Informationen angezeigt, wenn eine Taste im zugehörigen Textfeld gedrückt wird.</li></ol>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b> Die Domäne in diesem Beispiel ist fiktiv. <codeph class="+ topic/ph pr-d/codeph ">[yourDomain]</codeph> muss durch einen tatsächlichen Domänennamen ausgetauscht werden.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;
    import flash.events.TextEvent;
    import flash.net.URLRequest;
    import flash.net.navigateToURL;
    
    public class TextEventExample extends Sprite {
        private const DOMAIN_1_URL:String = "http://www.[yourDomain].com";
        private const DOMAIN_2_URL:String = "http://www.[yourDomain].com";
        private var linkTxt:TextField;
        private var textInputTxt:TextField;
        
        public function TextEventExample() {
            init();
            draw();
        }
        
        private function init():void {
            linkTxt = new TextField();
            linkTxt.addEventListener(TextEvent.LINK, linkHandler);
            linkTxt.height = 60;
            linkTxt.autoSize = TextFieldAutoSize.LEFT;            
            linkTxt.multiline = true;
                
            textInputTxt = new TextField();
            textInputTxt.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);
            textInputTxt.type = TextFieldType.INPUT;
            textInputTxt.background = true;
            textInputTxt.border = true;
            textInputTxt.height = 20;            
        }
        
        private function draw():void {
            addChild(linkTxt);
            linkTxt.htmlText += createLink(DOMAIN_1_URL, "Click to go to first domain");
            linkTxt.htmlText += "&lt;br />";
            linkTxt.htmlText += createLink(DOMAIN_2_URL, "Click to go to second domain");

            addChild(textInputTxt);
            textInputTxt.y = linkTxt.height;
            textInputTxt.text = "type here";
        }
        
        private function createLink(url:String, text:String):String {
            var link:String = "";
            link += "&lt;font color='#0000FF'>";
            link += "&lt;u>";
            link += "&lt;b>";
            link += "&lt;a href='event:" + url + "'>" + text + "&lt;/a>";
            link += "&lt;/b>";
            link += "&lt;/u>";
            link += "&lt;/font>";
            return link;
        }
        
        private function linkHandler(e:TextEvent):void {
            var request:URLRequest = new URLRequest(e.text);
            navigateToURL(request);
        }
        
        private function textInputHandler(e:TextEvent):void {
            trace(">> ============================");
            trace(">> e.text: " + e.text);
            trace(">> textInputTxt.text: " + textInputTxt.text);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><adobeApiEvent id="flash.events:TextEvent:LINK_link" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">link</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TextEvent:LINK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TextEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TextEvent_LINKExample.as" class="- topic/example "> In diesem Beispiel wird ein Textereignis ausgelöst, wenn ein Benutzer auf einen Hyperlink im HTML-Text klickt. Abhängig vom Link wird der Benutzer zu einer bestimmten Website geleitet (basierend auf dem Betriebssystem) oder es wird ein Kreis gezeichnet (basierend auf dem vom Benutzer ausgewählten Radius). 
   
 <p class="- topic/p ">Es wird ein Textfeld erstellt und dessen Inhalt wird mithilfe der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph> auf einen String im HTML-Format festgelegt. Die Hyperlinks sind unterstrichen, damit sie vom Benutzer leichter erkannt werden. (Adobe Flash Player ändert den Mauszeiger nur, wenn sich der Zeiger über dem Link befindet.) Um sicherzustellen, dass der Mausklick des Benutzers eine ActionScript-Methode aufruft, beginnt die URL des Hyperlinks mit dem String <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>, und für das <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph>-Ereignis wird ein Listener hinzugefügt.</p> 
 
 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph>-Methode, die beim Klicken des Benutzers auf einen Hyperlink ausgelöst wird, verwaltet alle Link-Ereignisse für das Textfeld. Die erste if-Anweisung überprüft die <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Eigenschaft des Ereignisses, die den Rest der URL nach dem <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>-String enthält. Wenn der Benutzer auf den Link für das Betriebssystem geklickt hat, wird der Name des aktuellen Betriebssystems des Benutzers aus der <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>-Eigenschaft des Systems verwendet, um den Benutzer zu der entsprechenden Website zu leiten. Andernfalls wird der ausgewählte Radius, der von der <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Eigenschaft des Ereignisses übergeben wird, verwendet, um einen Kreis unter dem Textfeld zu zeichnen. Jedes Mal, wenn der Benutzer auf den Radius-Link klickt, wird der zuvor gezeichnete Kreis gelöscht und ein neuer Kreis mit dem ausgewählten Radius gezeichnet. </p> 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.errors.IOError;
    import flash.events.IOErrorEvent;
    import flash.system.Capabilities;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.display.Shape;
    import flash.display.Graphics;

    public class TextEvent_LINKExample extends Sprite {
        private  var myCircle:Shape = new Shape();
        
        public function TextEvent_LINKExample() {
            var myTextField:TextField = new TextField();
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.multiline = true;
            myTextField.background = true;
            myTextField.htmlText = "Draw a circle with the radius of &lt;u>&lt;a href=\"event:20\">20 pixels&lt;/a>&lt;/u>.&lt;br>" 
                         +  "Draw a circle with the radius of &lt;u>&lt;a href=\"event:50\">50 pixels&lt;/a>&lt;/u>.&lt;br>&lt;br>"
                         +  "&lt;u>&lt;a href=\"event:os\">Learn about your operating system.&lt;/a>&lt;/u>&lt;br>";

            myTextField.addEventListener(TextEvent.LINK, linkHandler);

            this.addChild(myTextField);
            this.addChild(myCircle);
        }
        
        private function linkHandler(e:TextEvent):void {
            var osString:String = Capabilities.os;
            
            if(e.text == "os") {
       
                if (osString.search(/Windows/) != -1 ){
                    navigateToURL(new URLRequest("http://www.microsoft.com/"), "_self");
                }else if (osString.search(/Mac/) != -1 ) {
                    navigateToURL(new URLRequest("http://www.apple.com/"), "_self");
                } else if (osString.search(/linux/i)!= -1) {
                    navigateToURL(new URLRequest("http://www.tldp.org/"), "_self");
                }
            
            } else {
                myCircle.graphics.clear();    
                myCircle.graphics.beginFill(0xFF0000);
                myCircle.graphics.drawCircle(100, 150, Number(e.text));
                myCircle.graphics.endFill();
            }             
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link><link href="flash.text.xml#TextField/event:link" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.link</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TextEvent:TEXT_INPUT_textInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInput</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TextEvent:TEXT_INPUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TextEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TextEvent_TEXT_INPUTExample.as" class="- topic/example "> Im folgenden Beispiel wird der Benutzer durch das Generieren eines speziellen Kombinationsschlüssels (ähnlich einem Kennwort) geleitet. Dieser Kombinationsschlüssel besteht aus sieben alphanumerischen Zeichen, wobei das zweite und das fünfte Zeichen Ziffern sind.
 
 <p class="- topic/p ">Drei Textfelder für Anweisungen, die Benutzereingabe und die Warnungen (Fehlermeldungen) werden erstellt. Ein Ereignis-Listener wird hinzugefügt, um auf die Texteingabe des Benutzers zu reagieren, indem die Methode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> ausgelöst wird. (Jedes Mal, wenn der Benutzer Text eingibt, wird ein <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>-Ereignis ausgelöst. </p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die Textereignisse werden ausgelöst, wenn der Benutzer Textzeichen eingibt, aber nicht, wenn zum Beispiel die Rücktaste gedrückt wird. Um alle Tastaturereignisse zu erfassen, verwenden Sie einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent</codeph>-Ereignis.)</p>
 
 <p class="- topic/p ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> kontrolliert und verwaltet die Benutzereingabe. Die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> wird verwendet, um zu verhindern, dass Adobe Flash Player den Text sofort im Eingabetextfeld anzeigt. Die Anwendung ist dann für die Aktualisierung des Feldes zuständig. Um Löschungen oder Änderungen, die der Benutzer an den bereits eingegebenen Zeichen (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>-String) vorgenommen hat, rückgängig zu machen, wird der Inhalt des Eingabetextfelds dem <codeph class="+ topic/ph pr-d/codeph ">result</codeph>-String zugewiesen, wenn ein Benutzer neue Zeichen eingibt. Um die Einheitlichkeit der Benutzeroberfläche zu gewährleisten, platziert die <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph>-Methode die Einfügemarke hinter dem zuletzt ausgewählten Zeichen im Textfeld.</p>
 
 <p class="- topic/p ">Die erste if-Anweisung in der <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>-Methode überprüft das zweite und das fünfte Zeichen des eingegebenen Kombinationsschlüssels, bei dem es sich jeweils um eine Ziffer handeln muss. Wenn die Benutzereingabe korrekt ist, wird die Methode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> aufgerufen und der Kombinationsschlüsselstring (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>) wird an die Benutzereingabe angehängt. Die <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph>-Methode verschiebt auch die Einfügemarke hinter das ausgewählte Zeichen. Nachdem die sieben Zeichen eingegeben wurden, ändert die letzte if-Anweisung in der <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>-Methode den Typ des Textfelds <codeph class="+ topic/ph pr-d/codeph ">inputTextField</codeph> von <codeph class="+ topic/ph pr-d/codeph ">INPUT</codeph> zu <codeph class="+ topic/ph pr-d/codeph ">DYNAMIC</codeph>, was bedeutet, dass der Benutzer keine Zeichen mehr eingeben oder ändern kann.</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;

    public class TextEvent_TEXT_INPUTExample extends Sprite {
        private var instructionTextField:TextField = new TextField();
        private var inputTextField:TextField = new TextField(); 
        private var warningTextField:TextField = new TextField();
        private var result:String = "";

        public function TextEvent_TEXT_INPUTExample() {
            instructionTextField.x = 10;
            instructionTextField.y = 10;
            instructionTextField.background = true; 
            instructionTextField.autoSize = TextFieldAutoSize.LEFT;
            instructionTextField.text = "Please enter a value in the format A#AA#AA,\n" 
                                        + "where 'A' represents a letter and '#' represents a number.\n" +
                                        "(Note that once you input a character you can't change it.)" ;
        
            inputTextField.x = 10;
            inputTextField.y = 70;
            inputTextField.height = 20;
            inputTextField.width = 75;
            inputTextField.background = true;
            inputTextField.border = true;
            inputTextField.type = TextFieldType.INPUT; 
            
            warningTextField.x = 10;
            warningTextField.y = 100;
            warningTextField.autoSize = TextFieldAutoSize.LEFT;
 
            inputTextField.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);   
           
            this.addChild(instructionTextField);
            this.addChild(inputTextField);
            this.addChild(warningTextField);
        }

        private function textInputHandler(event:TextEvent):void {
            var charExp:RegExp = /[a-zA-z]/;   
            var numExp:RegExp = /[0-9]/;

            event.preventDefault();  
            
            inputTextField.text = result;                
            inputTextField.setSelection(result.length + 1, result.length + 1);
 
            if (inputTextField.text.length == 1 || inputTextField.text.length == 4) {
            
                if(numExp.test(event.text) == true) {
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need a single digit number.";
                }
               
            }else {
                
                if(charExp.test(event.text) == true) { 
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need an alphabet character.";
                }
            }
 
            if(inputTextField.text.length == 7) {
                inputTextField.type = TextFieldType.DYNAMIC;
                instructionTextField.text = "CONGRATULATIONS. You've done.";                
            }          
        }

        private function updateCombination(s:String):void {
                    warningTextField.text = "";
                    result += s;           
                    inputTextField.text = result;
                    inputTextField.setSelection(result.length + 1, result.length + 1);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInput" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInput</linktext></link><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TextEvent:TextEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Textereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Folgende Werte sind möglich: <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph> und <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vom Benutzer eingegebener Text. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für TextEvent-Objekte.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Textereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:TextEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des TextEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues TextEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des TextEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TextEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des TextEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des TextEvent-Objekts enthält.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des TextEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TextEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TextEvent:LINK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINK</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der Eigenschaft „type“ eines link-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">link</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">link</codeph>-Ereignisobjekts.
	 
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Es wurde auf das Textfeld mit dem Hyperlink geklickt. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der Rest der URL nach „event:“</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextEvent_LINKExample.as" class="- topic/example "> In diesem Beispiel wird ein Textereignis ausgelöst, wenn ein Benutzer auf einen Hyperlink im HTML-Text klickt. Abhängig vom Link wird der Benutzer zu einer bestimmten Website geleitet (basierend auf dem Betriebssystem) oder es wird ein Kreis gezeichnet (basierend auf dem vom Benutzer ausgewählten Radius). 
   
 <p class="- topic/p ">Es wird ein Textfeld erstellt und dessen Inhalt wird mithilfe der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph> auf einen String im HTML-Format festgelegt. Die Hyperlinks sind unterstrichen, damit sie vom Benutzer leichter erkannt werden. (Adobe Flash Player ändert den Mauszeiger nur, wenn sich der Zeiger über dem Link befindet.) Um sicherzustellen, dass der Mausklick des Benutzers eine ActionScript-Methode aufruft, beginnt die URL des Hyperlinks mit dem String <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>, und für das <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph>-Ereignis wird ein Listener hinzugefügt.</p> 
 
 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph>-Methode, die beim Klicken des Benutzers auf einen Hyperlink ausgelöst wird, verwaltet alle Link-Ereignisse für das Textfeld. Die erste if-Anweisung überprüft die <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Eigenschaft des Ereignisses, die den Rest der URL nach dem <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>-String enthält. Wenn der Benutzer auf den Link für das Betriebssystem geklickt hat, wird der Name des aktuellen Betriebssystems des Benutzers aus der <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph>-Eigenschaft des Systems verwendet, um den Benutzer zu der entsprechenden Website zu leiten. Andernfalls wird der ausgewählte Radius, der von der <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Eigenschaft des Ereignisses übergeben wird, verwendet, um einen Kreis unter dem Textfeld zu zeichnen. Jedes Mal, wenn der Benutzer auf den Radius-Link klickt, wird der zuvor gezeichnete Kreis gelöscht und ein neuer Kreis mit dem ausgewählten Radius gezeichnet. </p> 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.errors.IOError;
    import flash.events.IOErrorEvent;
    import flash.system.Capabilities;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.display.Shape;
    import flash.display.Graphics;

    public class TextEvent_LINKExample extends Sprite {
        private  var myCircle:Shape = new Shape();
        
        public function TextEvent_LINKExample() {
            var myTextField:TextField = new TextField();
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.multiline = true;
            myTextField.background = true;
            myTextField.htmlText = "Draw a circle with the radius of &lt;u>&lt;a href=\"event:20\">20 pixels&lt;/a>&lt;/u>.&lt;br>" 
                         +  "Draw a circle with the radius of &lt;u>&lt;a href=\"event:50\">50 pixels&lt;/a>&lt;/u>.&lt;br>&lt;br>"
                         +  "&lt;u>&lt;a href=\"event:os\">Learn about your operating system.&lt;/a>&lt;/u>&lt;br>";

            myTextField.addEventListener(TextEvent.LINK, linkHandler);

            this.addChild(myTextField);
            this.addChild(myCircle);
        }
        
        private function linkHandler(e:TextEvent):void {
            var osString:String = Capabilities.os;
            
            if(e.text == "os") {
       
                if (osString.search(/Windows/) != -1 ){
                    navigateToURL(new URLRequest("http://www.microsoft.com/"), "_self");
                }else if (osString.search(/Mac/) != -1 ) {
                    navigateToURL(new URLRequest("http://www.apple.com/"), "_self");
                } else if (osString.search(/linux/i)!= -1) {
                    navigateToURL(new URLRequest("http://www.tldp.org/"), "_self");
                }
            
            } else {
                myCircle.graphics.clear();    
                myCircle.graphics.beginFill(0xFF0000);
                myCircle.graphics.drawCircle(100, 150, Number(e.text));
                myCircle.graphics.endFill();
            }             
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link><link href="flash.text.xml#TextField/event:link" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.link</linktext></link></related-links></apiValue><apiValue id="flash.events:TextEvent:TEXT_INPUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_INPUT</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines textInput-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">textInput</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>-Ereignisobjekts. 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis</b>: Dieses Ereignis wird für die Entf- und Rücktaste nicht ausgelöst.</p>
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; rufen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> auf, um das Standardverhalten abzubrechen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Textfeld, in das die Zeichen eingegeben werden. Das Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Das bzw. die Zeichen wird/werden vom Benutzer eingegeben.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextEvent_TEXT_INPUTExample.as" class="- topic/example "> Im folgenden Beispiel wird der Benutzer durch das Generieren eines speziellen Kombinationsschlüssels (ähnlich einem Kennwort) geleitet. Dieser Kombinationsschlüssel besteht aus sieben alphanumerischen Zeichen, wobei das zweite und das fünfte Zeichen Ziffern sind.
 
 <p class="- topic/p ">Drei Textfelder für Anweisungen, die Benutzereingabe und die Warnungen (Fehlermeldungen) werden erstellt. Ein Ereignis-Listener wird hinzugefügt, um auf die Texteingabe des Benutzers zu reagieren, indem die Methode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> ausgelöst wird. (Jedes Mal, wenn der Benutzer Text eingibt, wird ein <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>-Ereignis ausgelöst. </p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Die Textereignisse werden ausgelöst, wenn der Benutzer Textzeichen eingibt, aber nicht, wenn zum Beispiel die Rücktaste gedrückt wird. Um alle Tastaturereignisse zu erfassen, verwenden Sie einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent</codeph>-Ereignis.)</p>
 
 <p class="- topic/p ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> kontrolliert und verwaltet die Benutzereingabe. Die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> wird verwendet, um zu verhindern, dass Adobe Flash Player den Text sofort im Eingabetextfeld anzeigt. Die Anwendung ist dann für die Aktualisierung des Feldes zuständig. Um Löschungen oder Änderungen, die der Benutzer an den bereits eingegebenen Zeichen (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>-String) vorgenommen hat, rückgängig zu machen, wird der Inhalt des Eingabetextfelds dem <codeph class="+ topic/ph pr-d/codeph ">result</codeph>-String zugewiesen, wenn ein Benutzer neue Zeichen eingibt. Um die Einheitlichkeit der Benutzeroberfläche zu gewährleisten, platziert die <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph>-Methode die Einfügemarke hinter dem zuletzt ausgewählten Zeichen im Textfeld.</p>
 
 <p class="- topic/p ">Die erste if-Anweisung in der <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>-Methode überprüft das zweite und das fünfte Zeichen des eingegebenen Kombinationsschlüssels, bei dem es sich jeweils um eine Ziffer handeln muss. Wenn die Benutzereingabe korrekt ist, wird die Methode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> aufgerufen und der Kombinationsschlüsselstring (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>) wird an die Benutzereingabe angehängt. Die <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph>-Methode verschiebt auch die Einfügemarke hinter das ausgewählte Zeichen. Nachdem die sieben Zeichen eingegeben wurden, ändert die letzte if-Anweisung in der <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>-Methode den Typ des Textfelds <codeph class="+ topic/ph pr-d/codeph ">inputTextField</codeph> von <codeph class="+ topic/ph pr-d/codeph ">INPUT</codeph> zu <codeph class="+ topic/ph pr-d/codeph ">DYNAMIC</codeph>, was bedeutet, dass der Benutzer keine Zeichen mehr eingeben oder ändern kann.</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;

    public class TextEvent_TEXT_INPUTExample extends Sprite {
        private var instructionTextField:TextField = new TextField();
        private var inputTextField:TextField = new TextField(); 
        private var warningTextField:TextField = new TextField();
        private var result:String = "";

        public function TextEvent_TEXT_INPUTExample() {
            instructionTextField.x = 10;
            instructionTextField.y = 10;
            instructionTextField.background = true; 
            instructionTextField.autoSize = TextFieldAutoSize.LEFT;
            instructionTextField.text = "Please enter a value in the format A#AA#AA,\n" 
                                        + "where 'A' represents a letter and '#' represents a number.\n" +
                                        "(Note that once you input a character you can't change it.)" ;
        
            inputTextField.x = 10;
            inputTextField.y = 70;
            inputTextField.height = 20;
            inputTextField.width = 75;
            inputTextField.background = true;
            inputTextField.border = true;
            inputTextField.type = TextFieldType.INPUT; 
            
            warningTextField.x = 10;
            warningTextField.y = 100;
            warningTextField.autoSize = TextFieldAutoSize.LEFT;
 
            inputTextField.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);   
           
            this.addChild(instructionTextField);
            this.addChild(inputTextField);
            this.addChild(warningTextField);
        }

        private function textInputHandler(event:TextEvent):void {
            var charExp:RegExp = /[a-zA-z]/;   
            var numExp:RegExp = /[0-9]/;

            event.preventDefault();  
            
            inputTextField.text = result;                
            inputTextField.setSelection(result.length + 1, result.length + 1);
 
            if (inputTextField.text.length == 1 || inputTextField.text.length == 4) {
            
                if(numExp.test(event.text) == true) {
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need a single digit number.";
                }
               
            }else {
                
                if(charExp.test(event.text) == true) { 
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need an alphabet character.";
                }
            }
 
            if(inputTextField.text.length == 7) {
                inputTextField.type = TextFieldType.DYNAMIC;
                instructionTextField.text = "CONGRATULATIONS. You've done.";                
            }          
        }

        private function updateCombination(s:String):void {
                    warningTextField.text = "";
                    result += s;           
                    inputTextField.text = result;
                    inputTextField.setSelection(result.length + 1, result.length + 1);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInput" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInput</linktext></link><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link></related-links></apiValue><apiValue id="flash.events:TextEvent:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 Bei einem textInput-Ereignis das bzw. die vom Benutzer eingegebene(n) Zeichen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Bei einem <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>-Ereignis das bzw. die vom Benutzer eingegebenen Zeichen. Bei einem <codeph class="+ topic/ph pr-d/codeph ">link</codeph>-Ereignis der Text des Attributs <codeph class="+ topic/ph pr-d/codeph ">event</codeph> des <codeph class="+ topic/ph pr-d/codeph ">href</codeph>-Attributs des <codeph class="+ topic/ph pr-d/codeph ">&lt;a></codeph>-Tags.
	 
	 </apiDesc><example class="- topic/example ">Im folgenden Code wird gezeigt, wie das <codeph class="+ topic/ph pr-d/codeph ">link</codeph>-Ereignis ausgelöst wird, wenn ein Benutzer auf den Hypertext-Link klickt:
	 
	<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	import flash.text.TextField;
	import flash.events.TextEvent;			
	
	var tf:TextField = new TextField();
	tf.htmlText = "&lt;a href='event:myEvent'>Click Me.&lt;/a>";
	tf.addEventListener("link", clickHandler);
	addChild(tf);
	
	function clickHandler(e:TextEvent):void {
		trace(e.type); // link
		trace(e.text); // myEvent
	}
	</codeblock>
	 
	 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SampleDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SampleDataEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Wird abgesetzt, wenn ein Sound-Objekt neue Audiodaten anfordert oder wenn ein Microphone-Objekt neue Audiodaten bereitstellt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Wird abgesetzt, wenn ein Sound-Objekt neue Audiodaten anfordert oder wenn ein Microphone-Objekt neue Audiodaten bereitstellt.
 
 <p class="- topic/p ">Dieses Ereignis hat zwei Verwendungen:</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Um dynamisch generierte Audiodaten für ein Sound-Objekt bereitzustellen</li><li class="- topic/li ">Um Audiodaten für ein Microphone-Objekt abzurufen</li></ul>
 
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Dynamisches Generieren von Audio mit dem Sound-Objekt</b> Verwenden Sie das <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>-Ereignis, um dynamisch generiertes Audio abzuspielen. In dieser Umgebung enthält das Sound-Objekt keine Sounddaten an sich. Es fungiert stattdessen als Socket für Sounddaten, die zum Objekt gestreamt werden. Das Streamen erfolgt mittels einer Funktion, die Sie dem <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph> Ereignis zuweisen. </p>
 
  <p class="- topic/p ">Sie verwenden in Ihrer Funktion die <codeph class="+ topic/ph pr-d/codeph ">ByteArray.writeFloat()</codeph>-Methode, um in die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des Ereignisses zu schreiben, die die Beispieldaten, die Sie abspielen möchten, enthält.</p>
 
  <p class="- topic/p ">Wenn ein Sound-Objekt keine MP3-Datei geladen hat und Sie seine <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>-Methode aufrufen, setzt das Objekt <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>-Ereignisse ab, um Soundsamples anzufordern. Das Sound-Objekt fährt während der Wiedergabe damit fort, Ereignisse abzusetzen, bis Sie keine Daten mehr bereitstellen oder bis die <codeph class="+ topic/ph pr-d/codeph ">stop()</codeph>-Methode des SoundChannel-Objekts aufgerufen wird.</p>
 
  <p class="- topic/p ">Die Wartezeit des Ereignisses unterscheidet sich von Plattform zu Plattform und kann sich in zukünftigen Versionen von <ph class="- topic/ph ">Flash Player oder </ph>AIR ändern. Verlassen Sie sich nicht auf eine bestimmte Wartezeit. Berechnen Sie sie stattdessen mit <codeph class="+ topic/ph pr-d/codeph ">((SampleDataEvent.position/44.1) - SoundChannelObject.position)</codeph>.</p>
 
  <p class="- topic/p ">Stellen Sie der <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des SampleDataEvent-Objekts zwischen 2048 und 8192 Samples bereit. Um die beste Leistung zu erzielen, stellen Sie so viele Beispiele wie möglich zur Verfügung. Je weniger Beispiele Sie zur Verfügung stellen, desto wahrscheinlicher ist es, dass während des Abspielens Knackgeräusche und Ähnliches auftritt. Dies kann von Plattform zu Plattform unterschiedlich sein und in verschiedenen Situationen auftreten, zum Beispiel wenn die Browsergröße verändert wird. Wenn Sie Code schreiben, der mit nur 2.048 Beispielen auf einer Plattform funktioniert, kann es vorkommen, dass derselbe Code auf einer anderen Plattform nicht so gut funktioniert. Wenn Sie die geringst mögliche Wartezeit benötigen, überlegen Sie sich, ob Sie die Menge der Daten vom Benutzer auswählen lassen.</p>
 
  <p class="- topic/p ">Wenn Sie weniger als 2.048 Samples bereitstellen, spielt das Sound-Objekt die verbleibenden Samples ab und stoppt dann die Wiedergabe, als wäre das Ende der Sounddatei erreicht, und generiert ein <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignis.</p>
 
  <p class="- topic/p ">Sie können die <codeph class="+ topic/ph pr-d/codeph ">extract()</codeph>-Methode eines Sound-Objekts verwenden, um seine Sounddaten zu extrahieren, die Sie dann in den dynamischen Stream für die Wiedergabe schreiben können.</p>
 
  <p class="- topic/p ">Wenn Sie das <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>-Ereignis mit einem Sound-Objekt verwenden, sind als weitere Sound-Methoden nur noch <codeph class="+ topic/ph pr-d/codeph ">extract()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">play()</codeph> aktiviert. Das Aufrufen anderer Methoden oder Eigenschaften verursacht eine Ausnahme aufgrund eines ungültigen Aufrufs („invalid call“). Alle Methoden und Eigenschaften des SoundChannel-Objekts sind nach wie vor aktiviert.</p>
 
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Erfassen von Mikrofonaudio</b> Verwenden Sie das <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>Ereignis, um Audiodaten von einem Mikrofon zu erfassen. Wenn Sie einen Ereignis-Listener für das <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>-Ereignis hinzufügen, setzt das Microphone-Objekt das Ereignis ab, sobald Audiosamples verfügbar sind.</p>
 
  <p class="- topic/p ">Verwenden Sie in der Ereignisprozedurfunktion die <codeph class="+ topic/ph pr-d/codeph ">ByteArray.readFloat()</codeph>-Methode, um die <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Eigenschaft des Ereignisses zu lesen, die die Sampledaten enthält. Das Ereignis enthält mehrere Samples, deshalb sollten Sie eine <codeph class="+ topic/ph pr-d/codeph ">while</codeph>-Schleife verwenden, um die verfügbaren Daten zu lesen:</p>
 
  <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">var soundBytes:ByteArray = new ByteArray();
 while(event.data.bytesAvailable)
 {
      var sample:Number = event.data.readFloat();
      soundBytes.writeFloat(sample);
 }</codeblock>
 
 
 </apiDesc><example conref="examples\Sound_sampleDataExample.as" class="- topic/example "> Das folgende Beispiel spielt eine einfache Sinuswelle ab.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var mySound:Sound = new Sound();
function sineWaveGenerator(event:SampleDataEvent):void {
    for ( var c:int=0; c&lt;8192; c++ ) {
        event.data.writeFloat(Math.sin((Number(c+event.position)/Math.PI/2))*0.25);
        event.data.writeFloat(Math.sin((Number(c+event.position)/Math.PI/2))*0.25);
    }
}

mySound.addEventListener(SampleDataEvent.SAMPLE_DATA,sineWaveGenerator);
mySound.play();
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound</linktext></link></related-links><adobeApiEvent id="flash.events:SampleDataEvent:SAMPLE_DATA_sampleData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sampleData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SampleDataEvent:SAMPLE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SampleDataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:sampleData" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.sampleData</linktext></link><link href="flash.events.xml#SampleDataEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SampleDataEvent</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SampleDataEvent:SampleDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SampleDataEvent</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt ein Ereignisobjekt, das Informationen über Audiodatenereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Dieser Wert lautet <codeph class="+ topic/ph pr-d/codeph ">Event.SAMPLE_DATA</codeph>.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. 
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. 
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">theposition</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Position der Daten im Audiostream.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">thedata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Bytearray mit Daten.
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt ein Ereignisobjekt, das Informationen über Audiodatenereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. 
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SampleDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des SampleDataEvent-Objekts und stellt den Wert aller Eigenschaften so ein, dass sie den Werten des Originals entsprechen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SampleDataEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des SampleDataEvent-Objekts und stellt den Wert aller Eigenschaften so ein, dass sie den Werten des Originals entsprechen. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SampleDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Gibt einen String zurück, der alle Eigenschaften des SampleDataEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">SampleDataEvent</codeph>-Objekts enthält.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt einen String zurück, der alle Eigenschaften des SampleDataEvent-Objekts enthält. Der String liegt im folgenden Format vor:
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SampleDataEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> theposition=<i class="+ topic/ph hi-d/i ">Wert</i> thedata=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SampleDataEvent:SAMPLE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SAMPLE_DATA</apiName><shortdesc class="- topic/shortdesc ">
		Definiert den Wert der type-Eigenschaft eines SampleDataEvent-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sampleData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">SampleDataEvent</codeph>-Ereignisobjekts. 
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph></entry><entry class="- topic/entry ">Der Speicherort, an dem die Audiodaten bereitgestellt sind.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:sampleData" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.sampleData</linktext></link><link href="flash.events.xml#SampleDataEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SampleDataEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:SampleDataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
		Die Daten im Audiostream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die Daten im Audiostream.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SampleDataEvent:position:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">position</apiName><shortdesc class="- topic/shortdesc ">
		Die Position der Daten im Audiostream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die Position der Daten im Audiostream.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:HTTPStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">HTTPStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
Die Anwendung sendet HTTPStatusEvent-Objekte, wenn eine Netzwerkanfrage einen HTTP-Statuscode zurückgibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die Anwendung sendet HTTPStatusEvent-Objekte, wenn eine Netzwerkanfrage einen HTTP-Statuscode zurückgibt. 

<p class="- topic/p ">HTTPStatusEvent-Objekte werden immer vor Fehler- oder Abschlussereignissen gesendet. Ein HTTPStatusEvent-Objekt muss nicht unbedingt auf einen Fehlerzustand hinweisen; es reflektiert einfach den HTTP-Statuscode (sofern vorhanden), der vom Netzwerkstapel bereitgestellt wird. <ph class="- topic/ph ">Einige Flash Player-Umgebungen sind eventuell nicht in der Lage, HTTP-Statuscodes zu erfassen; in diesen Fällen wird immer ein Statuscode 0 gemeldet.</ph> </p>

<p class="- topic/p "><ph class="- topic/ph ">In Flash Player gibt es nur einen Typ HTTPStatus-Ereignis: <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>.</ph> In der AIR-Laufzeitumgebung kann ein FileReference, URLLoader oder URLStream registriert werden, um auf <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> zu warten, wozu die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> und <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph> gehören. Diese Eigenschaften sind in einem <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignis nicht definiert.</p>

</apiDesc><example conref="examples\HTTPStatusEventExample.as" class="- topic/example "> Im folgenden Beispiel wird versucht, eine nicht vorhandene Datei vom Stammverzeichnis des Webservers unter http://www.[yourDomain].com zu laden. Dabei sollte ein <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph>-Ereignis mit Status 404 ausgelöst werden, der darauf hinweist, dass die Datei nicht gefunden wurde. Das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> wird von der Methode <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler()</codeph> bearbeitet, mit der zwei Zeilen mit Informationen zum Ereignis gedruckt werden.
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweise:</b> 
 <ol class="- topic/ol "><li class="- topic/li ">Um in diesem Beispiel ein <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignis zu generieren, müssen Sie bei der Kompilierung der SWF-Datei die Einstellung „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf Netzwerk zugreifen“ setzen.</li><li class="- topic/li ">Sie benötigen einen Server, der auf http://www.[yourDomain].com ausgeführt wird und Port 80 überwacht. Ansonsten erhalten Sie ein <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph>-Ereignis mit Statuscode 0 statt 404.</li><li class="- topic/li ">Es darf sich keine Datei mit dem Namen "MissingFile.html" im Stammverzeichnis des Webservers unter http://www.[yourDomain].com befinden. Ansonsten wird nicht das richtige <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph>-Ereignis empfangen.</li></ol>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.HTTPStatusEvent;

    public class HTTPStatusEventExample extends Sprite {

        public function HTTPStatusEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);

            var request:URLRequest = new URLRequest("http://www.[yourDomain].com/MissingFile.html");
            loader.load(request);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
            trace("status: " + event.status);
        }
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpResponseStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpResponseStatus</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:HTTPStatusEvent:HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTTPStatusEvent:HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.httpStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpStatus</linktext></link><link href="flash.net.xml#URLLoader/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.httpStatus</linktext></link><link href="flash.net.xml#URLStream/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpStatus</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:HTTPStatusEvent:HTTPStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">HTTPStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über HTTP-Status-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines HTTPStatus-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_STATUS</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numerischer Status. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">status</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für HTTPStatusEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über HTTP-Status-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#HTTPStatusEvent/HTTP_STATUS" class="- topic/link "><linktext class="- topic/linktext ">HTTP_STATUS</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:HTTPStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des HTTPStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues HTTPStatusEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des HTTPStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:HTTPStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des HTTPStatusEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des HTTPStatusEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des HTTPStatusEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[HTTPStatusEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> status=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTTP_RESPONSE_STATUS</apiName><shortdesc class="- topic/shortdesc ">
	Anders als das httpStatus-Ereignis wird das httpResponseStatus-Ereignis ausgelöst, bevor Antwortdaten vorliegen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">httpResponseStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Anders als das <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignis wird das <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis ausgelöst, bevor Antwortdaten vorliegen. Außerdem enthält das <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignis Werte für die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph> und <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> (die für ein <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignis nicht definiert sind). Beachten Sie, dass das Ereignis <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> (falls vorhanden) vor (und zusätzlich zu) jedem <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Ereignis gesendet wird. 
	
	<p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_RESPONSE_STATUS</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>-Ereignisobjekts. </p>
	
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph></entry><entry class="- topic/entry ">Die URL, von der die Antwort zurückgegeben wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph></entry><entry class="- topic/entry ">Die Antwortheader, die die Antwort zurückgegeben hat, als Array von URLRequestHeader-Objekten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Der vom Server zurückgegebene HTTP-Statuscode.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, das den HTTP-Statuscode empfängt. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpResponseStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpResponseStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:HTTP_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTTP_STATUS</apiName><shortdesc class="- topic/shortdesc ">
	Die HTTPStatusEvent.HTTP_STATUS-Konstante definiert den Wert der type-Eigenschaft eines httpStatus-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">httpStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_STATUS</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Der vom Server zurückgegebene HTTP-Statuscode.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, das den HTTP-Statuscode empfängt. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.httpStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpStatus</linktext></link><link href="flash.net.xml#URLLoader/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.httpStatus</linktext></link><link href="flash.net.xml#URLStream/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:responseHeaders:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">responseHeaders</apiName><shortdesc class="- topic/shortdesc ">
	 Die Antwortheader, die die Antwort zurückgegeben hat, als Array von URLRequestHeader-Objekten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Antwortheader, die die Antwort zurückgegeben hat, als Array von URLRequestHeader-Objekten.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestHeader</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:responseURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">responseURL</apiName><shortdesc class="- topic/shortdesc ">
	 Die URL, von der die Antwort zurückgegeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die URL, von der die Antwort zurückgegeben wurde. Bei Umleitungen ist dies eine andere URL als die Anforderungs-URL.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTTPStatusEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
	Der vom Server zurückgegebene HTTP-Statuscode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der vom Server zurückgegebene HTTP-Statuscode. So zeigt der Wert 404 beispielsweise an, dass der Server den angeforderten URI nicht gefunden hat. HTTP-Statuscodes finden Sie in den Abschnitten 10.4 und 10.5 der HTTP-Spezifikation unter <xref href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" scope="external" class="- topic/xref ">http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</xref>.
	
	<p class="- topic/p ">Wenn <ph class="- topic/ph ">Flash Player oder </ph>AIR keinen Statuscode vom Server erhält oder keine Verbindung herstellen kann, wird der Standardwert 0 (null) an den Code übergeben. <ph class="- topic/ph ">Dieser Wert kann von jedem Player generiert werden (wenn beispielsweise eine fehlerhafte URL angefordert wird). Er wird aber in jedem Fall vom Flash Player Plug-In generiert, wenn es in einem der folgenden Browser ausgeführt wird, die dem Player grundsätzlich keine HTTP-Statuscodes übergeben: Netscape, Mozilla, Safari, Opera und Internet Explorer für Macintosh.</ph></p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FileListEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileListEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Ein File-Objekt löst ein FileListEvent-Objekt aus, wenn ein Aufruf der getDirectoryListingAsync()-Methode eines File-Objekts erfolgreich einen Satz von Dateien und Ordnern auflistet oder wenn ein Benutzer Dateien nach einem Aufruf der browseForOpenMultiple()-Methode auswählt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ein File-Objekt löst ein FileListEvent-Objekt nach erfolgreichen Aufrufen der getDirectoryListingAsync()- oder browseForOpenMultiple()-Methode auf.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein File-Objekt löst ein FileListEvent-Objekt aus, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">getDirectoryListingAsync()</codeph>-Methode eines File-Objekts erfolgreich einen Satz von Dateien und Ordnern auflistet oder wenn ein Benutzer Dateien nach einem Aufruf der <codeph class="+ topic/ph pr-d/codeph ">browseForOpenMultiple()</codeph>-Methode auswählt. 
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="../../flash/filesystem/File.html#getDirectoryListingAsync()" class="- topic/link "><linktext class="- topic/linktext ">File.getDirectoryListingAsync()</linktext></link></related-links><adobeApiEvent id="flash.events:FileListEvent:DIRECTORY_LISTING_directoryListing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">directoryListing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FileListEvent:DIRECTORY_LISTING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FileListEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:FileListEvent:SELECT_MULTIPLE_selectMultiple" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">selectMultiple</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FileListEvent:SELECT_MULTIPLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FileListEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:FileListEvent:FileListEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileListEvent</apiName><shortdesc class="- topic/shortdesc ">
		Die Konstruktorfunktion für ein FileListEvent-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt aufsteigt (<codeph class="+ topic/ph pr-d/codeph ">false</codeph> für ein FileListEvent-Objekt).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Event-Objekt abgebrochen werden kann (<codeph class="+ topic/ph pr-d/codeph ">false</codeph> für ein FileListEvent-Objekt).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">files</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array von File-Objekten.
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die Konstruktorfunktion für ein FileListEvent-Objekt. 
		
		<p class="- topic/p ">Die Laufzeitumgebung erstellt mithilfe dieser Klasse FileListEvent-Objekte. Sie verwenden diesen Konstruktor nicht direkt im Code.</p>
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:FileListEvent:DIRECTORY_LISTING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DIRECTORY_LISTING</apiName><shortdesc class="- topic/shortdesc ">
		 Die Konstante FileListEvent.DIRECTORY_LISTING definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein directoryListing-Ereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">directoryListing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Konstante <codeph class="+ topic/ph pr-d/codeph ">FileListEvent.DIRECTORY_LISTING</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph class="+ topic/ph pr-d/codeph ">directoryListing</codeph>-Ereignis.
		 
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">files</codeph></entry><entry class="- topic/entry ">Ein Array von File-Objekten, das die gefundenen Dateien und Ordner repräsentiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das FileListEvent-Objekt.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FileListEvent:SELECT_MULTIPLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT_MULTIPLE</apiName><shortdesc class="- topic/shortdesc ">
		 Die Konstante FileListEvent.SELECT_MULTIPLE definiert den Wert der type-Eigenschaft des Ereignisobjekts für ein selectMultiple-Ereignis.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">selectMultiple</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Konstante <codeph class="+ topic/ph pr-d/codeph ">FileListEvent.SELECT_MULTIPLE</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des Ereignisobjekts für ein <codeph class="+ topic/ph pr-d/codeph ">selectMultiple</codeph>-Ereignis.
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">files</codeph></entry><entry class="- topic/entry ">Ein Array von File-Objekten, das die ausgewählten Dateien repräsentiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das FileListEvent-Objekt.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FileListEvent:files" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">files</apiName><shortdesc class="- topic/shortdesc ">
		 Ein Array von File-Objekten, das die gefundenen oder ausgewählten Dateien und Verzeichnisse repräsentiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein Array von File-Objekten, das die gefundenen oder ausgewählten Dateien und Verzeichnisse repräsentiert. 
		 
		 <p class="- topic/p ">Für die <codeph class="+ topic/ph pr-d/codeph ">File.getDirectoryListingAsync()</codeph>-Methode ist dies die Liste der Dateien und Verzeichnisse, die auf der Stammebene des Odners gefunden wurden, das vom File-Objekt, das die Methode aufgerufen hat, repräsentiert wird. Für die <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpenMultiple()</codeph>-Methode ist dies die Liste der vom Benutzer ausgewählten Dateien.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeWindowBoundsEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowBoundsEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein NativeWindow-Objekt löst ein NativeWindowBoundsEvent-Objekt aus, wenn die Größe oder Position des Fensters geändert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für NativeWindow-Ereignisse, die die Größe und/oder Position des Fensters ändern.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein NativeWindow-Objekt löst ein NativeWindowBoundsEvent-Objekt aus, wenn die Größe oder Position des Fensters geändert wird. 
 
 <p class="- topic/p ">Es gibt vier Arten von Ereignissen:</p>
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZE</codeph></li></ul>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeWindowBoundsEvent/MOVING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.MOVING</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/MOVE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.MOVE</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/RESIZING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.RESIZING</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/RESIZE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.RESIZE</linktext></link></related-links><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:MOVE_move" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">move</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem es verschoben wurde.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:MOVING_moving" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">moving</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:MOVING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor es verschoben wird.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:RESIZE_resize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:RESIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem seine Größe geändert wurde.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:RESIZING_resizing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resizing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:RESIZING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor seine Größe geändert wird.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeWindowBoundsEvent:NativeWindowBoundsEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowBoundsEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Event-Objekt mit spezifischen Informationen, die für Fenstergrenzen-Ereignisse relevant sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Folgende Werte sind möglich:
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZE</codeph></li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Gibt an, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs beteiligt ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Ereignisobjekt abgebrochen werden kann.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeBounds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Grenzen vor der letzten oder der ausstehenden Änderung an.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterBounds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Grenzen nach der letzten oder der ausstehenden Änderung an. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Event-Objekt mit spezifischen Informationen, die für Fenstergrenzen-Ereignisse relevant sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeWindowBoundsEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des NativeWindowBoundsEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NativeWindowBoundsEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des NativeWindowBoundsEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeWindowBoundsEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des NativeWindowBoundsEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des NativeWindowBoundsEvent-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des NativeWindowBoundsEvent-Objekts enthält. Der String hat das folgende Format:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeWindowBoundsEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> previousDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i> currentDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeWindowBoundsEvent:MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVE</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines move-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">move</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem es verschoben wurde.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">move</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Die neuen Grenzen des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Die alten Grenzen des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeWindow-Objekt, dessen Status sich gerade geändert hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:MOVING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVING</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines moving-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">moving</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor es verschoben wird.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">moving</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Die Grenzen des Fenster nach der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Die Grenzen des Fenster vor der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen des Ereignisses verhindert das Verschieben des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeWindow-Objekt, dessen Status sich gerade geändert hat.</entry></row></tbody></tgroup></adobetable>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Unter Linux wird die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-methode für dieses Ereignis nicht unterstützt.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:RESIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZE</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der Eigenschaft type eines resize-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem seine Größe geändert wurde.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Die neuen Grenzen des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Die alten Grenzen des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeWindow-Objekt, dessen Status sich gerade geändert hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:RESIZING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZING</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines resizing-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resizing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor seine Größe geändert wird.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">resizing</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Die Grenzen des Fenster nach der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Die Grenzen des Fenster vor der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeWindow-Objekt, dessen Status sich gerade geändert hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen des Ereignisses verhindert das Verschieben des Fensters.</entry></row></tbody></tgroup></adobetable>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Unter Linux wird die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-methode für dieses Ereignis nicht unterstützt.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:afterBounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterBounds</apiName><shortdesc class="- topic/shortdesc ">
     Die Grenzen des Fensters nach der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Grenzen des Fensters nach der Änderung.
       
     <p class="- topic/p ">Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">moving</codeph> (Verschieben) oder <codeph class="+ topic/ph pr-d/codeph ">resizing</codeph> (Größe ändern) handelt, wurden die Grenzen noch nicht geändert; <codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph> gibt die neuen Grenzen an, falls das Ereignis nicht abgebrochen wird. Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">move</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">resize</codeph> handelt, gibt <codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph> die neuen Grenzen an.
     </p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:beforeBounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeBounds</apiName><shortdesc class="- topic/shortdesc ">
     Die Grenzen des Fensters vor der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die Grenzen des Fensters vor der Änderung.  
     
     <p class="- topic/p ">Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">move</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">resize</codeph> handelt, wurden die Grenzen noch nicht geändert; <codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph> gibt die aktuellen Grenzen an. Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">move</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">resize</codeph> handelt, gibt <codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph> den Originalwert an.
     </p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SQLUpdateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLUpdateEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein SQLUpdateEvent-Objekt wird von einem SQLConnection-Objekt ausgelöst, wenn in einer Tabelle, die der SQLConnection-Instanz zugeordnet ist, Daten geändert werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein SQLUpdateEvent-Objekt wird von einem SQLConnection-Objekt ausgelöst, wenn in einer Tabelle, die der SQLConnection-Instanz zugeordnet ist, Daten geändert werden. Eine Datenänderung kann auftreten, wenn eine SQL <codeph class="+ topic/ph pr-d/codeph ">INSERT</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">UPDATE</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">DELETE</codeph>-Anweisung ausgeführt wurde, entweder direkt oder als Ergebnis einer Auslösung in Verbindung mit der Ausführung der Anweisung.
 
 </apiDesc><example conref="examples\SQLUpdateEvent.class.1.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung einer SQLUpdateEvent-Instanz als Antwort auf ein <codeph class="+ topic/ph pr-d/codeph ">update</codeph>-Ereignis gezeigt.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

var dbStatement:SQLStatement;

function initConnection():void
{
    var dbFile:File = new File(File.separator + "employee.db");
    db.addEventListener(SQLEvent.OPEN, dbOpenHandler);
    db.addEventListener(SQLUpdateEvent.UPDATE, dbUpdateHandler);

    dbStatement.text = "UPDATE employees SET name = :name WHERE id = :id";
    dbStatement.parameters[:name] = "Bruce";
    dbStatement.parameters[:id] = 100;

    dbStatement.sqlConnection = db;

    db.open(dbFile);
}

function dbUpdateHandler(event:SQLUpdateEvent):void
{
    trace(event.type + " for table '" + event.table + "' was fired for row with ID:" + event.rowID);
}

function dbOpenHandler(event:SQLEvent):void
{
    dbStatement.execute();
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link></related-links><adobeApiEvent id="flash.events:SQLUpdateEvent:DELETE_delete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">delete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:DELETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:SQLUpdateEvent:INSERT_insert" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">insert</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:INSERT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:SQLUpdateEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:SQLUpdateEvent:SQLUpdateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLUpdateEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt eine neue SQLUpdateEvent-Instanz.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, verfügbar über die <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">table</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Namen der Tabelle an, deren Daten geändert wurden.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">rowID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Dient zum Erstellen eines neuen SQLUpdateEvent-Objekts.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt eine neue SQLUpdateEvent-Instanz.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SQLUpdateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt eine Kopie des SQLUpdateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SQLUpdateEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt eine Kopie des SQLUpdateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLUpdateEvent:DELETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DELETE</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLUpdateEvent.DELETE-Konstante definiert den Wert der type-Eigenschaft eines delete-SQLConnection-Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">delete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.DELETE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">delete</codeph>-SQLConnection-Ereignisses. Das <codeph class="+ topic/ph pr-d/codeph ">delete</codeph>-Ereignis hat folgende Eigenschaften:
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, für das der Vorgang ausgeführt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Der Name der Tabelle, in der die Änderung aufgetreten ist.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:INSERT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INSERT</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLUpdateEvent.INSERT-Konstante definiert den Wert der type-Eigenschaft eines insert-SQLConnection-Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">insert</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.INSERT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">insert</codeph>-SQLConnection-Ereignisses. Das <codeph class="+ topic/ph pr-d/codeph ">insert</codeph>-Ereignis hat folgende Eigenschaften:
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, für das der Vorgang ausgeführt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Der Name der Tabelle, in der die Änderung aufgetreten ist.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	 Die SQLUpdateEvent.UPDATE-Konstante definiert den Wert der type-Eigenschaft eines update-SQLConnection-Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.UPDATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">update</codeph>-SQLConnection-Ereignisses.
	 
	 <p class="- topic/p ">Das <codeph class="+ topic/ph pr-d/codeph ">update</codeph>-Ereignis hat folgende Eigenschaften:</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, für das der Vorgang ausgeführt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Der Name der Tabelle, in der die Änderung aufgetreten ist.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:rowID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rowID</apiName><shortdesc class="- topic/shortdesc ">
     Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der eindeutige Zeilenbezeichner der Zeile, die eingefügt, gelöscht oder aktualisiert wurde.
	 
	 <p class="- topic/p ">Ein Zeilenbezeichner dient zur eindeutigen Kennzeichnung einer Zeile in einer Tabelle in der Datenbank. Der Wert wird häufig von der Datenbank erzeugt.</p>
	 
	 <p class="- topic/p ">Den Zeilenbezeichner für die Ausführung einer SQL <codeph class="+ topic/ph pr-d/codeph ">INSERT</codeph>-Anweisung erhalten Sie über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">lastInsertRowID</codeph> des „SQLResult“-Objekts, das durch die Methode <codeph class="+ topic/ph pr-d/codeph ">getResult()</codeph> des „SQLStatement“-Objekts zurückgegeben wird (wenn sie aufgerufen wird, nachdem SQLStatement das <codeph class="+ topic/ph pr-d/codeph ">result</codeph>-Ereignis ausgelöst hat).</p>
	 
	 <p class="- topic/p ">Weitere Informationen zu Primärschlüsseln und generierten Zeilenbezeichnern finden Sie in den Abschnitten „<xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_data_en" scope="external" class="- topic/xref ">CREATE TABLE</xref>“ und „<xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_statements_en" scope="external" class="- topic/xref ">Ausdrücke</xref>“ im Anhang „<xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_en" scope="external" class="- topic/xref ">SQL-Unterstützung in lokalen Datenbanken</xref>“.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/lastInsertRowID" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.lastInsertRowID</linktext></link><link href="flash.data.xml#SQLResult/lastInsertRowID" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLResult.lastInsertRowID</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLUpdateEvent:table:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">table</apiName><shortdesc class="- topic/shortdesc ">
     Der Name der Tabelle, deren Datenänderung zur Auslösung des Ereignisses geführt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Name der Tabelle, deren Datenänderung zur Auslösung des Ereignisses geführt hat.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:EventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
Die EventDispatcher-Klasse ist die Basisklasse für alle runtime-Klassen, die Ereignisse auslösen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die EventDispatcher-Klasse ist die Basisklasse für alle --Klassen, die Ereignisse auslösen. <ph class="- topic/ph ">Die EventDispatcher-Klasse implementiert die EventDispatcher-Schnittstelle und ist die Basisklasse der DisplayObject-Klasse. In der EventDispatcher-Klasse ist es möglich, dass jedes Objekt in der Anzeigeliste ein Ereignisziel sein kann, und als solches die Methoden der IEventDispatcher-Schnittstelle verwendet.</ph>

<p class="- topic/p ">Ereignisziele sind ein wichtiger Bestandteil des Ereignismodells in Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player und Adobe<sup class="+ topic/ph hi-d/sup ">® </sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>. Das Ereignisziel dient als zentraler Punkt bei dem Ablauf der Ereignisse durch die Hierarchie der Anzeigeliste. Wenn ein Ereignis wie ein Mausklick oder ein Tastenanschlag eintritt, sendet Flash Player oder die AIR-Anwendung vom Root der Anzeigeliste aus ein Ereignisobjekt in den Ereignisablauf. Das Ereignisobjekt durchläuft die Anzeigeliste, bis es das Ereignisziel erreicht. An diesem Punkt angekommen, beginnt es den Rückweg durch die Anzeigeliste. Dieser Weg zum Ereignisziel und zurück ist im Prinzip in drei Phasen unterteilt: die Aufnahmephase umfasst den Weg vom Root zum letzten Knoten vor dem Ereigniszielknoten, die Zielphase umfasst nur den Ereigniszielknoten, und die Bubbling-Phase umfasst alle weiteren Knoten, auf die das Objekt auf dem Rückweg zum Root der Anzeigeliste trifft.</p>

<p class="- topic/p ">Im Allgemeinen besteht der einfachste Weg für eine benutzerdefinierte Klasse, die Fähigkeit zum Auslösen eines Ereignisses zu erhalten darin, die EventDispatcher-Klasse zu erweitern. Wenn dies nicht möglich ist (d. h., wenn die Klasse bereits eine andere Klasse erweitert), können Sie stattdessen die IEventDispatcher-Schnittstelle implementieren, ein EventDispatcher-Mitglied erstellen und einfache Hooks schreiben, um alle Aufrufe an einen aggregierten EventDispatcher zu leiten.</p>



</apiDesc><example conref="examples\EventDispatcherExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klassen <codeph class="+ topic/ph pr-d/codeph ">EventDispatcherExample</codeph> und <codeph class="+ topic/ph pr-d/codeph ">CustomDispatcher</codeph> (einer Unterklasse von <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph>) erläutert, wie ein benutzerdefiniertes Ereignis erstellt und ausgelöst wird. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Der Konstruktor von <codeph class="+ topic/ph pr-d/codeph ">EventDispatcherExample</codeph> erstellt eine lokale <codeph class="+ topic/ph pr-d/codeph ">dispatcher</codeph>-Variable und weist sie einer neuen CustomDispatcher-Instanz zu.</li><li class="- topic/li ">In <codeph class="+ topic/ph pr-d/codeph ">CustomDispatcher</codeph> wird der Name <codeph class="+ topic/ph pr-d/codeph ">action</codeph> für das Ereignis über einen String festgelegt, und die Methode <codeph class="+ topic/ph pr-d/codeph ">doAction()</codeph> wird deklariert. Bei Aufruf erstellt diese Methode das Ereignis <codeph class="+ topic/ph pr-d/codeph ">action</codeph> und löst es mit der Methode <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.dispatchEvent()</codeph> aus.</li><li class="- topic/li ">Anschließend wird die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">dispatcher</codeph> verwendet, um den Ereignis-Listener <codeph class="+ topic/ph pr-d/codeph ">action</codeph> und die verknüpfte Abonnentenmethode <codeph class="+ topic/ph pr-d/codeph ">actionHandler()</codeph> zum Drucken von Informationen über das Ereignis beim Auslösungszeitpunkt hinzuzufügen.</li><li class="- topic/li ">Die <codeph class="+ topic/ph pr-d/codeph ">doAction()</codeph>-Methode wird aufgerufen, und das <codeph class="+ topic/ph pr-d/codeph ">action</codeph>-Ereignis wird ausgelöst.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;

    public class EventDispatcherExample extends Sprite {

        public function EventDispatcherExample() {
            var dispatcher:CustomDispatcher = new CustomDispatcher();
            dispatcher.addEventListener(CustomDispatcher.ACTION, actionHandler);
            dispatcher.doAction();
        }

        private function actionHandler(event:Event):void {
            trace("actionHandler: " + event);
        }
    }
}

import flash.events.EventDispatcher;
import flash.events.Event;

class CustomDispatcher extends EventDispatcher {
    public static var ACTION:String = "action";

    public function doAction():void {
        dispatchEvent(new Event(CustomDispatcher.ACTION));
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:EventDispatcher_flash.events.Event.DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><shortdesc class="- topic/shortdesc ">
 [broadcast event] Wird ausgelöst, wenn Flash Player- oder die AIR-Anwendung den Fokus verliert und inaktiv wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 [broadcast event] Wird ausgelöst, wenn die <ph class="- topic/ph "> Flash Player- oder </ph> AIR-Anwendung den Fokus verliert und inaktiv wird. Bei diesem Ereignis handelt es sich um ein broadcast-Ereignis. Das bedeutet, dass es von allen EventDispatcher-Objekten ausgelöst wird, die einen Listener für dieses Ereignis registriert haben. <ph class="- topic/ph ">Weitere Informationen zu broadcast-Ereignissen finden Sie im Abschnitt zur DisplayObject-Klasse.</ph>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:EventDispatcher_flash.events.Event.ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
 [broadcast event] Wird ausgelöst, wenn Flash Player oder eine AIR-Anwendung den Betriebssystemfokus erhält und aktiv wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 [broadcast event] Wird ausgelöst, wenn die <ph class="- topic/ph "> Flash Player- oder </ph> AIR-Anwendung den Betriebssystemfokus erhält und aktiv wird. Bei diesem Ereignis handelt es sich um ein broadcast-Ereignis. Das bedeutet, dass es von allen EventDispatcher-Objekten ausgelöst wird, die einen Listener für dieses Ereignis registriert haben. <ph class="- topic/ph ">Weitere Informationen zu broadcast-Ereignissen finden Sie im Abschnitt zur DisplayObject-Klasse.</ph>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:EventDispatcher:EventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">EventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
	Aggregiert eine Instanz der EventDispatcher-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">target</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:IEventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Zielobjekt für Ereignisse, die zum EventDispatcher-Objekt gesendet werden. <ph class="- topic/ph ">Dieser Parameter wird verwendet, wenn die EventDispatcher-Instanz von einer Klasse aggregiert wird, die IEventDispatcher implementiert; dies ist notwendig, damit das enthaltene Objekt als Ziel für Ereignisse verwendet werden kann. Verwenden Sie diesen Parameter nicht in einfachen Fällen, in denen eine Klasse die EventDispatcher-Klasse erweitert.</ph>
    
	
	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Aggregiert eine Instanz der EventDispatcher-Klasse.
	
    <p class="- topic/p ">Die EventDispatcher-Klasse wird im Allgemeinen als eine Basisklasse verwendet. Die <ph class="- topic/ph ">meisten</ph> Entwickler brauchen diese Konstruktorfunktion also nicht zu verwenden. <ph class="- topic/ph ">Dennoch wird dieser Konstruktor von erfahrenen Entwicklern benötigt, die die IEventDispatcher-Schnittstelle implementieren. Wenn Sie nicht in der Lage sind, die EventDispatcher-Klasse zu erweitern und stattdessen die IEventDispatcher-Schnittstelle implementieren müssen, verwenden Sie diesen Konstruktor, um eine Instanz der EventDispatcher-Klasse zu aggregieren.</ph></p>
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:EventDispatcher:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der angegebene <codeph class="+ topic/ph pr-d/codeph ">listener</codeph> ist keine Funktion.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Listener-Funktion, die das Ereignis verarbeitet. Diese Funktion muss ein Ereignisobjekt als einzigen Parameter akzeptieren und darf keinen Wert zurückgeben<ph class="- topic/ph ">, wie das nachfolgende Beispiel zeigt:</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Der Name der Funktion ist beliebig.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Bestimmt, ob der Listener in der Erfassungsphase oder in der Ziel- und Bubbling-Phase arbeitet. Ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, so verarbeitet der Listener das Ereignis nur während der Erfassungsphase und nicht während der Ziel- oder Bubbling-Phase. Hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> hingegen den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, verarbeitet der Listener das Ereignis nur während der Ziel- oder Bubbling-Phase. Um auf das Ereignis in allen drei Phasen zu warten, rufen Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> zweimal auf; einmal ist <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt, und beim zweiten Mal hat <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Prioritätsstufe des Ereignis-Listeners. Die Priorität wird durch eine vorzeichenbehaftete 32-Bit-Ganzzahl zugewiesen. Je höher die Zahl, desto höher die Priorität. Alle Listener mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> werden vor Listenern mit der Priorität <i class="+ topic/ph hi-d/i ">n</i> -1 verarbeitet. Wenn zwei oder mehr Listener die gleiche Priorität aufweisen, werden sie in der Reihenfolge verarbeitet, in der sie hinzugefügt wurden. Die Standardpriorität ist 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob der Verweis auf den Listener stark oder schwach ist. Ein starker Verweis (der Standard) verhindert, dass der Listener von einem Garbage Collector entfernt wird. Ein schwacher Verweis hingegen nicht. <p class="- topic/p ">Funktionen von Mitgliedern auf Klassenebene werden nicht vom Garbagekollektor entfernt. Daher können Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> für Mitgliedsfunktionen auf Klassenebene auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen, ohne dass sie vom Garbagekollektor entfernt werden. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> setzen bei einem Listener, der eine verschachtelte innere Funktion ist, wird die Funktion vom Garbagekollektor entfernt. Indem Sie Verweise auf die innere Funktion erstellen (d. h sie in einer anderen Variable speichern), umgehen Sie die Garbage Collection, sodass die Funktion permanent gespeichert bleibt.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Registriert ein Ereignis-Listener-Objekt bei einem EventDispatcher-Objekt, sodass der Listener über ein Ereignis benachrichtigt wird. <ph class="- topic/ph ">Sie können Ereignis-Listener bei allen Knoten in der Anzeigeliste für eine bestimmte Art von Ereignis, Phase oder Priorität registrieren.</ph>
	
	
	
	<p class="- topic/p ">Nachdem Sie einen Ereignis-Listener erfolgreich registriert haben, können Sie seine Priorität nicht durch weitere Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ändern. Um die Priorität eines Listeners zu ändern, müssen Sie zunächst <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph> aufrufen. Anschließend können Sie den Listener mit der neuen Prioritätsstufe erneut aufrufen. </p>
	
	<p class="- topic/p ">Nach der Registrierung des Listeners haben nachfolgende Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> mit einem anderen <codeph class="+ topic/ph pr-d/codeph ">type</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph>-Wert eine separate Listener-Registrierung zur Folge. <ph class="- topic/ph ">Wenn Sie beispielsweise zuerst einen Listener registrieren, für den <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, wird dieser nur während der Aufnahmephase aktiv sein. Wenn Sie <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> für dasselbe Listener-Objekt erneut aufrufen, diesmal aber <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist, werden zwei separate Listener angelegt: einer, der während der Aufnahmephase aktiv ist und ein zweiter, der während der Ziel- und Bubbling-Phase aktiv ist.</ph>
	</p>
	
	<p class="- topic/p ">Sie können einen Ereignis-Listener nicht nur für die Ziel- oder Bubbling-Phase registrieren. Die beiden Phasen hängen während der Registrierung immer zusammen, da Bubbling nur für übergeordnete Elemente des Zielknotens gilt.</p>
	
	<p class="- topic/p ">Wenn Sie einen Ereignis-Listener nicht mehr brauchen, entfernen sie ihn, indem Sie <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> aufrufen. Andernfalls könnte es zu Speicherproblemen kommen. Ereignis-Listener werden nicht automatisch aus dem Speicher entfernt, da der Garbage Collector den Listener nicht entfernt, solange das auslösende Objekt vorhanden ist (sofern der <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph>-Parameter auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist).</p>
		
	<p class="- topic/p ">Beim Kopieren einer EventDispatcher-Instanz werden zugewiesene Ereignis-Listener nicht kopiert. (Wenn ein neu angelegter Knoten einen Ereignis-Listener benötigt, müssen Sie den Listener nach dem Erstellen des Knotens zuweisen.) Wenn Sie jedoch eine EventDispatcher-Instanz verschieben, werden zugewiesene Ereignis-Listener ebenfalls verschoben.</p>
	
	
	<p class="- topic/p ">Wenn der Ereignis-Listener bei einem Knoten registriert wird, während mit diesem Knoten ein Ereignis durchgeführt wird, so wird der Ereignis-Listener während der aktuellen Phase nicht ausgelöst, kann aber während einer späteren Phase im Ereignisablauf ausgelöst werden, etwa während der Bubbling-Phase.</p>
	
	<p class="- topic/p ">Wird ein Ereignis-Listener von einem Knoten entfernt, während mit dem Knoten ein Ereignis durchgeführt wird, so wird er von den aktuellen Aktionen immer noch ausgelöst. Nachdem er entfernt worden ist, wird der Ereignis-Listener nicht wieder aufgerufen (es sei denn er wird für spätere Verarbeitungsvorgänge erneut aufgerufen). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
	Sendet ein Ereignis in den Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Rekursionslimit für das Auslösen von Ereignissen wurde erreicht.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn das Ereignis erfolgreich ausgelöst wurde. Der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> weist entweder auf einen Fehler hin oder auf die Tatsache, dass <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> für das Ereignis aufgerufen worden ist.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Ereignisobjekt, das in den Ereignisablauf integriert wird. Wenn das Ereignis erneut gesendet wird, wird automatisch ein Klon des Ereignisses erstellt. Nachdem ein Ereignis ausgelöst wurde, lässt sich seine <codeph class="+ topic/ph pr-d/codeph ">target</codeph>-Eigenschaft nicht mehr ändern, daher funktioniert ein Zurücksenden des Ereignisses nur, wenn Sie eine neue Kopie des Ereignisses erstellen.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sendet ein Ereignis in den Ereignisablauf. Das Ereignisziel ist das EventDispatcher-Objekt, für das die Methode <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph> aufgerufen wird.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:hasEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob das EventDispatcher-Objekt Listener für einen bestimmten Ereignistyp registriert hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn ein Listener des angegebenen Typs registriert ist; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob das EventDispatcher-Objekt Listener für einen bestimmten Ereignistyp registriert hat. Dadurch können Sie bestimmen, wo ein EventDispatcher-Objekt die Verarbeitung eines Ereignistyps in der Ereignisablaufhierarchie geändert hat. Um festzustellen, ob ein bestimmter Ereignistyp einen Ereignis-Listener auslöst, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph>.
	
	<p class="- topic/p ">Der Unterschied zwischen <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> besteht darin, dass <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> nur das Objekt untersucht, zu dem es gehört, während <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> den gesamten Ereignisablauf auf das im Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph> angegebene Ereignis untersucht.
	
	</p>
	
	<p class="- topic/p ">Wird <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> von einem LoaderInfo-Objekt aus aufgerufen, werden nur die Listener berücksichtigt, die dem Aufrufer zugänglich sind.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/willTrigger()" class="- topic/link "><linktext class="- topic/linktext ">willTrigger()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:EventDispatcher:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Entfernt einen Listener aus dem EventDispatcher-Objekt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das zu entfernende Listener-Objekt.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Gibt an, ob der Listener für die Erfassungsphase oder die Ziel- und Bubbling-Phase registriert wurde. Wenn der Listener sowohl für die Aufnahme- als auch für die Bubbling-Phase registriert wurde, sind auch zwei Aufrufe von <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> erforderlich, um beide zu entfernen: ein Aufruf, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt ist, und einer, bei dem <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> gesetzt ist.</ph>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Entfernt einen Listener aus dem EventDispatcher-Objekt. Wenn kein entsprechender Listener mit dem EventDispatcher-Objekt registriert ist, hat ein Aufruf dieser Methode keine Auswirkungen.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:willTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">willTrigger</apiName><shortdesc class="- topic/shortdesc ">
	Überprüft, ob bei diesem EventDispatcher-Objekt oder bei einem seiner übergeordneten Objekte ein Ereignis-Listener für einen bestimmten Ereignistyp registriert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn ein Listener des angegebenen Typs ausgelöst wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Überprüft, ob bei diesem EventDispatcher-Objekt oder bei einem seiner Vorgänger ein Ereignis-Listener für einen bestimmten Ereignistyp registriert ist. Diese Methode liefert den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn während irgendeiner Phase des Ereignisablaufs ein Ereignis-Listener aufgerufen wird, wenn ein Ereignis des angegebenen Typs für dieses EventDispatcher-Objekt oder eines seiner nachfolgenden Elemente ausgelöst wird.
	
	<p class="- topic/p ">Der Unterschied zwischen der <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph>- und der <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph>-Methode besteht darin, dass die Methode <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> nur das Objekt untersucht, zu dem sie gehört, während die <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph>-Methode den gesamten Ereignisablauf auf das im Parameter <codeph class="+ topic/ph pr-d/codeph ">type</codeph> angegebene Ereignis untersucht.  </p>
	
	<p class="- topic/p ">Wird <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> von einem LoaderInfo-Objekt aus aufgerufen, werden nur die Listener berücksichtigt, die dem Aufrufer zugänglich sind.</p>
	
	</apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.events:TouchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TouchEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Mit der TouchEvent-Klasse können Sie Ereignisse auf Geräten verarbeiten, die den Benutzerkontakt mit dem Gerät erkennen (z. B. ein Finger auf einem Touchscreen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">bietet Unterstützung für die Ereignisverarbeitung bei Berührungsinteraktionen
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Mit der TouchEvent-Klasse können Sie Ereignisse auf Geräten verarbeiten, die den Benutzerkontakt mit dem Gerät erkennen (z. B. ein Finger auf einem Touchscreen). Wenn ein Benutzer mit einem Gerät mit Touchscreen, zum Beispiel bei einem Mobiltelefon oder Tablet, interagiert, setzt er normalerweise einen Finger oder Touchpen auf den Bildschirm und bewegt ihn. Mit der TouchEvent-Klasse können Sie Anwendungen entwickeln, die auf grundlegende Berührungsereignisse reagieren (zum Beispiel das einfache Tippen mit einem einzelnen Finger). Erstellen Sie Ereignis-Listener mit den Ereignistypen, die in dieser Klasse definiert sind. Für Benutzerinteraktionen mit mehreren Kontaktpunkten (zum Beispiel gleichzeitiges Bewegen mehrerer Finger über einen Touchscreen) verwenden Sie die verwandten GestureEvent-, PressAndTapGestureEvent- und TransformGestureEvent-Klassen. Verwenden Sie außerdem die Eigenschaften und Methoden dieser Klassen, um Ereignisprozeduren zu konstruieren, die auf die Berührung des Benutzers mit dem Gerät reagieren.
 <p class="- topic/p ">Stellen Sie mithilfe der Multitouch-Klasse fest, welche Berührungsinteraktionen die aktuelle Umgebung unterstützt, und verwalten Sie die ggf. unterstützten Berührungsinteraktionen.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Objekte auf der Anzeigeliste verschachtelt sind, zielen Berührungsereignisse auf das am weitesten verschachtelte Objekt, das auf der Anzeigeliste zu sehen ist. Dieses Objekt wird als Zielknoten bezeichnet. Damit der Vorfahre des Knotens (ein Objekt in der Anzeigeliste, das den Zielknoten enthält) über ein Berührungsereignis benachrichtigt wird, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> für den Vorfahrenknoten. Dabei sollte der type-Parameter auf das Berührungsereignis gesetzt werden, das Sie erkennen möchten.</p>
 
 </apiDesc><example conref="examples\TouchEventExample.as" class="- topic/example "> Das folgende Beispiel zeigt die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">TOUCH_BEGIN</codeph>-, <codeph class="+ topic/ph pr-d/codeph ">TOUCH_MOVE</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">TOUCH_END</codeph>-Ereignisse. Während sich der Kontaktpunkt über den Bildschirm bewegt (<codeph class="+ topic/ph pr-d/codeph ">onTouchMove</codeph>), wird die x-Koordinate in Relation zur Bühne in der Ausgabe verfolgt. Für den <codeph class="+ topic/ph pr-d/codeph ">Sprite.startTouchDrag</codeph>-Parameter in der <codeph class="+ topic/ph pr-d/codeph ">onTouchBegin</codeph>-Funktion ist der Wert für touchPointID der Wert, der dem Ereignisobjekt zugewiesen wurde. Der bounds-Parameter ist das Rechteck, das die Grenzen des übergeordneten Anzeigeobjekts definiert (bg ist ein Anzeigeobjekt, das MySprite enthält). 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;

MySprite.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin);
MySprite.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);
MySprite.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);

function onTouchBegin(eBegin:TouchEvent) {
     eBegin.target.startTouchDrag(eBegin.touchPointID, false, bg.getRect(this));
     trace("touch begin");
 
 }

function onTouchMove(eMove:TouchEvent) {
    trace(eMove.stageX);
}
 
function onTouchEnd(eEnd:TouchEvent) {
     eEnd.target.stopTouchDrag(eEnd.touchPointID);
     trace("touch end");
}
</codeblock></example><example conref="examples\TouchExample2.as" class="- topic/example "> Das folgende Beispiel zeigt, wie Berührungsereignisse und Berührungsereignisphasen sowie die <codeph class="+ topic/ph pr-d/codeph ">Multitouch.maxTouchPoints</codeph>- und die <codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph>-Eigenschaften des Berührungsobjekts verarbeitet werden. Das Beispiel stammt von Christian Cantrell und wird ausführlicher in seiner Kurzanleitung beschrieben: <xref href="http://www.adobe.com/devnet/flash/articles/multitouch_gestures.html" scope="external" class="- topic/xref ">Multi-touch and gesture support on the Flash Platform</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package
{
    import flash.display.Sprite;
    import flash.events.TouchEvent;
    import flash.text.AntiAliasType;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.ui.Multitouch;
    import flash.ui.MultitouchInputMode;

    [SWF(width=320, height=460, frameRate=24, backgroundColor=0xEB7F00)]
    public class TouchExample2 extends Sprite
    {
        private var dots:Object;
        private var labels:Object;
        private var labelFormat:TextFormat;
        private var dotCount:uint;
        private var dotsLeft:TextField;
        private static const LABEL_SPACING:uint = 15;
        
        public function TouchExample2()
        {
            super();

            this.labelFormat = new TextFormat();
            labelFormat.color = 0xACF0F2;
            labelFormat.font = "Helvetica";
            labelFormat.size = 11;
            
            this.dotCount = 0;

            this.dotsLeft = new TextField();
            this.dotsLeft.width = 300;
            this.dotsLeft.defaultTextFormat = this.labelFormat;
            this.dotsLeft.x = 3;
            this.dotsLeft.y = 0;
            this.stage.addChild(this.dotsLeft);
            this.updateDotsLeft();

            this.dots = new Object();
            this.labels = new Object();

            Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;
            this.stage.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin);
            this.stage.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);
            this.stage.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);
        }

        private function onTouchBegin(e:TouchEvent):void
        {
            if (this.dotCount == Multitouch.maxTouchPoints) return;
            var dot:Sprite = this.getCircle();
            dot.x = e.stageX;
            dot.y = e.stageY;
            this.stage.addChild(dot);
            dot.startTouchDrag(e.touchPointID, true);
            this.dots[e.touchPointID] = dot;
            
            ++this.dotCount;

            var label:TextField = this.getLabel(e.stageX + ", " + e.stageY);
            label.x = 3;
            label.y = this.dotCount * LABEL_SPACING;
            this.stage.addChild(label);
            this.labels[e.touchPointID] = label;

            this.updateDotsLeft();
        }
        
        private function onTouchMove(e:TouchEvent):void
        {
            var label:TextField = this.labels[e.touchPointID];
            label.text = (e.stageX + ", " + e.stageY);
        }
        
        private function onTouchEnd(e:TouchEvent):void
        {
            var dot:Sprite = this.dots[e.touchPointID];
            var label:TextField = this.labels[e.touchPointID];
            
            this.stage.removeChild(dot);
            this.stage.removeChild(label);
            
            delete this.dots[e.touchPointID];
            delete this.labels[e.touchPointID];
            
            --this.dotCount;

            this.updateDotsLeft();
        }
        
        private function getCircle(circumference:uint = 40):Sprite
        {
            var circle:Sprite = new Sprite();
            circle.graphics.beginFill(0x1695A3);
            circle.graphics.drawCircle(0, 0, circumference);
            return circle;
        }

        private function getLabel(initialText:String):TextField
        {
            var label:TextField = new TextField();
            label.defaultTextFormat = this.labelFormat;
            label.selectable = false;
            label.antiAliasType = AntiAliasType.ADVANCED;
            label.text = initialText;
            return label;
        }
        
        private function updateDotsLeft():void
        {
            this.dotsLeft.text = "Touches Remaining: " + (Multitouch.maxTouchPoints - this.dotCount);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:TouchEvent:TOUCH_BEGIN_touchBegin" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchBegin</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_BEGIN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchBegin" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchBegin</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_END_touchEnd" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchEnd</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_END</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchEnd" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchEnd</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_MOVE_touchMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchMove</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchMove</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_OUT_touchOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_OVER_touchOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_ROLL_OUT_touchRollOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchRollOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_ROLL_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_ROLL_OVER_touchRollOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchRollOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_ROLL_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_TAP_touchTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="..\ui\examples\Multitouch_inputMode.as" class="- topic/example "> Im folgenden Beispiel wird eine Meldung angezeigt, wenn bei einem Touchscreen auf das in mySprite gezeichnete Quadrat getippt wird:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT;

var mySprite:Sprite = new Sprite();
var myTextField:TextField = new TextField();

mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0,0,40,40);
addChild(mySprite);

mySprite.addEventListener(TouchEvent.TOUCH_TAP, taphandler);

function taphandler(e:TouchEvent): void {
    myTextField.text = "I've been tapped";
    myTextField.y = 50;
    addChild(myTextField);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchTap</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TouchEvent:TouchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TouchEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt, das Informationen über Berührungsereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_END</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_MOVE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_ROLL_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_ROLL_OVER</codeph> und <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">touchPointID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isPrimaryTouchPoint</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der erste Kontaktpunkt Mausereignissen zugeordnet ist.	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sizeX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Breite des Kontaktbereichs.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sizeY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Höhe des Kontaktbereichs.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">pressure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die andere InteractiveObject-Instanz, die von dem Ereignis betroffen ist. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> das Anzeigelistenobjekt dar, auf das das Zeigegerät jetzt zeigt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows oder Linux wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist (nur Windows oder Linux).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Ctrl- oder Strg-Taste aktiviert ist. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für TouchEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt, das Informationen über Berührungsereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
	
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:TouchEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des TouchEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues TouchEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des TouchEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TouchEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des TouchEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des TouchEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des TouchEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TouchEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TouchEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Weist Flash Player oder Adobe AIR nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Weist Flash Player oder Adobe AIR nach Abschluss der Verarbeitung dieses Ereignisses zur Wiedergabe an, wenn die Anzeigeliste geändert wurde.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TouchEvent:TOUCH_BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_BEGIN</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_BEGIN-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchBegin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_BEGIN</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchBegin" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchBegin</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_END</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_END-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchEnd</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_END</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchEnd" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchEnd</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_MOVE</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_MOVE-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchMove</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_MOVE</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchMove</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_OUT</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_OUT-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_OUT</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOut</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_OVER</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_OVER-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_OVER</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOver</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_ROLL_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_ROLL_OUT</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_ROLL_OUT-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchRollOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_ROLL_OUT</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOut</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_ROLL_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_ROLL_OVER</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_ROLL_OVER-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchRollOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_ROLL_OVER</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOver</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines TOUCH_TAP-Berührungsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">TOUCH_TAP</codeph>-Berührungsereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte TouchEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das mit diesem Ereignis verwandt ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Breite des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Höhe des Kontaktbereichs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="..\ui\examples\Multitouch_inputMode.as" class="- topic/example "> Im folgenden Beispiel wird eine Meldung angezeigt, wenn bei einem Touchscreen auf das in mySprite gezeichnete Quadrat getippt wird:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT;

var mySprite:Sprite = new Sprite();
var myTextField:TextField = new TextField();

mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0,0,40,40);
addChild(mySprite);

mySprite.addEventListener(TouchEvent.TOUCH_TAP, taphandler);

function taphandler(e:TouchEvent): void {
    myTextField.text = "I've been tapped";
    myTextField.y = 50;
    addChild(myTextField);
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchTap</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die Alt-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die Alt-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Wird nur für Windows und Linux unterstützt.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac). 
		
		<p class="- topic/p ">Unter Mac OS ist der Wert der <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph>-Eigenschaft identisch mit dem Wert der <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>-Eigenschaft. Diese Eigenschaft ist unter Windows oder Linux immer „false“.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Unter Mac wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:isPrimaryTouchPoint:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isPrimaryTouchPoint</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob der erste Kontaktpunkt Mausereignissen zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob der erste Kontaktpunkt Mausereignissen zugeordnet ist.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Falls „true“, ist die relatedObject-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf null gesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, ist die <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph>-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf <codeph class="+ topic/ph pr-d/codeph ">null </codeph> gesetzt. Ist der Nominalwert von <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> ein Verweis auf ein DisplayObject in einer anderen Sandbox, wird <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt, es sei denn, die Berechtigung gilt über die Sandboxgrenzen hinweg für beide Richtungen. Die Berechtigung wird eingerichtet, indem aus einer SWF-Datei <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufgerufen wird oder eine Richtliniendatei vom Server einer Bilddatei bereitgestellt und die <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph>-Eigenschaft beim Laden des Bilds gesetzt wird.
	 
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TouchEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:pressure:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pressure</apiName><shortdesc class="- topic/shortdesc ">
	Ein Wert zwischen 0.0 und 1.0, der die Stärke des Kontakts mit dem Gerät angibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Wert zwischen <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> und <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>, der die Stärke des Kontakts mit dem Gerät angibt. Wenn das Gerät die Druck-Erkennung nicht unterstützt, ist dieser Wert<codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> das Anzeigelistenobjekt dar, auf das das Zeigegerät jetzt zeigt. Diese Eigenschaft gilt für die Ereignisse <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">touchOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">touchRollOut</codeph> und <codeph class="+ topic/ph pr-d/codeph ">touchRollOver</codeph>.
	<p class="- topic/p ">Der Wert dieser Eigenschaft kann in zwei Fällen <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sein: Wenn es kein verwandtes Objekt gibt oder wenn es eines gibt, dieses aber eine Sicherheitssandbox ist, auf die Sie keinen Zugriff haben. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>-Eigenschaft, um festzustellen, welcher dieser Gründe zutrifft.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TouchEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">TouchEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Umschalttaste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Umschalttaste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:sizeX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sizeX</apiName><shortdesc class="- topic/shortdesc ">
	Breite des Kontaktbereichs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Breite des Kontaktbereichs.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:sizeY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sizeY</apiName><shortdesc class="- topic/shortdesc ">
	Höhe des Kontaktbereichs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Höhe des Kontaktbereichs.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:touchPointID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">touchPointID</apiName><shortdesc class="- topic/shortdesc ">
	Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Eine eindeutige Kennung (wie eine Ganzzahl), die dem Kontaktpunkt zugeordnet ist.
	
	</apiDesc><example conref="examples\TouchExample.touchPointID.as" class="- topic/example ">  Im folgenden Beispiel wird eine <codeph class="+ topic/ph pr-d/codeph ">touchMoveID</codeph>-Variable eingerichtet, um auf den richtigen <codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph>-Wert zu prüfen, bevor auf ein Berührungsverschiebungs-Ereignis reagiert wird. Andernfalls lösen auch andere Berührungseingaben diese Ereignisprozedur aus. Beachten Sie, dass sich die Listener für die Verschiebungs- und Endphasen auf der Bühne, nicht im Anzeigeobjekt befinden. Die Bühne wartet auf die Verschiebungs- oder Endphasen für den Fall, dass die Berührungsverschiebung des Benutzers über die Grenzen des Anzeigeobjekts hinausgeht.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT; 

var mySprite:Sprite = new Sprite(); 
mySprite.graphics.beginFill(0x336699); 
mySprite.graphics.drawRect(0,0,40,40); 
addChild(mySprite); 

var myTextField:TextField = new TextField(); 
addChild(myTextField); 
myTextField.width = 200; 
myTextField.height = 20; 

var touchMoveID:int = 0; 
 
mySprite.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin); 
function onTouchBegin(event:TouchEvent) { 
    if(touchMoveID != 0) { 
        myTextField.text = "already moving. ignoring new touch";     
        return; 
    } 
    touchMoveID = event.touchPointID; 
 
    myTextField.text = "touch begin" + event.touchPointID; 
    stage.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove); 
    stage.addEventListener(TouchEvent.TOUCH_END, onTouchEnd); 
} 
function onTouchMove(event:TouchEvent) { 
    if(event.touchPointID != touchMoveID) { 
        myTextField.text = "ignoring unrelated touch"; 
        return; 
    } 
    mySprite.x = event.stageX; 
    mySprite.y = event.stageY; 
    myTextField.text = "touch move" + event.touchPointID; 
} 
function onTouchEnd(event:TouchEvent) { 
    if(event.touchPointID != touchMoveID) { 
        myTextField.text = "ignoring unrelated touch end"; 
        return; 
    } 
    touchMoveID = 0; 
    stage.removeEventListener(TouchEvent.TOUCH_MOVE, onTouchMove); 
    stage.removeEventListener(TouchEvent.TOUCH_END, onTouchEnd); 
    myTextField.text = "touch end" + event.touchPointID; 
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ServerSocketConnectEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocketConnectEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein ServerSocket-Objekt setzt ein ServerSocketConnectEvent-Objekt ab, wenn ein Client versucht, eine Verbindung zum Serversocket herzustellen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein ServerSocket-Objekt setzt ein ServerSocketConnectEvent-Objekt ab, wenn ein Client versucht, eine Verbindung zum Serversocket herzustellen.
 
 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">socket</codeph>-Eigenschaft des ServerSocketConnectEvent-Objekts stellt das Socket-Objekt bereit, das für die nachfolgende Kommunikation zwischen dem Server und dem Client verwendet werden soll. Um die Verbindung abzulehnen, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>-Methode des Socket-Objekts auf.</p>
 
 </apiDesc><example conref="examples\ServerSocketConnectEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket-Klasse</linktext></link></related-links><apiConstructor id="flash.events:ServerSocketConnectEvent:ServerSocketConnectEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocketConnectEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein ServerSocketConnectEvent-Objekt, das Informationen über eine Clientverbindung enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Muss Folgendes sein: <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent.CONNECT</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">socket</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Socket</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Socket für die neue Verbindung 
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein ServerSocketConnectEvent-Objekt, das Informationen über eine Clientverbindung enthält.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ServerSocketConnectEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des ServerSocketConnectEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ServerSocketConnectEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des ServerSocketConnectEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ServerSocketConnectEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des ServerSocketConnectEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent</codeph>-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des ServerSocketConnectEvent-Objekts enthält. 
    
    <p class="- topic/p ">Der String liegt im folgenden Format vor:</p>
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ServerSocketConnectEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> socket=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ServerSocketConnectEvent:CONNECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT</apiName><shortdesc class="- topic/shortdesc ">
	 Definiert den Wert der type-Eigenschaft eines ServerSocketConnectEvent-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem ServerSocket-Objekt abgesetzt, wenn eine Clientverbindung empfangen wird.
	 
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent</codeph>-Ereignisobjekts. 
	 
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>, es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Dieses ServerSocket-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Dieses ServerSocket-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">socket</codeph></entry><entry class="- topic/entry ">Das Socket-Objekt, das die neue Verbindung darstellt.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ServerSocketConnectEvent:socket:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">socket</apiName><shortdesc class="- topic/shortdesc ">
    Der Socket für die neue Verbindung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:Socket</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Socket für die neue Verbindung.
    
    <p class="- topic/p ">Verwenden Sie dieses Socket-Objekt für die gesamte Kommunikation mit dem Client. Ihre Anwendung ist zuständig dafür, einen Verweis auf das Socket-Objekt zu verwalten. Andernfalls wird dieses Objekt bei der Speicherbereinigung (Garbage Collection) berücksichtig und kann zur Laufzeit ohne Warnung gelöscht werden.</p>
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SyncEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SyncEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein SharedObject-Objekt, das ein remotes freigegebenes Objekt repräsentiert, löst ein SyncEvent-Objekt aus, wenn das remote freigegebene Objekt vom Server aktualisiert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\SyncEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für SyncEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein SharedObject-Objekt, das ein remotes freigegebenes Objekt repräsentiert, löst ein SyncEvent-Objekt aus, wenn das remote freigegebene Objekt vom Server aktualisiert wird. Es gibt nur einen Typ eines <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject" class="- topic/link "><linktext class="- topic/linktext ">SharedObject-Klasse</linktext></link></related-links><adobeApiEvent id="flash.events:SyncEvent:SYNC_sync" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sync</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SyncEvent:SYNC</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SyncEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.sync</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SyncEvent:SyncEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SyncEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über sync-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines sync-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">changeList</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Objekte-Array, das die Synchronisation mit dem freigegebenen Remote-Objekt (SharedObject) beschreibt. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">changeList</codeph> auf dieses Objekt zugreifen.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für SyncEvent-Objekte.
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SyncEvent/changeList" class="- topic/link "><linktext class="- topic/linktext ">changeList</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SyncEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des SyncEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SyncEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des SyncEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SyncEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des SyncEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des SyncEvent-Objekts enthält.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des SyncEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SyncEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> list=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SyncEvent:SYNC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SYNC</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der Eigenschaft type eines sync-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sync</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>-Ereignisobjekts.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">changeList</codeph></entry><entry class="- topic/entry ">Ein Array mit Eigenschaften, die den Array-Status wiedergeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die vom Server aktualisierte SharedObject-Instanz.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.sync</linktext></link></related-links></apiValue><apiValue id="flash.events:SyncEvent:changeList:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">changeList</apiName><shortdesc class="- topic/shortdesc ">
     Ein Array mit Objekten; jedes Objekt enthält Eigenschaften, die die geänderten Mitglieder eines gemeinsamen Remote-Objekts beschreiben.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ein Array mit Objekten; jedes Objekt enthält Eigenschaften, die die geänderten Mitglieder eines gemeinsamen Remote-Objekts beschreiben. Die Eigenschaften jedes Objekts sind <codeph class="+ topic/ph pr-d/codeph ">code</codeph>, <codeph class="+ topic/ph pr-d/codeph ">name</codeph> und <codeph class="+ topic/ph pr-d/codeph ">oldValue</codeph>. 
     <p class="- topic/p ">Wenn Sie zum ersten Mal eine Verbindung zu einem gemeinsamen Remote-Objekt herstellen, das permanent lokal und/oder auf dem Server gespeichert ist, werden alle Eigenschaften für dieses Objekt auf leere Strings gesetzt.</p><p class="- topic/p ">Andernfalls setzt Flash <codeph class="+ topic/ph pr-d/codeph ">code</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">"clear"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"success"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"delete"</codeph>. </p>
     <ul class="- topic/ul "><li class="- topic/li ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">"clear"</codeph> bedeutet entweder, dass Sie erfolgreich eine Verbindung zu einem gemeinsam genutzten Remote-Objekt hergestellt haben, das noch nicht permanent auf dem Server oder dem Client gespeichert ist, oder dass alle Eigenschaften des Objekts gelöscht wurden – zum Beispiel, wenn seit der letzten Synchronisation der Client- und Serverkopien des Objekts so viele Änderungen vorgenommen wurden, dass Flash Player das Client-Objekt mit dem Server-Objekt erneut synchronisiert. Im zweiten Fall wird <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph> ausgelöst und der Wert für „code“ wird auf <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> gesetzt. </li><li class="- topic/li ">Bei <codeph class="+ topic/ph pr-d/codeph ">"success"</codeph> wurde das gemeinsam genutzte Objekt vom Client geändert. </li><li class="- topic/li ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph> bedeutet, dass der Client erfolglos versucht hat, das Objekt zu ändern, und das Objekt stattdessen von einem anderen Client geändert wurde. </li><li class="- topic/li ">Bei <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> wurde das Objekt von einem anderen Client geändert oder vom Server erneut synchronisiert. </li><li class="- topic/li ">Der Wert <codeph class="+ topic/ph pr-d/codeph ">"delete"</codeph> bedeutet, dass das Attribut gelöscht wurde. </li></ul>
     <p class="- topic/p ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">name</codeph> enthält den Namen der Eigenschaft, die geändert wurde.</p>
     <p class="- topic/p ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">oldValue</codeph> enthält den vorherigen Wert der geänderten Eigenschaft. Dieser Parameter lautet <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, es sei denn, der Code weist den Wert <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> auf.</p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection-Klasse</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream-Klasse</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:KeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">KeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein KeyboardEvent-Objekt wird als Reaktion auf Tastatureingaben des Benutzers ausgelöst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für Keyboard-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein KeyboardEvent-Objekt wird als Reaktion auf Tastatureingaben des Benutzers ausgelöst. Es gibt zwei Arten von Tastaturereignissen: <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph> und <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph>
 
 <p class="- topic/p ">Da Zuordnungen zwischen Tasten und spezifischen Zeichen zwischen verschiedenen Geräten und Betriebssystemen variieren, verwenden Sie den Ereignistyp TextEvent für die Verarbeitung von eingegebenen Zeichen.</p>
 
 <p class="- topic/p ">Um global auf Tastenereignisse zu warten, überwachen Sie die Aufnahme- und Ziel- oder Bubbling-Phase auf der Bühne.</p>
 
 </apiDesc><example conref="examples\KeyboardEventExample.as" class="- topic/example "> Im folgenden Beispiel werden anhand der Klasse <codeph class="+ topic/ph pr-d/codeph ">KeyboardEventExample</codeph> Tastaturereignisse und die zugehörigen Listener-Funktionen erläutert. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Die neue Sprite-Instanz <codeph class="+ topic/ph pr-d/codeph ">child</codeph> wird erstellt.</li><li class="- topic/li ">Es werden Eigenschaften für die spätere Verwendung bei der Festlegung von Farbe und Größe eines Quadrats deklariert.</li><li class="- topic/li ">Mithilfe von Sprite-Methoden wird ein hellblaues Quadrat gezeichnet, das unter Zuhilfenahme der <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>-Methode mit den Standardkoordinaten (0,0) auf der Bühne dargestellt wird.</li><li class="- topic/li ">Es werden ein Mausereignis und zwei Tastaturereignisse hinzugefügt:
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">click</codeph>/<codeph class="+ topic/ph pr-d/codeph ">clickHandler</codeph>, das ausgelöst wird, wenn Sie auf das Quadrat klicken, um den Fokus auf das <codeph class="+ topic/ph pr-d/codeph ">child</codeph>-Sprite zu verlagern, damit es auf Tastaturereignisse warten kann.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph>/<codeph class="+ topic/ph pr-d/codeph ">keyDownHandler</codeph> wird bei jedem Tastendruck ausgelöst. Die Abonnentenmethode druckt Informationen zum Ereignis mithilfe der <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>-Anweisung.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph>/<codeph class="+ topic/ph pr-d/codeph ">keyUpHandler</codeph> wird bei jedem Loslassen einer Taste ausgelöst.</li></ul></li></ol>
 
 <p class="- topic/p ">Wenn Sie dieses Beispiel testen, müssen Sie zunächst auf das Quadrat klicken, damit das Tastaturereignis funktioniert.</p>
 <p product="flash" class="- topic/p ">Wenn Sie in Flash den Befehl „Film testen“ verwenden, reagiert möglicherweise die Authoring-Oberfläche anstelle des Ereignis-Listeners am child-Sprite auf bestimmte Tasten.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.DisplayObject;
    import flash.events.*;

    public class KeyboardEventExample extends Sprite {
        private var child:Sprite = new Sprite();
        private var bgColor:uint = 0x00CCFF;
        private var size:uint = 80;

        public function KeyboardEventExample() {
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            addChild(child);
            child.addEventListener(MouseEvent.CLICK, clickHandler);
            child.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);
            child.addEventListener(KeyboardEvent.KEY_UP, keyUpHandler);
            
        }

        private function clickHandler(event:MouseEvent):void {
            stage.focus = child;
        }

        private function keyDownHandler(event:KeyboardEvent):void {
            trace("keyDownHandler: " + event.keyCode);
            trace("ctrlKey: " + event.ctrlKey);
            trace("keyLocation: " + event.keyLocation);
            trace("shiftKey: " + event.shiftKey);
            trace("altKey: " + event.altKey);

        }

        private function keyUpHandler(event:KeyboardEvent):void {
            trace("keyUpHandler: " + event.keyCode);
        }
        
        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#KeyboardEvent/KEY_DOWN" class="- topic/link "><linktext class="- topic/linktext ">KEY_DOWN</linktext></link><link href="flash.events.xml#KeyboardEvent/KEY_UP" class="- topic/link "><linktext class="- topic/linktext ">KEY_UP</linktext></link><link href="flash.ui.xml#KeyLocation" class="- topic/link "><linktext class="- topic/linktext ">KeyLocation</linktext></link></related-links><adobeApiEvent id="flash.events:KeyboardEvent:KEY_DOWN_keyDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:KeyboardEvent:KEY_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:KeyboardEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:KeyboardEvent:KEY_UP_keyUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:KeyboardEvent:KEY_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:KeyboardEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:KeyboardEvent:KeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">KeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über Tastaturereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph> und <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charCodeValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Zeichencodewert der gedrückten bzw. losgelassenen Taste. Die zurückgegebenen Codewerte sind Werte für die englische Tastatur. Wenn Sie beispielsweise auf einer japanischen Tastatur Umschalt+3 drücken, gibt <codeph class="+ topic/ph pr-d/codeph ">Keyboard.charCode()</codeph> wie auch bei einer englischen Tastatur das Zeichen # zurück.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyCodeValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Tastencodewert der gedrückten bzw. losgelassenen Taste.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyLocationValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Position der Taste auf der Tastatur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste als Zusatztaste aktiviert ist (nur Windows).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Umschalttaste als Zusatztaste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob unter Mac die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Befehlstaste aktiviert ist (nur Mac).
	 
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für KeyboardEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über Tastaturereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#KeyboardEvent/KEY_DOWN" class="- topic/link "><linktext class="- topic/linktext ">KEY_DOWN</linktext></link><link href="flash.events.xml#KeyboardEvent/KEY_UP" class="- topic/link "><linktext class="- topic/linktext ">KEY_UP</linktext></link><link href="flash.events.xml#KeyboardEvent/charCode" class="- topic/link "><linktext class="- topic/linktext ">Keyboard.charCode</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:KeyboardEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des KeyboardEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues KeyboardEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des KeyboardEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:KeyboardEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des KeyboardEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des KeyboardEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des KeyboardEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph "> [KeyboardEvent type= <i class="+ topic/ph hi-d/i ">value</i> bubbles= <i class="+ topic/ph hi-d/i ">value</i> cancelable= <i class="+ topic/ph hi-d/i ">value</i> ... shiftKey= <i class="+ topic/ph hi-d/i ">value</i> ] </codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:KeyboardEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, dass die Anzeige nach der Verarbeitung dieses Ereignisses wiedergegeben werden sollte, falls die Anzeigeliste geändert wurde
	
	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, dass die Anzeige nach der Verarbeitung dieses Ereignisses wiedergegeben werden sollte, falls die Anzeigeliste geändert wurde
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:KeyboardEvent:KEY_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	Die KeyboardEvent.KEY_DOWN-Konstante definiert den Wert der type-Eigenschaft eines keyDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> in AIR, Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> in Flash Player; in AIR wird durch Abbrechen dieses Ereignisses verhindert, dass das Zeichen in ein Textfeld eingegeben wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">charCode</codeph></entry><entry class="- topic/entry ">Der Zeichencodewert der gedrückten bzw. losgelassenen Taste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac, wenn die Befehlstaste aktiviert ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows und Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac, wenn die Ctrl-Taste aktiviert ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows und Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Der Tastencodewert der gedrückten bzw. losgelassenen Taste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">KeyLocation</codeph></entry><entry class="- topic/entry ">Die Position der Taste auf der Tastatur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz mit dem Fokus. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:KEY_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_UP</apiName><shortdesc class="- topic/shortdesc ">
	Die KeyboardEvent.KEY_UP-Konstante definiert den Wert der type-Eigenschaft eines keyUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">charCode</codeph></entry><entry class="- topic/entry ">Enthält den Zeichencodewert der gedrückten bzw. losgelassenen Taste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac, wenn die Befehlstaste aktiviert ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows und Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac, wenn die Ctrl-Taste aktiviert ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows, falls die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Der Tastencodewert der gedrückten bzw. losgelassenen Taste.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">KeyLocation</codeph></entry><entry class="- topic/entry ">Die Position der Taste auf der Tastatur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz mit dem Fokus. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt unter Windows an, ob die Alt-Taste aktiviert ist (true) oder deaktiviert (false); gibt unter Mac OS an, ob die Wahltaste aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt unter Windows an, ob die Alt-Taste aktiviert ist (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>); gibt unter Mac OS an, ob die Wahltaste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:charCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">charCode</apiName><shortdesc class="- topic/shortdesc ">
	Enthält den Zeichencodewert der gedrückten bzw. losgelassenen Taste.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Enthält den Zeichencodewert der gedrückten bzw. losgelassenen Taste. Die Codewerte sind Werte für die englische Tastatur. Wenn Sie beispielsweise auf einer japanischen Tastatur Umschalt+3 drücken, gibt <codeph class="+ topic/ph pr-d/codeph ">charCode</codeph> wie auch bei einer englischen Tastatur das Zeichen # zurück.
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b>Wenn ein Eingabenmethoden-Editor (Input Method Editor/IME) ausgeführt wird, meldet <codeph class="+ topic/ph pr-d/codeph ">charCode</codeph> keine genauen Zeichencodes.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Befehlstaste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Befehlstaste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Wird nur unter Mac OS unterstützt. Unter Mac OS hat die <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph>-Eigenschaft denselben Wert wie die <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>-Eigenschaft.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Ctrl-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Ctrl-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Unter Windows und Linux ist dieser Wert auch „true“, wenn die Strg-Taste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Zeigt unter Windows und Linux an, ob die Strg-Taste aktiviert (true) oder deaktiviert (false) ist; zeigt unter Mac OS an, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Zeigt unter Windows und Linux an, ob die Strg-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist; zeigt unter Mac OS an, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:keyCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyCode</apiName><shortdesc class="- topic/shortdesc ">
	Der Tastencodewert der gedrückten bzw. losgelassenen Taste.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Tastencodewert der gedrückten bzw. losgelassenen Taste.
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis: </b>Wenn ein Eingabenmethoden-Editor (Input Method Editor/IME) ausgeführt wird, meldet <codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph> keine genauen Zeichencodes.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:keyLocation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyLocation</apiName><shortdesc class="- topic/shortdesc ">
	Gibt die Position der Taste auf der Tastatur an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt die Position der Taste auf der Tastatur an. Dies eignet sich beispielsweise zum Unterscheiden von Tasten, die mehrmals auf einer Tastatur vorhanden sind. Beispielsweise können Sie anhand des Wertes dieser Eigenschaft zwischen der linken und rechten Umschalttaste unterscheiden: <codeph class="+ topic/ph pr-d/codeph ">KeyLocation.LEFT</codeph> für die linke und <codeph class="+ topic/ph pr-d/codeph ">KeyLocation.RIGHT</codeph> für die rechte Umschalttaste. Ein weiteres Beispiel ist das Unterscheiden zwischen den Zahlentasten auf der Standardtastatur (<codeph class="+ topic/ph pr-d/codeph ">KeyLocation.STANDARD</codeph>) und den Zahlentasten im Ziffernblock (<codeph class="+ topic/ph pr-d/codeph ">KeyLocation.NUM_PAD</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Umschalttaste als Zusatztaste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Umschalttaste als Zusatztaste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeWindowDisplayStateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowDisplayStateEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein NativeWindow-Objekt löst Ereignisse der NativeWindowCisplayStateEvent-Klasse aus, wenn sich der Fensteranzeigestatus ändert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für NativeWindow-Ereignisse, die den Anzeigestatus des Fensters ändern.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein NativeWindow-Objekt löst Ereignisse der NativeWindowCisplayStateEvent-Klasse aus, wenn sich der Fensteranzeigestatus ändert. Es gibt zwei Arten von Ereignissen:
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</codeph></li></ul>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeWindowDisplayStateEvent/DISPLAY_STATE_CHANGING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</linktext></link><link href="flash.events.xml#NativeWindowDisplayStateEvent/DISPLAY_STATE_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</linktext></link></related-links><adobeApiEvent id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE_displayStateChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displayStateChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowDisplayStateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem sich der Anzeigestatus geändert hat.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING_displayStateChanging" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displayStateChanging</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowDisplayStateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor sich der Anzeigestatus ändert.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeWindowDisplayStateEvent:NativeWindowDisplayStateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowDisplayStateEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt mit spezifischen Informationen, die für Fensteranzeigestatusereignisse relevant sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Folgende Werte sind möglich:
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</codeph></li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt abgebrochen werden kann.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeDisplayState</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der <codeph class="+ topic/ph pr-d/codeph ">displayState</codeph> vor der Änderung.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterDisplayState</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der <codeph class="+ topic/ph pr-d/codeph ">displayState</codeph> nach der Änderung. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt mit spezifischen Informationen, die für Fensteranzeigestatusereignisse relevant sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeWindowDisplayStateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des NativeWindowDisplayStateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues NativeWindowDisplayStateEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des NativeWindowDisplayStateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeWindowDisplayStateEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des NativeWindowDisplayStateEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des NativeWindowDisplayStateEvent-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des NativeWindowDisplayStateEvent-Objekts enthält. Der String hat das folgende Format:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeWindowDisplayStateEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> beforeDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i> afterDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY_STATE_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines displayStateChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displayStateChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, nachdem sich der Anzeigestatus geändert hat.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">displayStateChange</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph></entry><entry class="- topic/entry ">Der alte Anzeigestatus des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph></entry><entry class="- topic/entry ">Der neue Anzeigestatus des Fensters.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die NativeWindow-Instanz, deren Status sich gerade geändert hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY_STATE_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines displayStateChanging-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displayStateChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NativeWindow-Objekt abgesetzt, bevor sich der Anzeigestatus ändert.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph></entry><entry class="- topic/entry ">Der Status des Fenster vor der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph></entry><entry class="- topic/entry ">Der Status des Fenster nach der ausstehenden Änderung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die NativeWindow-Instanz, deren Status sich gerade geändert hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen des Ereignisses verhindert die Änderung.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:afterDisplayState:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterDisplayState</apiName><shortdesc class="- topic/shortdesc ">
     Der Anzeigezustand des NativeWindow nach der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Anzeigezustand des NativeWindow nach der Änderung.  
     
     <p class="- topic/p ">Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph> handelt, wurde der Anzeigestatus noch nicht geändert. <codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph> zeigt den neuen Anzeigestatus an, wenn das Ereignis nicht abgebrochen wird. Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">displayStateChanged</codeph> handelt, zeigt <codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph> den aktuellen Wert an.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:beforeDisplayState:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeDisplayState</apiName><shortdesc class="- topic/shortdesc ">
     Der Anzeigezustand des NativeWindow vor der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Der Anzeigezustand des NativeWindow vor der Änderung.  
     
     <p class="- topic/p ">Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph> handelt, wurde der Anzeigestatus noch nicht geändert; <codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph> zeigt den aktuellen Anzeigestatus des Fensters an. Wenn es sich bei dem Ereignis um <codeph class="+ topic/ph pr-d/codeph ">displayStateChanged</codeph> handelt, zeigt <codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph> den vorherigen Wert an.</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:VideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">VideoEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Diese Ereignisklasse gibt den aktuellen Videorenderingstatus an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt den aktuellen Status des Videorenderings an.
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <p class="- topic/p ">Diese Ereignisklasse gibt den aktuellen Videorenderingstatus an. Verwenden Sie dieses Ereignis für die folgenden Zwecke:</p>
	 <ul class="- topic/ul "><li class="- topic/li ">Um festzustellen, wann sich die Größe der Videoanzeige ändert oder diese initialisiert wird. Verwenden Sie dieses Ereignis, anstatt ein Polling für Größenänderungen auszuführen. Wenn Sie dieses Ereignis empfangen, können Sie auf <codeph class="+ topic/ph pr-d/codeph ">Video.videoSize</codeph> und <codeph class="+ topic/ph pr-d/codeph ">Video.videoHeight</codeph> zugreifen, um die Abmessungen des zurzeit abgespielten Videos abzurufen.</li><li class="- topic/li ">Um festzustellen, ob das Video von der Software oder von der GPU dekodiert wird. Wenn die <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Eigenschaft „accelerated“ zurückgibt, sollten Sie nach Möglichkeit zur Verwendung der StageVideo-Klasse wechseln. </li></ul>
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent</linktext></link><link href="flash.events.xml#StageVideoAvailabilityEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoAvailabilityEvent</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="http://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e1a.html" class="- topic/link "><linktext class="- topic/linktext ">Arbeiten mit Videos</linktext></link></related-links><apiConstructor id="flash.events:VideoEvent:VideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">VideoEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Konstruktor.
		 
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">VideoEvent.RENDER_STATE</codeph>.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob dieses Event-Objekt an der Bubbling-Phase des Ereignisflusses teilnimmt.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob Sie die Aktion, die dieses Ereignis auslöst, abbrechen können.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Renderingstatus des Videos.
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor.
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Konstruktor.</p>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:VideoEvent:RENDER_STATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATE</apiName><shortdesc class="- topic/shortdesc ">
		 Definiert den Wert der type-Eigenschaft eines renderState-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">renderState</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Bezeichner für das renderState-Ereignis des Video-Objekts.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">renderState</codeph>-Ereignisobjekts.
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Der vom Ereignis gemeldete Renderingstatus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Video-Objekt, das den Renderingstatus meldet.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_ACCELERATED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_ACCELERATED</apiName><shortdesc class="- topic/shortdesc ">
		 Nur zur internen Verwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">accelerated</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Nur zur internen Verwendung.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Nur zur internen Verwendung. Verwenden Sie stattdessen flash.media.VideoStatus.ACCELERATED.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_SOFTWARE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_SOFTWARE</apiName><shortdesc class="- topic/shortdesc ">
		 Nur zur internen Verwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">software</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Nur zur internen Verwendung.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Nur zur internen Verwendung. Verwenden Sie stattdessen flash.media.VideoStatus.SOFTWARE.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_UNAVAILABLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_UNAVAILABLE</apiName><shortdesc class="- topic/shortdesc ">
		 Nur zur internen Verwendung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unavailable</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Nur zur internen Verwendung.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Nur zur internen Verwendung. Verwenden Sie stattdessen flash.media.VideoStatus.UNAVAILABLE.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt den Darstellungsstatus des VideoEvent-Objekts zurück.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt den Darstellungsstatus des VideoEvent-Objekts zurück.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Gibt den Darstellungsstatus des VideoEvent-Objekts zurück. Mögliche Werte sind „unavailable“, „software“ und „accelerated“.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Mit der GestureEvent-Klasse können Sie Mehrfingerereignisse bei Geräten mit Erkennung komplexer Benutzergesten (z. B. Berühren eines Touchscreens mit zwei Fingern) verarbeiten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">bietet Unterstützung für die Ereignisverarbeitung bei Berührungsinteraktionen
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Mit der GestureEvent-Klasse können Sie Mehrfingerereignisse bei Geräten mit Erkennung komplexer Benutzergesten (z. B. Berühren eines Touchscreens mit zwei Fingern) verarbeiten. Wenn ein Benutzer mit einem Gerät mit Touchscreen, zum Beispiel Mobiltelefon oder Tablet, interagiert, setzt er normalerweise einen Finger oder Touchpen auf den Bildschirm und bewegt ihn. Mithilfe der GestureEvent- und TransformGestureEvent-Klasse können Sie Anwendungen entwickeln, die auf diese Benutzerinteraktion reagieren. Erstellen Sie mit den hier oder in den verwandten TouchEvent- und TransformGestureEvent-Klassen definierten Ereignistypen Ereignis-Listener. Verwenden Sie außerdem die Eigenschaften und Methoden dieser Klassen, um Ereignisprozeduren zu konstruieren, die auf die Berührung des Benutzers mit dem Gerät reagieren.
 <p class="- topic/p ">Stellen Sie mithilfe der Multitouch-Klasse fest, welche Berührungsinteraktionen die aktuelle Umgebung unterstützt, und verwalten Sie die ggf. unterstützten Berührungsinteraktionen.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn Objekte auf der Anzeigeliste verschachtelt sind, zielen Berührungsereignisse auf das am weitesten verschachtelte Objekt, das auf der Anzeigeliste zu sehen ist. Dieses Objekt wird als Zielknoten bezeichnet. Damit der Vorfahre des Knotens (ein Objekt in der Anzeigeliste, das den Zielknoten enthält) über ein Berührungsereignis benachrichtigt wird, verwenden Sie <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> für den Vorfahrenknoten. Dabei sollte der type-Parameter auf das Berührungsereignis gesetzt werden, das Sie erkennen möchten.</p>
 </apiDesc><example conref="examples\GestureTwoFingerTap.as" class="- topic/example "> Das folgende Beispiel zeigt die Ereignisverarbeitung für das <codeph class="+ topic/ph pr-d/codeph ">GESTURE_TWO_FINGER_TAP</codeph>-Ereignis. Während der Benutzer eine Tippgeste mit zwei Fingern ausführt, dreht sich mySprite und myTextField wird mit der Phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> ausgefüllt, was die einzige Phase für Tippereignisse mit zwei Fingern ist. Andere Gesten aus der TransformGestureEvent-Klasse unterstützen Anfangs-, Update- und Endphasen.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(GestureEvent.GESTURE_TWO_FINGER_TAP , onTwoFingerTap );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onTwoFingerTap(evt:GestureEvent):void {

    evt.target.rotation -= 45;
    myTextField.text = evt.phase; //"all"

}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP_gestureTwoFingerTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureTwoFingerTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:GestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureTwoFingerTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureTwoFingerTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:GestureEvent:GestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Event-Objekt mit Informationen zu Mehrfingerereignissen (zum Beispiel das gleichzeitige Drücken von zwei Fingern auf einen Touchscreen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Der unterstützte Wert lautet: <codeph class="+ topic/ph pr-d/codeph ">GestureEvent.GESTURE_TWO_FINGER_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Wert aus der GesturePhase-Klasse, die den Fortschritt der Berührungsgeste (begin, update, end oder all) angibt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows oder Linux wird damit angezeigt, ob die Strg-Taste aktiviert ist. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Alt-Taste aktiviert ist (nur Windows oder Linux).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Umschalttasten-Modifizierer aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Befehlstaste aktiviert ist (nur Mac). Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(nur AIR); gibt an, ob die Ctrl- oder Strg-Taste aktiviert ist. Dieser Parameter gilt nur für Adobe AIR. Setzen Sie ihn nicht für Flash Player-Inhalte.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für GestureEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Event-Objekt mit Informationen zu Mehrfingerereignissen (zum Beispiel das gleichzeitige Drücken von zwei Fingern auf einen Touchscreen. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:GestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des GestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues GestureEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des GestureEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des GestureEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des GestureEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des GestureEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[GestureEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GestureEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Aktualisiert die Anzeige der Flash-Laufzeitumgebung nach der Verarbeitung des Gestenereignisses, für den Fall, dass die Anzeigeliste von der Ereignisprozedur geändert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Aktualisiert die Anzeige der Flash-Laufzeitumgebung nach der Verarbeitung des Gestenereignisses, für den Fall, dass die Anzeigeliste von der Ereignisprozedur geändert wurde.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_TWO_FINGER_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der type-Eigenschaft eines GESTURE_TWO_FINGER_TAP-Gestenereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureTwoFingerTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">GESTURE_TWO_FINGER_TAP</codeph>-Gestenereignisobjekts.
	 
	 <p class="- topic/p ">Das abgesetzte GestureEvent-Objekt hat folgende Eigenschaften:</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Alt-Taste aktiviert ist (Windows oder Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry ">(Nur AIR) <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Die aktuelle Phase im Ereignisablauf. Für Zwei-Finger-Tipp-Ereignisse ist dieser Wert immer <codeph class="+ topic/ph pr-d/codeph ">all</codeph> entsprechend dem Wert <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>, nachdem dieses Ereignis abgesetzt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die relatedObject-Eigenschaft aufgrund von Sicherheitssandboxregeln den Wert <codeph class="+ topic/ph pr-d/codeph ">null</codeph> hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz unter dem Touchpen oder Finger. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureTwoFingerTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureTwoFingerTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:GestureEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Gibt an, ob die Alt-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt an, ob die Alt-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Wird nur für Windows und Linux unterstützt.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob die Befehlstaste aktiviert ist (nur Mac). 
		
		<p class="- topic/p ">Unter Mac OS ist der Wert der <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph>-Eigenschaft identisch mit dem Wert der <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>-Eigenschaft. Diese Eigenschaft ist unter Windows oder Linux immer „false“.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob unter Mac OS die Ctrl-Taste oder unter Windows oder Linux die Strg-Taste aktiviert ist.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt unter Windows oder Linux an, ob die Strg-Taste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist. Unter Mac wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste aktiviert ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in Relation zum umgebenden Sprite.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, das in Relation zum umgebenden Sprite-Objekt steht.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:phase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">phase</apiName><shortdesc class="- topic/shortdesc ">
	Ein Wert aus der GesturePhase-Klasse, die den Fortschritt der Berührungsgeste angibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Wert aus der GesturePhase-Klasse, die den Fortschritt der Berührungsgeste angibt. Bei den meisten Gesten ist der Wert <codeph class="+ topic/ph pr-d/codeph ">begin</codeph>, <codeph class="+ topic/ph pr-d/codeph ">update</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">end</codeph>. Bei Swipe- und Zwei-Finger-Tipp-Ereignisse ist der Wert für die Phase immer <codeph class="+ topic/ph pr-d/codeph ">all</codeph>, nachdem das Ereignis abgesetzt wurde. Verwenden Sie diesen Wert, um festzustellen, wenn eine Ereignisprozedur auf eine komplexe Benutzerinteraktion reagiert oder unterschiedlich je nach der aktuellen Phase einer Multitouch-Geste reagiert (zum Beispiel beim Erweitern, Bewegen und Ablegen, wenn ein Benutzer ein visuelles Objekt berührt und über den Bildschirm zieht).
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:GestureEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Umschalttaste aktiviert (true) oder deaktiviert (false) ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Umschalttaste aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ist.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die horizontale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die vertikale Koordinate, an der das Ereignis aufgetreten ist, in globalen Bühnenkoordinaten. Diese Eigenschaft wird berechnet, wenn die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> eingerichtet wird.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FullScreenEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FullScreenEvent</apiName><shortdesc class="- topic/shortdesc ">
Das Stage-Objekt löst immer dann ein FullScreenEvent-Objekt aus, wenn die Bühne in den Vollbildmodus versetzt wird oder diesen verlässt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für FullScreenEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ActivityEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Das Stage-Objekt löst immer dann ein FullScreenEvent-Objekt aus, wenn die Bühne in den Vollbildmodus versetzt wird oder diesen verlässt. Es gibt nur einen Typ eines <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph>.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links><adobeApiEvent id="flash.events:FullScreenEvent:FULL_SCREEN_fullScreen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FullScreenEvent:FULL_SCREEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FullScreenEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:FullScreenEvent:FullScreenEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FullScreenEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über fullScreen-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fullScreen</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Gerät aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) wird. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">activating</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für FullScreenEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FullScreenEvent/FULL_SCREEN" class="- topic/link "><linktext class="- topic/linktext ">FullScreenEvent.FULL_SCREEN</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:FullScreenEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des FullScreenEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues FullScreenEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des FullScreenEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:FullScreenEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des FullScreenEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des FullScreenEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des FullScreenEvent-Objekts enthält. Das folgende Format wird verwendet:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[FullScreenEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> activating=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:FullScreenEvent:FULL_SCREEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULL_SCREEN</apiName><shortdesc class="- topic/shortdesc ">
	Die Konstante „FullScreenEvent.FULL_SCREEN“ definiert den Wert der Eigenschaft „type“ eines fullScreen-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">fullScreen</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Konstante <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> bei Vollbildanzeige und <codeph class="+ topic/ph pr-d/codeph ">false</codeph> bei normaler Anzeige.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt.</entry></row></tbody></tgroup></adobetable>
	
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links></apiValue><apiValue id="flash.events:FullScreenEvent:fullScreen:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob das Stage-Objekt im Vollbildmodus angezeigt wird (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob das Stage-Objekt im Vollbildmodus angezeigt wird (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageVideoAvailabilityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoAvailabilityEvent</apiName><shortdesc class="- topic/shortdesc ">
	Dieses Ereignis wird ausgelöst, wenn sich der Status der Stage.stageVideos-Eigenschaft ändert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt die aktuelle Verfügbarkeit von Bühnenvideo an.
   	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	<p class="- topic/p ">Dieses Ereignis wird ausgelöst, wenn sich der Status der <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>-Eigenschaft ändert. Diese Eigenschaft kann sich ändern, wenn der Benutzer ein Video aus einem <codeph class="+ topic/ph pr-d/codeph ">wmode</codeph>, der StageVideo nicht unterstützt (zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">wmode=normal</codeph>, <codeph class="+ topic/ph pr-d/codeph ">wmode=opaque</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">wmode=transparent</codeph>), zur Vollbildanzeige ändert. Das Vergrößern zum Vollbild kann dazu führen, dass der <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>-Vektor gefüllt wird. Umgekehrt kann das Beenden des Vollbildmodus dazu führen, dass der <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>-Vektor geleert wird.</p>
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">HINWEIS:</b> Diese Benachrichtigung erfolgt nur, wenn sich der Zustand der <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>-Eigenschaft ändert. Das Verhalten kann je nach Plattform und Browser variieren. Unter Windows wird das <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph>-Ereignis zum Beispiel nicht abgesetzt, wenn Sie in den Vollbildmodus wechseln, während <codeph class="+ topic/ph pr-d/codeph ">wmode</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">direct</codeph> eingestellt ist. Auf anderen Plattformen kann dasselbe Verhalten dazu führen, dass Flash Player Ressourcen neu zuweist. In diesen Fällen ändert sich der Zustand der <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>-Eigenschaft und das Ereignis wird abgesetzt. Sie können Änderungen am Vollbildmodus erkennen, indem Sie einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">flash.events.FullScreenEvent</codeph>-Ereignis verwenden. Dieses Ereignis wird vom Stage-Objekt abgesetzt.</p>

	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent</linktext></link><link href="flash.media.xml#StageVideoAvailability" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideoAvailability</linktext></link><link href="flash.events.xml#VideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.VideoEvent</linktext></link><link href="flash.events.xml#FullScreenEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.FullScreenEvent</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.events.xml#FullScreenEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.FullScreenEvent</linktext></link><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="http://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e1a.html" class="- topic/link "><linktext class="- topic/linktext ">Arbeiten mit Videos</linktext></link></related-links><apiConstructor id="flash.events:StageVideoAvailabilityEvent:StageVideoAvailabilityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoAvailabilityEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Konstruktor.
		 
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY</codeph>.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob dieses Event-Objekt an der Bubbling-Phase des Ereignisflusses teilnimmt.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob Sie die Aktion, die dieses Ereignis auslöst, abbrechen können.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">availability</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die aktuelle Verfügbarkeit von Bühnenvideo.
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor.		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Konstruktor.</p>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:StageVideoAvailabilityEvent:STAGE_VIDEO_AVAILABILITY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STAGE_VIDEO_AVAILABILITY</apiName><shortdesc class="- topic/shortdesc ">
		 Definiert den Wert der type-Eigenschaft eines stageVideoAvailability-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stageVideoAvailability</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Der Bezeichner für das <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph>-Ereignis des Stage-Objekts.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph>-Ereignisobjekts.
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">availability</codeph></entry><entry class="- topic/entry ">Der vom Ereignis gemeldete Status.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt, das die Verfügbarkeit des Bühnenvideos angibt.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageVideoAvailabilityEvent:availability:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">availability</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt die aktuelle Verfügbarkeit des Bühnenvideos mithilfe einer Konstante der flash.media.StageVideoAvailability-Klasse an.
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Gibt die aktuelle Verfügbarkeit von Bühnenvideo an.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Gibt die aktuelle Verfügbarkeit des Bühnenvideos mithilfe einer Konstante der flash.media.StageVideoAvailability-Klasse an.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DatagramSocketDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocketDataEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein DatagramSocketDataEvent-Objekt wird abgesetzt, wenn ein Datagram-Socket Daten empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein DatagramSocketDataEvent-Objekt wird abgesetzt, wenn ein Datagram-Socket Daten empfangen hat. 
 
 </apiDesc><example conref="examples\DatagramSocketDataEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">DatagramSocket-Klasse</linktext></link></related-links><adobeApiEvent id="flash.events:DatagramSocketDataEvent:DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DatagramSocketDataEvent:DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DatagramSocketDataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem DatagramSocket-Objekt abgesetzt, wenn ein UDP-Paket empfangen wird.
     
     </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.DatagramSocket.data</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DatagramSocketDataEvent:DatagramSocketDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocketDataEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein Ereignisobjekt, das Informationen über Datagram-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind:<codeph class="+ topic/ph pr-d/codeph ">DatagramSocketDataEvent.DATA</codeph>
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">srcAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IP-Adresse des Computers, der das Paket gesendet hat.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">srcPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Port des Computers, über den das Paket gesendet wurde.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dstAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die IP-Adresse, an die das Paket adressiert ist.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dstPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Port, an den das Paket adressiert ist.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Datagram-Paketdaten.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein Ereignisobjekt, das Informationen über Datagram-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DatagramSocketDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des DatagramSocketDataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues DatagramSocketDataEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des DatagramSocketDataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DatagramSocketDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des DatagramSocketDataEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des DatagramSocketDataEvent-Objekts enthält. Der String liegt im folgenden Format vor:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DatagramSocketDataEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> srcAddress=<i class="+ topic/ph hi-d/i ">Wert</i> srcPort=<i class="+ topic/ph hi-d/i ">Wert</i> dstAddress=<i class="+ topic/ph hi-d/i ">Wert</i> dstPort=<i class="+ topic/ph hi-d/i ">Wert</i> data=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DatagramSocketDataEvent:DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DATA</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der Eigenschaft type eines Datenereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">data</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem DatagramSocket-Objekt abgesetzt, wenn ein UDP-Paket empfangen wird.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Ereignisobjekts.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.DatagramSocket.data</linktext></link></related-links></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
    Die Datagram-Paketdaten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Datagram-Paketdaten.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:dstAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dstAddress</apiName><shortdesc class="- topic/shortdesc ">
    Die IP-Adresse des DatagramSocket-Objekts, das dieses Ereignis abgesetzt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die IP-Adresse des DatagramSocket-Objekts, das dieses Ereignis abgesetzt hat.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn der Socket an die spezielle Adresse: <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> gebunden ist, gibt diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> zurück. Um die spezifische IP zu kennen, an die die Datagram-Meldung gesendet werden soll, müssen Sie den Socket an eine explizite IP-Adresse binden.</p>
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:dstPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dstPort</apiName><shortdesc class="- topic/shortdesc ">
    Der Port des DatagramSocket-Objekts, das dieses Ereignis abgesetzt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Port des DatagramSocket-Objekts, das dieses Ereignis abgesetzt hat.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:srcAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">srcAddress</apiName><shortdesc class="- topic/shortdesc ">
    Die IP-Adresse des Computers, der das Paket gesendet hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die IP-Adresse des Computers, der das Paket gesendet hat.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:srcPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">srcPort</apiName><shortdesc class="- topic/shortdesc ">
    Der Port des Computers, über den das Paket gesendet wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Der Port des Computers, über den das Paket gesendet wurde.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	
	Ein NetStream-Objekt löst ein DRMStatusEvent-Objekt aus, wenn der mit DRM (Digital Rights Management) geschützte Inhalt erfolgreich abgespielt wird (wenn der Gutschein verifiziert wurde und der Benutzer authentifiziert wurde und berechtigt ist, den Inhalt anzuzeigen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für DRM-fähige Objekte.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	Ein NetStream-Objekt löst ein DRMStatusEvent-Objekt aus, wenn der mit DRM (Digital Rights Management) geschützte Inhalt erfolgreich abgespielt wird (wenn der Gutschein verifiziert wurde und der Benutzer authentifiziert wurde und berechtigt ist, den Inhalt anzuzeigen). Das DRMStatusEvent-Objekt enthält Informationen über den Gutschein, zum Beispiel. ob der Inhalt offline zur Verfügung gestellt werden kann oder wann der Gutschein abläuft und der Inhalt nicht mehr angezeigt werden kann. Die Anwendung kann diese Daten verwenden, um den Benutzer über den Status der Richtlinien und Berechtigungen zu informieren.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#DRMStatusEvent/DRM_STATUS" class="- topic/link "><linktext class="- topic/linktext ">DRMStatusEvent.DRM_STATUS</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link></related-links><adobeApiEvent id="flash.events:DRMStatusEvent:DRM_STATUS_drmStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMStatusEvent:DRM_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NetStream-Objekt abgesetzt, wenn mit der Wiedergabe DRM-geschützten Inhalts begonnen wird.
		</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:DRMStatusEvent:DRMStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Erstellt ein Ereignisobjekt, das bestimmte Informationen über DRM-Statusereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent, constructor
        	</keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ von DRMAuthenticate-Ereignissen: <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inMetadata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMContentData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das benutzerdefinierte Objekt, das benutzerdefinierte DRM-Eigenschaften enthält.  		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inVoucher</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMVoucher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Kontext des Ereignisses.  		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inLocal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob der Inhalt offline betrachtet werden kann.
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Erstellt ein Ereignisobjekt, das bestimmte Informationen über DRM-Statusereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. 
	    
 	    
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des DRMStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues DRMStatusEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des DRMStatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMStatusEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des DRMStatusEvent-Objekts enthält.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMStatusEvent-Objekts enthält. 
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMStatusEvent:DRM_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_STATUS</apiName><shortdesc class="- topic/shortdesc ">
		Die DRMStatusEvent.DRM_STATUS-Konstante definiert den Wert der type-Eigenschaft eines drmStatus-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem NetStream-Objekt abgesetzt, wenn mit der Wiedergabe DRM-geschützten Inhalts begonnen wird.
		</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">DRMStatusEvent.DRM_STATUS</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">drmStatus</codeph>-Ereignisobjekts. 
		
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">detail</codeph></entry><entry class="- topic/entry ">Ein String, der den Kontext des Statusereignisses erläutert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isAnonymous</codeph></entry><entry class="- topic/entry ">Gibt an, ob der mit DRM-Verschlüsselung geschützte Inhalt verfügbar ist, ohne dass der Benutzer Authentifizierungsdaten eingeben muss.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isAvailableOffline</codeph></entry><entry class="- topic/entry ">Gibt an, ob der mit DRM-Verschlüsselung geschützte Inhalt offline verfügbar ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offlineLeasePeriod</codeph></entry><entry class="- topic/entry ">Die verbleibende Anzahl der Tage, an denen der Inhalt offline angezeigt werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Richtlinien</codeph></entry><entry class="- topic/entry ">Ein benutzerdefiniertes Objekt des DRM-Statusereignisses.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">voucherEndDate</codeph></entry><entry class="- topic/entry ">Das absolute Datum, an dem der Gutschein abläuft und der Inhalt nicht mehr von Benutzern angezeigt werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contentData</codeph></entry><entry class="- topic/entry ">Die DRMContentData für den Inhalt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">voucher</codeph></entry><entry class="- topic/entry ">Das DRMVoucher-Objekt für den Inhalt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isLocal</codeph></entry><entry class="- topic/entry ">Gibt an, ob der Inhalt im lokalen Dateisystem gespeichert ist.</entry></row></tbody></tgroup></adobetable>
		
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:contentData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentData</apiName><shortdesc class="- topic/shortdesc ">
		 Ein DRMContentData-Objekt, das die nötigen Informationen enthält, um einen Gutschein für das Anzeigen des DRM-geschützten Inhalts zu erhalten.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMContentData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein DRMContentData-Objekt, das die nötigen Informationen enthält, um einen Gutschein für das Anzeigen des DRM-geschützten Inhalts zu erhalten.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:detail:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">detail</apiName><shortdesc class="- topic/shortdesc ">
		Ein String, der den Kontext des Statusereignisses erläutert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.detail, detail
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Ein String, der den Kontext des Statusereignisses erläutert.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isAnonymous:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAnonymous</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob der durch Digital Rights Management (DRM)-Verschlüsselung geschützte Inhalt verfügbar ist, ohne dass ein Benutzer Authentifizierungsdaten eingeben muss.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.isAnonymous, isAnonymous
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob der durch Digital Rights Management (DRM)-Verschlüsselung geschützte Inhalt verfügbar ist, ohne dass ein Benutzer Authentifizierungsdaten eingeben muss. Ist dies der Fall, ist der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Andernfalls ist der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> und ein Benutzer muss ein Benutzernamen und ein Kennwort eingeben, die mit den vom Content Provider erwarteten übereinstimmen. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isAvailableOffline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAvailableOffline</apiName><shortdesc class="- topic/shortdesc ">
		Gibt an, ob der durch Digital Rights Management (DRM)-Verschlüsselung geschützte Inhalt offline verfügbar ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.isAvailableOffline, isAvailableOffline
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt an, ob der durch Digital Rights Management (DRM)-Verschlüsselung geschützte Inhalt offline verfügbar ist. Ist dies der Fall, ist der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Andernfalls ist der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		<p class="- topic/p ">
		Damit der digital geschützte Inhalt offline zur Verfügung steht, muss der entsprechende Gutschein auf dem lokalen Computer des Benutzer zwischengespeichert sein. (Die Anwendung entscheidet, ob der Inhalt lokal gespeichert werden soll, damit er offline verfügbar ist.)
		</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isLocal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isLocal</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt an, ob der Gutschein im lokalen Gutschein-Store zwischengespeichert ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt an, ob der Gutschein im lokalen Gutschein-Store zwischengespeichert ist.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:offlineLeasePeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offlineLeasePeriod</apiName><shortdesc class="- topic/shortdesc ">
		Die verbleibende Anzahl der Tage, an denen der Inhalt offline angezeigt werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.offlineLeasePeriod, offlineLeasePeriod
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die verbleibende Anzahl der Tage, an denen der Inhalt offline angezeigt werden kann.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:policies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">policies</apiName><shortdesc class="- topic/shortdesc ">
		Ein benutzerdefiniertes Objekt des DRM-Statusereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.policies, policies
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Ein benutzerdefiniertes Objekt des DRM-Statusereignisses.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:voucherEndDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">voucherEndDate</apiName><shortdesc class="- topic/shortdesc ">
		Das absolute Datum, an dem der Gutschein abläuft und der Inhalt nicht mehr von Benutzern angezeigt werden kann.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.voucherEndDate, voucherEndDate
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Das absolute Datum, an dem der Gutschein abläuft und der Inhalt nicht mehr von Benutzern angezeigt werden kann. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:voucher:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">voucher</apiName><shortdesc class="- topic/shortdesc ">
		 Ein DRMVoucher-Objekt für den Inhalt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMVoucher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein DRMVoucher-Objekt für den Inhalt.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:AsyncErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AsyncErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Ein Objekt löst ein AsyncErrorEvent-Ereignis aus, wenn eine Ausnahme vom nativen asynchronen Code ausgegeben wird, z. B. LocalConnection, NetConnection, SharedObject oder NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für AsyncErrorEvent-Ereignisse.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Objekt löst ein AsyncErrorEvent-Ereignis aus, wenn eine Ausnahme vom nativen asynchronen Code ausgegeben wird, z. B. LocalConnection, NetConnection, <ph class="- topic/ph ">SharedObject</ph> oder NetStream. Es gibt nur einen Typ eines asynchronen Fehlerereignisses: <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent.ASYNC_ERROR</codeph>.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#AsyncErrorEvent/ASYNC_ERROR" class="- topic/link "><linktext class="- topic/linktext ">ASYNC_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:AsyncErrorEvent:ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:AsyncErrorEvent:ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:AsyncErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:AsyncErrorEvent:AsyncErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AsyncErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein AsyncErrorEvent-Objekt, das Informationen über asyncError-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Fehlerereignisses: <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt eine Bubbling-Phase durchführt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen. 
	
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der als Fehlermeldung anzuzeigende Text. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die eingetretene Ausnahme. Wenn error nicht null ist, wird die <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Eigenschaft des Ereignisse von der <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Eigenschaft des Fehlers festgelegt.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für AsyncErrorEvent-Objekte.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein AsyncErrorEvent-Objekt, das Informationen über asyncError-Ereignisse enthält. MS">AsyncErrorEvent-Objekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:AsyncErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des AsyncErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues AsyncErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des AsyncErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:AsyncErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des AsyncErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des AsyncErrorEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des AsyncErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[AsyncErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> ... error=<i class="+ topic/ph hi-d/i ">Wert</i> errorID=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph> Die <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Eigenschaft ist nur in Adobe AIR verfügbar</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:AsyncErrorEvent:ASYNC_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ASYNC_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Die Konstante AsyncErrorEvent.ASYNC_ERROR definiert den Wert der type-Eigenschaft eines asyncError-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">asyncError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Konstante <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent.ASYNC_ERROR</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">asyncError</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis auslöst.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">Der Fehler, der das Ereignis ausgelöst hat.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AsyncErrorEvent:error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
	Der ausgegebene Ausnahmefehler.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Error</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der ausgegebene Ausnahmefehler.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StatusEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein Objekt sendet ein StatusEvent-Objekt, wenn ein Gerät (z. B. eine Kamera oder ein Mikrofon) oder ein Objekt (z. B. ein LocalConnection-Objekt) den Status meldet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\StatusEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für StatusEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein Objekt sendet ein StatusEvent-Objekt, wenn ein Gerät (z. B. eine Kamera oder ein Mikrofon) oder ein Objekt (z. B. ein LocalConnection-Objekt) den Status meldet. Es gibt nur einen Typ eines status-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">StatusEvent.STATUS</codeph> .
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link><link href="flash.sensors.xml#Accelerometer" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer</linktext></link><link href="flash.sensors.xml#Geolocation" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation</linktext></link><link href="air.net.xml#ServiceMonitor" class="- topic/link "><linktext class="- topic/linktext ">air.net.ServiceMonitor</linktext></link></related-links><adobeApiEvent id="flash.events:StatusEvent:STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StatusEvent:STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.status</linktext></link><link href="flash.media.xml#Microphone/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.status</linktext></link><link href="flash.net.xml#LocalConnection/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.status</linktext></link><link href="flash.net.xml#NetStream/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.status</linktext></link><link href="flash.sensors.xml#Geolocation/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation.status</linktext></link><link href="flash.sensors.xml#Accelerometer/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer.status</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StatusEvent:StatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Status-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines status-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">StatusEvent.STATUS</codeph> .
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">code</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Beschreibung des Objektstatus. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">code</codeph> auf diese Informationen zugreifen.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">level</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Kategorie der Meldung, z. B. <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">level</codeph> auf diese Informationen zugreifen.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für StatusEvent-Objekte.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt, das Informationen über Status-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StatusEvent/STATUS" class="- topic/link "><linktext class="- topic/linktext ">STATUS</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:StatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des StatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues StatusEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des StatusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des StatusEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des StatusEvent-Objekts enthält.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des StatusEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[StatusEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> code=<i class="+ topic/ph hi-d/i ">Wert</i> level=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StatusEvent:STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STATUS</apiName><shortdesc class="- topic/shortdesc ">
     Definiert den Wert der Eigenschaft type eines status-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">status</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">status</codeph>-Ereignisobjekts.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">code</codeph></entry><entry class="- topic/entry ">Eine Beschreibung des Objektstatus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Ebene</codeph></entry><entry class="- topic/entry ">Die Kategorie der Meldung, z. B. <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen Status gemeldet wird.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.status</linktext></link><link href="flash.media.xml#Microphone/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.status</linktext></link><link href="flash.net.xml#LocalConnection/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.status</linktext></link><link href="flash.net.xml#NetStream/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.status</linktext></link><link href="flash.sensors.xml#Geolocation/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation.status</linktext></link><link href="flash.sensors.xml#Accelerometer/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer.status</linktext></link></related-links></apiValue><apiValue id="flash.events:StatusEvent:code:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">code</apiName><shortdesc class="- topic/shortdesc ">
	 Eine Beschreibung des Objektstatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Eine Beschreibung des Objektstatus.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link></related-links></apiValue><apiValue id="flash.events:StatusEvent:level:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">level</apiName><shortdesc class="- topic/shortdesc ">
 	 Die Meldungskategorie wie „Status“, „Warnung“ oder „Fehler“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Die Kategorie der Meldung, z. B. <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticationErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Der DRMManager löst ein DRMAuthenticationErrorEvent-Objekt aus, wenn ein Aufruf der authenticate()-Methode des DRMManager-Objekts fehlschlägt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der DRMManager löst ein DRMAuthenticationErrorEvent-Objekt aus, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">authenticate()</codeph>-Methode des DRMManager-Objekts fehlschlägt.
	 
 	 </apiDesc></apiClassifierDetail><apiConstructor id="flash.events:DRMAuthenticationErrorEvent:DRMAuthenticationErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine neue Instanz eines DRMAuthenticationErrorEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">der Ereignistypstring
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ob das Ereignis in der Anzeigeliste fortgesetzt wird
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ob das Ereignis abgebrochen werden kann
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDetail</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Fehlerbeschreibung.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die ID des allgemeinen Fehlertyps
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inSubErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die ID, die den spezifischen Fehler innerhalb des Fehlertyps angibt
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inServerURL</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die URL des angemeldeten Servers
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die authentifizierte Domäne des angemeldeten Servers
		 
	 	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine neue Instanz eines DRMAuthenticationErrorEvent-Objekts.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticationErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	Erstellt eine Kopie des ErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "/><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Erstellt eine Kopie des ErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticationErrorEvent:AUTHENTICATION_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_ERROR</apiName><shortdesc class="- topic/shortdesc ">
		 Die im type-Parameter zu verwendende Stringkonstante für das Authentifizierungsfehlerereignis beim Hinzufügen und Entfernen von Ereignis-Listenern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">authenticationError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die im type-Parameter zu verwendende Stringkonstante für das Authentifizierungsfehlerereignis beim Hinzufügen und Entfernen von Ereignis-Listenern.
		   
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
		 Die Inhaltsdomäne des Medienrechteservers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Inhaltsdomäne des Medienrechteservers. In diesem Fall ist „domain“ kein Netzwerk- oder Internetdomänenname.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:serverURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverURL</apiName><shortdesc class="- topic/shortdesc ">
		 Die URL des Medienrechteservers, der den Authentifizierungsversuch abgelehnt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die URL des Medienrechteservers, der den Authentifizierungsversuch abgelehnt hat.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:subErrorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subErrorID</apiName><shortdesc class="- topic/shortdesc ">
		 Ein ausführlicherer Fehlercode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein ausführlicherer Fehlercode.
		  
	 	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:HTMLUncaughtScriptExceptionEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">HTMLUncaughtScriptExceptionEvent</apiName><shortdesc class="- topic/shortdesc ">
	Ein HTMLLoader-Objekt löst ein HTMLUncaughtScriptExceptionEvent-Objekt aus, wenn eine JavaScript-Ausnahme ausgegeben wird und nicht mit einer catch-Anweisung verarbeitet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein HTMLLoader-Objekt löst ein HTMLUncaughtScriptExceptionEvent-Objekt aus, wenn eine JavaScript-Ausnahme ausgegeben wird und nicht mit einer <codeph class="+ topic/ph pr-d/codeph ">catch</codeph>-Anweisung verarbeitet wird.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html" class="- topic/link "><linktext class="- topic/linktext ">HTMLLoader</linktext></link></related-links><adobeApiEvent id="flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtScriptException</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTMLUncaughtScriptExceptionEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:HTMLUncaughtScriptExceptionEvent:HTMLUncaughtScriptExceptionEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">HTMLUncaughtScriptExceptionEvent</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt ein HTMLUncaughtScriptExceptionEvent-Objekt, das als ein Parameter an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">exceptionValue</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Wenn ein JavaScript-Prozess eine nicht erfasste Ausnahme ausgibt, ist <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph> das Ergebnis der Ausdrucksevaluierung in der throw-Anweisung, die zu der nicht erfassten Ausnahme geführt hat. Die <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph>-Eigenschaft kann ein Grundwert, ein Verweis auf ein JavaScript-Objekt oder ein Verweis auf ein ActionScript-Objekt sein.
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt ein HTMLUncaughtScriptExceptionEvent-Objekt, das als ein Parameter an Ereignis-Listener übergeben wird.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:HTMLUncaughtScriptExceptionEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 
		Erstellt eine Kopie des HTMLUncaughtScriptExceptionEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Kopie des HTMLUncaughtScriptExceptionEvent-Objekts.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
		Erstellt eine Kopie des HTMLUncaughtScriptExceptionEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCAUGHT_SCRIPT_EXCEPTION</apiName><shortdesc class="- topic/shortdesc ">
		Die Konstante HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION definiert den Wert der type-Eigenschaft eines uncaughtScriptException-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncaughtScriptException</apiData><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die Konstante <codeph class="+ topic/ph pr-d/codeph ">HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">uncaughtScriptException</codeph>-Ereignisobjekts.
		
		 
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph></entry><entry class="- topic/entry ">Das Ergebnis der Evaluierung des Ausdrucks in der <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung, der zu der nicht erfassten Ausnahme geführt hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stackTrace</codeph></entry><entry class="- topic/entry ">Ein Array von Objekten, die den Stack-Trace zu dem Zeitpunkt repräsentieren, an dem die <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung, die zu der nicht erfassten Ausnahme führte, ausgeführt wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das HTMLLoader-Objekt.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:exceptionValue" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exceptionValue</apiName><shortdesc class="- topic/shortdesc ">
	Das Ergebnis der Evaluierung des Ausdrucks in der throw-Anweisung, der zu der nicht erfassten Ausnahme geführt hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das Ergebnis der Evaluierung des Ausdrucks in der throw-Anweisung, der zu der nicht erfassten Ausnahme geführt hat. Die <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph>-Eigenschaft kann ein Grundwert, ein Verweis auf ein JavaScript-Objekt oder ein Verweis auf ein ActionScript-Objekt sein.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:stackTrace:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stackTrace</apiName><shortdesc class="- topic/shortdesc ">
	Ein Array von Objekten, die den Stack-Trace zu dem Zeitpunkt repräsentieren, an dem die throw-Anweisung, die zu der nicht erfassten Ausnahme führte, ausgeführt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Array von Objekten, die den Stack-Trace zu dem Zeitpunkt repräsentieren, an dem die throw-Anweisung, die zu der nicht erfassten Ausnahme führte, ausgeführt wurde. Jedes Objekt im Array weist drei Eigenschaften auf:
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">sourceURL</codeph> (ein String): Die URL des Skripts des Call-Stack-Frames.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">line</codeph> (eine Zahl): Die Zeilennummer in der <codeph class="+ topic/ph pr-d/codeph ">sourceURL</codeph>-Ressource des Call-Stack-Frames.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">functionName</codeph> (ein String): Der Name der Funktion für den Call-Stack-Frame.</li></ul>
	  	 
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SoftKeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein SoftKeyboardEvent-Objekt wird abgesetzt, wenn eine virtuelle Tastatur aktiviert oder deaktiviert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ein SoftKeyboardEvent wird abgesetzt, wenn eine virtuelle Tastatur aktiviert oder deaktiviert wird.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein SoftKeyboardEvent-Objekt wird abgesetzt, wenn eine virtuelle Tastatur aktiviert oder deaktiviert wird. 

<p class="- topic/p ">SoftKeyboardEvents werden von TextFields und von InteractiveObjects abgesetzt, deren <codeph class="+ topic/ph pr-d/codeph ">needsSoftKeyboard</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> hat.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/needsSoftKeyboard" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.needsSoftKeyboard</linktext></link></related-links><apiConstructor id="flash.events:SoftKeyboardEvent:SoftKeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt, das Informationen zu Aktivierungs- und Deaktivierungsereignissen der virtuellen Tastatur enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp als ein Konstantenwert (zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATE</codeph>). Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObjectVal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">triggerTypeVal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Tastaturereignis von einer Anwendung oder vom Benutzer ausgelöst wurde.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für SoftKeyboardEvent-Objekte.
     
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt, das Informationen zu Aktivierungs- und Deaktivierungsereignissen der virtuellen Tastatur enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SoftKeyboardEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
    Erstellt eine Kopie des SoftKeyboardEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SoftKeyboardEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
     
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Erstellt eine Kopie eines SoftKeyboardEvent-Objekts.    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Erstellt eine Kopie des SoftKeyboardEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SoftKeyboardEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des SoftKeyboardEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des SoftKeyboardEvent-Objekts enthält.
     
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des SoftKeyboardEvent-Objekts enthält. Das folgende Format wird verwendet:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SoftKeyboardEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> relatedObjectVal=<i class="+ topic/ph hi-d/i ">Wert</i> triggerTypeVal=<i class="+ topic/ph hi-d/i ">Wert</i> activating=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_ACTIVATE</apiName><shortdesc class="- topic/shortdesc "> 
    Die SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE-Konstante definiert den Wert der type-Eigenschaft des SoftKeyboardEvent-Objekts, das abgesetzt wird, wenn eine virtuelle Tastatur angezeigt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardActivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstantenwert für ein Ereignis, das beim Einblenden der virtuellen Tastatur abgesetzt wird.    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Die <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des SoftKeyboardEvent-Objekts, das abgesetzt wird, wenn eine virtuelle Tastatur angezeigt wird. 
    
    <p class="- topic/p ">Das softKeyboardActivate-Ereignis wird nach dem softKeyboardActivating-Ereignis abgesetzt und kann nicht abgebrochen werden. Wenn die virtuelle Tastatur nicht eingeblendet werden soll, brechen Sie das softKeyboardActivating-Ereignis ab.</p> 
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es ist zu spät zum Abbrechen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Tastaturereignis von einer Anwendung oder vom Benutzer ausgelöst wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_ACTIVATING</apiName><shortdesc class="- topic/shortdesc "> 
    Die SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING-Konstante definiert den Wert der type-Eigenschaft des SoftKeyboardEvent-Objekts, das direkt vor dem Anzeigen der virtuellen Tastatur abgesetzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardActivating</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstantenwert für ein Ereignis, das direkt vor dem Einblenden der virtuellen Tastatur abgesetzt wird.     
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Die <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des SoftKeyboardEvent-Objekts, das direkt vor dem Anzeigen der virtuellen Tastatur abgesetzt wird. Wenn das Ereignis durch den Aufruf von <codeph class="+ topic/ph pr-d/codeph ">preventDefault</codeph> abgebrochen wird, wird die virtuelle Tastatur nicht geöffnet.
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATING</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen verhindert, dass die Tastatur eingeblendet wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Tastaturereignis von einer Anwendung oder vom Benutzer ausgelöst wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_DEACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_DEACTIVATE</apiName><shortdesc class="- topic/shortdesc "> 
    Die SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE-Konstante definiert den Wert der type-Eigenschaft des SoftKeyboardEvent-Objekts, das beim Ausblenden einer virtuellen Tastatur abgesetzt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardDeactivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstantenwert für ein Ereignis, das nach dem Ausblenden oder Minimieren der virtuellen Tastatur abgesetzt wird.     
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Die <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft des SoftKeyboardEvent-Objekts, das beim Ausblenden einer virtuellen Tastatur abgesetzt wird.
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_DEACTIVATE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; das Abbrechen ist nicht zulässig.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Gibt an, ob das Tastaturereignis von einer Anwendung oder vom Benutzer ausgelöst wurde.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
    Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. 
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Ein Verweis auf ein Anzeigelistenobjekt, das in Relation zum Ereignis steht. 
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:triggerType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">triggerType</apiName><shortdesc class="- topic/shortdesc "> 
    Gibt an, ob die Änderung des Tastaturstatus durch eine Anwendung ausgelöst wurde (zum Beispiel die programmgesteuerte Verwendung von requestSoftKeyboard()) oder durch den Benutzer (zum Beispiel die Auswahl eines Textfeldes).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die Ursache der Änderung des Tastaturstatus.
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Gibt an, ob die Änderung des Tastaturstatus durch eine Anwendung ausgelöst wurde (zum Beispiel die programmgesteuerte Verwendung von <codeph class="+ topic/ph pr-d/codeph ">requestSoftKeyboard()</codeph>) oder durch den Benutzer (zum Beispiel die Auswahl eines Textfeldes).
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SoftKeyboardTrigger" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SoftKeyboardTrigger</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein ProgressEvent-Objekt wird ausgelöst, wenn eine Ladevorgang gestartet wurde oder ein Socket Daten empfangen hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für ProgressEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein ProgressEvent-Objekt wird ausgelöst, wenn eine Ladevorgang gestartet wurde oder ein Socket Daten empfangen hat. Diese Ereignisse werden in der Regel erzeugt, wenn SWF-Dateien, Bilder oder Daten in eine Anwendung geladen werden. Es gibt zwei Arten von Fortschrittsereignissen: <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> und <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.SOCKET_DATA</codeph>. Zusätzlich werden in AIR ProgressEvent-Objekte abgesetzt, wenn Daten unter Verwendung der NativeProcess-Klasse von oder zu einem untergeordneten Prozess gesendet werden.
 
 </apiDesc><example conref="examples\ProgressEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klasse <codeph class="+ topic/ph pr-d/codeph ">ProgressEventExample</codeph> gezeigt, wie verschiedene Ereignis-Listener beim Herunterladen einer Datei verwendet werden. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">downloadURL</codeph> und <codeph class="+ topic/ph pr-d/codeph ">fileName</codeph> werden mit dem Speicherort und dem Namen der Download-Datei erstellt.</li><li class="- topic/li ">Im Konstruktor <codeph class="+ topic/ph pr-d/codeph ">ProgressEventExample</codeph> wird ein neues FileReference-Objekt mit dem Namen <codeph class="+ topic/ph pr-d/codeph ">file</codeph> erstellt, das dann an die <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>-Methode übergeben wird.</li><li class="- topic/li ">Die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">downloadURL</codeph> und <codeph class="+ topic/ph pr-d/codeph ">fileName</codeph> werden an <codeph class="+ topic/ph pr-d/codeph ">file.download()</codeph> übergeben. Diese Methode ermittelt dann den Speicherort für den Download der Datei.</li><li class="- topic/li ">Die <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>-Methode fügt sieben Ereignis-Listener und die verknüpften Abonnentenmethoden hinzu:
  <ol outputclass="A" class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>/<codeph class="+ topic/ph pr-d/codeph ">cancelHandler()</codeph> wird ausgelöst, wenn das Herunterladen der Datei abgebrochen wird.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">complete</codeph>/<codeph class="+ topic/ph pr-d/codeph ">complereHandler()</codeph> wird ausgelöst, wenn das Herunterladen der Dateien abgeschlossen ist.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>/<codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> wird ausgelöst, wenn die Download-Datei nicht verfügbar oder unzugänglich ist.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">open</codeph>/<codeph class="+ topic/ph pr-d/codeph ">openHandler()</codeph>wird nach Beginn des Download-Vorgangs ausgelöst.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progress</codeph>/<codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph> wird beim Beginn und beim Ende des Download-Vorgangs ausgelöst.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>/<codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler</codeph> wird ausgelöst, wenn die lokalen Sicherheitseinstellungen für die Wiedergabe nicht mit der Art des Datenzugriffs für die Download-Datei übereinstimmen (lokaler Zugriff bzw. Netzwerkzugriff). Siehe Hinweise unten.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">select</codeph>/<codeph class="+ topic/ph pr-d/codeph ">selectHandler()</codeph> wird bei Auswahl des Download-Objekts ausgelöst.</li></ol>
  </li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweise:</b>
 <ul class="- topic/ul "><li class="- topic/li ">Für die Kompilierung der SWF-Datei müssen Sie die Option „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf Netzwerk zugreifen“ einstellen.</li><li class="- topic/li ">Bei diesem Beispiel ist die Datei SomeFile.pdf erforderlich.</li><li class="- topic/li ">Obwohl in diesem Beispiel alle verfügbaren Ereignisse des FileReference-Objekts verwendet werden, ist in den meisten Situationen nur ein Teil davon erforderlich.</li></ul>
 </p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class ProgressEventExample extends Sprite {
        private var downloadURL:String = "http://www.[yourDomain].com/SomeFile.pdf";
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function ProgressEventExample() {
            var request:URLRequest = new URLRequest(downloadURL);
            file = new FileReference();
            configureListeners(file);
            file.download(request, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml" class="- topic/link "><linktext class="- topic/linktext ">FileStream-Klasse</linktext></link><link href="flash.display.xml#LoaderInfo" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo-Klasse</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Socket-Klasse</linktext></link></related-links><adobeApiEvent id="flash.events:ProgressEvent:PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.progress</linktext></link><link href="flash.media.xml#Sound/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.progress</linktext></link><link href="flash.net.xml#FileReference/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.progress</linktext></link><link href="flash.net.xml#URLLoader/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.progress</linktext></link><link href="flash.net.xml#URLStream/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.progress</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:socketData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.socketData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_ERROR_DATA_errorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">errorData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_ERROR_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardErrorData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardErrorData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS_errorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">errorData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardInputProgress" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardInputProgress</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA_outputData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">outputData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_OUTPUT_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardOutputData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardOutputData</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ProgressEvent:ProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über progress-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind:<codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.SOCKET_DATA</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_ERROR_DATA</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_INPUT_PROGRESS</codeph> und <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_OUTPUT_DATA</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesLoaded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der geladenen Elemente oder Byte zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesTotal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang geladen werden.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>-Objekte.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über progress-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ProgressEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des ProgressEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ProgressEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des ProgressEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ProgressEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ProgressEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ProgressEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ProgressEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> bytesLoaded=<i class="+ topic/ph hi-d/i ">Wert</i> bytesTotal=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ProgressEvent:PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines progress-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">progress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Die Anzahl der geladenen Elemente oder Byte zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang schließlich geladen werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, dessen Fortschritt protokolliert wird. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.progress</linktext></link><link href="flash.media.xml#Sound/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.progress</linktext></link><link href="flash.net.xml#FileReference/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.progress</linktext></link><link href="flash.net.xml#URLLoader/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.progress</linktext></link><link href="flash.net.xml#URLStream/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.progress</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:SOCKET_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOCKET_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines socketData-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">socketData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Die Anzahl der geladenen Elemente oder Byte zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0. Diese Eigenschaft wird von <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>-Ereignisobjekten nicht verwendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Der Socket, dessen Fortschritt protokolliert wird.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:socketData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.socketData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_ERROR_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der type-Eigenschaft eines standardErrorData-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardErrorData</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Die Anzahl der Bytes der Fehlerdaten, die von NativeProcessObject.error aufgrund dieses Ereignisses gepuffert wurden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0; diese Eigenschaft wird von <codeph class="+ topic/ph pr-d/codeph ">standardErrorData</codeph>-Ereignisobjekten nicht verwendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt, das die Fehlerdaten meldet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardErrorData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardErrorData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
	 Definiert den Wert der type-Eigenschaft eines standardInputProgress-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputProgress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardInputProgress</codeph>-Ereignisobjekts.
	 
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Die Anzahl der Bytes der Fehlerdaten, die von NativeProcessObject.error aufgrund dieses Ereignisses gepuffert wurden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0; diese Eigenschaft wird von <codeph class="+ topic/ph pr-d/codeph ">standardInputProgress</codeph>-Ereignisobjekten nicht verwendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt, das die Fehlerdaten meldet.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardInputProgress" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardInputProgress</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der type-Eigenschaft eines standardOutputData-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">standardOutputData</codeph>-Ereignisobjekts.
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, das das Ereignis aktiv verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Die Anzahl der Bytes der Ausgabedaten, die von NativeProcessObject.output aufgrund dieses Ereignisses gepuffert wurden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0; diese Eigenschaft wird von <codeph class="+ topic/ph pr-d/codeph ">standardOutputData</codeph>-Ereignisobjekten nicht verwendet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NativeProcess-Objekt, das die Ausgabedaten meldet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardOutputData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardOutputData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:bytesLoaded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
	Die Anzahl der geladenen Elemente oder Bytes zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Anzahl der geladenen Elemente oder Bytes zu dem Zeitpunkt, zu dem der Listener das Ereignis verarbeitet.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ProgressEvent:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
	Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang geladen werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Gesamtanzahl der Elemente oder Byte, die bei einem erfolgreichen Ladevorgang geladen werden. Wenn das Fortschrittsereignis ausgelöst oder einem Socket-Objekt hinzugefügt wird, ist der Wert von bytesTotal immer 0, falls nicht im bytesTotal-Parameter des Konstruktors ein Wert angegeben wird. Die tatsächliche Anzahl der Byte, die zurück order vorwärts gesendet werden, wird nicht festgelegt und ist Sache des Anwendungsentwicklers.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ShaderEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ShaderEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Ein ShaderEvent wird ausgelöst, wenn ein von einem ShaderJob gestarteter Shadervorgang beendet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein ShaderEvent wird ausgelöst, wenn ein von einem ShaderJob gestarteter Shadervorgang beendet wird.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob</linktext></link></related-links><adobeApiEvent id="flash.events:ShaderEvent:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ShaderEvent:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ShaderEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.complete</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ShaderEvent:ShaderEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ShaderEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt ein ShaderEvent-Objekt, das an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses, verfügbar in der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bitmap</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:BitmapData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das BitmapData-Objekt, das das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel kein BitmapData-Objekt war).
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">array</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das ByteArray-Objekt, das das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel kein ByteArray-Objekt war).
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">vector</apiItemName><apiType value="Vector$Number" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Vector.&lt;Number>-Instanz, die das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel keine Vector.&lt;Number>-Instanz) war.
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt ein ShaderEvent-Objekt, das an Ereignis-Listener übergeben wird.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ShaderEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine Kopie des ShaderEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ShaderEvent-Objekt mit Eigenschaftswerten, die den Werten des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine Kopie des ShaderEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ShaderEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt einen String zurück, der alle Eigenschaften des ShaderEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des ShaderEvent-Objekts enthält.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt einen String zurück, der alle Eigenschaften des ShaderEvent-Objekts enthält. Der String liegt im folgenden Format vor:
		 
		 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ShaderEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> eventPhase=<i class="+ topic/ph hi-d/i ">Wert</i> bitmapData=<i class="+ topic/ph hi-d/i ">Wert</i> byteArray=<i class="+ topic/ph hi-d/i ">Wert</i> vector=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ShaderEvent:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
		 Definiert den Wert der Eigenschaft „type“ eines complete-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>-Ereignisobjekts.
		 
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bitmapData</codeph></entry><entry class="- topic/entry ">Das BitmapData-Objekt, das das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel kein BitmapData-Objekt war).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">byteArray</codeph></entry><entry class="- topic/entry ">Das ByteArray-Objekt, das das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel kein ByteArray-Objekt war).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das ShaderJob-Objekt, dessen Fertigstellung protokolliert wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">vector</codeph></entry><entry class="- topic/entry ">Die Vector.&lt;Number>-Instanz, die das Ergebnis des beendeten Vorgangs enthält (oder <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, wenn das Ziel keine Vector.&lt;Number>-Instanz) war.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.complete</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:bitmapData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmapData</apiName><shortdesc class="- topic/shortdesc ">
		 Das BitmapData-Objekt, das an die ShaderJob.start()-Methode übergeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:BitmapData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das BitmapData-Objekt, das an die <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>-Methode übergeben wurde. Wenn ein ByteArray oder Vector.&lt;Number> an die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode übergeben wurde, ist diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:byteArray:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">byteArray</apiName><shortdesc class="- topic/shortdesc ">
		 
		 Das ByteArray-Objekt, das an die ShaderJob.start()-Methode übergeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
		 Das ByteArray-Objekt, das an die <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>-Methode übergeben wurde. Wenn ein BitmapData- oder Vector.&lt;Number>-Objekt an die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode übergeben wurde, ist diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:vector:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">vector</apiName><shortdesc class="- topic/shortdesc ">
		 
         Das Vector.&lt;Number>-Objekt, das an die ShaderJob.start()-Methode übergeben wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$Number" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
         Das Vector.&lt;Number>-Objekt, das an die <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>-Methode übergeben wurde. Wenn ein BitmapData- oder ByteArray-Objekt an die <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>-Methode übergeben wurde, ist diese Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticationCompleteEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationCompleteEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Der DRMManager löst ein DRMAuthenticationCompleteEvent-Objekt aus, wenn der Aufruf der authenticate()-Methode des DRMManager-Objekts erfolgreich ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Der DRMManager löst ein DRMAuthenticationCompleteEvent-Objekt aus, wenn der Aufruf der <codeph class="+ topic/ph pr-d/codeph ">authenticate()</codeph>-Methode des DRMManager-Objekts erfolgreich ist.
	 
 	 </apiDesc></apiClassifierDetail><apiConstructor id="flash.events:DRMAuthenticationCompleteEvent:DRMAuthenticationCompleteEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationCompleteEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine neue Instanz eines DRMAuthenticationCompleteEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">der Ereignistypstring
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ob das Ereignis in der Anzeigeliste fortgesetzt wird
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ob das Ereignis abgebrochen werden kann
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inServerURL</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die URL des angemeldeten Servers
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die authentifizierte Domäne des angemeldeten Servers
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inToken</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">das Authentifizierungstoken
		 
	 	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine neue Instanz eines DRMAuthenticationCompleteEvent-Objekts.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticationCompleteEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	 Dupliziert eine Instanz einer Event-Unterklasse.</shortdesc><prolog class="- topic/prolog "/><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein mit dem Original identisches neues Ereignisobjekt.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dupliziert eine Instanz einer Event-Unterklasse.
	 
     <p class="- topic/p ">Gibt ein neues Ereignisobjekt zurück, das eine Kopie der ursprünglichen Instanz des Ereignisobjekts ist. Normalerweise rufen Sie <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> nicht auf; es wird automatisch von der EventDispatcher-Klasse aufgerufen, wenn Sie ein Ereignis neu auslösen, das heißt, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> von einer Prozedur aus aufrufen, die <codeph class="+ topic/ph pr-d/codeph ">event</codeph> verarbeitet.</p>
	 
	 <p class="- topic/p ">Das neue Ereignisobjekt übernimmt alle Eigenschaften des Originals.</p> 
	 
	 <p class="- topic/p ">Wenn Sie Ihre eigene benutzerdefinierte Event-Klasse erstellen, müssen Sie die übernommene <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph>-Methode außer Kraft setzen, um die Eigenschaften Ihrer benutzerdefinierten Klasse zu duplizieren. Wenn Sie nicht alle der Ereignis-Unterklasse hinzugefügten Eigenschaften eingestellt haben, weisen sie nicht die korrekten Werte auf, wenn Listener das neu ausgelöste Ereignis verarbeiten.</p>
	 
	 <p class="- topic/p ">In dem folgenden Beispiel ist <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> eine Unterklasse von <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> und implementiert aus diesem Grund eine eigene Version von <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticationCompleteEvent:AUTHENTICATION_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
		 Die Stringkonstante im Typparameter beim Hinzufügen und Entfernen von Ereignis-Listenern für das Ereignis bei abgeschlossener Authentifizierung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">authenticationComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Stringkonstante im Typparameter beim Hinzufügen und Entfernen von Ereignis-Listenern für das Ereignis bei abgeschlossener Authentifizierung.
		   
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
		 Die Inhaltsdomäne des Medienrechteservers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Inhaltsdomäne des Medienrechteservers. In diesem Fall ist „domain“ kein Netzwerk- oder Internetdomänenname.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:serverURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverURL</apiName><shortdesc class="- topic/shortdesc ">
		 Die URL des Medienrechteservers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die URL des Medienrechteservers.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:token:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">token</apiName><shortdesc class="- topic/shortdesc ">
		 Das Authentifizierungstoken.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Authentifizierungstoken.
		 
		 <p class="- topic/p ">Die Authentifizierung wird dem Sitzungscache von DRMManager automatisch hinzugefügt. Sie können das Token speichern und zur Authentifizierung des Benutzers in künftigen Sitzungen verwenden. Verwenden Sie ein Token mit der <codeph class="+ topic/ph pr-d/codeph ">setAuthenticationToken()</codeph>-Methode von DRMManager wieder. Die Gültigkeitsdauer des Tokens sowie andere Eigenschaften werden vom Server, der das Token generiert, bestimmt.</p>
		   
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMManager/setAuthenticationToken()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.setAuthenticationToken()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:AccelerometerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AccelerometerEvent</apiName><shortdesc class="- topic/shortdesc ">
Die Accelerometer-Klasse setzt AccelerometerEvent-Objekte ab, wenn Beschleunigungsupdates vom Beschleunigungssensor empfangen werden, der in das Gerät eingebaut ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Die Accelerometer-Klasse setzt AccelerometerEvent-Objekte ab, wenn Beschleunigungsupdates vom Beschleunigungssensor empfangen werden, der in das Gerät eingebaut ist.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.sensors.xml#Accelerometer" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer</linktext></link></related-links><adobeApiEvent id="flash.events:AccelerometerEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:AccelerometerEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:AccelerometerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:AccelerometerEvent:AccelerometerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AccelerometerEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein AccelerometerEvent-Objekt, das Informationen zur Beschleunigung entlang der drei Dimensionsachsen enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Updateereignisses: <codeph class="+ topic/ph pr-d/codeph ">AccelerometerEvent.UPDATE</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt eine Bubbling-Phase durchführt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Zeitstempel der Accelerometer-Aktualisierung.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Beschleunigungswert in G (9,8m/s/s) entlang der x-Achse.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Beschleunigungswert in G (9,8m/s/s) entlang der y-Achse.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationZ</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Beschleunigungswert in G (9,8m/s/s) entlang der z-Achse.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für AccelerometerEvent-Objekte.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein AccelerometerEvent-Objekt, das Informationen zur Beschleunigung entlang der drei Dimensionsachsen enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:AccelerometerEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	     Erstellt eine Kopie des AccelerometerEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues AccelerometerEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	     
	     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	     Erstellt eine Kopie des AccelerometerEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	       
	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:AccelerometerEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
	     Gibt einen String zurück, der alle Eigenschaften des AccelerometerEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des AccelerometerEvent-Objekts enthält.
	     
	     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	     Gibt einen String zurück, der alle Eigenschaften des AccelerometerEvent-Objekts enthält. Das folgende Format wird verwendet:
	     
	     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[AccelerometerEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> timestamp=<i class="+ topic/ph hi-d/i ">Wert</i> accelerationX=<i class="+ topic/ph hi-d/i ">Wert</i> accelerationY=<i class="+ topic/ph hi-d/i ">Wert</i> accelerationZ=<i class="+ topic/ph hi-d/i ">Wert</i> ] </codeph></p>
	       
	     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:AccelerometerEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der type-Eigenschaft eines AccelerometerEvent-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">AccelerometerEvent</codeph>-Ereignisobjekts.  
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">timestamp</codeph></entry><entry class="- topic/entry ">Der Zeitstempel der Accelerometer-Aktualisierung.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationX</codeph></entry><entry class="- topic/entry ">Der Beschleunigungswert in G (9,8m/s/s) entlang der x-Achse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationY</codeph></entry><entry class="- topic/entry ">Der Beschleunigungswert in G (9,8m/s/s) entlang der y-Achse. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationZ</codeph></entry><entry class="- topic/entry ">Der Beschleunigungswert in G (9,8m/s/s) entlang der z-Achse. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationX</apiName><shortdesc class="- topic/shortdesc ">
		Beschleunigung entlang der x-Achse, gemessen in G.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Beschleunigung entlang der x-Achse, gemessen in G. (1 g entspricht ungefähr 9,8 m/s/s) Die x-Achse verläuft von der linken zur rechten Seite des Geräts, wenn es sich in der aufrechten Position befindet. Die Beschleunigung ist positiv, wenn das Geräts nach rechts bewegt wird. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationY</apiName><shortdesc class="- topic/shortdesc ">
		Beschleunigung entlang der y-Achse, gemessen in G.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Beschleunigung entlang der y-Achse, gemessen in G. (1 g entspricht ungefähr 9,8 m/s/s.) Die y-Achse verläuft von der unteren zur oberen Seite des Geräts, wenn es sich in der aufrechten Position befindet. Die Beschleunigung ist positiv, wenn sich das Gerät in Relation zu dieser Achse nach oben bewegt.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationZ:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationZ</apiName><shortdesc class="- topic/shortdesc ">
		Beschleunigung entlang der z-Achse, gemessen in G.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Beschleunigung entlang der z-Achse, gemessen in G. (1 g entspricht ungefähr 9,8 m/s/s.) Die z-Achse verläuft senkrecht zur Oberfläche des Geräts. Die Beschleunigung ist positiv, wenn das Gerät so bewegt wird, dass seine Oberfläche sich nach oben bewegt.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc "> 
		Die Anzahl der Millisekunden seit der Initialisierung der Laufzeitumgebung bis zum Auftreten des Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Die Anzahl der Millisekunden seit der Initialisierung der Laufzeitumgebung bis zum Auftreten des Ereignisses. Wenn das Gerät zum Beispiel 4 Sekunden nach der Initialisierung der Anwendung Beschleunigungsdaten erfasst, wird die <codeph class="+ topic/ph pr-d/codeph ">timestamp</codeph>-Eigenschaft des Ereignisses auf 4000 gesetzt. 
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IMEEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IMEEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein IMEEvent-Objekt wird ausgelöst, wenn der Benutzer Text über einen Eingabemethoden-Editor (IME) eingibt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\IMEEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für IMEEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein IMEEvent-Objekt wird ausgelöst, wenn der Benutzer Text über einen Eingabemethoden-Editor (IME) eingibt. IMEs werden in der Regel zur Eingabe von Text für Sprachen mit Ideogrammen anstelle von Buchstaben verwendet, beispielsweise Japanisch, Chinesisch und Koreanisch. Es gibt zwei IME-Ereignisse: <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_COMPOSITION</codeph> und <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_START_COMPOSITION</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.events.xml#IMEEvent/IME_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_COMPOSITION</linktext></link><link href="flash.events.xml#IMEEvent/IME_START_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_START_COMPOSITION</linktext></link></related-links><adobeApiEvent id="flash.events:IMEEvent:IME_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IMEEvent:IME_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IMEEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:IMEEvent:IME_START_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IMEEvent:IME_START_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IMEEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:IMEEvent:IMEEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">IMEEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für IME-Ereignisse wichtig sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur ein IME-Ereignis: <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_COMPOSITION</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die vom IME gelesene Zeichenfolge. Dies ist die Originalzeichenfolge, so wie sie vom Benutzer eingegeben wurde, vor der Auswahl eines Kandidaten. Die endgültig zusammengesetzte Zeichenfolge wird in einem <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>-Ereignis an das Objekt mit dem Tastaturfokus gesendet. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">imeClient</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.ime:IIMEClient</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Satz von Rückrufen, die von der Text-Engine verwendet werden, um mit dem IME zu kommunizieren. Hilfreich, wenn Ihr Code über eine eigene Text-Engine verfügt und selbst Textzeilen darstellt, anstatt TextField-Objekte oder das TextLayoutFramework zu verwenden.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für IMEEvent-Objekte.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für IME-Ereignisse wichtig sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.events.xml#IMEEvent/IME_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_COMPOSITION</linktext></link><link href="flash.events.xml#IMEEvent/IME_START_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_START_COMPOSITION</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:IMEEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des IMEEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues IMEEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen. 
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des IMEEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IMEEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des IMEEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des IMEEvent-Objekts enthält.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt eine Zeichenfolge zurück, die alle Eigenschaften des IMEEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[IMEEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:IMEEvent:IME_COMPOSITION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IME_COMPOSITION</apiName><shortdesc class="- topic/shortdesc ">
	 Definiert den Wert der Eigenschaft type eines imeComposition-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">imeComposition</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">imeComposition</codeph>-Ereignisobjekts. 
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das IME-Objekt.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></apiValue><apiValue id="flash.events:IMEEvent:IME_START_COMPOSITION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IME_START_COMPOSITION</apiName><shortdesc class="- topic/shortdesc ">
	  Um IME-Texteingaben zu verarbeiten, muss der Empfänger das imeClient-Feld des Ereignisses auf ein Objekt einstellen, das die IIMEClient-Schnittstelle implementiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">imeStartComposition</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Um IME-Texteingaben zu verarbeiten, muss der Empfänger das <codeph class="+ topic/ph pr-d/codeph ">imeClient</codeph>-Feld des Ereignisses auf ein Objekt einstellen, das die IIMEClient-Schnittstelle implementiert. Wenn <codeph class="+ topic/ph pr-d/codeph ">imeClient</codeph> nicht eingestellt wird, verwendet die Laufzeitumgebung stattdessen den Out-of-Line-IME-Satz und sendet den endgültigen Satz als TEXT_INPUT-Ereignis.
	 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das IME-Objekt.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></apiValue><apiValue id="flash.events:IMEEvent:imeClient:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">imeClient</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt ein Objekt an, das die IMEClient- Schnittstelle implementiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.ime:IIMEClient</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt ein Objekt an, das die IMEClient- Schnittstelle implementiert. Komponenten, die auf dem flash.text.engine-Paket basieren, müssen diese Schnittstelle implementieren, um die Bearbeitung von Text in der Zeile („inline“) mit einem IME zu unterstützen.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DataEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein Objekt löst ein DataEvent-Objekt aus, wenn Grunddaten fertig geladen wurden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für DataEvent-Ereignisse.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein Objekt löst ein DataEvent-Objekt aus, wenn Grunddaten fertig geladen wurden. Es gibt zwei Arten von Datenereignissen: 
<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DataEvent.DATA</codeph>: wird bei gesendeten oder empfangenen Daten ausgelöst.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DataEvent.UPLOAD_COMPLETE_DATA</codeph>: wird bei gesendeten Daten oder bei Antwort des Servers ausgelöst.</li></ul>

</apiDesc><example conref="examples\DataEventExample.as" class="- topic/example "> Im folgenden Beispiel wird ein XMLSocket erstellt und eine Verbindung mit einem Socket-Server an Port 8080 von <codeph class="+ topic/ph pr-d/codeph ">yourDomain</codeph> hergestellt. Dem XMLSocket-Objekt wird ein Ereignis-Listener zugewiesen, der auf <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Ereignisse wartet. Diese Ereignisse werden beim Empfang von unformatierten Daten ausgelöst.
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Hinweise:</b> 
 <ul class="- topic/ul "><li class="- topic/li ">Um in diesem Beispiel ein <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignis zu generieren, müssen Sie „Sicherheit bei lokaler Wiedergabe“ auf „Nur auf Netzwerk zugreifen“ setzen, um die SWF-Datei zu kompilieren.</li><li class="- topic/li ">Sie benötigen einen Server, der auf [ <codeph class="+ topic/ph pr-d/codeph ">yourDomain</codeph> ] ausgeführt wird und über Port 8080 angeschlossen ist.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.DataEvent;
    import flash.net.XMLSocket;

    public class DataEventExample extends Sprite {
        private var hostName:String = "[yourDomain]";
        private var port:uint = 8080;
        private var socket:XMLSocket;

        public function DataEventExample() {
            socket = new XMLSocket();
            socket.addEventListener(DataEvent.DATA, dataHandler);
            socket.connect(hostName, port);
        }

        private function dataHandler(event:DataEvent):void {
            trace("dataHandler: " + event.data);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket</linktext></link></related-links><adobeApiEvent id="flash.events:DataEvent:DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DataEvent:DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.data</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DataEvent:UPLOAD_COMPLETE_DATA_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DataEvent:UPLOAD_COMPLETE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:uploadCompleteData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.uploadCompleteData</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DataEvent:DataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DataEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Datenereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Datenereignisses: <codeph class="+ topic/ph pr-d/codeph ">DataEvent.DATA</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die in Flash Player oder Adobe AIR geladenen Grunddaten. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">data</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für DataEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Datenereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket</linktext></link><link href="flash.events.xml#DataEvent/DATA" class="- topic/link "><linktext class="- topic/linktext ">DataEvent.DATA</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:DataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des DataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues DataEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des DataEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des DataEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des DataEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des DataEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DataEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> data=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DataEvent:DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DATA</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines Datenereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">data</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">data</codeph>-Ereignisobjekts.  
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Die in Flash Player oder Adobe AIR geladenen Grunddaten. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das XMLSocket-Objekt, das Daten empfängt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.data</linktext></link></related-links></apiValue><apiValue id="flash.events:DataEvent:UPLOAD_COMPLETE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPLOAD_COMPLETE_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft type eines uploadCompleteData-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uploadCompleteData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">uploadCompleteData</codeph>-Ereignisobjekts.
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Die unformatierten Daten, die nach einem erfolgreichen Datei-Upload vom Server zurückgegeben werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das FileReference-Objekt, das nach einem erfolgreichen Upload Daten empfängt.</entry></row></tbody></tgroup></adobetable>
	
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:uploadCompleteData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.uploadCompleteData</linktext></link></related-links></apiValue><apiValue id="flash.events:DataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
	Die in Flash Player oder Adobe AIR geladenen Grunddaten. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die in Flash Player oder Adobe AIR geladenen Grunddaten. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SecurityErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Ein Objekt löst ein SecurityErrorEvent-Objekt aus, um das Auftreten eines Sicherheitsfehlers zu melden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für SecurityErrorEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Ein Objekt löst ein SecurityErrorEvent-Objekt aus, um das Auftreten eines Sicherheitsfehlers zu melden. Sicherheitsfehler, die über diese Klasse gemeldet werden, werden im Allgemeinen von asynchronen Vorgängen erzeugt, z. B. dem Laden von Daten, in denen Sicherheitsverletzungen nicht sofort festgestellt werden können. Ihr Ereignis-Listener kann auf die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> eines Objekts zugreifen, um festzustellen, welche Operation versucht wurde und welche URLs involviert waren. Gibt es keine Ereignis-Listener, zeigt <ph class="- topic/ph ">die Debugger-Version von Flash Player oder </ph>die AIR Debug Launcher (ADL)-Anwendung automatisch eine Fehlermeldung mit dem Inhalt der <codeph class="+ topic/ph pr-d/codeph ">text</codeph>-Eigenschaft an. Es gibt nur einen Typ eines Sicherheitsfehler-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph>.

<p class="- topic/p ">Sicherheitsfehler-Ereignisse sind finale Ereignisse, die von einem beliebigen Zielobjekt gesendet werden können. Dies bedeutet, dass andere Ereignisse, einschließlich generischer Fehlerereignisse, nicht für ein Zielobjekt gesendet werden, bei dem ein Sicherheitsfehler auftritt.</p>

</apiDesc><example conref="examples\SecurityErrorEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klasse <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEventExample</codeph> erläutert, wie die Listener-Methode <codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph> instanziiert und für auszulösende <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignisse konfiguriert werden kann. Dieses Ereignis tritt ein, wenn sich ein <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph>-Speicherort nicht in genau der gleichen Domäne wie die aufrufende SWF-Datei befindet und in der angeforderten Domäne kein domänenübergreifender Zugriff über eine entsprechende Richtliniendatei eingerichtet ist.
 <p class="- topic/p ">Ersetzen Sie zur Erstellung eines <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent</codeph> die Adresse <codeph class="+ topic/ph pr-d/codeph ">http://www.[yourdomain].com</codeph> durch einen Pfad, für den kein domänenübergreifender Zugriff eingerichtet wurde.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.SecurityErrorEvent;

    public class SecurityErrorEventExample extends Sprite {
        public function SecurityErrorEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);

            var request:URLRequest = new URLRequest("http://www.[yourDomain].com");
            loader.load(request);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security" class="- topic/link "><linktext class="- topic/linktext ">Security-Klasse</linktext></link><link href="flash.events.xml#SecurityErrorEvent/SECURITY_ERROR" class="- topic/link "><linktext class="- topic/linktext ">SECURITY_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:SecurityErrorEvent:SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>(at)see flash.display.LoaderInfo#event:securityError
	</internal></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SecurityErrorEvent:SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.securityError</linktext></link><link href="flash.net.xml#LocalConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.securityError</linktext></link><link href="flash.net.xml#NetConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.securityError</linktext></link><link href="flash.net.xml#Socket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.securityError</linktext></link><link href="flash.net.xml#URLLoader/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.securityError</linktext></link><link href="flash.net.xml#URLStream/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.securityError</linktext></link><link href="flash.net.xml#XMLSocket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.securityError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SecurityErrorEvent:SecurityErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SecurityErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Event-Objekt, das Informationen über Sicherheitsfehler-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines Fehlerereignisses: <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der als Fehlermeldung anzuzeigende Text. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">text</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Verweisnummer, die dem spezifischen Fehler zugeordnet ist. 
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für SecurityErrorEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Event-Objekt, das Informationen über Sicherheitsfehler-Ereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SecurityErrorEvent/SECURITY_ERROR" class="- topic/link "><linktext class="- topic/linktext ">SECURITY_ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SecurityErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des SecurityErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues securityErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des SecurityErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SecurityErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des SecurityErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des SecurityErrorEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des SecurityErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[securityErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i> errorID=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph> Die <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph>-Eigenschaft ist nur in Adobe AIR verfügbar</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SecurityErrorEvent:SECURITY_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SECURITY_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Die Konstante SecurityErrorEvent.SECURITY_ERROR definiert den Wert der type-Eigenschaft eines securityError-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>(at)see flash.display.LoaderInfo#event:securityError
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">securityError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Konstante <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Netzwerkobjekt, das den Sicherheitsfehler ausgibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Der als Fehlermeldung anzuzeigende Text.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.securityError</linktext></link><link href="flash.net.xml#LocalConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.securityError</linktext></link><link href="flash.net.xml#NetConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.securityError</linktext></link><link href="flash.net.xml#Socket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.securityError</linktext></link><link href="flash.net.xml#URLLoader/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.securityError</linktext></link><link href="flash.net.xml#URLStream/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.securityError</linktext></link><link href="flash.net.xml#XMLSocket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.securityError</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:UncaughtErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Ein UncaughtErrorEvent-Objekt wird von einer Instanz der UncaughtErrorEvents-Klasse abgesetzt, wenn ein nicht erfasster Fehler auftritt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ein UncaughtErrorEvent-Objekt wird von einer Instanz der UncaughtErrorEvents-Klasse abgesetzt, wenn ein nicht erfasster Fehler auftritt. Fehler werden nicht erfasst, wenn sie außerhalb von <codeph class="+ topic/ph pr-d/codeph ">try..catch</codeph>-Blöcken ausgegeben werden, oder wenn ein ErrorEvent-Objekt ausgelöst wird, aber keine registrierten Listener vorhanden sind. Die Funktionalität für nicht erfasste Fehlerereignisse wird häufig als „globale Fehlerprozedur“ bezeichnet.
	 
	 <p class="- topic/p ">Das UncaughtErrorEvents-Objekt, welches das Ereignis absetzt, ist entweder mit einem LoaderInfo-Objekt oder mit einem Loader-Objekt verknüpft. Mit den folgenden Eigenschaften können Sie auf eine UncaughtErrorEvents-Instanz zugreifen:</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in derselben SWF-Datei definiert ist.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph>: zum Erkennen nicht erfasster Fehler im Code, der in der SWF-Datei definiert ist, die von einem Loader-Objekt geladen wird.</li></ul>
	 
	 <p class="- topic/p ">Wenn ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis auftritt, wird die Ausführung in dem Aufruf-Stack, der den Fehler verursacht hat, nicht fortgesetzt, selbst wenn das Ereignis verarbeitet wird. Falls es sich bei dem Fehler um einen synchronen Fehler handelt, wird Code, der in der Funktion verbleibt, in der der Fehler aufgetreten ist, nicht ausgeführt. Infolgedessen ist es wahrscheinlich, dass sich Ihre Anwendung in einem instabilen Zustand befindet, wenn ein nicht erfasster Fehler auftritt. Da ein nicht erfasster Fehler viele Ursachen haben kann, ist es unmöglich vorherzusagen, welche Funktionen verfügbar sind. Ihre Anwendung kann zum Beispiel in der Lage sein, Netzwerkoperationen oder Dateioperationen auszuführen. Diese Operationen stehen jedoch nicht unbedingt zur Verfügung.</p>
	 
	 <p class="- topic/p ">Wenn eine SWF-Datei eine andere lädt, steigen <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignisse durch die LoaderInfo-Hierarchie nach unten und wieder nach oben. Angenommen, A.sfw lädt B.swf mithilfe einer Loader-Instanz. Wenn ein nicht erfasster Fehler in B.swf auftritt, wird ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis in der folgenden Reihenfolge an LoaderInfo- und Loader-Objekte abgesetzt:</p>
	 
	 <ol class="- topic/ol "><li class="- topic/li ">(Erfassungsphase) LoaderInfo von A.swf </li><li class="- topic/li ">(Erfassungsphase) Loader in A.swf</li><li class="- topic/li ">(Zielphase) LoaderInfo von B.swf </li><li class="- topic/li ">(Bubbling-Phase) Loader in A.swf</li><li class="- topic/li ">(Bubbling-Phase) LoaderInfo von A.swf </li></ol>
	 
	 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph>-Eigenschaft eines Loader-Objekts setzt nie ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvent</codeph>-Ereignis in der Zielphase ab. Sie setzt das Ereignis nur in den Erfassungs- und Bubblingphasen ab.</p>
	 
	 <p class="- topic/p ">Wie bei anderen Ereignis-Bubblings beendet der Aufruf von <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph> das Absetzen des Ereignisses an andere Listener, allerdings mit einem wichtigen Unterschied. Das UncaughtErrorEvents-Objekt eines Loader-Objekts wird zum Zweck der Ereignispropagierung als ein Paar mit dem <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph>-Objekt der geladenen SWF-Datei behandelt. Wenn ein mit einem dieser Objekte registrierter Listener die <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph>-Methode aufruft, werden Ereignisse immer noch an andere Listener abgesetzt, die mit diesem UncaughtErrorEvents-Objekt registriert sind, <i class="+ topic/ph hi-d/i ">und</i> an Listener, die mit seinem UncaughtErrorEvents-Partnerobjekt registriert sind, bevor die Ereignispropagierung endet. Die <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph>-Methode verhindert weiterhin, dass Ereignisse an alle zusätzlichen Listener abgesetzt werden.</p>
	 
	 <p class="- topic/p ">Wenn Inhalt in einer Debugger-Version der Laufzeitumgebung ausgeführt wird, zum Beispiel in der Debugger-Version von Flash Player oder im AIR Debug Launcher (ADL), wird ein Dialogfeld angezeigt, wenn ein nicht erfasster Fehler auftritt. Für diese Laufzeitumgebungsversionen wird das Fehlerdialogfeld auch dann angezeigt, wenn ein Listener für das <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis registriert ist. Um zu verhindern, dass das Dialogfeld in einer solchen Situation angezeigt wird, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode des UncaughtErrorEvent-Objekts auf.</p>
	 
	 <p class="- topic/p ">Wenn es sich bei dem von einem Loader-Objekt geladenen Inhalt um eine AVM1 (ActionScript 2)-SWF-Datei handelt, führen nicht erfasste Fehler in der AVM1-SWF-Datei nicht zu einem <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis. Außerdem führen JavaScript-Fehler in HTML-Inhalten, die in ein HTMLLoader-Objekt (einschließlich eines Flex-HTML-Steuerungselements) geladen werden, nicht zu einem <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis.</p>
	 
	 </apiDesc><example conref="examples\UncaughtErrorEventExample.1.as" class="- topic/example "> Das folgende Beispiel veranschaulicht die Verwendung einer Ereignisprozedur für nicht erfasste Fehler, um nicht erfasste Fehler in einem ActionScript-Projekt zu erkennen. Im Beispiel wird eine <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignisprozedur definiert, um nicht erfasste Fehler zu erkennen. Es stellt auch eine Schaltfläche bereit, die einen Fehler ausgibt, wenn auf sie geklickt wird. Dieser Fehler wird von der Ereignisprozedur für nicht erfasste Fehler erkannt.
 
 <p class="- topic/p ">Im Konstruktor registriert der Code einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis, das von der <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph>-Eigenschaft des LoaderInfo-Objekts abgesetzt wird.</p>
 
 <p class="- topic/p ">In der <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorHandler()</codeph>-Methode überprüft der Code den Datentyp der <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft und reagiert entsprechend.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.ErrorEvent;
    import flash.events.MouseEvent;
    import flash.events.UncaughtErrorEvent;

    public class UncaughtErrorEventExample extends Sprite
    {
        public function UncaughtErrorEventExample()
        {
            loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
            
            drawUI();
        }
        
        private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
        {
            if (event.error is Error)
            {
                var error:Error = event.error as Error;
                // do something with the error
            }
            else if (event.error is ErrorEvent)
            {
                var errorEvent:ErrorEvent = event.error as ErrorEvent;
                // do something with the error
            }
            else
            {
                // a non-Error, non-ErrorEvent type was thrown and uncaught
            }
        }
        
        private function drawUI():void
        {
            var btn:Sprite = new Sprite();
            btn.graphics.clear();
            btn.graphics.beginFill(0xFFCC00);
            btn.graphics.drawRect(0, 0, 100, 50);
            btn.graphics.endFill();
            addChild(btn);
            btn.addEventListener(MouseEvent.CLICK, clickHandler);
        }
        
        private function clickHandler(event:MouseEvent):void
        {
            throw new Error("Gak!");
        }
    }
}
</codeblock></example><example conref="examples\UncaughtErrorEventExample.1.5.as" class="- topic/example "> Das folgende Beispiel ist die Flex-Entsprechung des vorstehenden Beispiels, wobei ein MXML-Dokument anstelle einer ActionScript-Klasse als Stamminhalt verwendet wird.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
                       xmlns:s="library://ns.adobe.com/flex/spark" 
                       xmlns:mx="library://ns.adobe.com/flex/halo"
                       applicationComplete="applicationCompleteHandler();">
    
    &lt;fx:Script>
        &lt;![CDATA[
            import flash.events.ErrorEvent;
            import flash.events.MouseEvent;
            import flash.events.UncaughtErrorEvent;
            
            private function applicationCompleteHandler():void
            {
                loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
            }
    
            private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
            {
                if (event.error is Error)
                {
                    var error:Error = event.error as Error;
                    // do something with the error
                }
                else if (event.error is ErrorEvent)
                {
                    var errorEvent:ErrorEvent = event.error as ErrorEvent;
                    // do something with the error
                }
                else
                {
                    // a non-Error, non-ErrorEvent type was thrown and uncaught
                }
            }
            
            private function clickHandler(event:MouseEvent):void
            {
                throw new Error("Gak!");
            }
        ]]&gt;
    &lt;/fx:Script>
      
    &lt;s:Button label="Cause Error" click="clickHandler(event);"/>
&lt;/s:WindowedApplication>
</codeblock></example><example conref="examples\UncaughtErrorEventExample.2.as" class="- topic/example "> Das folgende Beispiel veranschaulicht die Verwendung einer Ereignisprozedur für nicht erfasste Fehler, um nicht erfasste Fehler in einer geladenen SWF-Datei zu erkennen. Im Beispiel wird eine <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignisprozedur definiert, um nicht erfasste Fehler zu erkennen.
 
 <p class="- topic/p ">Im Konstruktor erstellt der Code ein Loader-Objekt und registriert einen Listener für das <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis, das von der <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph>-Eigenschaft des Loader-Objekts abgesetzt wird.</p>
 
 <p class="- topic/p ">In der <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorHandler()</codeph>-Methode überprüft der Code den Datentyp der <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft und reagiert entsprechend.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Loader;
    import flash.display.Sprite;
    import flash.events.ErrorEvent;
    import flash.events.UncaughtErrorEvent;
    import flash.net.URLRequest;

    public class LoaderUncaughtErrorEventExample extends Sprite
    {
        private var ldr:Loader;
        
        public function LoaderUncaughtErrorEventExample()
        {
            ldr = new Loader();
            ldr.load(new URLRequest("child.swf"));
            ldr.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
        }
        
        private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
        {
            if (event.error is Error)
            {
                var error:Error = event.error as Error;
                // do something with the error
            }
            else if (event.error is ErrorEvent)
            {
                var errorEvent:ErrorEvent = event.error as ErrorEvent;
                // do something with the error
            }
            else
            {
                // a non-Error, non-ErrorEvent type was thrown and uncaught
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link><link href="flash.events.xml#UncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvents</linktext></link></related-links><adobeApiEvent id="flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR_uncaughtError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:UncaughtErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:UncaughtErrorEvent:UncaughtErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt ein UncaughtErrorEvent-Objekt, das Informationen über ein uncaughtError-Ereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ereignistyp.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen. 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error_in</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Objekt, das mit dem Fehler verknüpft ist, der nicht erfasst oder verarbeitet wurde (unter normalen Umständen ein Error- oder ErrorEvent-Objekt).
		 
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für UncaughtErrorEvent-Objekte.
		 
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt ein UncaughtErrorEvent-Objekt, das Informationen über ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignise enthält.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:UncaughtErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine Kopie des UncaughtErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues UncaughtErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine Kopie des UncaughtErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:UncaughtErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt einen String zurück, der alle Eigenschaften des UncaughtErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des UncaughtErrorEvent-Objekts enthält.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt einen String zurück, der alle Eigenschaften des UncaughtErrorEvent-Objekts enthält. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCAUGHT_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	     Definiert den Wert der type-Eigenschaft eines uncaughtError-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncaughtError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignisobjekts.
		 <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; das Abbrechen des Ereignisses verhindert, dass das Dialogfeld für nicht erfasste Fehler in Debugger-Versionen der Laufzeitumgebung angezeigt wird</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">Der nicht erfasste Fehler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das LoaderInfo-Objekt, das mit der SWF-Datei verknüpft ist, in der der Fehler aufgetreten ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Textfehlermeldung.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:UncaughtErrorEvent:error:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
		 Das Fehlerobjekt, das mit dem nicht erfassten Fehler verknüpft ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Fehlerobjekt, das mit dem nicht erfassten Fehler verknüpft ist. Normalerweise weist das Objekt einen der folgenden Datentypen auf:
		 
		 <ul class="- topic/ul "><li class="- topic/li ">Eine Error-Instanz (oder eine ihrer Unterklassen), wenn der nicht erfasste Fehler ein synchroner Fehler ist, der von einer <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung erstellt wird, zum Beispiel ein Fehler, der mit einem <codeph class="+ topic/ph pr-d/codeph ">try..catch</codeph>-Block hätte erfasst werden können.</li><li class="- topic/li ">Eine Error-Instanz (oder eine ihrer Unterklassen), wenn der nicht erfasste Fehler ein asynchroner Fehler ist, der ein Fehlerereignis absetzt, wenn der Fehler auftritt</li></ul>
		 
		 <p class="- topic/p ">Die <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft kann jedoch ein Objekt jedes Datentyps sein. ActionScript erfordert keine <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung, die nur mit Error-Objekten verwendet wird. Der folgende Code ist zum Beispiel sowohl zur Kompilierungszeit als auch zur Laufzeit zulässig:</p>
		 
		 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">throw new Sprite()</codeblock>
		 
		 <p class="- topic/p ">Wenn diese <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung nicht durch einen <codeph class="+ topic/ph pr-d/codeph ">try..catch</codeph>-Block erfasst wird, löst die <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung ein <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Ereignis aus. In diesem Fall ist die <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft des UncaughtErrorEvent-Objekts, das abgesetzt wird, das Sprite-Objekt, das in der <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>-Anweisung konstruiert wird.</p>
		 
		 <p class="- topic/p ">Demzufolge sollten Sie in Ihrem <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>-Listener den Datentyp der <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft überprüfen. Diese Überprüfung wird im folgenden Beispiel veranschaulicht:</p>
		 
         <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 function uncaughtErrorHandler(event:UncaughtErrorEvent):void
         {
             var message:String;
             
             if (event.error is Error)
             {
                 message = Error(event.error).message;
             }
             else if (event.error is ErrorEvent)
             {
                 message = ErrorEvent(event.error).text;
             }
             else
             {
                 message = event.error.toString();
             }
         }</codeblock>
		 
         
		 
		 <p class="- topic/p ">Wenn die <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft eine Error-Instanz (oder Error-Unterklasse) enthält, variieren die verfügbaren Fehlerinformationen abhängig von der Version der Laufzeitumgebung, in der der Inhalt ausgeführt wird. Die folgende Funktionalität ist nur verfügbar, wenn Inhalt in einer Debugger-Version der Laufzeitumgebung ausgeführt wird, zum Beispiel in der Debug-Version von Flash Player oder im AIR Debug Launcher (ADL):</p>
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Error.getStackTrace()</codeph>, um den Aufruf-Stack abzurufen, der zu dem Fehler geführt hat. In Nicht-Debugger-Versionen der Laufzeitumgebung gibt diese Methode <codeph class="+ topic/ph pr-d/codeph ">null</codeph> zurück. Beachten Sie, dass Aufruf-Stack-Informationen nie verfügbar sind, wenn die <codeph class="+ topic/ph pr-d/codeph ">error</codeph>-Eigenschaft eine ErrorEvent-Instanz ist.</li><li class="- topic/li ">Vollständiger <codeph class="+ topic/ph pr-d/codeph ">Error.message</codeph>-Text. In Nicht-Debugger-Versionen der Laufzeitumgebung enthält diese Eigenschaft eine Kurzversion der Fehlermeldung, häufig eine Kombination aus den <codeph class="+ topic/ph pr-d/codeph ">Error.errorID</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">Error.name</codeph>-Eigenschaften.</li></ul>
		 
		 <p class="- topic/p ">Alle anderen Eigenschaften und Methoden der Error-Klasse sind in allen Versionen der Laufzeitumgebung verfügbar.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:InvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Das NativeApplication-Objekt einer AIR-Anwendung löst ein invoke-Ereignis aus, wenn die Anwendung aufgerufen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom NativeApplication-Objekt abgesetzt, wenn eine AIR-Anwendung über das Betriebssystem aufgerufen wird.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das NativeApplication-Objekt einer AIR-Anwendung löst ein <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis aus, wenn die Anwendung aufgerufen wird. 
	 
	 <p class="- topic/p ">Das NativeApplication-Objekt löst ein <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis immer dann aus, wenn eine Anwendung gestartet wird. Das Ereignis kann aber auch zu anderen Zeitpunkten ausgelöst werden. Eine laufende Anwendung löst zum Beispiel ein zusätzliches InvokeEvent-Ereignis aus, wenn ein Benutzer eine mit der Anwendung verknüpfte Datei aktiviert.</p>
	 
	 <p class="- topic/p ">Es kann jeweils nur eine Instanz einer bestimmten Anwendung gestartet werden. Bei nachfolgenden Versuchen, die Anwendung zu starten, löst das NativeApplication-Objekt der laufenden Instanz ein neues <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis aus. Die Anwendung ist dafür zuständig, dieses Ereignis zu verarbeiten und die entsprechende Aktion auszuführen, zum Beispiel ein neues Anwendungsfenster zum Anzeigen der Daten in der Datei zu öffnen.</p>
	  
	 <p class="- topic/p ">InvokeEvent-Objekte werden vom NativeApplication-Objekt (<codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph>) ausgelöst. Um <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignisse zu erhalten, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode des NativeApplication-Objekts auf. Wenn ein Ereignis-Listener für ein <codeph class="+ topic/ph pr-d/codeph ">invoke-</codeph>Ereignis registriert wird, empfängt er auch alle <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignisse, die vor der Registrierung aufgetreten sind. Diese früheren Ereignisse werden nach der Rückgabe des Aufrufs von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ausgelöst, jedoch nicht unbedingt vor einem neuen <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis, das möglicherweise nach der Registrierung ausgelöst wird. Sie sollten sich also nicht auf eine bestimmte Auslösereihenfolge verlassen.</p> 
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#BrowserInvokeEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.BrowserInvokeEvent</linktext></link><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links><adobeApiEvent id="flash.events:InvokeEvent:INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:InvokeEvent:INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:InvokeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die type-Konstante für flash.events.InvokeEvent-Ereignisse.
	 </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:InvokeEvent:InvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Die Konstruktorfunktion für die InvokeEvent-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses, auf den als <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph> zugegriffen werden kann.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> eingestellt für ein InvokeEvent-Objekt.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> eingestellt für ein InvokeEvent-Objekt.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dir</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Ordner, der verwendet werden sollte, um relative Pfade im <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Array aufzulösen.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">argv</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array von Argumenten (Strings), die an die Anwendung zu übergeben sind.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">reason</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">standard</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">die Ursache des Ereignisses; entweder <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.LOGIN</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.STANDARD</codeph>. (Dieser Parameter ist ab AIR 1.5.1 verfügbar.) 
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Konstruktorfunktion für die InvokeEvent-Klasse.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:InvokeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine neue Kopie dieses Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Kopie des Ereignisses.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine neue Kopie dieses Ereignisses.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:InvokeEvent:INVOKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVOKE</apiName><shortdesc class="- topic/shortdesc ">
	 Die InvokeEvent.INVOKE-Konstante definiert den Wert der type-Eigenschaft eines InvokeEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invoke</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Die type-Konstante für flash.events.InvokeEvent-Ereignisse.
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent.INVOKE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines InvokeEvent-Objekts.
	 
     <p class="- topic/p ">Das InvokeEvent-Ereignisobjekt hat folgende Eigenschaften:</p>
 	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Arguments</codeph></entry><entry class="- topic/entry ">Das Array von Stringargumenten, die während dieses Aufrufs übergeben werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentDirectory</codeph></entry><entry class="- topic/entry ">ein File-Objekt, das den Ordner darstellt, der für die Auflösung relativer Pfade im Argumentarray verwendet wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">reason</codeph></entry><entry class="- topic/entry ">ein Code, der angibt, ob das invoke-Ereignis ausgelöst wurde, weil die Anwendung beim Anmelden automatisch gestartet wurde (<codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.LOGIN</codeph>), oder aus einem anderen Grund (<codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.STANDARD</codeph>). Verfügbar ab AIR 1.5.1.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, welches das InvokeEvent -Objekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Immer das NativeApplication-Objekt. 
	    </entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiValue><apiValue id="flash.events:InvokeEvent:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
		 Das Array von Stringargumenten, die während dieses Aufrufs übergeben werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Das Array von Stringargumenten, die während dieses Aufrufs übergeben werden. Wenn es sich um einen Befehlszeilenaufruf handelt, enthält das Array die Befehlszeilenargumente (<i class="+ topic/ph hi-d/i ">ohne</i> den Prozessnamen).
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Hinweis:</i> Wenn unter Mac<sup class="+ topic/ph hi-d/sup ">®</sup> OS X mehrere Dateien ausgewählt und geöffnet wurden, löst AIR ein einzelnes <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis aus, das im <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Array die Namen aller ausgewählten Dateien enthält. Unter Windows<sup class="+ topic/ph hi-d/sup ">®</sup> und Linux löst AIR hingegen ein separates <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>-Ereignis für jede ausgewählte Datei aus, das nur den jeweiligen Dateinamen im <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Array enthält.
		 </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:InvokeEvent:currentDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDirectory</apiName><shortdesc class="- topic/shortdesc ">
		 Der Ordner, der verwendet werden sollte, um relative Pfade im Argument-Array aufzulösen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Der Ordner, der verwendet werden sollte, um relative Pfade im <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Array aufzulösen. 
		 
		 <p class="- topic/p ">Wenn eine Anwendung von der Befehlszeile aus gestartet wird, ist die Eigenschaft normalerweise auf das aktuelle Arbeitsverzeichnis der Befehlszeilen-Shell eingestellt, von der aus die Anwendung gestartet wurde. Wenn eine Anwendung von der GUI-Shell aus gestartet wird, wird für diese Eigenschaft normalerweise das erste Systemstammverzeichnis verwendet.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:InvokeEvent:reason:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">reason</apiName><shortdesc class="- topic/shortdesc ">
		 Die Ursache für dieses InvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Ursache für dieses InvokeEvent. Diese Eigenschaft gibt an, ob die Anwendung vom Benutzer manuell oder beim Anmelden automatisch gestartet wurde. Mögliche Werte werden als Konstanten in der <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason</codeph>-Klasse aufgelistet.
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">InvokeEventReason-Konstante</entry><entry class="- topic/entry ">Bedeutung</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LOGIN</codeph></entry><entry class="- topic/entry ">Wurde bei der Anmeldung automatisch gestartet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">STANDARD</codeph></entry><entry class="- topic/entry ">Wurde aufgrund anderer Ursachen gestartet.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ScreenMouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ScreenMouseEvent</apiName><shortdesc class="- topic/shortdesc ">
Das SystemTrayIcon-Objekt löst als Reaktion auf eine Interaktion mit der Maus Ereignisse vom Typ ScreenMouseEvent aus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekt für ScreenMouseEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Das SystemTrayIcon-Objekt löst als Reaktion auf eine Interaktion mit der Maus Ereignisse vom Typ ScreenMouseEvent aus.

<p class="- topic/p ">Das ScreenMouseEvent-Objekt erweitert die MouseEvent-Klasse, sodass zwei weitere Eigenschaften bereitgestellt werden, <codeph class="+ topic/ph pr-d/codeph ">screenX</codeph> und <codeph class="+ topic/ph pr-d/codeph ">screenY</codeph>, die die Mauskoordinaten in Relation zum primären Desktopbildschirm anstatt zu einem Anwendungsfenster oder der Bühne protokollieren.</p>
 
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link><link href="flash.display.xml#Screen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Screen</linktext></link></related-links><adobeApiEvent id="flash.events:ScreenMouseEvent:CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem SystemTrayIcon-Objekt abgesetzt, wenn auf das Symbol geklickt wird.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN_rightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:ScreenMouseEvent:ScreenMouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ScreenMouseEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein ScreenMouseEvent-Objekt, das die Mausposition in Bildschirmkoordinaten enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die X-Position des Klicks in Bildschirmkoordinaten. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Y-Position des Klicks in Bildschirmkoordinaten. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">screenX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> eingestellt, da Bildschirmmausereignisse nie fortgesetzt werden. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">screenY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Auf <codeph class="+ topic/ph pr-d/codeph ">false</codeph> eingestellt, da es kein Standardverhalten gibt, das abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Unter Windows und Linux wird damit angezeigt, ob die Strg-Taste beim Auslösen dieses Ereignisses gedrückt war. Unter Mac OS wird damit angezeigt, ob die Ctrl-Taste oder die Befehlstaste gedrückt war.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mit der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> wird angegeben, dass die Alt-Taste gedrückt war, als dieses Ereignis auftrat.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mit der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> wird angegeben, dass die Umschalttaste gedrückt war, als dieses Ereignis auftrat.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">buttonDown</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mit der Einstellung <codeph class="+ topic/ph pr-d/codeph ">true</codeph> wird angegeben, dass eine Maustaste gedrückt war, als dieses Ereignis auftrat.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Befehlstaste gedrückt war (nur Mac).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Strg- oder Ctrl-Taste gedrückt war.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für ScreenMouseEvent-Objekte.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein ScreenMouseEvent-Objekt, das die Mausposition in Bildschirmkoordinaten enthält.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.display.xml#Screen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Screen</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ScreenMouseEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des ScreenMouseEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ScreenMouseEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des ScreenMouseEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ScreenMouseEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt einen String zurück, der alle Eigenschaften des ScreenMouseEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des ScreenMouseEvent-Objekts enthält.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt einen String zurück, der alle Eigenschaften des ScreenMouseEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ScreenMouseEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> status=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ScreenMouseEvent:CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.CLICK-Konstante definiert den Wert der type-Eigenschaft eines click-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">click</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird von einem SystemTrayIcon-Objekt abgesetzt, wenn auf das Symbol geklickt wird.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.CLICK</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.MOUSE_DOWN-Konstante definiert den Wert der type-Eigenschaft eines mouseDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.MOUSE_DOWN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">mouseDown </codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.MOUSE_UP-Konstante definiert den Wert der type-Eigenschaft eines mouseUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.MOUSE_UP</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.RIGHT_CLICK-Konstante definiert den Wert der type-Eigenschaft eines rightClick-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_CLICK</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightClick</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.RIGHT_MOUSE_DOWN-Konstante definiert den Wert der type-Eigenschaft eines rightMouseDown-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_MOUSE_DOWN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightMouseDown</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	Die ScreenMouseEvent.RIGHT_MOUSE_UP-Konstante definiert den Wert der type-Eigenschaft eines rightMouseUp-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_MOUSE_UP</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rightMouseUp</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden relevanten Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die primäre Maustaste gedrückt wird; andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Windows oder Linux, wenn die Strg-Taste aktiv ist. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Strg-Taste oder die Befehlstaste aktiv ist. Andernfalls wird <codeph class="+ topic/ph pr-d/codeph ">false</codeph> zurückgegeben.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> unter Mac OS, falls die Befehlstaste aktiviert ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie deaktiviert ist. Unter Windows immer <codeph class="+ topic/ph pr-d/codeph ">false</codeph> </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Strg- oder Ctrl-Taste aktiv ist; <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn sie nicht aktiv ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Die horizontale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Die vertikale Koordinate, bei der das Ereignis aufgetreten ist, in Bildschirmkoordinaten.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SystemTrayIcon-Objekt unter dem Zeigegerät.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:screenX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenX</apiName><shortdesc class="- topic/shortdesc ">
	Die X-Position des Klicks in Bildschirmkoordinaten. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die X-Position des Klicks in Bildschirmkoordinaten. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:screenY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenY</apiName><shortdesc class="- topic/shortdesc ">
	Die Y-Position des Klicks in Bildschirmkoordinaten. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Y-Position des Klicks in Bildschirmkoordinaten. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ContextMenuEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ContextMenuEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein InteractiveObject löst ein ContextMenuEvent-Objekt aus, wenn der Benutzer das Kontextmenü öffnet oder damit interagiert.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für ContextMenuEvent-Ereignisse.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein InteractiveObject löst ein ContextMenuEvent-Objekt aus, wenn der Benutzer das Kontextmenü öffnet oder damit interagiert. Es gibt zwei Arten von ContextMenuEvent-Objekten:
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_ITEM_SELECT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_SELECT</codeph></li></ul>
 
 </apiDesc><example conref="examples\ContextMenuEventExample.as" class="- topic/example "> Im folgenden Beispiel wird die Klasse <codeph class="+ topic/ph pr-d/codeph ">ContextMenuEventExample</codeph> zur Entfernung des Standard-Kontextmenüs von der Bühne und zum Hinzufügen eines neuen Menüpunkts, mit dem die Farbe eines Quadrats auf der Bühne geändert wird, verwendet. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 
 <ol class="- topic/ol "><li class="- topic/li ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">myContextMenu</codeph> wird deklariert, und anschließend wird ein neues ContextMenu-Objekt mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">redRectangle</codeph> (vom Typ "Sprite") deklariert.</li><li class="- topic/li ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">removeDefaultItems()</codeph> wird aufgerufen. Bei dieser Methode werden alle integrierten Kontextmenüelemente mit Ausnahme der Option zum Drucken entfernt.</li><li class="- topic/li ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">addCustomMenuItems()</codeph> wird aufgerufen. Bei dieser Methode wird das <codeph class="+ topic/ph pr-d/codeph ">defaultItems</codeph>-Array um eine Option <codeph class="+ topic/ph pr-d/codeph ">ReverseColours</codeph> zur Farbumkehr erweitert. Hierfür wird die <codeph class="+ topic/ph pr-d/codeph ">push()</codeph>-Methode "Array" eingesetzt. Ein <codeph class="+ topic/ph pr-d/codeph ">menuItemSelect</codeph>-Ereignis-Listener wird dem ContextMenuItem-Objekt hinzugefügt. Die verknüpfte Methode ist <codeph class="+ topic/ph pr-d/codeph ">menuItemSelectHandler()</codeph>. Bei dieser Methode werden einige <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>-Anweisungen gedruckt, wenn der Benutzer die Option zur Farbumkehr im Kontextmenü wählt. Außerdem wird das rote Quadrat schwarz und der schwarze Text rot.</li><li class="- topic/li ">Im Konstruktor wird ein <codeph class="+ topic/ph pr-d/codeph ">menuSelect</codeph>-Ereignis-Listener zusammen mit der verknüpften Methode <codeph class="+ topic/ph pr-d/codeph ">menuSelectHandler()</codeph> hinzugefügt. Hiermit werden drei <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>-Anweisungen gedruckt, wenn ein Element im Kontextmenü ausgewählt wird.</li><li class="- topic/li ">Der Konstruktor ruft die Methode <codeph class="+ topic/ph pr-d/codeph ">addChildren()</codeph> auf, mit der ein rotes Quadrat gezeichnet und der Anzeigeliste hinzugefügt wird. Das Quadrat wird sofort angezeigt.</li><li class="- topic/li ">Zum Schluss wird <codeph class="+ topic/ph pr-d/codeph ">myContextMenu</codeph> dem Kontextmenü der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">redRectangle</codeph> zugewiesen, sodass das benutzerdefinierte Kontextmenü nur angezeigt wird, wenn sich der Mauszeiger über dem Quadrat befindet.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.ui.ContextMenu;
    import flash.ui.ContextMenuItem;
    import flash.ui.ContextMenuBuiltInItems;
    import flash.events.ContextMenuEvent;
    import flash.display.Sprite;
    import flash.display.Shape;
    import flash.text.TextField;

    public class ContextMenuEventExample extends Sprite {
        private var myContextMenu:ContextMenu;
        private var menuLabel:String = "Reverse Colors";
        private var textLabel:String = "Right Click";
        private var redRectangle:Sprite;
        private var label:TextField;
        private var size:uint = 100;
        private var black:uint = 0x000000;
        private var red:uint = 0xFF0000;

        public function ContextMenuEventExample() {
            myContextMenu = new ContextMenu();
            removeDefaultItems();
            addCustomMenuItems();
            myContextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, menuSelectHandler);

            addChildren();
            redRectangle.contextMenu = myContextMenu;
        }

        private function addChildren():void {
            redRectangle = new Sprite();
            redRectangle.graphics.beginFill(red);
            redRectangle.graphics.drawRect(0, 0, size, size);
            addChild(redRectangle);
            redRectangle.x = size;
            redRectangle.y = size;
            label = createLabel();
            redRectangle.addChild(label);
        }

        private function removeDefaultItems():void {
            myContextMenu.hideBuiltInItems();
            var defaultItems:ContextMenuBuiltInItems = myContextMenu.builtInItems;
            defaultItems.print = true;
        }

        private function addCustomMenuItems():void {
            var item:ContextMenuItem = new ContextMenuItem(menuLabel);
            myContextMenu.customItems.push(item);
            item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItemSelectHandler);
        }

        private function menuSelectHandler(event:ContextMenuEvent):void {
            trace("menuSelectHandler: " + event);
        }

        private function menuItemSelectHandler(event:ContextMenuEvent):void {
            trace("menuItemSelectHandler: " + event);
            var textColor:uint = (label.textColor == black) ? red : black;
            var bgColor:uint = (label.textColor == black) ? black : red;
            redRectangle.graphics.clear();
            redRectangle.graphics.beginFill(bgColor);
            redRectangle.graphics.drawRect(0, 0, size, size);
            label.textColor = textColor;
        }

        private function createLabel():TextField {
            var txtField:TextField = new TextField();
            txtField.text = textLabel;
            return txtField;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu" class="- topic/link "><linktext class="- topic/linktext ">ContextMenu-Klasse</linktext></link><link href="flash.ui.xml#ContextMenuItem" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuItem-Klasse</linktext></link></related-links><adobeApiEvent id="flash.events:ContextMenuEvent:MENU_ITEM_SELECT_menuItemSelect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">menuItemSelect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ContextMenuEvent:MENU_ITEM_SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ContextMenuEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenuItem/event:menuItemSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenuItem.menuItemSelect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ContextMenuEvent:MENU_SELECT_menuSelect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">menuSelect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ContextMenuEvent:MENU_SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ContextMenuEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu/event:menuSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenu.menuSelect</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ContextMenuEvent:ContextMenuEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ContextMenuEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über Menüereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Folgende Werte sind möglich:
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_ITEM_SELECT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_SELECT</codeph></li></ul>
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mouseTarget</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Anzeigelistenobjekt, auf das der Benutzer mit rechts geklickt hat, um das Kontextmenü anzuzeigen. Hierbei kann es sich um <codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph> oder um eines seiner untergeordneten Elemente in der Anzeigeliste handeln.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">contextMenuOwner</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das Anzeigelistenobjekt, dem das Menü zugeordnet ist. Hierbei kann es sich um <codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph> oder um einen seiner Vorgänger in der Anzeigeliste handeln.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für ContextMenuEvent-Objekte.
 	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das bestimmte Informationen über Menüereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/MENU_ITEM_SELECT" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.MENU_ITEM_SELECT</linktext></link><link href="flash.events.xml#ContextMenuEvent/MENU_SELECT" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.MENU_SELECT</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ContextMenuEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des ContextMenuEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ContextMenuEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des ContextMenuEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ContextMenuEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ContextMenuEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des ContextMenuEvent-Objekts enthält.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ContextMenuEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph "> [ContextMenuEvent type= <i class="+ topic/ph hi-d/i ">value</i> bubbles= <i class="+ topic/ph hi-d/i ">value</i> cancelable= <i class="+ topic/ph hi-d/i ">value</i> ... contextMenuOwner= <i class="+ topic/ph hi-d/i ">value</i> ] </codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ContextMenuEvent:MENU_ITEM_SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MENU_ITEM_SELECT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft "type" eines menuItemSelect-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">menuItemSelect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">menuItemSelect</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, dem das Menü zugeordnet ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das der Benutzer mit rechts geklickt hat, um das Kontextmenü anzuzeigen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das ausgewählte ContextMenuItem-Objekt. Das Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenuItem/event:menuItemSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenuItem.menuItemSelect</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:MENU_SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MENU_SELECT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft "type" eines menuSelect-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">menuSelect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">menuSelect</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, dem das Menü zugeordnet ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph></entry><entry class="- topic/entry ">Das Anzeigelistenobjekt, auf das der Benutzer mit rechts geklickt hat, um das Kontextmenü anzuzeigen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das ContextMenu-Objekt, das angezeigt werden soll. Das Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu/event:menuSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenu.menuSelect</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:contextMenuOwner:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contextMenuOwner</apiName><shortdesc class="- topic/shortdesc ">
	Das Anzeigelistenobjekt, dem das Menü zugeordnet ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das Anzeigelistenobjekt, dem das Menü zugeordnet ist. Hierbei kann es sich um ein Mausziel (<codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph>) oder um einen seiner Vorgänger in der Anzeigeliste handeln.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ContextMenuEvent:isMouseTargetInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isMouseTargetInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Gibt an, ob die mouseTarget-Eigenschaft aus Sicherheitsgründen auf null gesetzt wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Gibt an, ob die <codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph>-Eigenschaft aus Sicherheitsgründen auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt wurde. Ist der Nominalwert von <codeph class="+ topic/ph pr-d/codeph ">menuTarget</codeph> ein Verweis auf ein <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> in einer anderen Sicherheitssandbox, wird <codeph class="+ topic/ph pr-d/codeph ">menuTarget</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt, es sei denn, die Berechtigung gilt über die Sandboxgrenzen hinweg für beide Richtungen. Die Berechtigung wird durch das Aufrufen von <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aus einer SWF-Datei hergestellt, oder indem vom Server der Bilddatei eine Richtliniendatei bereitgestellt und das <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph>-Flag beim Laden des Bilds gesetzt wird.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/mouseTarget" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.mouseTarget</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:mouseTarget:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mouseTarget</apiName><shortdesc class="- topic/shortdesc ">
	Das Anzeigelistenobjekt, auf das der Benutzer mit rechts geklickt hat, um das Kontextmenü anzuzeigen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Das Anzeigelistenobjekt, auf das der Benutzer mit rechts geklickt hat, um das Kontextmenü anzuzeigen. Hierbei kann es sich um das Anzeigelistenobjekt handeln, mit dem das Menü verknüpft ist (<codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph>), oder um eines seiner untergeordneten Elemente in der Anzeigeliste.
	<p class="- topic/p ">Der Wert dieser Eigenschaft kann in zwei Fällen <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sein: Wenn kein Mausziel vorhanden ist (beispielsweise, wenn Sie die Maus über den Hintergrund bewegen) oder wenn eines vorhanden ist, dieses aber eine Sicherheitssandbox ist, auf die Sie keinen Zugriff haben. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">isMouseTargetInaccessible()</codeph>-Eigenschaft, um festzustellen, welcher dieser Gründe zutrifft.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/isMouseTargetInaccessible" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.isMouseTargetInaccessible</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticateEvent</apiName><shortdesc class="- topic/shortdesc ">
    Ein NetStream-Objekt löst ein DRMAuthenticateEvent-Objekt aus, wenn versucht wird, DRM (digitales Rechtemanagement)-verschlüsselte Inhalte abzuspielen, die bei der Authentifizierung Benutzerdaten erfordern.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für DRM-fähige Objekte.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Ein NetStream-Objekt löst ein DRMAuthenticateEvent-Objekt aus, wenn versucht wird, DRM (digitales Rechtemanagement)-verschlüsselte Inhalte abzuspielen, die bei der Authentifizierung Benutzerdaten erfordern. 
	<p class="- topic/p ">
	Die DRMAuthenticateEvent-Prozedur ist zuständig für das Sammeln der erforderlichen Benutzerdaten (zum Beispiel Benutzernamen, Kennwort und Typ) und die Übergabe der Werte an die <codeph class="+ topic/ph pr-d/codeph ">NetStream.setDRMAuthenticationCredentials()</codeph>-Methode zur Authentifizierung. Jede AIR-Anwendung muss einen Mechanismus zur Verfügung stellen, mit dem die Benutzerdaten erhalten werden. Die Anwendung könnte dem Benutzer zum Beispiel eine einfache Benutzeroberfläche zur Eingabe des Benutzernamens und des Kennworts, optional auch des Typs, anzeigen.  
	</p> 
	<p class="- topic/p ">
	Wenn die Benutzerauthentifizierung fehlschlägt, startet die Anwendung einen neuen Versuch und löst ein neues DRMAuthenticateEvent-Ereignis für das NetStream-Objekts aus.
	</p>
	
	</apiDesc><example conref="examples\DRMAuthenticateEventExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.events.AsyncErrorEvent;
    import flash.events.NetStatusEvent;
    import flash.events.DRMAuthenticateEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class DRMAuthenticateEventExample extends Sprite
    {
        var videoURL:String = "Video.flv";
        var videoConnection:NetConnection;
        var videoStream:NetStream;
        var video:Video = new Video();            

        public function DRMAuthenticateEventExample()
        {
            videoConnection = new NetConnection();
            videoConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoConnection.connect(null);
        }

        private function connectStream():void {
            videoStream = new NetStream(videoConnection);
            videoStream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            videoStream.addEventListener(DRMAuthenticateEvent.DRM_AUTHENTICATE, drmAuthenticateEventHandler);
            video.attachNetStream(videoStream);
            videoStream.play(videoURL);
            addChild(video);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

         private function drmAuthenticateEventHandler(event:DRMAuthenticateEvent):void {
            videoStream.setDRMAuthenticationCredentials("User", "password", "drm");
        }
     }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent/DRM_AUTHENTICATE" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.DRM_AUTHENTICATE</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link></related-links><adobeApiEvent id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DRMAuthenticateEvent:DRMAuthenticateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticateEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Erstellt ein Event-Objekt, das bestimmte Informationen über DRM-Authentifizierungsereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent, constructor
 	    </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ von DRMAuthenticate-Ereignissen: <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">header</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird.
  		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">userPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">passPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">urlPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine vom Server bereitgestellte Eingabeaufforderung für eine anzuzeigende URL.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">authenticationType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für den Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netstream</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.
 	    
 	    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Erstellt ein Event-Objekt, das bestimmte Informationen über DRM-Authentifizierungsereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. 
	    
 	    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des DRMAuthenticateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues DRMAuthenticateEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des DRMAuthenticateEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMAuthenticateEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMAuthenticateEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des DRMAuthenticateEvent-Objekts enthält.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMAuthenticateEvent-Objekts enthält. Der String liegt im folgenden Format vor: 
     	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DRMAuthenticateEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> eventPhase=<i class="+ topic/ph hi-d/i ">Wert</i> header=<i class="+ topic/ph hi-d/i ">Wert</i> usernamePrompt=<i class="+ topic/ph hi-d/i ">Wert</i> passwordPrompt=<i class="+ topic/ph hi-d/i ">Wert</i> urlPrompt=<i class="+ topic/ph hi-d/i ">Wert</i>] authenticationType=<i class="+ topic/ph hi-d/i ">Wert</i></codeph></p>
     	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_TYPE_DRM</apiName><shortdesc class="- topic/shortdesc ">
		Die DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM-Konstante definiert den Wert der authenticationType-Eigenschaft eines DRMAuthenticateEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drm</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph>-Eigenschaft eines DRMAuthenticateEvent-Objekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für den Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">header</codeph></entry><entry class="- topic/entry ">Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netstream</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für eine anzuzeigende URL.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_TYPE_PROXY</apiName><shortdesc class="- topic/shortdesc ">
		Die DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY-Konstante definiert den Wert der authenticationType-Eigenschaft eines DRMAuthenticateEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">proxy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph>-Eigenschaft eines DRMAuthenticateEvent-Objekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für den Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">header</codeph></entry><entry class="- topic/entry ">Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netstream</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für eine anzuzeigende URL.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_AUTHENTICATE</apiName><shortdesc class="- topic/shortdesc ">
		Die DRMAuthenticateEvent.DRM_AUTHENTICATE-Konstante definiert den Wert der type-Eigenschaft eines DRMAuthenticateEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmAuthenticate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines DRMAuthenticateEvent-Objekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für den Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">header</codeph></entry><entry class="- topic/entry ">Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netstream</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für eine anzuzeigende URL.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:authenticationType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticationType</apiName><shortdesc class="- topic/shortdesc ">
		Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.authenticationType, authenticationType
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Zeigt an, ob die angegebenen Benutzerdaten für die Authentifizierung für Flash Media Rights Management Server (FMRMS) oder eine Proxyserver bestimmt sind. Die <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph>-Option ermöglicht der Anwendung zum Beispiel die Authentifizierung für einen Proxyserver, wenn ein Unternehmen diesen Schritt verlangt, bevor der Benutzer Zugriff auf das Internet hat. Sofern keine anonyme Authentifizierung verwendet wird, muss sich der Benutzer nach der Proxyauthentifizierung immer noch für den FMRMS authentifizieren, um den Gutschein zu erhalten und den Inhalt abzuspielen. Sie können <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationcredentials()</codeph> ein zweites Mal verwenden, diesmal mit der <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>-Option, um die Authentifizierung für den FMRMS auszuführen.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:header:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">header</apiName><shortdesc class="- topic/shortdesc ">
		Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.header, header
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Der verschlüsselte Inhaltsdateiheader, der vom Server bereitgestellt wird. Er enthält Informationen über den Kontext des verschlüsselten Inhalts.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:netstream:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">netstream</apiName><shortdesc class="- topic/shortdesc ">
		Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.netstream, netstream
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStream</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Das NetStream-Objekt, das dieses Ereignis eingeleitet hat.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:passwordPrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">passwordPrompt</apiName><shortdesc class="- topic/shortdesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.passwordPrompt, passwordPrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für das Kennwort. Der String kann Anweisungen enthalten, die den erforderlichen Typ des Kennworts betreffen.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:urlPrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">urlPrompt</apiName><shortdesc class="- topic/shortdesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für eine URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.urlPrompt, urlPrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für eine URL. Der String kann angeben, wohin Benutzername und Kennwort gesendet werden.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:usernamePrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">usernamePrompt</apiName><shortdesc class="- topic/shortdesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.usernamePrompt, usernamePrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Eine vom Server bereitgestellte Eingabeaufforderung für den Benutzernamen. Der String kann Anweisungen enthalten, die den erforderlichen Typ des Benutzernamens betreffen. Ein Content-Provider könnte zum Beispiel eine E-Mail-Adresse als Benutzernamen verlangen.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StorageVolumeChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StorageVolumeChangeEvent</apiName><shortdesc class="- topic/shortdesc "> 
   Das StorageVolumeInfo.storageVolumeInfo-Objekt setzt ein StorageVolumeChangeEvent-Ereignisobjekt ab, wenn ein Speichervolume bereitgestellt oder seine Bereitstellung aufgehoben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
   Das <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeInfo.storageVolumeInfo</codeph>-Objekt setzt ein StorageVolumeChangeEvent-Ereignisobjekt ab, wenn ein Speichervolume bereitgestellt oder seine Bereitstellung aufgehoben wird. Es gibt zwei Typen von StorageVolumeChangeEvent: <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph> und <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>.
   
   <p class="- topic/p ">Unter Linux setzt das StorageVolumeInfo-Objekt nur <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph>- und <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>-Ereignisse für reale Geräte ab. Es setzt keine Ereignisse ab, wenn der Benutzer Volumes über ein Netzwerk bereitstellt bzw. deren Bereitstellung aufhebt.</p>
   
   <p class="- topic/p ">Einige Geräte, zum Beispiel bestimmte Digitalkameras und Handys, tauchen im <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeInfo.getStorageVolumes()</codeph>-Array auf, sie setzen jedoch keine StorageVolumeChangeEvent-Objekte ab, wenn sie bereitgestellt werden oder ihre Bereitstellung aufgehoben wird.</p>
   
   <!-- p>Not all devices cause the StorageVolumeInfo object to dispatch a StorageVolumeChangeEvent event  
   object when a storage volume is mounted or unmounted, as noted in the following table:</p>
   
   <table class="innertable">
   
   <tr>
      <th>Device type</th>   <th>Dispatches StorageVolumeChangeEvent</th>
   </tr>
   
   <tr>
      <td>Card reader</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>CD/DVD, fixed</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>CD/DVD, external</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Firewire drive</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Hard disk, USB</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Network drive</td>   <td>Yes</td>  
   </tr>
   
   <tr>
      <td>USB pen drive</td>   <td>Yes</td>   
   </tr>
   
   </table -->
   
   
   </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links><adobeApiEvent id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT_storageVolumeMount" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolumeMount</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StorageVolumeChangeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT_storageVolumeUnount" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolumeUnount</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StorageVolumeChangeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StorageVolumeChangeEvent:StorageVolumeChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StorageVolumeChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein StorageVolumeChangeEvent-Objekt, das als Argument an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, aufrufbar über die <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft. Die StorageVolumeChangeEvent-Klasse definiert zwei Ereignistypen: das <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph>-Ereignis, das von der <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT</codeph>-Konstante repräsentiert wird, und das <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>-Ereignis, das von der <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT</codeph>-Konstante repräsentiert wird.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">path</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Name des Speichervolumes.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">volume</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:StorageVolume</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Das File-Objekt, das das Speichervolume repräsentiert.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Dient zum Erstellen eines neuen StorageVolumeChangeEvent-Objekts.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein StorageVolumeChangeEvent-Objekt, das als Argument an Ereignis-Listener übergeben wird.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link><link href="flash.events.xml#ErrorEvent/ERROR" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ErrorEvent.ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:StorageVolumeChangeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
        
	 Dupliziert eine Instanz einer Event-Unterklasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein mit dem Original identisches neues Ereignisobjekt.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        
	 Dupliziert eine Instanz einer Event-Unterklasse.
	 
     <p class="- topic/p ">Gibt ein neues Ereignisobjekt zurück, das eine Kopie der ursprünglichen Instanz des Ereignisobjekts ist. Normalerweise rufen Sie <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> nicht auf; es wird automatisch von der EventDispatcher-Klasse aufgerufen, wenn Sie ein Ereignis neu auslösen, das heißt, wenn Sie <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> von einer Prozedur aus aufrufen, die <codeph class="+ topic/ph pr-d/codeph ">event</codeph> verarbeitet.</p>
	 
	 <p class="- topic/p ">Das neue Ereignisobjekt übernimmt alle Eigenschaften des Originals.</p> 
	 
	 <p class="- topic/p ">Wenn Sie Ihre eigene benutzerdefinierte Event-Klasse erstellen, müssen Sie die übernommene <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph>-Methode außer Kraft setzen, um die Eigenschaften Ihrer benutzerdefinierten Klasse zu duplizieren. Wenn Sie nicht alle der Ereignis-Unterklasse hinzugefügten Eigenschaften eingestellt haben, weisen sie nicht die korrekten Werte auf, wenn Listener das neu ausgelöste Ereignis verarbeiten.</p>
	 
	 <p class="- topic/p ">In dem folgenden Beispiel ist <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> eine Unterklasse von <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> und implementiert aus diesem Grund eine eigene Version von <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StorageVolumeChangeEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
        
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des Ereignisobjekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des Ereignisobjekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des Ereignisobjekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[Event type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STORAGE_VOLUME_MOUNT</apiName><shortdesc class="- topic/shortdesc ">
	Die StorageVolumeChangeEvent.VOLUME_MOUNT-Konstante definiert den Wert der type-Eigenschaft eines StorageVolumeChangeEvent, wenn ein Volume gemountet wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">storageVolumeMount</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.VOLUME_MOUNT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines StorageVolumeChangeEvent, wenn ein Volume gemountet wird.
	
	<p class="- topic/p ">Das Ereignis hat folgende Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das StorageVolumeChangeEvent-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">file</codeph></entry><entry class="- topic/entry ">Ein File-Objekt, das das Speichervolume repräsentiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Der Name des Speichervolumes.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das StorageVolumeChangeEvent-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"storageVolumeMount"</codeph></entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STORAGE_VOLUME_UNMOUNT</apiName><shortdesc class="- topic/shortdesc ">
	Die StorageVolumeChangeEvent.VOLUME_MOUNT-Konstante definiert den Wert der type-Eigenschaft eines StorageVolumeChangeEvent, wenn die Bereitstellung eines Volumes aufgehoben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">storageVolumeUnmount</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.VOLUME_MOUNT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines StorageVolumeChangeEvent, wenn die Bereitstellung eines Volumes aufgehoben wird.
	
	<p class="- topic/p ">Das Ereignis hat folgende Eigenschaften:</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das StorageVolumeChangeEvent-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">file</codeph></entry><entry class="- topic/entry ">Ein File-Objekt, das das Speichervolume repräsentiert.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Der Name des Speichervolumes.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das StorageVolumeChangeEvent-Objekt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"storageVolumeUnmount"</codeph></entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:rootDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rootDirectory</apiName><shortdesc class="- topic/shortdesc ">
         Ein File-Objekt, das dem Stammverzeichnis des bereitgestellten Volumes entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ein File-Objekt, das dem Stammverzeichnis des bereitgestellten Volumes entspricht. Wenn die Bereitstellung des Volumes aufgehoben wurde (wenn der Ereignistyp <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph> ist), wird diese Eigenschaft auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt.
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:storageVolume:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolume</apiName><shortdesc class="- topic/shortdesc ">
         Ein StorageVolume-Objekt, das Informationen über ein bereitgestelltes Volume enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:StorageVolume</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ein StorageVolume-Objekt, das Informationen über ein bereitgestelltes Volume enthält. Diese Eigenschaft ist <codeph class="+ topic/ph pr-d/codeph ">null</codeph> für ein Volume, dessen Bereitstellung aufgehoben wurde (für ein <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>-Eigenschaft).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolume" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolume</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SQLEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLEvent</apiName><shortdesc class="- topic/shortdesc ">
 Adobe AIR löst SQLEvent-Objekte aus, wenn einer der Vorgänge, die von einer SQLConnection-Instanz oder einer SQLStatement-Instanz ausgeführt werden, erfolgreich abgeschlossen wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Adobe AIR löst SQLEvent-Objekte aus, wenn einer der Vorgänge, die von einer SQLConnection-Instanz oder einer SQLStatement-Instanz ausgeführt werden, erfolgreich abgeschlossen wird.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link></related-links><adobeApiEvent id="flash.events:SQLEvent:ANALYZE_analyze" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">analyze</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ANALYZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/analyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.analyze()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ATTACH_attach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">attach</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ATTACH</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/attach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.attach()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:BEGIN_begin" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">begin</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:BEGIN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/begin()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.begin()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/cancel()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.cancel()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/close()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.close()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:COMMIT_commit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">commit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:COMMIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/commit()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.commit()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:COMPACT_compact" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">compact</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:COMPACT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/compact()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.compact()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:DEANALYZE_deanalyze" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deanalyze</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:DEANALYZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/deanalyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.deanalyze()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:DETACH_detach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">detach</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:DETACH</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/detach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.detach()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/open()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.open()</linktext></link><link href="flash.data.xml#SQLConnection/openAsync()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.openAsync()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:REENCRYPT_reencrypt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">reencrypt</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:REENCRYPT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/reencrypt()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.reencrypt()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:RELEASE_SAVEPOINT_releaseSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">releaseSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:RELEASE_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/releaseSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.releaseSavepoint()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:RESULT_result" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">result</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:RESULT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLStatement/execute()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.execute()</linktext></link><link href="flash.data.xml#SQLStatement/next()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.next()</linktext></link><link href="flash.data.xml#SQLStatement/getResult()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.getResult()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT_rollbackToSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollbackToSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollbackToSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollbackToSavepoint()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ROLLBACK_rollback" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollback</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ROLLBACK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollback()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollback()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:SCHEMA_schema" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">schema</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:SCHEMA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/loadSchema()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.loadSchema()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:SET_SAVEPOINT_setSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">setSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:SET_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/setSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.setSavepoint()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SQLEvent:SQLEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLEvent</apiName><shortdesc class="- topic/shortdesc ">
     Erstellt ein SQLEvent-Objekt, das als ein Parameter an Ereignis-Listener übergeben wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Typ des Ereignisses, verfügbar in der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Der Standardwert ist <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Dient zum Erstellen eines neuen SQLEvent-Objekts.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Erstellt ein SQLEvent-Objekt, das als ein Parameter an Ereignis-Listener übergeben wird.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SQLEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Erstellt eine Kopie des SQLEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues SQLEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Erstellt eine Kopie des SQLEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLEvent:ANALYZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ANALYZE</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.ANALYZE-Konstante definiert den Wert der type-Eigenschaft eines analyze-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">analyze</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ANALYZE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">analyze</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.analyze()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">analyze</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/analyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.analyze()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ATTACH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ATTACH</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.ATTACH-Konstante definiert den Wert der type-Eigenschaft eines attach-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">attach</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ATTACH</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">attach</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.attach()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">attach</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/attach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.attach()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BEGIN</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.BEGIN-Konstante definiert den Wert der type-Eigenschaft eines begin-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">begin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.BEGIN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">begin</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.begin()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">begin</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/begin()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.begin()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:CANCEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CANCEL</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.CANCEL-Konstante definiert den Wert der type-Eigenschaft eines cancel-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cancel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.CANCEL</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.cancel()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>-Ereignis hat folgende Eigenschaften:
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection- oder SQLStatement-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/cancel()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.cancel()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSE</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.CLOSE-Konstante definiert den Wert der type-Eigenschaft eines close-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">close</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.CLOSE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.close()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">close</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/close()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.close()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:COMMIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMMIT</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.COMMIT-Konstante definiert den Wert der type-Eigenschaft eines commit-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">commit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.COMMIT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">commit</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.commit()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">commit</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/commit()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.commit()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:COMPACT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPACT</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.COMPACT-Konstante definiert den Wert der type-Eigenschaft eines compact-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">compact</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.COMPACT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">compact</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.compact()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">compact</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/compact()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.compact()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:DEANALYZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEANALYZE</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.DEANALYZE-Konstante definiert den Wert der type-Eigenschaft eines deanalyze-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">deanalyze</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.DEANALYZE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">deanalyze</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.deanalyze()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">deanalyze</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/deanalyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.deanalyze()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:DETACH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DETACH</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.DETACH-Konstante definiert den Wert der type-Eigenschaft eines detach-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">detach</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.DETACH</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">detach</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.detach()</codeph>-Methode erfolgreich abgeschlossen wird.
     
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/detach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.detach()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:OPEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPEN</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.OPEN-Konstante definiert den Wert der type-Eigenschaft eines open-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">open</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.OPEN</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">open</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.detach()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.openAsync()</codeph>Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">open</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/open()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.open()</linktext></link><link href="flash.data.xml#SQLConnection/openAsync()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.openAsync()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:REENCRYPT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REENCRYPT</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.REENCRYPT-Konstante definiert den Wert der type-Eigenschaft eines reencrypt-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">reencrypt</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.REENCRYPT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">reencrypt</codeph>-Ereignisobjekts. Dieser Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.reencrypt()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">reencrypt</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/reencrypt()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.reencrypt()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:RELEASE_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RELEASE_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 Die SQLEvent.RELEASE_SAVEPOINT-Konstante definiert den Wert der type-Eigenschaft eines releaseSavepoint-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">releaseSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RELEASE_SAVEPOINT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">releaseSavepoint</codeph>-Ereignisobjekts. Dieser Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.releaseSavepoint()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">releaseSavepoint</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/releaseSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.releaseSavepoint()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:RESULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESULT</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.RESULT-Konstante definiert den Wert der type-Eigenschaft eines result-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">result</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RESULT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">result</codeph>-Ereignisobjekts. Wird ausgelöst, wenn die <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.execute()</codeph>- oder <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.next()</codeph>-Methode erfolgreich abgeschlossen wird. Nachdem das <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RESULT</codeph>-Ereignis ausgelöst wurde, kann die <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.getResult()</codeph>-Methode aufgerufen werden, um auf die Ergebnisdaten zuzugreifen. Das <codeph class="+ topic/ph pr-d/codeph ">result</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLStatement-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLStatement/execute()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.execute()</linktext></link><link href="flash.data.xml#SQLStatement/next()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.next()</linktext></link><link href="flash.data.xml#SQLStatement/getResult()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.getResult()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLLBACK_TO_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 Die SQLEvent.ROLLBACK_TO_SAVEPOINT-Konstante definiert den Wert der type-Eigenschaft eines rollbackToSavepoint-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollbackToSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ROLLBACK_TO_SAVEPOINT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rollbackToSavepoint</codeph>-Ereignisobjekts. Dieser Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.rollbackToSavepoint()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">rollbackToSavepoint</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollbackToSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollbackToSavepoint()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ROLLBACK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLLBACK</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.ROLLBACK-Konstante definiert den Wert der type-Eigenschaft eines rollback-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollback</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ROLLBACK</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">rollback</codeph>-Ereignisobjekts. Der Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.rollback()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">rollback</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollback()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollback()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:SCHEMA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SCHEMA</apiName><shortdesc class="- topic/shortdesc ">
     Die SQLEvent.SCHEMA-Konstante definiert den Wert der type-Eigenschaft eines schema-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">schema</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SCHEMA</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">schema</codeph>-Ereignisobjekts. Wird ausgelöst, wenn die <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.loadSchema()</codeph>-Methode erfolgreich abgeschlossen wurde. Nachdem das <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SCHEMA</codeph>-Ereignis ausgelöst wurde, können mit der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.getSchemaResult()</codeph>-Methode die Schemainformationen abgerufen werden. Das <codeph class="+ topic/ph pr-d/codeph ">schema</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/loadSchema()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.loadSchema()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:SET_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SET_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 Die SQLEvent.SET_SAVEPOINT-Konstante definiert den Wert der type-Eigenschaft eines setSavepoint-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">setSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SET_SAVEPOINT</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">setSavepoint</codeph>-Ereignisobjekts. Dieser Ereignistyp wird ausgelöst, wenn ein Aufruf der <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.setSavepoint()</codeph>-Methode erfolgreich abgeschlossen wird. Das <codeph class="+ topic/ph pr-d/codeph ">setSavepoint</codeph>-Ereignis hat folgende Eigenschaften:
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das SQLConnection-Objekt, das den Vorgang ausgeführt hat.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/setSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.setSavepoint()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Die DRMErrorEvent-Klasse stellt Informationen zu Fehlern bereit, die beim Abspielen von DRM-verschlüsselten Dateien auftreten (DRM = Digital Rights Management).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für DRM-fähige Objekte.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die DRMErrorEvent-Klasse stellt Informationen zu Fehlern bereit, die beim Abspielen von DRM-verschlüsselten Dateien auftreten (DRM = Digital Rights Management).
	  
	<p class="- topic/p ">Die Laufzeitumgebung löst ein DRMErrorEvent-Objekt aus, wenn ein NetStream-Objekt versucht, eine mit DRM (Digital Rights Management) verschlüsselte Datei abzuspielen und dabei ein DRM-Fehler auftritt. Ein DRMErrorEvent-Objekt wird zum Beispiel ausgelöst, wenn der Content-Provider die Anzeigeanwendung nicht unterstützt oder wenn die Autorisierung des Benutzers fehlschlägt, weil der Benutzer den Inhalt möglicherweise nicht gekauft hat.</p>
	<p class="- topic/p ">
	Bei ungültigen Benutzerdaten verarbeitet das DRMAuthenticateEvent-Objekt den Fehler, indem die Auslösung wiederholt erfolgt, bis der Benützer gültige Daten eingibt oder bis die Anwendung weitere Versuche verhindert. Die Anwendung sollte alle anderen DRM-Fehlerereignisse überwachen, um die DRM-bezogenen Fehler zu erkennen, zu identifizieren und zu verarbeiten.
	</p>
	<p class="- topic/p ">
	Diese Klasse stellt Eigenschaften bereit, die das Objekt enthalten, das den Fehler ausgegeben hat, sowie den Fehlercode und, falls zutreffend, einen untergeordneten Fehlercode und eine Textnachricht, die Informationen zum Fehler enthält. Eine Beschreibung von Fehlercodes im Zusammenhang mit DRM finden Sie unter <xref href="../../runtimeErrors.html" class="- topic/xref ">Laufzeitfehlercodes</xref>. Die DRM-bezogenen Fehlercodes beginnen bei Fehler 3300.
	</p> 
	
	</apiDesc><example conref="examples\DRMErrorEventExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.events.AsyncErrorEvent;
    import flash.events.NetStatusEvent;
    import flash.events.DRMErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class DRMVideoExample extends Sprite
    {
        var videoURL:String = "Video.flv";
        var videoConnection:NetConnection;
        var videoStream:NetStream;
        var video:Video = new Video();            

        public function DRMVideoExample()
        {
            videoConnection = new NetConnection();
            videoConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoConnection.connect(null);
        }

        private function connectStream():void {
            videoStream = new NetStream(videoConnection);
            videoStream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            videoStream.addEventListener(DRMErrorEvent.DRM_ERROR, drmErrorEventHandler);
            video.attachNetStream(videoStream);
            videoStream.play(videoURL);
            addChild(video);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

        private function drmErrorEventHandler(event:DRMErrorEvent):void {
            trace(event.toString());
        }
     }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#DRMErrorEvent/DRM_ERROR" class="- topic/link "><linktext class="- topic/linktext ">DRMErrorEvent.DRM_ERROR</linktext></link><link href="../../runtimeErrors.html" class="- topic/link "><linktext class="- topic/linktext ">Laufzeitfehlercodes</linktext></link></related-links><adobeApiEvent id="flash.events:DRMErrorEvent:DRM_ERROR_drmError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMErrorEvent:DRM_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DRMErrorEvent:DRMErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Erstellt ein Event-Objekt, das bestimmte Informationen über DRM-Fehlerereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMErrorEvent, constructor
 	    </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ von DRMAuthenticate-Ereignissen: <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorDetail</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die spezifischen syntaktischen Details zum Fehler (falls zutreffend).
  		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Hauptfehlercode.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">insubErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die sekundäre Fehler-ID.
 	    
 	    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inMetadata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMContentData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inSystemUpdateNeeded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDrmUpdateNeeded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Erstellt ein Event-Objekt, das bestimmte Informationen über DRM-Fehlerereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. 
	    
 	    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Erstellt eine Kopie des DRMErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues DRMErrorEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Erstellt eine Kopie des DRMErrorEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMErrorEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des DRMErrorEvent-Objekts enthält.
  		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Gibt einen String zurück, der alle Eigenschaften des DRMErrorEvent-Objekts enthält. Der String liegt im folgenden Format vor: 
     	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DRMErrorEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> eventPhase=<i class="+ topic/ph hi-d/i ">Wert</i> errroID=<i class="+ topic/ph hi-d/i ">Wert</i> subErrorID=<i class="+ topic/ph hi-d/i ">Wert</i> text=<i class="+ topic/ph hi-d/i ">Wert</i></codeph></p>
     	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMErrorEvent:DRM_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_ERROR</apiName><shortdesc class="- topic/shortdesc ">
		Die Konstante DRMErrorEvent.DRM_ERROR definiert den Wert der type-Eigenschaft eines drmError-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Die Konstante <codeph class="+ topic/ph pr-d/codeph ">DRMErrorEvent.DRM_ERROR</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">drmError</codeph>-Ereignisobjekts. 
		
		<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Ein dem Problem zugewiesener Fehlercode im Zahlenformat.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">subErrorID</codeph></entry><entry class="- topic/entry ">Ein Fehlercode, der ausführlichere Informationen zum zugrundeliegenden Problem angibt.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das NetStream-Objekt.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmError</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMErrorEvent:contentData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentData</apiName><shortdesc class="- topic/shortdesc ">
		 Die DRMContentData für die Mediendatei.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMContentData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die DRMContentData für die Mediendatei.
		 
		 <p class="- topic/p ">Sie können das Objekt, auf das mit der <codeph class="+ topic/ph pr-d/codeph ">contentData</codeph>-Eigenschaft verwiesen wird, verwenden, um den zugehörigen DRM-Gutschein aus dem Gutscheincache von DRMManager abzurufen. Die Gutscheineigenschaften beschreiben die dem Benutzer zugängliche Lizenz und erklären ggf., weshalb der DRM-geschützte Inhalt nicht angezeigt werden kann.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:drmUpdateNeeded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">drmUpdateNeeded</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt an, ob ein DRM-Update erforderlich ist, um die DRM-geschützten Inhalte abzuspielen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt an, ob ein DRM-Update erforderlich ist, um die DRM-geschützten Inhalte abzuspielen.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:subErrorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subErrorID</apiName><shortdesc class="- topic/shortdesc ">
		Eine Fehler-ID, die ausführlichere Informationen zu dem zugrundeliegenden Problem bereitstellt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMErrorEvent.subErrorID, subErrorID
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Eine Fehler-ID, die ausführlichere Informationen zu dem zugrundeliegenden Problem bereitstellt.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:systemUpdateNeeded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">systemUpdateNeeded</apiName><shortdesc class="- topic/shortdesc ">
		 Gibt an, ob ein Systemupdate erforderlich ist, um die DRM-geschützten Inhalte abzuspielen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Gibt an, ob ein Systemupdate erforderlich ist, um die DRM-geschützten Inhalte abzuspielen.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:EventPhase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EventPhase</apiName><shortdesc class="- topic/shortdesc ">
 Die EventPhase-Klasse stellt Werte für die eventPhase-Eigenschaft der Event-Klasse bereit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\EventPhaseExample.as -noswf
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Die EventPhase-Klasse stellt Werte für die <codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph>-Eigenschaft der Event-Klasse bereit.
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event" class="- topic/link "><linktext class="- topic/linktext ">Event-Klasse</linktext></link><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">EventDispatcher-Klasse</linktext></link></related-links><apiValue id="flash.events:EventPhase:AT_TARGET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AT_TARGET</apiName><shortdesc class="- topic/shortdesc ">
	Die Zielphase, die zweite Phase im Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">2</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Zielphase, die zweite Phase im Ereignisablauf.
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:EventPhase:BUBBLING_PHASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BUBBLING_PHASE</apiName><shortdesc class="- topic/shortdesc ">
	Die Bubbling-Phase, die dritte Phase im Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Bubbling-Phase, die dritte Phase im Ereignisablauf.
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:EventPhase:CAPTURING_PHASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPTURING_PHASE</apiName><shortdesc class="- topic/shortdesc ">
	Die Aufnahmephase, die erste Phase im Ereignisablauf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">1</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Aufnahmephase, die erste Phase im Ereignisablauf.
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FocusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FocusEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein Objekt löst ein FocusEvent-Objekt aus, wenn der Benutzer den Fokus von einem Objekt in der Anzeigeliste zum Nächsten bewegt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für Focus-Ereignisse.
 
  
  </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein Objekt löst ein FocusEvent-Objekt aus, wenn der Benutzer den Fokus von einem Objekt in der Anzeigeliste zum Nächsten bewegt. Es gibt vier Arten von focus-Ereignissen:
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_IN</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_OUT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.KEY_FOCUS_CHANGE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.MOUSE_FOCUS_CHANGE</codeph></li></ul>
 
 </apiDesc><example conref="examples\FocusEventExample.as" class="- topic/example "> Im folgenden Beispiel wird anhand der Klassen <codeph class="+ topic/ph pr-d/codeph ">FocusEventExample</codeph> und <codeph class="+ topic/ph pr-d/codeph ">CustomSprite</codeph> gezeigt, wie Focus-Ereignisse im Zusammenhang mit Stage-Elementen zur Erfassung von Ereignis- und Druckinformationen verwendet werden können. In diesem Beispiel werden die folgenden Aufgaben ausgeführt:
 <ol class="- topic/ol "><li class="- topic/li ">Die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">child</codeph> (vom Typ "Sprite") und <codeph class="+ topic/ph pr-d/codeph ">childCount</codeph> (vom Typ "uint") werden deklariert.</li><li class="- topic/li ">Mit einer <codeph class="+ topic/ph pr-d/codeph ">for</codeph>-Schleife werden am Punkt (0,0) fünf hellblaue Quadrate gezeichnet. Zuerst wird einer neuen CustomSprite-Instanz die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">child</codeph> zugewiesen. Jedes Mal, wenn ein CustomSprite-Objekt erstellt wird, passiert Folgendes:
     <ul class="- topic/ul "><li class="- topic/li ">Die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">size</codeph> vom Typ "uint" wird auf 50 Pixel gesetzt, und <codeph class="+ topic/ph pr-d/codeph ">bgColor</codeph> wird auf hellblau gesetzt. </li><li class="- topic/li ">Die Eigenschaften <codeph class="+ topic/ph pr-d/codeph ">buttonMode</codeph> und <codeph class="+ topic/ph pr-d/codeph ">useHandCursor</codeph> der Klasse "Sprite" werden innerhalb des Konstruktors auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt.</li><li class="- topic/li ">Es wird ein Ereignis-Listener vom Typ <codeph class="+ topic/ph pr-d/codeph ">click</codeph> zusammen mit dem verknüpften Abonnenten <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> instanziiert. Die Abonnentenmethode erstellt eine lokale <codeph class="+ topic/ph pr-d/codeph ">target</codeph>-Variable vom Typ „Sprite“ und weist sie dem Feld zu, auf das geklickt wurde. Anschließend wird der Fokus der Bühne der Variablen <codeph class="+ topic/ph pr-d/codeph ">target</codeph> zugewiesen.</li><li class="- topic/li ">Die Methode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> wird aufgerufen. Hierdurch wird ein 50 x 50 Pixel großes Quadrat mit den Methoden <codeph class="+ topic/ph pr-d/codeph ">beginFill()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">drawRect()</codeph> und <codeph class="+ topic/ph pr-d/codeph ">endFill()</codeph> der Graphics-Klasse und der Instanzeigenschaften erstellt.</li></ul></li><li class="- topic/li ">In der „for“-Schleife wird die Methode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> aufgerufen, die drei Ereignis-Listener/-Abonnenten instanziiert:
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>/<codeph class="+ topic/ph pr-d/codeph ">focusInHandler()</codeph> wird ausgelöst, nachdem auf ein beliebiges Anzeigelistenobjekt (Feld) geklickt worden ist (<codeph class="+ topic/ph pr-d/codeph ">click</codeph>-Ereignis).</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph>/<codeph class="+ topic/ph pr-d/codeph ">focusOutHandler()</codeph> wird ausgelöst, wenn auf ein anderes Feld geklickt wird oder die Bühne nicht mehr den Fokus besitzt (z. B., weil jemand außerhalb von Flash Player geklickt hat).</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>/<codeph class="+ topic/ph pr-d/codeph ">keyFocusChangeHandler()</codeph> wird ausgelöst, wenn Sie mit der Tabulatortaste oder den Nach-links- und Nach-rechts-Pfeiltasten ein Anzeigelistenobjekt auswählen. Mit der <codeph class="+ topic/ph pr-d/codeph ">keyFocusChangeHandler()</codeph>-Methode werden die Aktionen der Nach-links- und Nach-rechts-Pfeiltasten überwacht. Außerdem wird die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> zur Deaktivierung aufgerufen.</li></ul></li><li class="- topic/li ">In der <codeph class="+ topic/ph pr-d/codeph ">for</codeph>-Schleife wird jedes Quadrat der Anzeigeliste hinzugefügt und angezeigt (im gleichen Bereich). Hierfür kommt die Methode <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> zum Einsatz.</li><li class="- topic/li ">Der Konstruktor ruft anschließend die Methode <codeph class="+ topic/ph pr-d/codeph ">refreshLayout()</codeph> auf, mit der die orangefarbenen Quadrate mit jeweils 5 Pixel Abstand oben in der Anzeige (y = 0) verteilt werden.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.DisplayObject;
    import flash.events.FocusEvent;
    import flash.events.IEventDispatcher;

    public class FocusEventExample extends Sprite {
        private var gutter:uint = 5;
        private var childCount:uint = 5;

        public function FocusEventExample() {
            var child:Sprite;
            for(var i:uint; i &lt; childCount; i++) {
                child = new CustomSprite();
                configureListeners(child);
                addChild(child);
            }
            refreshLayout();
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(FocusEvent.FOCUS_IN, focusInHandler);
            dispatcher.addEventListener(FocusEvent.FOCUS_OUT, focusOutHandler);
            dispatcher.addEventListener(FocusEvent.KEY_FOCUS_CHANGE, keyFocusChangeHandler);
            dispatcher.addEventListener(FocusEvent.MOUSE_FOCUS_CHANGE, mouseFocusChangeHandler);
        }

        private function refreshLayout():void {
            var ln:uint = numChildren;
            var child:DisplayObject = getChildAt(0);
            var lastChild:DisplayObject = child;
            for(var i:uint = 1; i &lt; ln; i++) {
                child = getChildAt(i);
                child.x = lastChild.x + lastChild.width + gutter;
                lastChild = child;
            }
        }

        private function focusInHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("focusInHandler: " + target.name);
        }

        private function focusOutHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("focusOutHandler: " + target.name);
        }

        private function keyFocusChangeHandler(event:FocusEvent):void {
            if(event.keyCode == 39 || event.keyCode == 37){
                event.preventDefault()
            }
            var target:CustomSprite = CustomSprite(event.target);
            trace("keyFocusChangeHandler: " + target.name);
        }
        private function mouseFocusChangeHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("mouseFocusChangeHandler: " + target.name);
        }
    }
}

import flash.display.Sprite;
import flash.events.MouseEvent;

class CustomSprite extends Sprite {
    private var size:uint = 50;
    private var bgColor:uint = 0x00CCFF;

    public function CustomSprite() {
        buttonMode = true;
        useHandCursor = true;
        addEventListener(MouseEvent.CLICK, clickHandler);
        draw(size, size);
    }

    private function draw(w:uint, h:uint):void {
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, w, h);
        graphics.endFill();
    }

    private function clickHandler(event:MouseEvent):void {
        var target:Sprite = Sprite(event.target);
        trace("clickHandler: " + target.name);
        stage.focus = target;
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:FocusEvent:FOCUS_IN_focusIn" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">focusIn</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:FOCUS_IN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusIn" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusIn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:FOCUS_OUT_focusOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">focusOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:FOCUS_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:KEY_FOCUS_CHANGE_keyFocusChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyFocusChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:KEY_FOCUS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyFocusChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE_mouseFocusChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseFocusChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:MOUSE_FOCUS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseFocusChange</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:FocusEvent:FocusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FocusEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für Fokus-Ereignisse wichtig sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Mögliche Werte sind: <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_IN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.KEY_FOCUS_CHANGE</codeph> und <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.MOUSE_FOCUS_CHANGE</codeph>.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die andere InteractiveObject-Instanz an, die von dem Fokuswechsel betroffen ist. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> das InteractiveObject dar, das den Fokus verloren hat.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob die Umschalttaste als Zusatztaste aktiviert ist.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt den Tastencodewert der Taste an, die zum Auslösen eines <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisses gedrückt wird.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">direction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, aus welcher Richtung das interaktive Zielobjekt aktiviert wurde. Hat den Wert <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph> (der Standardwert) für alle Ereignisse außer <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>.
    
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für FocusEvent-Objekte.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt mit bestimmten Informationen, die für Fokus-Ereignisse wichtig sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/FOCUS_IN" class="- topic/link "><linktext class="- topic/linktext ">FOCUS_IN</linktext></link><link href="flash.events.xml#FocusEvent/FOCUS_OUT" class="- topic/link "><linktext class="- topic/linktext ">FOCUS_OUT</linktext></link><link href="flash.events.xml#FocusEvent/KEY_FOCUS_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">KEY_FOCUS_CHANGE</linktext></link><link href="flash.events.xml#FocusEvent/MOUSE_FOCUS_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">MOUSE_FOCUS_CHANGE</linktext></link><link href="flash.display.xml#FocusDirection" class="- topic/link "><linktext class="- topic/linktext ">flash.display.FocusDirection</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:FocusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des FocusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues FocusEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des FocusEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:FocusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des FocusEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des FocusEvent-Objekts enthält.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des FocusEvent-Objekts enthält. Der String liegt im folgenden Format vor:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[FocusEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> relatedObject=<i class="+ topic/ph hi-d/i ">Wert</i> shiftKey=<i class="+ topic/ph hi-d/i ">Wert</i>] keyCode=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:FocusEvent:FOCUS_IN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FOCUS_IN</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines focusIn-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">focusIn</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz, die gerade den Fokus erhalten hat. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.
	</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">direction</codeph></entry><entry class="- topic/entry ">Die Richtung, aus der der Fokus zugewiesen wurde. Diese Eigenschaft meldet den Wert des <codeph class="+ topic/ph pr-d/codeph ">direction</codeph>-Parameters der <codeph class="+ topic/ph pr-d/codeph ">assignFocus()</codeph>-Methode auf der Bühne. Wird der Fokus durch andere Mittel geändert, ist der Wert immer <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph>. Gilt nur für <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>-Ereignisse. Für alle anderen focus-Ereignisse ist der Wert <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusIn" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusIn</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:FOCUS_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FOCUS_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines focusOut-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">focusOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz, die gerade den Fokus verloren hat. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.
	</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusOut</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:KEY_FOCUS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_FOCUS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines keyFocusChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyFocusChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisobjekts. 
	
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; rufen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> auf, um das Standardverhalten abzubrechen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Der Tastencodewert der Taste, die zum Auslösen eines <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisses gedrückt wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn die Umschalttaste als Zusatztaste aktiviert ist, andernfalls <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz, die gerade den Fokus besitzt. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.
	</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyFocusChange</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_FOCUS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Definiert den Wert der Eigenschaft „type“ eines mouseFocusChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseFocusChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Definiert den Wert der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> eines <codeph class="+ topic/ph pr-d/codeph ">mouseFocusChange</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>; rufen Sie die Methode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> auf, um das Standardverhalten abzubrechen.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; gilt nur für <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisse.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Die InteractiveObject-Instanz, die gerade den Fokus besitzt. Das unter <codeph class="+ topic/ph pr-d/codeph ">target</codeph> angegebene Ziel ist nicht immer das Objekt in der Anzeigeliste, in der der Ereignis-Listener registriert wurde. Mit der Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> können Sie auf das Objekt in der Anzeigeliste zugreifen, das das Ereignis derzeit verarbeitet.
	</entry></row></tbody></tgroup></adobetable>
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseFocusChange</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:direction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">direction</apiName><shortdesc class="- topic/shortdesc ">
	Gibt die Richtung des Fokus für ein focusIn-Ereignis an.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt die Richtung des Fokus für ein <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>-Ereignis an.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#FocusDirection" class="- topic/link "><linktext class="- topic/linktext ">flash.display.FocusDirection</linktext></link><link href="flash.display.xml#Stage/assignFocus()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.assignFocus()</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Falls „true“, ist die relatedObject-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf null gesetzt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Wenn <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, ist die <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph>-Eigenschaft aus Gründen, die mit der Sicherheitssandbox zusammenhängen, auf <codeph class="+ topic/ph pr-d/codeph ">null </codeph> gesetzt. Ist der Nominalwert von <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> ein Verweis auf ein DisplayObject in einer anderen Sandbox, wird <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> auf <codeph class="+ topic/ph pr-d/codeph ">null</codeph> gesetzt, es sei denn, die Berechtigung gilt über die Sandboxgrenzen hinweg für beide Richtungen. Die Berechtigung wird eingerichtet, indem aus einer SWF-Datei <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> aufgerufen wird oder eine Richtliniendatei vom Server einer Bilddatei bereitgestellt und die <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph>-Eigenschaft beim Laden des Bilds gesetzt wird.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">FocusEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:keyCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyCode</apiName><shortdesc class="- topic/shortdesc ">
	Der Tastencodewert der Taste, die zum Auslösen eines „keyFocusChange“-Ereignisses gedrückt wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Tastencodewert der Taste, die zum Auslösen eines <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>-Ereignisses gedrückt wird.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FocusEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Ein Verweis auf die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein Verweis auf die andere InteractiveObject-Instanz, die von dem Fokuswechsel betroffen ist. Wenn beispielsweise ein <codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph>-Ereignis auftritt, stellt <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> die InteractiveObject-Instanz dar, die den Fokus erhalten hat.
	<p class="- topic/p ">Der Wert dieser Eigenschaft kann in zwei Fällen <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sein: Wenn es kein verwandtes Objekt gibt oder wenn es eines gibt, dieses aber eine Sicherheitssandbox ist, auf die Sie keinen Zugriff haben. Verwenden Sie die <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>-Eigenschaft, um festzustellen, welcher dieser Gründe zutrifft.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">FocusEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob die Umschalttaste als Zusatztaste aktiviert ist. In diesem Fall lautet der Wert „true“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob die Umschalttaste als Zusatztaste aktiviert ist. In diesem Fall lautet der Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Andernfalls ist der Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Diese Eigenschaft wird nur dann verwendet, wenn „FocusEvent“ den Typ <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph> hat.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GesturePhase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GesturePhase</apiName><shortdesc class="- topic/shortdesc ">
	Die GesturePhase-Klasse ist eine Aufzählungsklasse von Konstantenwerten zur Verwendung mit der GestureEvent-, PressAndTapGestureEvent- und TransformGestureEvent-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die GesturePhase-Klasse ist eine Aufzählungsklasse von Konstantenwerten zur Verwendung mit der GestureEvent-, PressAndTapGestureEvent- und TransformGestureEvent-Klasse. Verwenden Sie diese Werte, um den Anfang, den Fortschritt und das Ende einer Berührungsgeste (zum Beispiel das Bewegen von mehreren Fingern über einen Touchscreen), damit Ihre Anwendung auf die einzelnen Phasen der Benutzerberührung reagieren kann. Einige Gesten (Swipe- und Zwei-Finger-Tipp-Gesten) haben nur eine Phase und setzen die <codeph class="+ topic/ph pr-d/codeph ">phase</codeph>-Eigenschaft des Ereignisobjekts auf <codeph class="+ topic/ph pr-d/codeph ">all</codeph>.
	
	
	</apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> Die folgenden Beispiele zeigen die Ereignisverarbeitung für <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>-Ereignisse. Während der Benutzer eine Drehgeste auf dem berührungsempfindlichen Gerät ausführt, dreht sich mySprite und in myTextField wird die aktuelle Phase angezeigt. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links><apiValue id="flash.events:GesturePhase:ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL</apiName><shortdesc class="- topic/shortdesc ">
	Ein einzelner Wert, der alle Phasen einfacher Gesten wie Zwei-Finger-Tipp- oder Swipe-Gesten umfasst.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">all</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Ein einzelner Wert, der alle Phasen einfacher Gesten wie Zwei-Finger-Tipp- oder Swipe-Gesten umfasst. Bei Gesten, die die <codeph class="+ topic/ph pr-d/codeph ">phase</codeph>-Eigenschaft des Ereignisobjekts auf <codeph class="+ topic/ph pr-d/codeph ">all</codeph> setzen (Swipe- und Zwei-Finger-Tipp-Gesten), ist der <codeph class="+ topic/ph pr-d/codeph ">phase</codeph>-Wert immer <codeph class="+ topic/ph pr-d/codeph ">all</codeph>, nachdem das Ereignis abgesetzt wurde. 
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BEGIN</apiName><shortdesc class="- topic/shortdesc ">
	Der Anfang einer neuen Geste (zum Beispiel das Aufsetzen eines Fingers auf einen Touchscreen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">begin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Anfang einer neuen Geste (zum Beispiel das Aufsetzen eines Fingers auf einen Touchscreen).
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END</apiName><shortdesc class="- topic/shortdesc ">
	Der Abschluss einer Geste (zum Beispiel das Heben eines Fingers von einem Touchscreen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">end</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Abschluss einer Geste (zum Beispiel das Heben eines Fingers von einem Touchscreen). 
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	Der Fortschritt einer Geste (zum Beispiel das Bewegen eines Fingers über einen Touchscreen).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Der Fortschritt einer Geste (zum Beispiel das Bewegen eines Fingers über einen Touchscreen).
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:BrowserInvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">BrowserInvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Das NativeApplication-Objekt einer AIR-Anwendung löst ein browserInvoke-Ereignis aus, wenn die Anwendung durch eine SWF-Datei im Browser mit der Browseraufruffunktion aufgerufen wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Wird vom NativeApplication-Objekt abgesetzt, wenn eine AIR-Anwendung über einen Webbrowser aufgerufen wird.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Das NativeApplication-Objekt einer AIR-Anwendung löst ein <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignis aus, wenn die Anwendung durch eine SWF-Datei im Browser mit der Browseraufruffunktion aufgerufen wurde. Das NativeApplication-Objekt löst ein <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignis auch dann aus, wenn ein Benutzer die nahtlose Installationsfunktion im Browser instanziiert und die SWF-Datei im Browser ein Array an den <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">launchApplication()</codeph>-Methode der „air.swf“-Datei übergibt. (Weitere Informationen finden Sie unter „Verteilen, Installieren und Ausführen von AIR-Anwendungen“ im AIR-Entwicklerhandbuch.)
	 
	 <p class="- topic/p ">Der Aufruf durch den Browser ist nur dann zulässig, wenn in der Anwendungsdeskriptordatei einer Anwendung Folgendes angegeben ist:</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">&lt;allowBrowserInvocation>true&lt;/allowBrowserInvocation></codeblock>
	 
	 <p class="- topic/p ">Wenn die Anwendung nicht ausgeführt wird, löst das NativeApplication-Objekt ein InvokeEvent-Ereignis und ein <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignis aus, wenn der Aufruf über den Browser erfolgt. Andernfalls, wenn die Anwendung <i class="+ topic/ph hi-d/i ">bereits ausgeführt wird</i>, löst das NativeApplication-Objekt nur ein <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignis aus, wenn der Aufruf über den Browser erfolgt. </p>
	 
	 <p class="- topic/p "> Wenn die Anwendung als Ergebnis einer nahtlosen Installation vom Browser aufgerufen wird (wenn der Benutzer sich für den sofortigen Start nach der Installation entschieden hat), löst das NativeApplication-Objekt ein BrowserInvoke-Ereignis nur dann aus, wenn Argumente übergeben werden (über die SWF-Datei im Browser, die ein Array an den <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>-Parameter der <codeph class="+ topic/ph pr-d/codeph ">installApplication()</codeph>-Methode der „air.swf“-Datei übergibt). Weitere Informationen finden Sie unter „Verteilen, Installieren und Ausführen von AIR-Anwendungen“ im AIR-Entwicklerhandbuch.</p>
	 
	 <p class="- topic/p ">Wie auch das <codeph class="+ topic/ph pr-d/codeph ">invokeEvent</codeph>-Ereignis werden <codeph class="+ topic/ph pr-d/codeph ">browserInvokeEvent</codeph>-Ereignisse vom NativeApplication-Objekt (<codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph>) ausgelöst. Um <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignisse zu erhalten, rufen Sie die <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>-Methode des NativeApplication-Objekts auf. Wenn ein Ereignis-Listener für ein <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignis registriert wird, empfängt er auch alle <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignisse, die vor der Registrierung aufgetreten sind. Diese werden nach der Rückgabe des Aufrufs von <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> ausgelöst, jedoch nicht unbedingt vor anderen <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignissen, die möglicherweise nach der Registrierung empfangen wurden. Auf diese Weise können Sie <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignisse verarbeiten, die aufgetreten sind, bevor Ihr Initialisierungscode ausgeführt wurde (zum Beispiel wenn die Anwendung ursprünglich über den Browser aufgerufen wurde). Denken Sie daran, dass beim Hinzufügen eines Ereignis-Listeners zu einem späteren Zeitpunkt während der Ausführung (nach der Initialisierung der Anwendung) dieser alle <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>-Ereignisse empfängt, die seit dem Starten der Anwendung aufgetreten sind.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#InvokeEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.InvokeEvent</linktext></link><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links><adobeApiEvent id="flash.events:BrowserInvokeEvent:BROWSER_INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:BrowserInvokeEvent:BROWSER_INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:BrowserInvokeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:BrowserInvokeEvent:BrowserInvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">BrowserInvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Die Konstruktorfunktion für die BrowserInvokeEvent-Klasse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Typ des Ereignisses, auf den als <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph> zugegriffen werden kann.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Einstellung <codeph class="+ topic/ph pr-d/codeph ">false</codeph> für ein BrowserInvokeEvent-Objekt.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Einstellung <codeph class="+ topic/ph pr-d/codeph ">false</codeph> für ein BrowserInvokeEvent-Objekt.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein Array von Argumenten (Strings), die an die Anwendung zu übergeben sind.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sandboxType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Der Sandbox-Typ für den Browserinhalt.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Sicherheitsdomäne für den Browserinhalt.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isHTTPS</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ob der Browserinhalt das HTTPS-URL-Schema verwendet.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isUserEvent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ob der Browseraufruf das Ergebnis eines Benutzerereignisses war.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Die Konstruktorfunktion für die BrowserInvokeEvent-Klasse. Im Allgemeinen rufen Entwickler den <codeph class="+ topic/ph pr-d/codeph ">BrowserInvokeEvent()</codeph>-Konstruktor nicht direkt auf. Nur die Laufzeitumgebung sollte ein BrowserInvokeEvent-Objekt erstellen.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:BrowserInvokeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Erstellt eine neue Kopie dieses Ereignisses.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Kopie des Ereignisses.
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Erstellt eine neue Kopie dieses Ereignisses.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:BrowserInvokeEvent:BROWSER_INVOKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BROWSER_INVOKE</apiName><shortdesc class="- topic/shortdesc ">
		 Die BrowserInvokeEvent.BROWSER_INVOKE-Konstante definiert den Wert der type-Eigenschaft eines BrowserInvokeEvent-Objekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">browserInvoke</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die <codeph class="+ topic/ph pr-d/codeph ">BrowserInvokeEvent.BROWSER_INVOKE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines BrowserInvokeEvent-Objekts.
		 
		 <p class="- topic/p ">Das BrowserInvokeEvent-Ereignisobjekt hat folgende Eigenschaften:</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Arguments</codeph></entry><entry class="- topic/entry ">Das Array von Stringargumenten, die während dieses Aufrufs übergeben werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sandBoxType</codeph></entry><entry class="- topic/entry ">Ein String, der den Sandboxtyp für den Browserinhalt angibt (<codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_LOCAL_WITH_NETWORK</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph>).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">securityDomain</codeph></entry><entry class="- topic/entry ">Ein String, der die Sicherheitsdomäne des Browsers angibt (zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"</codeph>).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isHTTPS</codeph></entry><entry class="- topic/entry ">Ob der Browserinhalt das HTTPS-URL-Schema verwendet (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isUserEvent</codeph></entry><entry class="- topic/entry ">Ob der Browseraufruf aus einem Benutzerereignis resultiert (in AIR 1.0 immer <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">Nein.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, welches das InvokeEvent -Objekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Immer das NativeApplication-Objekt. 
		    </entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></apiValue><apiValue id="flash.events:BrowserInvokeEvent:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
		 Ein Array von Argumenten (Strings), die an die Anwendung zu übergeben sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ein Array von Argumenten (Strings), die an die Anwendung zu übergeben sind.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:isHTTPS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isHTTPS</apiName><shortdesc class="- topic/shortdesc ">
		 Ob der Browserinhalt das HTTPS-URL-Schema verwendet (true) oder nicht (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ob der Browserinhalt das HTTPS-URL-Schema verwendet (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder nicht (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:isUserEvent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isUserEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Ob der Browseraufruf in einem Benutzerereignis resultiert (z. B. Mausklick).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ob der Browseraufruf in einem Benutzerereignis resultiert (z. B. Mausklick). In AIR 1.0 ist dies immer auf <codeph class="+ topic/ph pr-d/codeph ">true</codeph> gesetzt; AIR benötigt ein Benutzerereignis für die Initiierung des Aufrufs der Browseraufruffunktion.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:sandboxType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sandboxType</apiName><shortdesc class="- topic/shortdesc ">
		 Der Sandbox-Typ für den Browserinhalt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Der Sandbox-Typ für den Browserinhalt. Dieser Parameter kann auf einen der folgenden Werte eingestellt sein:
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph> – Der Inhalt befindet sich in der Sicherheits-Sandbox der Anwendung.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>: Der Inhalt befindet sich in der lokalen vertrauenswürdigen Sicherheitssandbox.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph> – Der Inhalt befindet sich in der local-with-filesystem-Sicherheits-Sandbox.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_NETWORK</codeph> – Der Inhalt befindet sich in der local-with-networking-Sicherheits-Sandbox.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph> – Der Inhalt befindet sich in einer Remote(-Netzwerk)-Domäne.</li></ul>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.sandboxType</linktext></link></related-links></apiValue><apiValue id="flash.events:BrowserInvokeEvent:securityDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">securityDomain</apiName><shortdesc class="- topic/shortdesc ">
		 Die Sicherheitsdomäne für den Browserinhalt, zum Beispiel „www.adobe.com“ oder „www.example.org“.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Die Sicherheitsdomäne für den Browserinhalt, zum Beispiel <codeph class="+ topic/ph pr-d/codeph ">www.adobe.com</codeph> oder <codeph class="+ topic/ph pr-d/codeph ">www.example.org</codeph>. Diese Eigenschaft wird nur für Inhalte in der Remote-Sicherheitssandbox (für Inhalte in einer Netzwerkdomäne) eingestellt, nicht für Inhalte in einer lokalen Sicherheitssandbox oder in der Sicherheitssandbox der Anwendung.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:OutputProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">OutputProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein FileStream-Objekt löst OutputProgressEvent-Objekte aus, wenn ausstehende asynchrone Dateischreibvorgänge ausgeführt werden.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für Ausgabefortschrittereignisse (für asynchrone Dateischreibvorgänge).
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein FileStream-Objekt löst OutputProgressEvent-Objekte aus, wenn ausstehende asynchrone Dateischreibvorgänge ausgeführt werden. Es gibt nur einen Typ Ausgabefortschrittereignis: <codeph class="+ topic/ph pr-d/codeph ">OutputProgressEvent.OUTPUT_PROGRESS</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links><adobeApiEvent id="flash.events:OutputProgressEvent:OUTPUT_PROGRESS_outputProgress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">outputProgress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:OutputProgressEvent:OUTPUT_PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:OutputProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:OutputProgressEvent:OutputProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">OutputProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein Ereignisobjekt, das Informationen über Ausgabefortschrittereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Es gibt nur einen Fehlerereignistyp: <codeph class="+ topic/ph pr-d/codeph ">OutputProgressEvent.OUTPUT_PROGRESS</codeph>.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Bestimmt, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesPending</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Anzahl der noch nicht geschriebenen Byte. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesTotal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Die Gesamtzahl der Byte, die geschrieben wurden oder deren Schreiben noch ausstehend ist.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für OutputProgressEvent-Objekte.
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein Ereignisobjekt, das Informationen über Ausgabefortschrittereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:OutputProgressEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des OutputProgressEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues OutputProgressEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des OutputProgressEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:OutputProgressEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des OutputProgressEvent-Objekts enthält. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des OutputProgressEvent-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des OutputProgressEvent-Objekts enthält. Der String liegt im folgenden Format vor:
    
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[OutputProgressEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> eventPhase=<i class="+ topic/ph hi-d/i ">Wert</i> bytesPending=<i class="+ topic/ph hi-d/i ">Wert</i> bytesTotal=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:OutputProgressEvent:OUTPUT_PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OUTPUT_PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
    Definiert den Wert der type-Eigenschaft eines outputProgress-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">outputProgress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">outputProgress</codeph>-Ereignisobjekts.
    
    <p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesPending</codeph></entry><entry class="- topic/entry ">Die Anzahl der verbleibenden Byte, die noch geschrieben werden müssen, zum Zeitpunkt der Verarbeitung des Ereignisses durch den Listener.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">Die Gesamtanzahl der Byte, die bei einem erfolgreichen Schreibvorgang schließlich geschrieben werden.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Der Protokollierungsstatus des FileStream-Objekts. </entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links></apiValue><apiValue id="flash.events:OutputProgressEvent:bytesPending:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPending</apiName><shortdesc class="- topic/shortdesc ">
    Die Anzahl der Byte, die noch nicht geschrieben sind, während der Listener das Ereignis verarbeitet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Anzahl der Byte, die noch nicht geschrieben sind, während der Listener das Ereignis verarbeitet.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:OutputProgressEvent:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
    Die Gesamtzahl der bisher geschriebenen Byte plus die Anzahl der noch zu schreibenden Byte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die Gesamtzahl der bisher geschriebenen Byte plus die Anzahl der noch zu schreibenden Byte.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageOrientationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageOrientationEvent</apiName><shortdesc class="- topic/shortdesc ">
 Ein Stage-Objekt setzt ein StageOrientationEvent-Objekt ab, wenn die Ausrichtung der Bühne geändert wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Ein Stage-Objekt setzt ein StageOrientationEvent-Objekt ab, wenn die Ausrichtung der Bühne geändert wird. Dazu kann es kommen, wenn das Gerät gedreht wird, wenn der Benutzer eine herausschiebbare Tastatur öffnet, oder wenn die <codeph class="+ topic/ph pr-d/codeph ">setAspectRatio()</codeph>-Methode des Stage-Objekts aufgerufen wird.
 
 <p class="- topic/p ">Es gibt zwei Typen des StageOrientationEvent-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">orientationChanging</codeph> (<codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGING</codeph>) wird abgesetzt, bevor sich der Bildschirm zu einer neuen Ausrichtung wechselt. Das Aufrufen der <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>-Methode des Ereignisobjekts, das für orientationChanging abgesetzt wird, verhindert, dass die Bühne ihre Ausrichtung ändert. <codeph class="+ topic/ph pr-d/codeph ">orientationChange</codeph> (<codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGE</codeph>) wird abgesetzt, nachdem der Bildschirm zu einer neuen Ausrichtung gewechselt ist.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Hinweis:</b> Wenn die <codeph class="+ topic/ph pr-d/codeph ">autoOrients</codeph>-Eigenschaft den Wert <codeph class="+ topic/ph pr-d/codeph ">false</codeph> hat, ändert sich die Bühnenausrichtung beim Drehen des Geräts nicht. StageOrientationEvents für die Gerätedrehung wird also nur dann abgesetzt, wenn <codeph class="+ topic/ph pr-d/codeph ">autoOrients</codeph> den Wert <codeph class="+ topic/ph pr-d/codeph ">true</codeph> hat.</p>
 
 </apiDesc><example conref="examples\Stage.orientationChangeEvent.1.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">Stage.deviceOrientation</linktext></link><link href="flash.display.xml#Stage/autoOrients" class="- topic/link "><linktext class="- topic/linktext ">Stage.autoOrients</linktext></link></related-links><adobeApiEvent id="flash.events:StageOrientationEvent:ORIENTATION_CHANGE_orientationChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">orientationChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StageOrientationEvent:ORIENTATION_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StageOrientationEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage</linktext></link><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">deviceOrientation</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StageOrientationEvent:StageOrientationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageOrientationEvent</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt ein StageOrientationEvent-Objekt mit spezifischen Informationen, die für Bühnenausrichtungs-Ereignisse relevant sind.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp: <codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGE</codeph>
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Gibt an, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs beteiligt ist.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Ereignisobjekt abgebrochen werden kann.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeOrientation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Ausrichtung vor der Änderung an.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterOrientation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt die Ausrichtung nach der Änderung an. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt ein StageOrientationEvent-Objekt mit spezifischen Informationen, die für Bühnenausrichtungs-Ereignisse relevant sind. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben. Im Allgemeinen brauchen Sie dieses Ereignis nicht mit der Konstruktorfunktion zu erstellen. Stattdessen fügen Sie einen Ereignis-Listener für das Stage-Objekt hinzu, um diese Ereignisse zu erkennen, wenn sie auftreten. 
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:StageOrientationEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Erstellt eine Kopie des StageOrientationEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues StageOrientationEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Erstellt eine Kopie des StageOrientationEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StageOrientationEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Gibt einen String zurück, der alle Eigenschaften des StageOrientationEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein String, der alle Eigenschaften des StageOrientationEvent-Objekts enthält.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Gibt einen String zurück, der alle Eigenschaften des StageOrientationEvent-Objekts enthält. Der String hat das folgende Format:
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[StageOrientationEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> beforeDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i> afterDisplayState=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StageOrientationEvent:ORIENTATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIENTATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
    Die ORIENTATION_CHANGE-Konstante definiert den Wert der type-Eigenschaft eines orientationChange-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">orientationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die <codeph class="+ topic/ph pr-d/codeph ">ORIENTATION_CHANGE</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">orientationChange</codeph>-Ereignisobjekts. Dieses Ereignis verfügt über die folgenden Eigenschaften:
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterOrientation</codeph></entry><entry class="- topic/entry ">Die neue Ausrichtung der Bühne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeOrientation</codeph></entry><entry class="- topic/entry ">Die alte Ausrichtung der Bühne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt, das die Ausrichtungsänderung abgesetzt hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>; es ist zu spät, um die Änderung abzubrechen.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage</linktext></link><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">deviceOrientation</linktext></link></related-links></apiValue><apiValue id="flash.events:StageOrientationEvent:ORIENTATION_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIENTATION_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
    Die ORIENTATION_CHANGING-Konstante definiert den Wert der type-Eigenschaft eines orientationChanging-Ereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">orientationChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Die <codeph class="+ topic/ph pr-d/codeph ">ORIENTATION_CHANGING</codeph>-Konstante definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">orientationChanging</codeph>-Ereignisobjekts.  
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Wichtig:</b> ORIENTATION_CHANGING-Ereignisse werden bei Android-Geräten nicht abgesetzt. </p>
    
    Dieses Ereignis verfügt über die folgenden Eigenschaften:
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaften</entry><entry class="- topic/entry ">Werte</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterOrientation</codeph></entry><entry class="- topic/entry ">Die neue Ausrichtung der Bühne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeOrientation</codeph></entry><entry class="- topic/entry ">Die alte Ausrichtung der Bühne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Stage-Objekt, das die Ausrichtungsänderung abgesetzt hat. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Gibt das Objekt an, das das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageOrientationEvent:afterOrientation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterOrientation</apiName><shortdesc class="- topic/shortdesc ">
             Die Ausrichtung der Bühne nach der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
             Die Ausrichtung der Bühne nach der Änderung.
               
             
             </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageOrientationEvent:beforeOrientation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeOrientation</apiName><shortdesc class="- topic/shortdesc ">
             Die Ausrichtung der Bühne vor der Änderung.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
             Die Ausrichtung der Bühne vor der Änderung.  
             
             </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ActivityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ActivityEvent</apiName><shortdesc class="- topic/shortdesc ">
Eine Kamera oder ein Mikrofon sendet ein ActivityEvent-Objekt, wenn eine Kamera oder ein Mikrofon meldet, dass sie bzw. es aktiviert oder deaktiviert wurde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ereignisobjekte für ActivityEvent-Ereignisse.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Eine Kamera oder ein Mikrofon sendet ein ActivityEvent-Objekt, wenn eine Kamera oder ein Mikrofon meldet, dass sie bzw. es aktiviert oder deaktiviert wurde. Es gibt nur einen Typ eines activity-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph>.

</apiDesc><example conref="examples\ActivityEventExample.as" class="- topic/example "> Im folgenden Beispiel wird die Verwendung der ActivityEvent-Klasse demonstriert. Dem Mikrofon wird die Ereignis-Listener-Methode <codeph class="+ topic/ph pr-d/codeph ">activityHandler()</codeph> zugewiesen, und es wird immer Text generiert, wenn das Mikrofon ein <codeph class="+ topic/ph pr-d/codeph ">activity</codeph>-Ereignis auslöst.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.ActivityEvent;
    import flash.media.Microphone;

    public class ActivityEventExample extends Sprite {
        public function ActivityEventExample() {
            var mic:Microphone = Microphone.getMicrophone();
            mic.addEventListener(ActivityEvent.ACTIVITY, activityHandler);
        }

        private function activityHandler(event:ActivityEvent):void {
            trace("event: " + event);
            trace("event.activating: " + event.activating);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ActivityEvent/ACTIVITY" class="- topic/link "><linktext class="- topic/linktext ">ActivityEvent.ACTIVITY</linktext></link></related-links><adobeApiEvent id="flash.events:ActivityEvent:ACTIVITY_activity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activity</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ActivityEvent:ACTIVITY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ActivityEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.activity</linktext></link><link href="flash.media.xml#Microphone/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.activity</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ActivityEvent:ActivityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ActivityEvent</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Aktivitätsereignisse enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Der Ereignistyp. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">type</codeph> auf diese Informationen zugreifen. Es gibt nur einen Typ eines activity-Ereignisses: <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Legt fest, ob das Ereignisobjekt an der Bubbling-Phase des Ereignisablaufs teilnimmt. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> auf diese Informationen zugreifen.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Bestimmt, ob das Ereignisobjekt abgebrochen werden kann. Ereignis-Listener können über die übernommene Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> auf diese Informationen zugreifen. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">activating</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Gibt an, ob das Gerät aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) wird. Ereignis-Listener können über die Eigenschaft <codeph class="+ topic/ph pr-d/codeph ">activating</codeph> auf diese Informationen zugreifen.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Konstruktor für ActivityEvent-Objekte.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt ein Ereignisobjekt, das Informationen über Aktivitätsereignisse enthält. Ereignisobjekte werden Ereignis-Listenern als Parameter übergeben.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ActivityEvent/ACTIVITY" class="- topic/link "><linktext class="- topic/linktext ">ActivityEvent.ACTIVITY</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ActivityEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Erstellt eine Kopie des ActivityEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ein neues ActivityEvent-Objekt mit Eigenschaftswerten, die denen des Originals entsprechen.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Erstellt eine Kopie des ActivityEvent-Objekts und stellt den Wert jeder Eigenschaft so ein, dass er dem Wert des Originals entspricht. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ActivityEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ActivityEvent-Objekts enthält.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eine Zeichenfolge, die alle Eigenschaften des ActivityEvent-Objekts enthält.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt eine Zeichenfolge zurück, die alle Eigenschaften des ActivityEvent-Objekts enthält. Das folgende Format wird verwendet:
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ActivityEvent type=<i class="+ topic/ph hi-d/i ">Wert</i> bubbles=<i class="+ topic/ph hi-d/i ">Wert</i> cancelable=<i class="+ topic/ph hi-d/i ">Wert</i> activating=<i class="+ topic/ph hi-d/i ">Wert</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ActivityEvent:ACTIVITY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ACTIVITY</apiName><shortdesc class="- topic/shortdesc ">
	Die Konstante ActivityEvent.ACTIVITY definiert den Wert der type-Eigenschaft eines Aktivitätsereignisobjekts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">activity</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Die Konstante <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph> definiert den Wert der <codeph class="+ topic/ph pr-d/codeph ">type</codeph>-Eigenschaft eines <codeph class="+ topic/ph pr-d/codeph ">activity</codeph>-Ereignisobjekts. 
	<p class="- topic/p ">Dieses Ereignis verfügt über die folgenden Eigenschaften:</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Eigenschaft</entry><entry class="- topic/entry ">Wert</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">activating</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, wenn das Gerät aktiviert wird, oder <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, wenn es deaktiviert wird.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Es gibt kein Standardverhalten, das abgebrochen werden kann.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Das Objekt, welches das Ereignisobjekt aktiv mit einem Ereignis-Listener verarbeitet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Das Objekt, mit dem eine Sitzung gestartet oder beendet wird, z. B. ein Camera- oder Microphone-Objekt.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.activity</linktext></link><link href="flash.media.xml#Microphone/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.activity</linktext></link></related-links></apiValue><apiValue id="flash.events:ActivityEvent:activating:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">activating</apiName><shortdesc class="- topic/shortdesc ">
	Gibt an, ob das Gerät aktiviert (true) oder deaktiviert (false) wird.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Gibt an, ob das Gerät aktiviert (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) oder deaktiviert (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) wird.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>