<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.text.engine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.text.engine</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.text.engine:TextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLine</apiName><shortdesc class="- topic/shortdesc ">
 TextLine クラスは、テキストを表示リストに表示するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.display:DisplayObjectContainer</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TextLine クラスは、テキストを表示リストに表示するために使用されます。
 
 <p class="- topic/p ">ActionScript コードから直接 TextLine オブジェクトを作成することはできません。<codeph class="+ topic/ph pr-d/codeph ">new TextLine()</codeph> を呼び出すと、例外がスローされます。TextLine オブジェクトを作成するには、TextBlock の <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> メソッドを呼び出します。</p>
 
 <p class="- topic/p ">TextLine は、コンテンツの生成と、行のアトムのプロパティを記述したメソッドによるインタラクティビティの提供に最低限必要な情報をカプセル化します。アトムとは、グラフィックエレメントと文字（結合された文字のグループを含む）の両方、テキスト行を構成する分割できないエンティティを指す用語です。</p>
 
 <p class="- topic/p ">テキスト行に対する通常のイベント送出処理が終了した後で、テキスト行が有効な場合は、テキスト行に指定されるコンテンツエレメントオブジェクトの <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> プロパティで指定されるイベントディスパッチャにイベントがミラーされます。これらのオブジェクトは、<codeph class="+ topic/ph pr-d/codeph ">TextLine.mirrorRegions</codeph> プロパティに記録されます。イベント通知が失敗または停止した場合や、テキスト行が有効ではない場合は、イベントがミラーされません。</p>
 
 <p class="- topic/p ">マウスイベントのミラーは特殊なケースです。ミラー領域は実際には表示オブジェクトではないので、<codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> イベントと <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> イベントはシミュレートされます。<codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> イベントと <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> イベントはシミュレートされません。自然に発生するすべての <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> イベント、<codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> イベント、<codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> イベントおよび <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> イベントは、そのターゲットがテキスト行であるか、テキスト行の子であるかに関係なしに無視され、ミラーされません。</p>
 
 <p class="- topic/p ">TextLine オブジェクトの起点は、ベースラインの先頭です。欧文ベースラインにラテン語のテキストがある行の垂直位置（<codeph class="+ topic/ph pr-d/codeph ">y</codeph> プロパティ）を設定しない場合は、Sprite の最上部の下にテキストのディセンダだけが表示されるので、そこにテキスト行を追加します。次の図を参照してください。</p>
 
 <p class="- topic/p "><adobeimage alt="テキストのベースライン" href="../../../images/TextLine.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
 <p class="- topic/p ">TextLine クラスには、DisplayObjectContainer、InteractiveObject、DisplayObject、EventDispatcher などの祖先クラスがあり、これらからプロパティやメソッドを継承します。以下に示す継承プロパティは TextLine オブジェクトに適用できません。 </p>
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">contextMenu</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusRect</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabChildren</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabEnabled</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabIndex</codeph></li></ul>
 
 <p class="- topic/p ">これらのプロパティを設定しようとすると、テキストエンジンから IllegalOperationError のエラーがスローされます。これらのプロパティは読み取ることはできますが、常にデフォルト値が設定されています。</p>
 
 </apiDesc><example conref="examples\TextLineExample.as" class="- topic/example "> 次の例では、様々なテキスト行およびテキストブロックでアトムを介して、<codeph class="+ topic/ph pr-d/codeph ">getAtomBounds()</codeph> を使用して、各テキスト行にフレームを作成する手順を表示します。
    <ol class="- topic/ol "><li class="- topic/li ">NumericStepper コンポーネントをライブラリに追加します。</li><li class="- topic/li ">このコードを FLA と同じディレクトリに TextLineExample.as という名前で保存します。</li><li class="- topic/li ">FLA のプロパティウィンドウでクラスを TextLineExample に設定します。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    import flash.text.engine.FontPosture;
    import flash.text.engine.FontWeight;
    import fl.controls.NumericStepper;
    import flash.events.Event;
    import flash.geom.Rectangle;
    
    public class TextLineExample extends Sprite {
        
        private var atomStepper:NumericStepper = new NumericStepper();
        private var atomDataContainer:Sprite;
        private var fontDescriptionItalic:FontDescription = new FontDescription("Arial", FontWeight.NORMAL, FontPosture.ITALIC);
        private var fontDescriptionNormal:FontDescription = new FontDescription("Arial", FontWeight.NORMAL , FontPosture.NORMAL);
        private var textBlock:TextBlock = new TextBlock();
        private var textLine:TextLine;
        
        public function TextLineExample():void {
            
            var myText:String = "I am a TextElement, created from a String and assigned " +
            "to the content property of a TextBlock. From the text block, " +
            "the createTextLine() method created these lines, 300 pixels wide, "  +
            "for display." ;
            
            atomStepper.minimum = 0;
            atomStepper.value = 0;
            atomStepper.width = 50;
            addChild(atomStepper);
            atomStepper.x = 20;
            atomStepper.y = 120;
            atomStepper.addEventListener(Event.CHANGE, nsChange);
            
            var directions:String = "Click up / down arrows to frame atoms in text block above.";
            
            var formatItalic:ElementFormat = new ElementFormat(fontDescriptionItalic);
            formatItalic.fontSize = 12;
            var textElement1:TextElement = new TextElement(directions, formatItalic);
            textBlock.content = textElement1;
            createLines(textBlock, 15, 160, 400, this);
            
            var formatNormal:ElementFormat = new ElementFormat(fontDescriptionNormal);
            formatNormal.fontSize = 16;
            var textElement2:TextElement = new TextElement(myText, formatNormal);
            textBlock.content = textElement2;
            createLines(textBlock, 15.0, 20.0, 300, this);
            textLine = textBlock.firstLine;
            atomStepper.maximum = textLine.atomCount - 1;
            showAtom(textLine, 0);
        }
            
        private function nsChange(event:Event):void
        {
            removeAtom(textLine);
            if (atomStepper.value == textLine.atomCount - 1)
            {
                if(textLine != textBlock.lastLine)
                {
                    textLine = textLine.nextLine;
                    atomStepper.maximum = textLine.atomCount - 1;
                    atomStepper.value = 0;
                }
            }
            showAtom(textLine, atomStepper.value);
        }
            
        private function createLines(textBlock, startX, startY, width, container)
        {
            var textLine:TextLine = textBlock.createTextLine (null, width);
            while (textLine)
            {
                textLine.x = startX;
                textLine.y = startY;
                startY += textLine.height + 2;
                container.addChild(textLine);
                textLine = textBlock.createTextLine (textLine, width);
            }
        }
            
        private function showAtom(textLine, i):void
        {
            var box:Sprite = new Sprite();
            var mcGraphics = box.graphics;
            var bounds:Rectangle = textLine.getAtomBounds(i);
            mcGraphics.lineStyle(1, 0xFF0000, 1.0);
            mcGraphics.drawRect(bounds.left, bounds.top, bounds.width, bounds.height);
            textLine.userData = textLine.addChild(box);
            displayAtomData(textLine,i);
        }
            
        private function displayAtomData(textLine, i)
        {
            if(atomDataContainer != null)
                removeChild(atomDataContainer);
            atomDataContainer=new Sprite();
            var format = new ElementFormat(fontDescriptionNormal);
            format.color = 0x00000FF;
            var n:int = 0;
            var nxtY:Number = 0;
            var atomInfo:String = "value of getAtomBidiLevel() is: " + textLine.getAtomBidiLevel(i)+"\n"
            +"value of getAtomCenter() is: " + textLine.getAtomCenter(i)+"\n"
            +"value of getAtomIndexAtCharIndex() is: " + textLine.getAtomIndexAtCharIndex(i)+"\n"
            +"value of getAtomTextBlockBeginIndex() is: " + textLine.getAtomTextBlockBeginIndex(i)+"\n"
            +"value of getAtomTextBlockEndIndex() is: " + textLine.getAtomTextBlockEndIndex(i)+"\n"
            +"value of getAtomTextRotation() is: " + textLine.getAtomTextRotation(i)+"\n";
            var atomtextBlock:TextBlock = new TextBlock();
            var textElement3:TextElement = new TextElement(atomInfo, format);
            atomtextBlock.content = textElement3;
            createLines(atomtextBlock,20,200,500, atomDataContainer)
            addChild(atomDataContainer);
        }
            
        private function removeAtom(textLine):void
        {
            textLine.removeChild(textLine.userData);
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links><apiOperation id="flash.text.engine:TextLine:dump" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dump</apiName><shortdesc class="- topic/shortdesc ">
	 TextLine の基になるコンテンツを XML ストリングとしてダンプします。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextLine の基になるコンテンツを XML ストリングとしてダンプします。これにはテキスト、書式およびレイアウト情報が含まれており、自動化されたテストで役立ちます。
	 
	 <p class="- topic/p ">次に出力について説明します。</p>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 [LINE]
	 &lt;line ascent=[Number] descent=[Number] rotation=[int]>
	 	&lt;elements>
	 		[0-N ELEMENT]
	 	&lt;/elements>
	 	&lt;clusters>
	 		[0-N CLUSTER]
	 	&lt;/clusters>
	 &lt;/line>
	 
	 [ELEMENT]
	 &lt;glyph isEmbedded=[Boolean] fontName=[String] isBold=[Boolean] isItalic=[Boolean] gid=[int] pointSize=[Number] x=[Number] y=[Number] rotation=[int]/>
	 or
	 &lt;graphic child=[int] x=[Number] y=[Number] rotation=[int]/>
	 or
	 &lt;embeddedRun x=[Number] y=[Number]>
	 	[LINE]
	 &lt;/embeddedRun>
	 
	 [CLUSTER]
	 &lt;cluster xLeft=[Number] xCenter=[Number] xRight=[Number] cursorOnLeft=[Boolean] cursorOnRight=[Boolean] wordBoundaryOnLeft=[Boolean] wordBoundaryOnRight=[Boolean]/>
	 </pre>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：</b>このメソッドからのコンテンツおよび出力のフォーマットは、今後変更される可能性があります。アドビ システムズ社は、このメソッドの後方互換性は保証していません。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:flushAtomData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flushAtomData</apiName><shortdesc class="- topic/shortdesc ">
	 このメソッドは使用されなくなり、効果はありません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDeprecated sinceVersion="Flash Player 10.1"><apiDesc class="- topic/section reference/section apiRef/apiDesc ">現在は何も実行されません</apiDesc></apiDeprecated></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このメソッドは使用されなくなり、効果はありません。アトムデータは圧縮されており、メモリ使用率の管理における要因とはなりません。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomBidiLevel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomBidiLevel</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムの双方向レベルを取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムの双方向レベルです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムの双方向レベルを取得します。<codeph class="+ topic/ph pr-d/codeph ">TextBlock.bidiLevel</codeph> と行を構成する文字の Unicode の双方向プロパティの組み合わせで決まります。
	 
	 <p class="- topic/p ">例えば、テキストブロックがヘブライ語のテキストで始まる場合、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.bidiLevel</codeph> に 1 を設定して、右から左方向をデフォルトに設定します。テキストの中に英語の引用（左から右方向）がある場合は、そのテキストの <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> には 2 が設定されています。その英語の中にアラビア語（右から左方向）が入っている場合には、<codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> は 3 になります。アラビア語の中で数字（左から右方向）が出てくる場合は、その数字の <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> の設定値は 4 です。アトムがどの行で終わるかは関係ありません。ヘブライ語のアトムは <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> が 1、英語のアトムは <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> が 2、アラビア語のアトムは <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> が 3、数字のアトムは <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> が 4 です。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/bidiLevel" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.bidiLevel</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomBounds" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomBounds</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行を基準として、指定されたインデックス位置にあるアトムの境界を取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムの境界です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行を基準として、指定されたインデックス位置にあるアトムの境界を取得します。指定されたアトムの境界は、行の水平座標（<codeph class="+ topic/ph pr-d/codeph ">x</codeph>）、行の垂直座標（<codeph class="+ topic/ph pr-d/codeph ">y</codeph>）、幅（<codeph class="+ topic/ph pr-d/codeph ">w</codeph>）および高さ（<codeph class="+ topic/ph pr-d/codeph ">h</codeph>）で構成されます。すべての値はピクセル単位です。 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomCenter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomCenter</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるベースラインに従って測定したアトムの中心を取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムの中心です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるベースラインに従って測定したアトムの中心を取得します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomGraphic" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomGraphic</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムのグラフィックを取得します（アトムが文字の場合は null）。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムのグラフィックです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:DisplayObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムのグラフィックを取得します（アトムが文字の場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph>）。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomIndexAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomIndexAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 charIndex パラメーターで指定された文字を含むアトムのインデックスを返します。行内の各アトムにその文字が指定されていない場合は -1 を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> の位置にある文字を含むアトムのインデックスです。行内の各アトムにその文字が指定されていない場合は -1 を返します。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">文字の 0 から始まるインデックス値です。つまり、最初の文字は 0、2 番目の文字は 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> パラメーターで指定された文字を含むアトムのインデックスを返します。行内の各アトムにその文字が指定されていない場合は -1 を返します。<codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> は、行を含むテキストブロックのコンテンツ全体に対する相対的な値です。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomIndexAtPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomIndexAtPoint</apiName><shortdesc class="- topic/shortdesc ">
	 x パラメーターおよび y パラメーターで指定されたポイントにあるアトムのインデックスを返します。そのポイントにアトムがない場合は -1 を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このポイントにあるアトムのインデックスです。指定されたポイントがどのアトムの上にもない場合は -1 を返します。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">stageX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">検査対象のポイントのグローバル <i class="+ topic/ph hi-d/i ">x</i> 座標です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">stageY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">検査対象のポイントのグローバル <i class="+ topic/ph hi-d/i ">y</i> 座標です。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">x</codeph> パラメーターおよび <codeph class="+ topic/ph pr-d/codeph ">y</codeph> パラメーターで指定されたポイントにあるアトムのインデックスを返します。そのポイントにアトムがない場合は -1 を返します。
	 
	 <p class="- topic/p ">このメソッドが取り出す座標値はグローバル座標なので、<codeph class="+ topic/ph pr-d/codeph ">MouseEvent.stageX</codeph> および <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.stageY</codeph> プロパティと一緒に使うことが簡単にできます。</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextBlockBeginIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムのテキストブロック開始インデックスを取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムのテキストブロック開始インデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムのテキストブロック開始インデックスを取得します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextBlockEndIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextBlockEndIndex</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムのテキストブロック終了インデックスを取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムのテキストブロック終了インデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムのテキストブロック終了インデックスを取得します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextRotation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextRotation</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムの回転を取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムの回転です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムの回転を取得します。このプロパティには、TextRotation 定数が使用されます。アトムの回転は、エレメントおよび行の累積された回転です。主に、TextLine を操作するときにキャレット（カーソル）の方向を設定するために使用されます。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomWordBoundaryOnLeft" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomWordBoundaryOnLeft</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたインデックス位置にあるアトムの左側に単語境界があるかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたアトムのインデックスは範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph> で指定された位置のアトムの左側に単語境界があるかどうかを示すブール値です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">アトムの 0 から始まるインデックス値です。つまり、最初のアトムは 0、2 番目のアトムは 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたインデックス位置にあるアトムの左側に単語境界があるかどうかを示します。単語境界は、行に指定される文字の Unicode プロパティに基づいて決定されます。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getBaselinePosition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getBaselinePosition</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock.baselineZero を基準にして、指定されたベースラインの位置を取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">baseline</codeph> が、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーでない場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineZero</codeph> を基準とする、指定されたベースラインの位置です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">位置を取得するベースラインです。<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> の値を使用します。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineZero</codeph> を基準にして、指定されたベースラインの位置を取得します。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getMirrorRegion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getMirrorRegion</apiName><shortdesc class="- topic/shortdesc ">
	 mirror パラメーターの指定と mirror プロパティが一致する、行の最初の TextLineMirrorRegion を返します。一致しない場合は null を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された値と <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph> プロパティが一致する行の最初の <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> です。一致しない場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLineMirrorRegion</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">検索対象の <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> ミラーオブジェクトです。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph> パラメーターの指定と <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph> プロパティが一致する行の最初の <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> を返します。一致しない場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> を返します。
	 <p class="- topic/p ">単一の <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> でも、双方向および改行の状態によっては 1 行または複数行に対する複数の <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> オブジェクトを作成できます。<codeph class="+ topic/ph pr-d/codeph ">nextRegion</codeph> および <codeph class="+ topic/ph pr-d/codeph ">previousRegion</codeph> プロパティは、1 つのテキストエレメントから生成されたすべてのミラー領域をリンクします。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:TextLine:MAX_LINE_WIDTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MAX_LINE_WIDTH</apiName><shortdesc class="- topic/shortdesc "> 
	テキスト行の最大要求幅（ピクセル単位）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキスト行の最大要求幅（ピクセル単位）です。 <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> メソッドはこの定数を <codeph class="+ topic/ph pr-d/codeph ">width</codeph> パラメーターの値を指定しない場合のデフォルト値として使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 アプリケーションが任意のデータをテキスト行に関連付けるための方法を提供します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 アプリケーションが任意のデータをテキスト行に関連付けるための方法を提供します。 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:ascent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ascent</apiName><shortdesc class="- topic/shortdesc ">
	 行の基準から最も高さのある文字の最上部までのピクセル数を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行の基準から最も高さのある文字の最上部までのピクセル数を指定します。グラフィックエレメントのみを含む TextLine については、<codeph class="+ topic/ph pr-d/codeph ">ascent</codeph> を 0 に設定します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:atomCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">atomCount</apiName><shortdesc class="- topic/shortdesc ">
	 行内のアトムの数、つまりスペースおよびグラフィックエレメントを含む、分割できないエレメントの数です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行内のアトムの数、つまりスペースおよびグラフィックエレメントを含む、分割できないエレメントの数です。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:descent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">descent</apiName><shortdesc class="- topic/shortdesc ">
	 行の基準から最も下に突き出している文字の最下部までのピクセル数を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行の基準から最も下に突き出している文字の最下部までのピクセル数を指定します。グラフィックエレメントのみを含む TextLine については、<codeph class="+ topic/ph pr-d/codeph ">descent</codeph> を 0 に設定します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:hasGraphicElement:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasGraphicElement</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行がグラフィックエレメントを含んでいるかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行がグラフィックエレメントを含んでいるかどうかを示します。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:hasTabs:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasTabs</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行がタブを含んでいるかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行がタブを含んでいるかどうかを示します。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:mirrorRegions:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mirrorRegions</apiName><shortdesc class="- topic/shortdesc ">
	 行に関連付けられた、TextLineMirrorRegion オブジェクトを含む Vector です。存在しない場合は null になります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.text.engine:TextLineMirrorRegion" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行に関連付けられた、<codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> オブジェクトを含む Vector です。存在しない場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:nextLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nextLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock 内の次の TextLine。現在の線がブロック内の最後の行である場合、または行の有効性が TextLineValidity.STATIC の場合は null になります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock 内の次の TextLine または <codeph class="+ topic/ph pr-d/codeph ">null</codeph>（現在の線がブロック内の最後の行である場合、または行の有効性が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> の場合）。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/previousLine" class="- topic/link "><linktext class="- topic/linktext ">previousLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:previousLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock 内の前の TextLine。これがブロック内の最初の行である場合、または行の有効性が TextLineValidity.STATIC の場合は null になります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock 内の前の TextLine。これがブロック内の最初の行である場合、または行の有効性が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> の場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/nextLine" class="- topic/link "><linktext class="- topic/linktext ">nextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:rawTextLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rawTextLength</apiName><shortdesc class="- topic/shortdesc ">
	 グラフィックエレメントを表す U+FDEF 文字および行の一部だが表示されない行末の空白を含む、行になったテキストブロック内の生のテキストの長さです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 グラフィックエレメントを表す U+FDEF 文字および行の一部だが表示されない行末の空白を含む、行になったテキストブロック内の生のテキストの長さです。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#ContentElement/rawText" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.rawText</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:specifiedWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">specifiedWidth</apiName><shortdesc class="- topic/shortdesc ">
	 行を作成したときに、TextBlock.createTextLine() メソッドに対して指定された幅です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行を作成したときに、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> メソッドに対して指定された幅です。この値は、変更によって行の改行処理が再度必要になるのかどうかを判断するときに便利です。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLine/textWidth" class="- topic/link "><linktext class="- topic/linktext ">textWidth</linktext></link><link href="flash.text.engine.xml#TextLine/unjustifiedTextWidth" class="- topic/link "><linktext class="- topic/linktext ">unjustifiedTextWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textBlockBeginIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロックの生のテキストで、行の最初にあたる文字のインデックスです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロックの生のテキストで、行の最初にあたる文字のインデックスです。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textBlock:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlock</apiName><shortdesc class="- topic/shortdesc ">
	 このテキスト行を含む TextBlock。または行の有効性が TextLineValidity.STATIC の場合は null になります。これは、行と TextBlock 間の接続が有効にされていることを意味します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextBlock</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキスト行を含む TextBlock。または行の有効性が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> の場合は null になります。これは、行と TextBlock 間の接続が有効にされていることを意味します。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textHeight</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行の論理的な高さ、つまり ascent + descent に等しくなります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行の論理的な高さ、つまり <codeph class="+ topic/ph pr-d/codeph ">ascent</codeph> + <codeph class="+ topic/ph pr-d/codeph ">descent</codeph> に等しくなります。インキが使用される高さを取得するには、継承された <codeph class="+ topic/ph pr-d/codeph ">height</codeph> プロパティにアクセスします。
	 
	 <p class="- topic/p ">値は、TextBlock.baselineZero が文字であるかどうかにより、行を結合する文字の最上部と最下部、またはアセントとディセントのいずれかの基準間の差に基づいて計算されます。グラフィックエレメントは、これらの基準の計算では考慮されません。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/height" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.height</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textWidth</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行の論理的な幅です。テキストエンジンが行をレイアウトするのに使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行の論理的な幅です。テキストエンジンが行をレイアウトするのに使用します。継承された <codeph class="+ topic/ph pr-d/codeph ">width</codeph> プロパティにアクセスし、描画されたすべてのピクセルによる境界ボックスの実際の幅を取得します。
	 
	 </apiDesc><example conref="examples\TextLine_textWidthExample.as" class="- topic/example "> この例では、以前の標準の傾きおよび以前のイタリックの行が表示されています。また、それぞれの場合に <codeph class="+ topic/ph pr-d/codeph ">specifiedWidth</codeph>、<codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> および <codeph class="+ topic/ph pr-d/codeph ">width</codeph> の各プロパティの値をトレースします。トレース出力は次のとおりです。 
 <ul class="- topic/ul "><li class="- topic/li ">specifiedWidth：500</li><li class="- topic/li ">textWidth：268.9921875</li><li class="- topic/li ">width：269</li><li class="- topic/li ">specifiedWidth：500</li><li class="- topic/li ">textWidth：267.52734375</li><li class="- topic/li ">width：267.55</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
import flash.display.Sprite;
import flash.text.engine.TextBlock;
import flash.text.engine.TextElement;
import flash.text.engine.TextLine;
import flash.text.engine.FontDescription;
import flash.text.engine.ElementFormat;
import flash.text.engine.FontPosture;

    public class TextLine_textWidthExample extends Sprite {
        
        public function TextLine_textWidthExample() {
            
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, ";
            var yPos:Number = 20;
            var fontDescription:FontDescription = new FontDescription();
            var textBlock:TextBlock = new TextBlock();
            fontDescription.fontPosture = FontPosture.NORMAL;
            var format:ElementFormat = new ElementFormat(fontDescription, 12);
            var textElement:TextElement = new TextElement(str, format);
            textBlock.content = textElement;
            createLine(textBlock, yPos);
            var fontDescriptionItalic = fontDescription.clone();
            fontDescriptionItalic.fontPosture = FontPosture.ITALIC;
            var formatItalic = new ElementFormat(fontDescriptionItalic, 12);
            textElement = new TextElement(str, formatItalic);
            textBlock.content = textElement;
            createLine(textBlock, yPos + 20);
        }

        private function createLine(textBlock:TextBlock, yPos:Number):void {
            var textLine:TextLine = textBlock.createTextLine (null, 500);
            trace("specifiedWidth is: " + textLine.specifiedWidth);
            trace("textWidth is: " + textLine.textWidth);
            trace("width is: " + textLine.width);
            addChild(textLine);
            textLine.x = 15;
            textLine.y = yPos;     
        }
    }
}

</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/specifiedWidth" class="- topic/link "><linktext class="- topic/linktext ">specifiedWidth</linktext></link><link href="flash.display.xml#DisplayObject/width" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.width</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:totalAscent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalAscent</apiName><shortdesc class="- topic/shortdesc ">
	 行のベースラインから最も高さのある文字またはグラフィックの最上部までのピクセル数を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行のベースラインから最も高さのある文字またはグラフィックの最上部までのピクセル数を指定します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:totalDescent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalDescent</apiName><shortdesc class="- topic/shortdesc ">
	 行のベースラインから最も下に突き出している文字またはグラフィックの最下部までのピクセル数を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行のベースラインから最も下に突き出している文字またはグラフィックの最下部までのピクセル数を指定します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:totalHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalHeight</apiName><shortdesc class="- topic/shortdesc ">
	 totalAscent + totalDescent に等しい、テキスト行の論理的な高さです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">totalAscent </codeph> + <codeph class="+ topic/ph pr-d/codeph ">totalDescent</codeph> に等しい、テキスト行の論理的な高さです。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:unjustifiedTextWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">unjustifiedTextWidth</apiName><shortdesc class="- topic/shortdesc ">
	 均等配置をしていない場合の行の幅です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 均等配置をしていない場合の行の幅です。均等配置されていないテキストの場合、この値は <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> と同じです。均等配置されているテキストの場合、この値は均等配置されていなかった場合の長さであり、<codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> の値が実際の行の幅を表します。例えば、次のストリングが均等配置され、幅に 500 を指定して <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> に送信された場合は、実際の幅が 500 ですが、均等配置されていない幅は 268.9921875 になります。
	 
	 </apiDesc><example class="- topic/example ">次の例のストリングが均等配置され、幅に 500 を指定して TextBlock.createTextLine() に送信されたときには、実際の幅が 500 になりますが、均等配置されていない幅は 268.9921875 です。
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 import flash.display.Sprite;
	 import flash.text.engine.TextBlock;
	 import flash.text.engine.TextElement;
	 import flash.text.engine.TextLine;
	 import flash.text.engine.FontDescription;
	 import flash.text.engine.ElementFormat;
	 import flash.text.engine.SpaceJustifier;
	 import flash.text.engine.LineJustification;

	 var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, ";
	 var fontDescription:FontDescription = new FontDescription();
	 var textBlock:TextBlock = new TextBlock();
	 var format:ElementFormat = new ElementFormat(fontDescription, 12);
	 var textElement:TextElement = new TextElement(str, format);
	 textBlock.content = textElement;
	 var spaceJustifier:SpaceJustifier = new SpaceJustifier("en", LineJustification.ALL_INCLUDING_LAST);
	 textBlock.textJustifier = spaceJustifier;
	 var textLine:TextLine = textBlock.createTextLine(null, 500);
	 textLine.y = 20;

	 addChild(textLine);
	 trace("textWidth value is: " + textLine.textWidth);		// 500.00244140625
	 trace("unjustifiedTextWidth is: " + textLine.unjustifiedTextWidth); // 268.9921875
	 </codeblock>
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextLine/specifiedWidth" class="- topic/link "><linktext class="- topic/linktext ">specifiedWidth</linktext></link><link href="flash.text.engine.xml#TextLine/textWidth" class="- topic/link "><linktext class="- topic/linktext ">textWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:validity:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">validity</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行の現在の有効性を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">現在の値が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph> の場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">現在の値が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph> で、新しい値が <codeph class="+ topic/ph pr-d/codeph ">TextValidity.STATIC</codeph> 以外の値である場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">現在の値が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.POSSIBLY_INVALID</codeph> で、新しい値が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.VALID</codeph> である場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">新しい値が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.POSSIBLY_INVALID</codeph> の場合。
     	 
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行の現在の有効性を指定します。このプロパティの値は、<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> クラスのメンバー内に含まれます。このプロパティの設定規則は、次のようになります。
	 
	 <p class="- topic/p ">有効性が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> のメンバーではないいずれかのストリングに設定される場合、行は USER_INVALID であると見なされます。USER_INVALID は、このような値を表すためにここで使用される抽象値です。</p>
	 
	 <p class="- topic/p ">TextBlock のコンテンツが変更されると、Flash ランタイムは、影響を受けたテキスト行、前の行およびすべての継続行を INVALID としてマークします。以前は最初に影響を受けた行にあったコンテンツ部分が、変更によってその前の行に取り込まれるようになる場合、前の行は無効とマークされる必要があります。</p>
	 
	 <p class="- topic/p ">新しく改行された行は、常に VALID です。Flash ランタイムは、継続行を VALID から POSSIBLY_INVALID または INVALID に変更することがあります。このコードは、改行内容が同じである場合は POSSIBLY_INVALID の行を VALID に、同じでない場合は INVALID に変更します。</p>
	 
	 <p class="- topic/p ">アプリケーションコードでは、VALID の行を INVALID または USER_INVALID とマークしたり、USER_INVALID の行を VALID とマークしたりできます。アプリケーションコードは、行を POSSIBLY_INVALID とマークすることはできません。</p>
	 
	 <p class="- topic/p ">アプリケーションコードは、いずれの行も STATIC とマークできます。この操作を行うと、<codeph class="+ topic/ph pr-d/codeph ">block</codeph> メンバーが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。STATIC のテキスト行内のグラフィックエレメントが STATIC のテキスト行の派生元であるテキストブロックから改行された新しいテキスト行の部分である場合、それらはすべて削除され、親が再設定されます。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/firstInvalidLine" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.firstInvalidLine</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TabStop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TabStop</apiName><shortdesc class="- topic/shortdesc ">
 TabStop クラスは、テキストブロック内のタブストップのプロパティを表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TabStop クラスは、テキストブロック内のタブストップのプロパティを表します。タブストップを TabStop オブジェクトの Vector として、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.tabStops</codeph> プロパティに割り当てます。
 
 <p class="- topic/p ">TabStop オブジェクトが TextBlock に適用された後で TabStop オブジェクトのプロパティを設定しても、TextBlock は無効化されません。</p>
 
 </apiDesc><example conref="examples\TabStopExample.as" class="- topic/example "> この例では、4 種類のタブストップの整列設定（START、CENTER、DECIMAL、END）の効果について示しています。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    
    import flash.text.engine.*;
    import flash.display.Sprite;
    
    public class TabStopExample extends Sprite {
        
        public function TabStopExample():void {
            var container:Sprite = new Sprite(); 
            
            var english:ElementFormat = new ElementFormat(); 
            english.fontDescription = new FontDescription("Arial"); 
            english.fontSize = 16;
            english.locale = "en"; 
            
            var tabStops:Vector.&lt;TabStop> = new Vector.&lt;TabStop>();    
            tabStops.push(
                new TabStop(TabAlignment.START, 20),
                new TabStop(TabAlignment.CENTER, 120),
                new TabStop(TabAlignment.DECIMAL, 220, "."),
                new TabStop(TabAlignment.END, 320)
            ); 
    
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = new TextElement(
                "\tstart\tcenter\tdeci.mal\tend\n" +        
                "\tl\tl\t3.4\tl\n" +
                "\tlm\tlm\t234.56\tlm\n" +
                "\tlmn\tlmn\t12345678.34567\tlmn\n"
                , english); 
            textBlock.tabStops = tabStops;
            var y:Number = 60;
            var previousTextLine:TextLine = null; 
            var textLine:TextLine;
            var i:int;
            var tabOrigin:Number = 100;
            for (i = 0; i &lt; 4; i++) {
                textLine = textBlock.createTextLine(previousTextLine, 1000, 0); 
                textLine.x = 20;
                textLine.y = y; 
                
                container.addChild(textLine);     
                
                y += 25; 
                previousTextLine = textLine; 
            }
            addChild(container);        
        }
    }
}

</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.tabStops</linktext></link><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link></related-links><apiConstructor id="flash.text.engine:TabStop:TabStop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TabStop</apiName><shortdesc class="- topic/shortdesc ">
	 新しい TabStop を作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph> のメンバーではありません。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alignment</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">start</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このタブストップのタブの整列タイプです。このプロパティの有効な値は、<codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph> クラスのメンバー内に含まれます。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph> です。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">position</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">タブストップの位置です（ピクセル単位）。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">decimalAlignmentToken</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> が <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph> の場合に使用する整列トークン。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">""</codeph> です。
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 新しい TabStop を作成します。
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:TabStop:alignment:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alignment</apiName><shortdesc class="- topic/shortdesc ">
	 このタブストップのタブの整列を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph> のメンバーではないいずれかの値に設定する場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このタブストップのタブの整列を指定します。TabAlignment クラスの定数を使用して、このプロパティを設定します。
	 
	 <p class="- topic/p ">デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph> です。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">lineOffset</codeph> 引数（<codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> に対する）を使用すると、行の起点が、同じタブストップを共有する他の行に整列しない場合に、タブを調整できます。</p>
	 
	 <p class="- topic/p ">TabAlignment クラスの次の定数を使用して、このプロパティの値を設定します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph> プロパティは、タブで区切ったテキストの先頭がテキスト行の先頭から何ピクセルの位置かを指定します。<i class="+ topic/ph hi-d/i "/></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.CENTER</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph> プロパティは、タブで区切ったテキストの中心がテキスト行の先頭から何ピクセルの位置かを指定します。<i class="+ topic/ph hi-d/i "/></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.END</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph> プロパティは、タブで区切ったテキストの最後尾がテキスト行の先頭から何ピクセルの位置かを指定します。<i class="+ topic/ph hi-d/i "/></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph> プロパティは、整列トークンがテキスト行の先頭から何ピクセルの位置かを指定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabStop:decimalAlignmentToken:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">decimalAlignmentToken</apiName><shortdesc class="- topic/shortdesc ">
	 alignment プロパティを TabAlignment.DECIMAL に設定する場合に使用する整列トークンを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> プロパティを <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph> に設定する場合に使用する整列トークンを指定します。値はテキストラインで発生する String になります。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">""</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment/DECIMAL" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment.DECIMAL</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabStop:position:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">position</apiName><shortdesc class="- topic/shortdesc ">
	 テキスト行の先頭を基準としたタブストップの位置です（ピクセル単位）。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">0.0 未満の値に設定する場合。
   	  
   	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキスト行の先頭を基準としたタブストップの位置です（ピクセル単位）。
	 
	 <p class="- topic/p ">デフォルト値は 0.0 です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontLookup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontLookup</apiName><shortdesc class="- topic/shortdesc ">
FontLookup クラスは、FontDescription.fontLookup で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
FontLookup クラスは、<codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontLookup</codeph> で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.fontLookup</linktext></link></related-links><apiValue id="flash.text.engine:FontLookup:DEVICE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEVICE</apiName><shortdesc class="- topic/shortdesc "> 
	デバイスフォントのルックアップを示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">device</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	デバイスフォントのルックアップを示すために使用します。 Flash ランタイムは、アプリケーションを実行するシステムにインストールされているフォントを使用します。
	
	<p class="- topic/p ">フォントデータがファイルに含まれないので、デバイスフォントを使用するとムービーサイズが小さくなります。</p>
	
	<p class="- topic/p ">システムにインストールされているフォントが Flash ランタイムによって使用されるので、デバイスフォントを使用して表示されるテキストは、異なるシステムおよびプラットフォームでは必ずしも同じように表示される訳ではありません。</p>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontLookup:EMBEDDED_CFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMBEDDED_CFF</apiName><shortdesc class="- topic/shortdesc "> 
	埋め込み CFF（コンパクトフォントフォーマット）フォントのルックアップを示すために使用します。 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">embeddedCFF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	埋め込み CFF（コンパクトフォントフォーマット）フォントのルックアップを示すために使用します。 Flash ランタイムはパブリッシュされたアプリケーションに埋め込まれたフォントアウトラインを使用します。
	
	<p class="- topic/p ">埋め込みフォントを使用するテキストフィールドは、常に選択されたフォントで表示されます。そのフォントが再生システムにインストールされているかどうかは関係ありません。</p>
	
	<p class="- topic/p ">埋め込みフォントの 1 つの欠点は、アプリケーションのサイズが大きくなることです。</p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:DigitCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DigitCase</apiName><shortdesc class="- topic/shortdesc ">
DigitCase クラスは、ElementFormat クラスの digitCase プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
DigitCase クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">digitCase</codeph> プロパティの設定で使用される定数値の列挙です。 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/digitCase" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.ElementFormat.digitCase</linktext></link></related-links><apiValue id="flash.text.engine:DigitCase:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	デフォルトの数字の大文字小文字区別を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	デフォルトの数字の大文字小文字区別を指定するために使用されます。結果はフォントによって異なります。文字には、フォントデザイナーによって指定された何も機能を適用しない状態の設定が使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitCase:LINING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINING</apiName><shortdesc class="- topic/shortdesc "> 
	ライニング数字の大文字小文字区別を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lining</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ライニング数字の大文字小文字区別を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitCase:OLD_STYLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OLD_STYLE</apiName><shortdesc class="- topic/shortdesc "> 
	オールドスタイル数字の大文字小文字区別を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">oldStyle</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	オールドスタイル数字の大文字小文字区別を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TypographicCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TypographicCase</apiName><shortdesc class="- topic/shortdesc ">
TypographicCase クラスは、ElementFormat クラスの typographicCase プロパティの設定のための定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TypographicCase クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">typographicCase</codeph> プロパティの設定で使用される定数値の列挙です。 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/typographicCase" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.typographicCase</linktext></link></related-links><apiValue id="flash.text.engine:TypographicCase:CAPS_AND_SMALL_CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPS_AND_SMALL_CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	出力時にすべての小文字でスモールキャップス文字を使用するよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">capsAndSmallCaps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時にすべての小文字でスモールキャップス文字を使用するよう指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	出力時に大文字の間隔が調整されるよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">caps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時に大文字の間隔が調整されるよう指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	デフォルトの大文字小文字区別を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	デフォルトの大文字小文字区別を指定します。結果はフォントによって異なります。文字には、フォントデザイナーによって指定された何も機能を適用しない状態の設定が使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:LOWERCASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOWERCASE</apiName><shortdesc class="- topic/shortdesc "> 
	出力時にすべての文字で小文字を使用するよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lowercase</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時にすべての文字で小文字を使用するよう指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:SMALL_CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SMALL_CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	出力時に大文字でスモールキャップ文字を使用するよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">smallCaps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時に大文字でスモールキャップ文字を使用するよう指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:TITLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TITLE</apiName><shortdesc class="- topic/shortdesc "> 
	出力時にタイトル文字に大文字を使用するよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">title</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時にタイトル文字に大文字を使用するよう指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:UPPERCASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPPERCASE</apiName><shortdesc class="- topic/shortdesc "> 
	出力時にすべての文字で大文字を使用するよう指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uppercase</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	出力時にすべての文字で大文字を使用するよう指定します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextElement</apiName><shortdesc class="- topic/shortdesc ">
 TextElement クラスは、フォーマットされたテキストのストリングを表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TextElement クラスは、フォーマットされたテキストのストリングを表します。TextElement オブジェクトを、TextBlock オブジェクトの <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティに割り当て、テキストのブロックを作成します。GroupElement オブジェクトに割り当てて、単位として他のテキストエレメントまたはグラフィックエレメントと結合します。テキストをフォーマットするには、ElementFormat クラスを使用します。
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links><apiConstructor id="flash.text.engine:TextElement:TextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextElement</apiName><shortdesc class="- topic/shortdesc ">
	 新しい TextElement インスタンスを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントのテキストです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメント内のテキストのエレメント形式です。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このコンテンツエレメントに基づいたテキスト行に送出されるすべてのイベントのコピーを受け取る <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントを単位として適用される回転です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> 定数を使用します。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> です。
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 新しい TextElement インスタンスを作成します。 
	 
	 </apiDesc><example conref="examples\TextElementExample.as" class="- topic/example "> 次の例では、テキストのストリングから TextElement オブジェクトを作成し、フォントサイズ 12 と赤（0xCC0000）でフォーマットし、TextBlock の <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティに割り当てます。createLines() 関数を呼び出して、テキストのブロックを改行して、それぞれ 150 ピクセルの行にします。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    
    public class TextElementExample extends Sprite {
        
        public function TextElementExample():void {
            
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, " +
            "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut " +
            "enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut " +
            "aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit " +
            "in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " +
            "sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt " +
            "mollit anim id est laborum.";
            
            var format:ElementFormat = new ElementFormat(null, 12, 0xCC0000);
            var textElement:TextElement = new TextElement(str, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement; 
            createLines(textBlock);
        }
        
        private function createLines(textBlock:TextBlock):void {
        
            var yPos = 20;
            var textLine:TextLine = textBlock.createTextLine (null, 150);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.textHeight+2;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, 150);
            }        
        }
    }
}
</codeblock></example></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:TextElement:replaceText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceText</apiName><shortdesc class="- topic/shortdesc ">
	 beginIndex パラメーターと endIndex パラメーターで指定された文字範囲を、newText パラメーターの内容に置き換えます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> または <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> は範囲外です。
     	 
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">置換範囲の開始位置の 0 から始まるインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">置換範囲の終了位置に後続する位置の 0 ベースのインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newText</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字範囲の置き換えに使用されるテキストです。
	  
     	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> パラメーターと <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> パラメーターで指定された文字範囲を、<codeph class="+ topic/ph pr-d/codeph ">newText</codeph> パラメーターの内容に置き換えます。<codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> と <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> の値は、<codeph class="+ topic/ph pr-d/codeph ">text</codeph> の現在のコンテンツを参照します。
	 <p class="- topic/p ">テキストを削除するには、<codeph class="+ topic/ph pr-d/codeph ">null</codeph> を <codeph class="+ topic/ph pr-d/codeph ">newText</codeph> に渡します。</p>
	 <p class="- topic/p ">テキストを挿入するには、<codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> および <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> に同じ値を渡します。新しいテキストは、指定されたインデックスの前に挿入されます。</p>
	 <p class="- topic/p ">テキストを追加するには、<codeph class="+ topic/ph pr-d/codeph ">text.length</codeph> を <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> および <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> に渡します。</p>
	 <p class="- topic/p ">すべてのテキストを設定するには、0 を <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> に渡し、<codeph class="+ topic/ph pr-d/codeph ">text.length</codeph> を <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> に渡します。</p>
	 
	 </apiDesc><example conref="examples\TextElement_replaceTextExample.as" class="- topic/example "> この例は、<codeph class="+ topic/ph pr-d/codeph ">replaceText()</codeph> を複数回呼び出して、以下を実行します。
     <ul class="- topic/ul "><li class="- topic/li "> テキストの起点にストリングを挿入</li><li class="- topic/li "> テキストの最後にストリングを追加</li><li class="- topic/li "> テキストの途中にストリングを挿入</li><li class="- topic/li "> テキストを新しいテキストで完全に置き換え</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    
    
    public class TextElement_replaceTextExample extends Sprite {
        public function TextElement_replaceTextExample():void {
            
            var str:String = "0123456";
            var fontDescription:FontDescription = new FontDescription("Arial");
            var format:ElementFormat = new ElementFormat(fontDescription);
            format.fontSize = 14;
            var textElement:TextElement = new TextElement(str, format);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textElement.replaceText(0, 0, "abc");  
            createLine(textBlock, 20);           //"abc0123456"
            textElement.replaceText(10, 10, "abc");   
            createLine(textBlock, 40);            // "abc0123456abc"
            textElement.replaceText(5, 8, "abc");
            createLine(textBlock, 60);         // "abc01abc56abc"
            textElement.replaceText(0, 13, "abc");
            createLine(textBlock, 80);            // "abc"
            textElement.replaceText(0, 3, "That's all she wrote!");
            createLine(textBlock, 100);        // "That's all she wrote" */
        }
            
        private function createLine(textBlock:TextBlock, y:Number):void {
            var textLine:TextLine = textBlock.createTextLine(null, 150);
            textLine.x = 10;
            textLine.y = y;
            addChild(textLine);
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:TextElement:text:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 エレメントのコンテンツであるテキストを受け取ります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 エレメントのコンテンツであるテキストを受け取ります。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineValidity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineValidity</apiName><shortdesc class="- topic/shortdesc ">
TextLineValidity クラスは、TextLine クラスの validity プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TextLineValidity クラスは、TextLine クラスの <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> プロパティの設定で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/firstInvalidLine" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.firstInvalidLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link></related-links><apiValue id="flash.text.engine:TextLineValidity:INVALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVALID</apiName><shortdesc class="- topic/shortdesc "> 
	テキスト行が無効であることを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invalid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキスト行が無効であることを指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:POSSIBLY_INVALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">POSSIBLY_INVALID</apiName><shortdesc class="- topic/shortdesc "> 
	テキスト行が無効である可能性があることを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">possiblyInvalid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキスト行が無効である可能性があることを指定します。Flash ランタイムは、この有効性を使用して、コンテンツが変更されていない、以前に改行されたテキストブロックを再改行します。この値は設定できません。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:STATIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STATIC</apiName><shortdesc class="- topic/shortdesc "> 
	行が静的で、行とテキストブロック間の接続を有効にすることを指定します。  </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">static</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行が静的で、行とテキストブロック間の接続を有効にすることを指定します。  
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:VALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VALID</apiName><shortdesc class="- topic/shortdesc "> 
	テキスト行が有効であることを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">valid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキスト行が有効であることを指定します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontPosture" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontPosture</apiName><shortdesc class="- topic/shortdesc ">
FontPosture クラス は、テキストを斜体や通常に設定するために FontDescription.fontPosture と一緒に使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
FontPosture クラス は、テキストを斜体や通常に設定するために <codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontPosture</codeph> と一緒に使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.fontPosture</linktext></link></related-links><apiValue id="flash.text.engine:FontPosture:ITALIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ITALIC</apiName><shortdesc class="- topic/shortdesc "> 
	イタリックのフォントの傾斜を示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">italic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	イタリックのフォントの傾斜を示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontPosture:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc "> 
	標準のフォントの傾斜を示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	標準のフォントの傾斜を示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:JustificationStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">JustificationStyle</apiName><shortdesc class="- topic/shortdesc ">
JustificationStyle クラスは、EastAsianJustifier クラスの justificationStyle プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
JustificationStyle クラスは、EastAsianJustifier クラスの <codeph class="+ topic/ph pr-d/codeph ">justificationStyle</codeph> プロパティの設定で使用される定数値の列挙です。 これらの定数値は、禁則文字の取扱いオプションを指定します。禁則文字とは日本語の文字で、行の最初や最後にすることのできない文字です。

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier/justificationStyle" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier.justificationStyle</linktext></link></related-links><apiValue id="flash.text.engine:JustificationStyle:PRIORITIZE_LEAST_ADJUSTMENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PRIORITIZE_LEAST_ADJUSTMENT</apiName><shortdesc class="- topic/shortdesc "> 
	行の拡張または圧縮（必要な幅に最も近い結果が得られる方）に応じて、均等配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">prioritizeLeastAdjustment</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行の拡張または圧縮（必要な幅に最も近い結果が得られる方）に応じて、均等配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:JustificationStyle:PUSH_IN_KINSOKU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUSH_IN_KINSOKU</apiName><shortdesc class="- topic/shortdesc "> 
	行末の圧縮される禁則に応じて、または禁則がない場合やスペースが不足している場合の拡張に応じて、均等配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pushInKinsoku</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行末の圧縮される禁則に応じて、または禁則がない場合やスペースが不足している場合の拡張に応じて、均等配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:JustificationStyle:PUSH_OUT_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUSH_OUT_ONLY</apiName><shortdesc class="- topic/shortdesc "> 
	行の拡張に応じて均等配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pushOutOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行の拡張に応じて均等配置します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:EastAsianJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EastAsianJustifier</apiName><shortdesc class="- topic/shortdesc ">
 EastAsianJustifier クラスは、コンテンツが主に日中韓のテキストであるテキスト行に対する均等配置オプションを制御するためのプロパティを持っています。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:TextJustifier</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 EastAsianJustifier クラスは、コンテンツが主に日中韓のテキストであるテキスト行に対する均等配置オプションを制御するためのプロパティを持っています。 
 
 <p class="- topic/p "> EastAsianJustifier オブジェクトのプロパティを設定する前に、コンストラクター <codeph class="+ topic/ph pr-d/codeph ">new EastAsianJustifier()</codeph> を使用して EastAsianJustifier オブジェクトを作成する必要があります。EastAsianJustifier オブジェクトが TextBlock に適用された後で EastAsianJustifier オブジェクトのプロパティを設定しても、TextBlock は無効化されません。</p>
 
 </apiDesc><example conref="examples\EastAsianJustifierExample.as" class="- topic/example "> この例は、EastAsianJustifier プロパティを使ってテキストの均等配置を行った日本語テキストのブロックの縦書き表示です。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextBaseline;
    import flash.text.engine.EastAsianJustifier;
    import flash.text.engine.LineJustification;
    import flash.text.engine.TextRotation;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ElementFormat;
    import flash.display.Stage;
    import flash.display.Sprite;
    import flash.system.Capabilities;
    
    public class EastAsianJustifierExample extends Sprite {
        
        public function EastAsianJustifierExample():void {
            
            var Japanese_txt:String = String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002);
            
            var textBlock:TextBlock = new TextBlock();
            var font:FontDescription = new FontDescription();
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 12;
            format.locale = "ja";
            format.color = 0xCC0000;
            textBlock.baselineZero = TextBaseline.IDEOGRAPHIC_CENTER;
            textBlock.textJustifier = new EastAsianJustifier("ja", LineJustification.ALL_INCLUDING_LAST);
            textBlock.lineRotation = TextRotation.ROTATE_90;
            var linePosition:Number = this.stage.stageWidth - 75;
            if (Capabilities.os.search("Mac OS") > -1) 
                // set fontName: Kozuka Mincho Pro R
                font.fontName = String.fromCharCode(0x5C0F, 0x585A, 0x660E, 0x671D) + " Pro R";                     
            else 
                font.fontName = "Kozuka Mincho Pro R";
            textBlock.content = new TextElement(Japanese_txt, format);
            var previousLine:TextLine = null;
                
            while (true) 
            {
                var textLine:TextLine = textBlock.createTextLine(previousLine, 320);
                if (textLine == null) 
                    break;
                textLine.y = 20;
                textLine.x = linePosition;
                linePosition -= 25;
                addChild(textLine);                
                previousLine = textLine;
            }
        }
    }
}


</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:EastAsianJustifier:EastAsianJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">EastAsianJustifier</apiName><shortdesc class="- topic/shortdesc ">
     EastAsianJustifier オブジェクトを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> であるか、有効なロケールを表すには短すぎます。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">justificationStyle</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">JustificationStyle</codeph> のメンバーではありません。
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">ja</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">均等配置規則を決定するためのロケールです。デフォルト値は<codeph class="+ topic/ph pr-d/codeph ">「ja」</codeph>です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">allButLast</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">段落に対する行の均等配置タイプです。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> 定数を使用します。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_BUT_LAST</codeph> です。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">justificationStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">pushInKinsoku</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">日中韓の均等配置を使用した、テキストブロック内のテキストの均等配置スタイルです。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">JustificationStyle</codeph> 定数を使用します。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph> です。
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     EastAsianJustifier オブジェクトを作成します。
     
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:EastAsianJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 EastAsianJustifier のクローンコピーを構築します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>In the Flash Player 10 release, this method is for internal use. In future releases,
	 users will be able to subclass this class and will then need to use this method. This class is 
	 currently stored as a live reference, but there is no way to track when its properties change.  
	 This means that when changes are made, text blocks are not invalidated, which in the current 
	 implementation can lead to player crashes.  Even from the API perspective its wrong, as the affected 
	 text lines should be marked INVALID when format changes are made, but they�re not. The solution is 
	 to use a copy-on-set model.  When the object is passed in, the player copies it, so later changes to 
	 the object that was passed in have no effect. The setter makes an internal copy of the array; the 
	 getter returns a copy of the internal copy. Operations like 
         myBlock.textJustifier.justificationStyle = JustificationStyle.PUSH_IN_KINSOKU will have no effect. 
         Users who subclass this class in the future will need to use the clone() method to 
	 implement this technique of 'locking' the format once it has been set.
	 
	 </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">EastAsianJustifier</codeph> オブジェクトのコピーです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 EastAsianJustifier のクローンコピーを構築します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:EastAsianJustifier:justificationStyle:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">justificationStyle</apiName><shortdesc class="- topic/shortdesc ">
     テキストブロック内のテキストの均等配置スタイルを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     テキストブロック内のテキストの均等配置スタイルを指定します。
     
     <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph> です。</p>
     
	 <p class="- topic/p ">JustificationStyle クラスの定数の 1 つを使用して、このプロパティの値に設定します。次の表に、指定できる値を示します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph></entry><entry class="- topic/entry ">追い込みでの均等配置を指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_OUT_ONLY</codeph></entry><entry class="- topic/entry ">追い出しでの均等配置を指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT</codeph></entry><entry class="- topic/entry ">調整を最低限にすることが優先される均等配置を指定します。</entry></row></tbody></tgroup></adobetable>
	 
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:RenderingMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">RenderingMode</apiName><shortdesc class="- topic/shortdesc ">
RenderingMode クラスにより、FontDescription クラスのレンダリングモードの値を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
RenderingMode クラスにより、FontDescription クラスのレンダリングモードの値を指定します。
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links><apiValue id="flash.text.engine:RenderingMode:CFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CFF</apiName><shortdesc class="- topic/shortdesc ">
	CFF（コンパクトフォントフォーマット）のレンダリングモードを設定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cff</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	CFF（コンパクトフォントフォーマット）のレンダリングモードを設定します。CFF レンダリングは、ディスプレイ上のテキストを読みやすくします。この設定は、小さなテキストが多いアプリケーションにお勧めします。この定数は、FontDescription クラスの <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> プロパティで使用されます。シンタックス <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph> を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.renderingMode</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:RenderingMode:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
	レンダリングモードを、Flash Player 7 以前で使用されているレンダリングモードに設定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	レンダリングモードを、Flash Player 7 以前で使用されているレンダリングモードに設定します。アニメーションテキストでは、この設定をお勧めします。この定数は、FontDescription クラスの <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> プロパティで使用されます。シンタックス <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.NORMAL</codeph> を使用します。
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.renderingMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontMetrics</apiName><shortdesc class="- topic/shortdesc ">
 FontMetrics クラスには、フォントに関する寸法およびオフセットの情報が含まれます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 FontMetrics クラスには、フォントに関する寸法およびオフセットの情報が含まれます。<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.getFontMetrics()</codeph> メソッドはこのクラスのオブジェクトを返します。
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/getFontMetrics()" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.getFontMetrics()</linktext></link></related-links><apiConstructor id="flash.text.engine:FontMetrics:FontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FontMetrics</apiName><shortdesc class="- topic/shortdesc ">
	 FontMetrics オブジェクトを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">emBox</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの em ボックスです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">strikethroughOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">取り消し線のオフセットです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">strikethroughThickness</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">取り消し線の太さです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">underlineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">下線のオフセットです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">underlineThickness</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">下線の太さです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriptOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">下付きのオフセットです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriptScale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">下付きのポイントサイズに適用する拡大 / 縮小率です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">superscriptOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">上付きのオフセットです（ピクセル単位）。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">superscriptScale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">上付きのポイントサイズに適用する拡大 / 縮小率です。
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 FontMetrics オブジェクトを作成します。FontMetrics オブジェクトには、エレメント形式のフォントのメトリックに関する情報が含まれます。<codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.ElementFormat.getFontMetrics()</codeph> メソッドはこのクラスのオブジェクトを返します。
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/getFontMetrics()" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.getFontMetrics()</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:FontMetrics:emBox" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">emBox</apiName><shortdesc class="- topic/shortdesc ">
	 em ボックス値は、フォントのデザイン領域を表し、中国語、韓国語または日本語の文字を欧文ベースラインを基準にして配置するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 em ボックス値は、フォントのデザイン領域を表し、中国語、韓国語または日本語の文字を欧文ベースラインを基準にして配置するために使用されます。通常は四角形であり、フォントのポイントサイズに合わせられます。em ボックスの起点（座標 0、0）は、四角形の左端および欧文ベースラインに設定されます。例えば、10 ポイントのフォントでは、em ボックスの四角形の「左端、上端、右端、下端」は「0、-8.8、10、1.2」になります。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:strikethroughOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">strikethroughOffset</apiName><shortdesc class="- topic/shortdesc ">
	 strikethroughOffset 値は、欧文ベースラインからの取り消し線に設定可能な垂直方向オフセットです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 strikethroughOffset 値は、欧文ベースラインからの取り消し線に設定可能な垂直方向オフセットです。
	 
	 <p class="- topic/p ">行の回転によって、この値は取り消し線の位置を検索する行の位置から加算または減算されます。<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> に設定された行では、<codeph class="+ topic/ph pr-d/codeph ">strikethrough.y = line.y + strikethroughOffset</codeph> になります。<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph> に設定された行では、<codeph class="+ topic/ph pr-d/codeph ">strikethrough.x = line.x - strikethroughOffset</codeph> になります。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> に取り消し線などの文字飾りを適用する場合、推奨される手順では <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> を指定します。これは、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> に対して文字飾りを使用します。<codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph> イベントに応答して、<codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> の <codeph class="+ topic/ph pr-d/codeph ">bounds</codeph> を、取り消し線を配置する <codeph class="+ topic/ph pr-d/codeph ">strikethroughOffset</codeph> と組み合わせて使用することができます。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:strikethroughThickness" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">strikethroughThickness</apiName><shortdesc class="- topic/shortdesc ">
	 strikethroughThickness 値は、取り消し線に設定可能な太さです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 strikethroughThickness 値は、取り消し線に設定可能な太さです。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:subscriptOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subscriptOffset</apiName><shortdesc class="- topic/shortdesc ">
	 subscriptOffset 値は、欧文ベースラインからの下付きに設定可能な垂直方向オフセットです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 subscriptOffset 値は、欧文ベースラインからの下付きに設定可能な垂直方向オフセットです。
	 
	 <p class="- topic/p ">subscriptOffset 値は、下付きの位置設定のために <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.baselineShift</codeph> と一緒に使用します。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/baselineShift" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.baselineShift</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:subscriptScale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subscriptScale</apiName><shortdesc class="- topic/shortdesc ">
	 subscriptScale 値は、下付きのポイントサイズに適用可能な拡大 / 縮小率です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 subscriptScale 値は、下付きのポイントサイズに適用可能な拡大 / 縮小率です。拡大 / 縮小率が 1.0 の場合は、拡大 / 縮小がないことを意味します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:superscriptOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">superscriptOffset</apiName><shortdesc class="- topic/shortdesc ">
	 superscriptOffset 値は、欧文ベースラインからの上付きに設定可能な垂直方向オフセットです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 superscriptOffset 値は、欧文ベースラインからの上付きに設定可能な垂直方向オフセットです。
	 
	 <p class="- topic/p ">superscriptOffset 値は、上付きの位置設定のために <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.baselineShift</codeph> と一緒に使用します。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/baselineShift" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.baselineShift</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:superscriptScale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">superscriptScale</apiName><shortdesc class="- topic/shortdesc ">
	 superscriptScale 値は、上付きのポイントサイズに適用可能な拡大 / 縮小率です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 superscriptScale 値は、上付きのポイントサイズに適用可能な拡大 / 縮小率です。拡大 / 縮小率が 1.0 の場合は、拡大 / 縮小がないことを意味します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:underlineOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">underlineOffset</apiName><shortdesc class="- topic/shortdesc ">
	 underlineOffset 値は、欧文ベースラインからの下線に設定可能な垂直方向オフセットです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 underlineOffset 値は、欧文ベースラインからの下線に設定可能な垂直方向オフセットです。
	 
	 <p class="- topic/p ">行の回転によって、この値は下線の位置を検索する行の位置から加算または減算されます。<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> に設定された行では、<codeph class="+ topic/ph pr-d/codeph ">underline.y = line.y + underlineOffset</codeph> になります。<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph> に設定された行では、<codeph class="+ topic/ph pr-d/codeph ">underline.x = line.x - underlineOffset</codeph> になります。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> に下線などの文字飾りを適用する場合、推奨される手順では <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> を指定します。これは、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> に対して文字飾りを使用します。<codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph> イベントに応答して、<codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> の <codeph class="+ topic/ph pr-d/codeph ">bounds</codeph> を、下線を配置する <codeph class="+ topic/ph pr-d/codeph ">underlineOffset</codeph> と組み合わせて使用することができます。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.events.xml#Event" class="- topic/link "><linktext class="- topic/linktext ">イベント</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:underlineThickness" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">underlineThickness</apiName><shortdesc class="- topic/shortdesc ">
	 underlineThickness 値は、下線に設定可能な太さです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 underlineThickness 値は、下線に設定可能な太さです。
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:ElementFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ElementFormat</apiName><shortdesc class="- topic/shortdesc ">
 ElementFormat クラスは、ContentElement に適用できるフォーマット情報を表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 ElementFormat クラスは、ContentElement に適用できるフォーマット情報を表します。ElementFormat クラスを使用して、ContentElement の様々なサブクラスに特定のテキストフォーマットを作成します。ElementFormat クラスのプロパティは、デバイスフォントおよび埋めこみフォントに適用されます。 
 
 <p class="- topic/p ">ElementFormat オブジェクトを TextBlock の ContentElement に適用しても、TextBlock は無効化されません。ElementFormat が ContentElement に適用されると、その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">true</codeph> に設定されます。ロックされた ElementFormat オブジェクトのプロパティを変更することはできません。代わりに、<codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> メソッドを使用してオブジェクトのロックされていないコピーを作成し、そのコピーを変更して ContentElement に割り当てることができます。</p>
 
 </apiDesc><example conref="examples\ElementFormatExample.as" class="- topic/example "> <p class="- topic/p ">この例では、2 つの <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトを作成し、複数のプロパティを設定します。次に、新しい ElementFormats を <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> オブジェクトに割り当てます。これは、<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> のコンテンツとして割り当てられています。<codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> の <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> を変更しても、親 TextBlock によって作成済みの TextLine には影響しません。</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class ElementFormatExample extends Sprite {
        
        public function ElementFormatExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontName = "Garamond";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 30;
            ef1.color = 0xFF0000;
            ef1.alpha = 100;
            ef1.kerning = flash.text.engine.Kerning.ON;
            ef1.trackingRight = 2;
            ef1.typographicCase = flash.text.engine.TypographicCase.UPPERCASE;
            ef1.alignmentBaseline = flash.text.engine.TextBaseline.DESCENT;
            ef1.ligatureLevel = flash.text.engine.LigatureLevel.EXOTIC;
            
            var ef2:ElementFormat = new ElementFormat(fd);
            ef2.fontSize = 30;
            ef2.color = 0xFF0000;
            ef2.alpha = 0.3;
            ef2.kerning = flash.text.engine.Kerning.OFF;
            ef2.typographicCase = flash.text.engine.TypographicCase.LOWERCASE;
            ef2.digitCase = flash.text.engine.DigitCase.OLD_STYLE;
            ef2.textRotation = flash.text.engine.TextRotation.ROTATE_180;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            line1.x = 15;
            line1.y = 30;

            tb.content.elementFormat = ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            line2.x = 15;
            line2.y = 60;
            
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/elementFormat" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.elementFormat</linktext></link></related-links><apiConstructor id="flash.text.engine:ElementFormat:ElementFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ElementFormat</apiName><shortdesc class="- topic/shortdesc ">
 	 ElementFormat オブジェクトを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph> は、0 未満です。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">textRotation</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">Kerning</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">breakOpportunity</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">digitCase</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">digitWidth</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">typographicCase</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TypographicCase</codeph> のメンバーではありません。
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontDescription</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このエレメント形式で使用されるフォントを識別する FontDescription オブジェクトです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。フォントの説明を指定しない場合は、デフォルトのフォントの説明が作成されます。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">12.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストのサイズ（ピクセル単位）です。
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">color</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0x000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストカラーです。例えば、 0xFF0000 は赤、 0x00FF00 は緑など、3 つの 8 ビットの RGB コンポーネントを示す 16 進数です。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alpha</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメント形式に応じてすべての行アトムに適用される <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> プロパティです。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">個々の文字に適用される回転です。このプロパティには、TextRotation 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dominantBaseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキスト内の文字の吸着先である基準です。このプロパティには、TextBaseline 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alignmentBaseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">useDominantBaseline</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">dominantBaseline の吸着先であるコンテンツ行に対する基準です。このプロパティには、TextBaseline 定数を使用します。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineShift</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストのベースラインシフト（ピクセル/em 単位）です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">kerning</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">on</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用されるカーニングです。Kerning クラスで定義される定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">trackingRight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">各文字の右側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">trackingLeft</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">各文字の左側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">en</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストのロケールです。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">breakOpportunity</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに適用される改行の条件です。 このプロパティには、BreakOpportunity 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">digitCase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用される数字の大文字小文字区別です。このプロパティには、DigitCase 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">digitWidth</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用される数字の幅です。このプロパティには、DigitWidth 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ligatureLevel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">common</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用される合字のレベルです。このプロパティには、LigatureLevel 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typographicCase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用される文字の大文字小文字区別です。このプロパティには、TypographicCase 定数を使用します。
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 ElementFormat オブジェクトを作成します。
	 
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:ElementFormat:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 ElementFormat のロックされていないクローンコピーを構築します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトのロックされていないコピーです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 ElementFormat のロックされていないクローンコピーを構築します。
	 
     </apiDesc><example conref="examples\ElementFormat_cloneExample.as" class="- topic/example "> <p class="- topic/p ">この例では、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトを作成し、<codeph class="+ topic/ph pr-d/codeph ">FontSize</codeph> を設定します。新しい <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> が <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> を使用して作成されます（つまり、ロックされます）。この <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> は <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> のコンテンツとして使用されます。テキストの行が、<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> から作成されます。</p>
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトを変更するには、その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティを最初にチェックします。 true である場合は、<codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> メソッドを使用して <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> のロックされていないコピーを作成します。次に、そのプロパティを変更し、新しく作成した <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトを <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> に再リンクします。行が再改行されると、新しい行には新しいフォント設定が使用されます。</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class ElementFormat_cloneExample extends Sprite {
        private var ef1:ElementFormat;
        private var ef2:ElementFormat;
        
        public function ElementFormat_cloneExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize=20;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
            ef2 = (ef1.locked) ? ef1.clone() : ef1;    
            ef2.fontSize = 32;

            tb.content.elementFormat=ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            
        }
    }    
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:ElementFormat:getFontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getFontMetrics</apiName><shortdesc class="- topic/shortdesc ">
	 fontDescription および fontSize で指定されるフォントの em ボックス、取り消し線位置、取り消し線太さ、下線位置および下線太さを記述するプロパティを持つ FontMetrics オブジェクトを返します。
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">fontDescription</codeph> で指定されるフォントのプロパティを記述する <codeph class="+ topic/ph pr-d/codeph ">FontMetrics</codeph> オブジェクトです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontMetrics</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">fontDescription</codeph> および <codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph> で指定されるフォントの em ボックス、取り消し線位置、取り消し線太さ、下線位置および下線太さを記述するプロパティを持つ <codeph class="+ topic/ph pr-d/codeph ">FontMetrics</codeph> オブジェクトを返します。</p>
	 
	 </apiDesc><example conref="examples\FontMetricsExample.as" class="- topic/example "> この例では、割り当てられた <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> を持つ <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトを作成し、<codeph class="+ topic/ph pr-d/codeph ">getFontMetrics</codeph> メソッドを使用して、選択したフォントに対するメトリックを 24 ポイントで表示します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontMetricsExample extends Sprite {
        
        public function FontMetricsExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontName = "Garamond";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 24;            
            var fm1:FontMetrics = ef1.getFontMetrics();

            trace(fm1.emBox);
            trace(fm1.strikethroughOffset);
            trace(fm1.strikethroughThickness);
            trace(fm1.subscriptScale);
            trace(fm1.subscriptOffset);
            trace(fm1.superscriptScale);
            trace(fm1.superscriptOffset);
            trace(fm1.underlineOffset);
            trace(fm1.underlineThickness);
            
            
        }
    }    
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link><link href="flash.text.engine.xml#FontMetrics" class="- topic/link "><linktext class="- topic/linktext ">FontMetrics</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:ElementFormat:alignmentBaseline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alignmentBaseline</apiName><shortdesc class="- topic/shortdesc ">
	 このフォーマットを持つエレメントの行の基準を揃える内部エレメントのベースラインのタイプを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このフォーマットを持つエレメントの行の基準を揃える内部エレメントのベースラインのタイプを指定します。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> 定数を使用します。
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineFontDescription</codeph> および <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineFontSize</codeph> が設定され、このロジックより優先されない場合、文字揃えの基準は行内の最大の垂直エレメントで決まります。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">TextBaseline.USE_DOMINANT_BASELINE</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行の欧文ベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行のアセントのベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行のディセントのベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行の文字最上部のベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行の文字の中心のベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行の文字最下部のベースラインに揃えます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.USE_DOMINANT_BASELINE</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が、行の同一のベースラインに揃えます。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">グラフィックエレメントの <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が文字揃えの基準を設定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントの <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> が行の文字揃えの基準を設定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:alpha:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alpha</apiName><shortdesc class="- topic/shortdesc ">
	 このオブジェクトに影響される行エレメントの透明を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このオブジェクトに影響される行エレメントの透明を指定します。有効な値は 0（完全な透明）～ 1（完全な不透明）の範囲です。<codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> が 0 に設定されている表示オブジェクトは、表示されない場合でも、アクティブです。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">1</codeph> です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">グラフィックエレメントに指定されたアルファを適用します。グラフィック <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> 自体または <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> に設定されたアルファと乗法的に結合します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントに指定されたアルファを適用します。<codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> に設定されたアルファと乗法的に結合します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/alpha" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.alpha</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:baselineShift:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineShift</apiName><shortdesc class="- topic/shortdesc ">
	 エレメントのベースラインシフトを示します（ピクセル単位）。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 エレメントのベースラインシフトを示します（ピクセル単位）。
	 <p class="- topic/p ">エレメントは、<codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> から、この量だけ離れます。エレメントのメンバーの y 位置にオフセットが追加されるため、回転されないテキストで正のベースラインシフトはエレメントを下に移動させ、負のベースラインシフトはエレメントを上に移動させます。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>（シフトなし）です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">グラフィックをベースラインから離します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストをベースラインから離します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:breakOpportunity:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">breakOpportunity</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに適用される改行の条件です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph> のメンバーではない値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに適用される改行の条件です。 折り返しテキストが複数行に分けられるときにどの文字が改行文字として使用できるかは、このプロパティにより決められます。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.AUTO</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.AUTO</codeph></entry><entry class="- topic/entry ">改行を行うかどうかの判断は、単語間の区切りやハイフンなど、Unicode 文字プロパティに基づいて行われます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.ANY</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> オブジェクト内の文字が、改行を行うかどうかの判断に使用されます。通常、ローマン体のテキストが日中韓のテキストに埋め込まれており、単語の途中で改行されることが望ましい場合に使用されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.NONE</codeph></entry><entry class="- topic/entry ">範囲内の文字は、改行を行うかどうかの判断に使用されません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.ALL</codeph></entry><entry class="- topic/entry ">範囲内のすべての文字が、改行を行うかどうかの判断に使用されます。これは、文字ごとに改行が行われることを意味します。 パス上のテキストのような効果を作成するのに便利です。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">グループ内で隣接するテキストエレメント間で改行を行うかどうかを判断します。グループの elementFormat が、<codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合、隣接するエレメントの最初のエレメントのフォーマットが使用されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントの文字間で改行を行うかどうかを判断します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#BreakOpportunity" class="- topic/link "><linktext class="- topic/linktext ">BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:color:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">color</apiName><shortdesc class="- topic/shortdesc ">
	 テキストの色を示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストの色を示します。3 つの 8 ビット RGB コンポーネントを示す整数（0xFF0000 は赤、0x00FF00 は緑など）です。 
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0x000000</codeph> で、黒です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストの色を設定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:digitCase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitCase</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用される数字の大文字小文字区別です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用される数字の大文字小文字区別です。数字の大文字小文字区別の違いは、数字のグループのスタイルと位置に影響します。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">DigitCase.DEFAULT</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.DEFAULT</codeph></entry><entry class="- topic/entry ">デフォルトの数字の大文字小文字区別をテキストに適用します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.LINING</codeph></entry><entry class="- topic/entry ">ライニング数字の大文字小文字区別をテキストに適用します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.OLD_STYLE</codeph></entry><entry class="- topic/entry ">オールドスタイル数字の大文字小文字区別をテキストに適用します。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストに使用する数字の大文字小文字区別を決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#DigitCase" class="- topic/link "><linktext class="- topic/linktext ">DigitCase</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:digitWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitWidth</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用される数字の幅です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用される数字の幅です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">DigitWidth.DEFAULT</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.DEFAULT</codeph></entry><entry class="- topic/entry ">デフォルトの数字の幅をテキストに適用します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.PROPORTIONAL</codeph></entry><entry class="- topic/entry ">プロポーショナル数字の幅をテキストに適用します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.TABULAR</codeph></entry><entry class="- topic/entry ">等幅数字の幅をテキストに適用します。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストに使用する数字の幅を決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#DigitWidth" class="- topic/link "><linktext class="- topic/linktext ">DigitWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:dominantBaseline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dominantBaseline</apiName><shortdesc class="- topic/shortdesc ">
	 行の基準として使用するベースラインのタイプを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行の基準として使用するベースラインのタイプを指定します。行の基準を文字の基準に合わせると、行のエレメントの垂直位置が決まります。 このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">エレメントのコンテンツによりベースラインが決まります。<codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> の場合、ベースラインはフォントおよびポイントサイズで決まります。<codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph> の場合、ベースラインはエレメントの高さで決まります。</p>
	 
	 <p class="- topic/p ">デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry ">エレメントの欧文ベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry ">エレメントのアセントのベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry ">エレメントのディセントのベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry ">エレメントの文字最上部のベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry ">エレメントの文字の中心のベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry ">エレメントの文字最下部のベースラインが、<codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えられます。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えるグラフィックエレメントのベースラインを決定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> に揃えるテキストエレメントのベースラインを決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:fontDescription:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontDescription</apiName><shortdesc class="- topic/shortdesc ">
	 フォントを説明するプロパティのオブジクト。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:FontDescription</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 フォントを説明するプロパティのオブジクト。
	 
	 <p class="- topic/p ">デフォルト値は、デフォルトで作成される FontDescription オブジェクトです。</p>
     
	 <p class="- topic/p ">fontDescription プロパティが設定されているときは、提供された FontDescription オブジェクトがロックされます。その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">true</codeph> に設定されます。ロックされた FontDescription を変更することはできません。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストに使用するフォントを決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:fontSize:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontSize</apiName><shortdesc class="- topic/shortdesc ">
	 テキストのサイズ（ピクセル単位）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">0 未満の値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストのサイズ（ピクセル単位）です。 
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">12.0</codeph> です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストのサイズをピクセル単位で指定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:kerning:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">kerning</apiName><shortdesc class="- topic/shortdesc ">
	 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 カーニングでは、読みやすくするために、特定の文字ペア間でピクセルを調整します。カーニングは、カーニングテーブルを持つすべてのフォントに対してサポートされています。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">Kerning.ON</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、Kerning クラスに以下の定数を使用します。 </p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.ON</codeph></entry><entry class="- topic/entry ">カーニングが有効にされています。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.OFF</codeph></entry><entry class="- topic/entry ">カーニングが無効にされています。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.AUTO</codeph></entry><entry class="- topic/entry ">カーニングは、アジア系文字のテキスト編集で不適切な場合を除き、有効にされています。 カーニングは、漢字、ひらがなまたはカタカナのいずれでもない 2 文字の間に適用されます。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">グループ内で隣接するテキストエレメント間でカーニングが適用されるかどうかを決定します。グループの elementFormat が、<codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合、隣接するエレメントの最初のエレメントのフォーマットが使用されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントの文字間でカーニングが適用されるかどうかを決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#Kerning" class="- topic/link "><linktext class="- topic/linktext ">Kerning</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:ligatureLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ligatureLevel</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用される合字のレベルです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用される合字のレベルです。2 つ以上の letter-form が 1 つの文字に結合された場合には、合字が起こります。合字は通常、「fi」、「fl」、「ae」などの文字の組の用に共通のコンポーネントを共有する連続した文字を置き換えます。合字は、ラテン語およびラテン語以外の文字セットの両方で使用されます。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.COMMON</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.NONE</codeph></entry><entry class="- topic/entry ">合字は作成されません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.MINIMUM</codeph></entry><entry class="- topic/entry ">最低限の合字が作成されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.COMMON</codeph></entry><entry class="- topic/entry ">一般的な欧文合字が作成されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.UNCOMMON</codeph></entry><entry class="- topic/entry ">珍しい合字が作成されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.EXOTIC</codeph></entry><entry class="- topic/entry ">特殊な合字が作成されます。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">グループ内で隣接するテキストエレメント間で合字のレベルを判断します。グループの elementFormat が、<codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合、隣接するエレメントの最初のエレメントのフォーマットが使用されます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントの文字間で合字のレベルを判断します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LigatureLevel" class="- topic/link "><linktext class="- topic/linktext ">LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:locale:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locale</apiName><shortdesc class="- topic/shortdesc ">
	 テキストのロケールです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	 
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストのロケールです。大文字小文字変換およびシェイピングを制御します。標準のロケール識別子が使用されます。例えば、「en」、「en_US」および「en-US」はすべて英語で、「ja」は日本語です。ロケールコードのリストについては、<xref href="http://www.loc.gov/standards/iso639-2/php/code_list.php" scope="external" class="- topic/xref ">ISO 639-2 コードのリスト</xref>を参照してください。
	 
     <p class="- topic/p ">デフォルト値は<codeph class="+ topic/ph pr-d/codeph ">「en」</codeph>です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストの大文字小文字変換およびシェイピングを決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:locked:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locked</apiName><shortdesc class="- topic/shortdesc ">
	 ElementFormat がロックされているかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 ElementFormat がロックされているかどうかを示します。<codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合、ElementFormat を変更することはできません。<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.clone()</codeph> を呼び出して ElementFormat オブジェクトのロックされていないコピーを取得します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:textRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textRotation</apiName><shortdesc class="- topic/shortdesc ">
	 個々の文字に適用される回転を設定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> のメンバーではないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 個々の文字に適用される回転を設定します。このプロパティには、TextRotation クラスで定義されている定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> です。</p>
	 
	 <p class="- topic/p ">任意の文字の最終的な回転は、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> および <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> の合計になります。</p>
	 
	 <p class="- topic/p ">通常、このプロパティは、縦書きレイアウトで正しく表示されるために文字を回転しなければならないアジア系文字のテキストに使用します。これを行うには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> と <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation = TextRotation.ROTATE_90</codeph> とを一緒に使用します。</p>
	 
	 <p class="- topic/p ">縦書きのレイアウト情報を含まないフォントに対してこのプロパティを設定すると、好ましくない結果になることがあります。 日本語フォントの「MS 明朝」などの vmtx テーブルや VORG テーブルを含むフォントは、正しくレイアウトするためにレイアウトエンジンで必要になるデータがこれらのテーブルによって提供されるので、正しく機能します。必要な情報を持っていない Verdana のようなフォントは正しく機能しません。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">文字は回転しません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">文字は時計回りに 90 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">文字は 180 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">文字は時計回りに 270 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">文字の Unicode プロパティに従って、全角文字に対してのみ、反時計回りの 90 度回転を指定します。この値は通常、日中韓のテキストで回転が必要な文字に対してのみ使用されます。この回転は、縦書きテキストにのみ適用され、他の文字に影響を与えずに全角文字を垂直方向に変えます。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメントの文字の回転を決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:trackingLeft:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trackingLeft</apiName><shortdesc class="- topic/shortdesc ">
	 各文字の左側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 各文字の左側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。<codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> が有効にされている場合、フォントのカーニングテーブルの値に <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> 値が追加されます。<codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> が無効にされている場合、<codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。
	 
	 <p class="- topic/p ">一般に、必要なトラッキング値は <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> と <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> の間で分割されます。そうでない場合、つまり複数の方向性が混在しているテキストでは、双方向境界ではトラッキングは 2 倍、それ以外では none となります。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">グラフィックの左側に適用されるトラッキングを決めます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメント中の文字の左側に適用されるトラッキングを決めます。</entry></row></tbody></tgroup></adobetable>
	 
	 <p class="- topic/p ">例：</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	      //positive tracking added to kerning
	      var ef1:ElementFormat = new ElementFormat();
	      ef1.kerning = flash.text.engine.Kerning.ON;
	      ef1.trackingLeft = 0.5;
	 
	      //negative manual kerning
	      var ef2:ElementFormat = new ElementFormat();
	      ef2.kerning = flash.text.engine.Kerning.OFF;
	      ef2.trackingLeft = -1.0;
	 </codeblock> 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:trackingRight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trackingRight</apiName><shortdesc class="- topic/shortdesc ">
	 各文字の右側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 各文字の右側に適用されるトラッキングまたは手動カーニング（ピクセル単位）です。<codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> が有効にされている場合、フォントのカーニングテーブルの値に <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> 値が追加されます。<codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> が無効にされている場合、<codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> 値が手動カーニングの値として使用されます。正の値と負の値の両方がサポートされます。
	 
	 <p class="- topic/p ">一般に、必要なトラッキング値は <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> と <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> の間で分割されます。そうでない場合、つまり複数の方向性が混在しているテキストでは、双方向境界ではトラッキングは 2 倍、それ以外では none となります。</p>
	 
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> です。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">グラフィックの右側に適用されるトラッキングを決めます。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">テキストエレメント中の文字の右側に適用されるトラッキングを決めます。</entry></row></tbody></tgroup></adobetable>
	 
	 <p class="- topic/p ">例：</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	      //positive tracking added to kerning
	      var ef1:ElementFormat = new ElementFormat();
	      ef1.kerning = flash.text.engine.Kerning.ON;
	      ef1.trackingRight = 0.5;
	 
	      //negative manual kerning
	      var ef2:ElementFormat = new ElementFormat();
	      ef2.kerning = flash.text.engine.Kerning.OFF;
	      ef2.trackingRight = -1.0;
	 </codeblock> 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:typographicCase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">typographicCase</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用される文字の大文字小文字区別です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase</codeph> のメンバーではない値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ElementFormat オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用される文字の大文字小文字区別です。このプロパティには、TypographicCase クラスで定義されている定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">TypographicCase.DEFAULT</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.DEFAULT</codeph></entry><entry class="- topic/entry ">すべての文字に通常の大文字と小文字を使用するよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.TITLE</codeph></entry><entry class="- topic/entry ">出力時にタイトル文字に大文字を使用するよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.CAPS</codeph></entry><entry class="- topic/entry ">出力時に大文字の間隔が調整されるよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.SMALL_CAPS</codeph></entry><entry class="- topic/entry ">出力時に大文字でスモールキャップ文字を使用するよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.UPPERCASE</codeph></entry><entry class="- topic/entry ">出力時にすべての文字で大文字を使用するよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.LOWERCASE</codeph></entry><entry class="- topic/entry ">出力時にすべての文字で小文字を使用するよう指定します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.CAPS_AND_SMALL_CAPS</codeph></entry><entry class="- topic/entry ">出力時にすべての小文字でスモールキャップス文字を使用するよう指定します。</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">サブクラス</entry><entry class="- topic/entry ">プロパティ設定の効果</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">効果はありません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">エレメントのテキストに使用する文字の大文字小文字区別を決定します。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TypographicCase" class="- topic/link "><linktext class="- topic/linktext ">TypographicCase</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextJustifier</apiName><shortdesc class="- topic/shortdesc ">
 TextJustifier クラスは、TextBlock に適用可能な均等配置の種類に対する抽象基本クラスで、EastAsianJustifier クラスおよび SpaceJustifier クラスです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TextJustifier クラスは、TextBlock に適用可能な均等配置の種類に対する抽象基本クラスで、EastAsianJustifier クラスおよび SpaceJustifier クラスです。
 
 <p class="- topic/p ">TextJustifier クラスを直接インスタンス化することはできません。<codeph class="+ topic/ph pr-d/codeph ">new TextJustifier()</codeph> を呼び出すと <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph> 例外がスローされます。EastAsianJustifier オブジェクトまたは SpaceJustifier オブジェクトが TextBlock に適用された後で EastAsianJustifier オブジェクトまたは SpaceJustifier オブジェクトのプロパティを設定しても、TextBlock は無効化されません。</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:TextJustifier:TextJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextJustifier</apiName><shortdesc class="- topic/shortdesc ">
	 new TextJustifier() コンストラクターを呼び出すと、ArgumentError 例外がスローされます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> であるか、有効なロケールを表すには短すぎます。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> のメンバーではありません。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">均等配置規則を決定するためのロケールです。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">段落に対する行の均等配置タイプです。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> 定数を使用します。
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">new TextJustifier()</codeph> コンストラクターを呼び出すと、<codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph> 例外がスローされます。ただし、<i class="+ topic/ph hi-d/i "/>次に示す TextJustifier のサブクラスについてはコンストラクターを呼び出すことができます。
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new SpaceJustifier()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new EastAsianJustifier()</codeph></li></ul>
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:TextJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 TextJustifier のクローンコピーを構築します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph> オブジェクトのコピーです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextJustifier のクローンコピーを構築します。
	 
	 <p class="- topic/p ">TextJustifier のサブクラスによって、このメソッドをオーバーライドする必要があります。</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextJustifier:getJustifierForLocale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getJustifierForLocale</apiName><shortdesc class="- topic/shortdesc ">
	 指定されたロケールに適切なデフォルトの TextJustifier サブクラスを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> であるか、有効なロケールを表すには短すぎます。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph> オブジェクトへの参照です。
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">作成される均等配置を決定するためのロケールです。
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定されたロケールに適切なデフォルトの TextJustifier サブクラスを作成します。
	 
	 <p class="- topic/p ">ロケールが中国語、韓国語または日本語の場合、このメソッドはデフォルトの EastAsianJustifier オブジェクトを作成します。それ以外の場合、テキストエンジンはデフォルトの SpaceJustifier オブジェクトを作成します。</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:TextJustifier:lineJustification:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lineJustification</apiName><shortdesc class="- topic/shortdesc ">
     テキストブロック内のテキストの行の均等配置を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     テキストブロック内のテキストの行の均等配置を指定します。 
     
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> によって、このプロパティに対する有効な値と定義される次の定数を使用します。</p>
     
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.UNJUSTIFIED</codeph></entry><entry class="- topic/entry ">均等配置されていない行を生成します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_BUT_LAST</codeph></entry><entry class="- topic/entry ">最後の行以外すべての行を均等配置して生成します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_INCLUDING_LAST</codeph></entry><entry class="- topic/entry ">すべての行を均等配置して生成します。</entry></row></tbody></tgroup></adobetable>
	 
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextJustifier:locale:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locale</apiName><shortdesc class="- topic/shortdesc ">
     テキストブロック内のテキストの均等配置規則を決定するためのロケールを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> であるか、有効なロケールを表すには短すぎます。
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     テキストブロック内のテキストの均等配置規則を決定するためのロケールを指定します。標準のロケール識別子が使用されます。例えば、「en」、「en_US」および「en-US」はすべて英語で、「ja」は日本語です。
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontDescription" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontDescription</apiName><shortdesc class="- topic/shortdesc ">
 FontDescription クラスは、フォントを説明するために必要な情報を表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 FontDescription クラスは、フォントを説明するために必要な情報を表します。 
 
 <p class="- topic/p ">FontDescription オブジェクトは ElementFormat に適用され、その ElementFormat は TextBlock の ContentElement に適用されます。FontDescription が ElementFormat に適用されると、その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">true</codeph> に設定されます。ロックされた FontDescription オブジェクトのプロパティを変更することはできません。代わりに、<codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> メソッドを使用してオブジェクトのロックされていないコピーを作成し、そのコピーを変更して ElementFormat に割り当てることができます。</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：</b>FTE（Flash Text Engine）は Type 1 フォントやビットマップフォント（Type 3、ATC、sfnt-wrapped CID、Naked CID など）をサポートしていません。</p>
 
 </apiDesc><example conref="examples\FontDescriptionExample.as" class="- topic/example "> <p class="- topic/p ">この例では <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> オブジェクトを作成し、それにデバイスフォントを割り当て、様々なフォントプロパティを設定し、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトに新しいオブジェクトを割り当てます。追加フォントのフォーマットは <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> 内で行われます。 新しい <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> が作成され、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> が指定されています。また、<codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> が <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> のコンテンツとして使用されます。テキストの行が、<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> から作成されます。</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontDescriptionExample extends Sprite {
        
        public function FontDescriptionExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;
            fd.fontPosture = flash.text.engine.FontPosture.ITALIC;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 30;
            ef1.color = 0xFF0000;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/fontDescription" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.fontDescription</linktext></link></related-links><apiConstructor id="flash.text.engine:FontDescription:FontDescription" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FontDescription</apiName><shortdesc class="- topic/shortdesc ">
 	 FontDescription オブジェクトを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontLookup</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontLookup</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> のメンバーではありません。
 	  
 	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">_serif</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">使用するフォント名またはフォント名のカンマ区切りリストです。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの太さを指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの傾きを指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontLookup</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">device</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの検索方法を指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">renderingMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">cff</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用されるレンダリングモードです。このプロパティには <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> 定数を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cffHinting</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">horizontalStem</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このテキストに使用された CFF（コンパクトフォントフォーマット）ヒンティングの種類。このプロパティには <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> 定数を使用します。
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 FontDescription オブジェクトを作成します。
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:FontDescription:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 FontDescription のロックされていないクローンコピーを構築します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> オブジェクトのロックされていないコピーです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 FontDescription のロックされていないクローンコピーを構築します。
	 
     </apiDesc><example conref="examples\FontDescription_cloneExample.as" class="- topic/example "> <p class="- topic/p ">この例では <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> オブジェクトを作成し、それにデバイスフォントを割り当て、様々なフォントプロパティを設定し、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> オブジェクトに新しいオブジェクトを割り当てます（つまり、ロックします）。新しい <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> が作成され、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> が指定されています。また、<codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> が <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> のコンテンツとして使用されます。テキストの行が、<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> から作成されます。</p>
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> オブジェクトを変更するには、その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティを最初にチェックします。 true である場合は、<codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> メソッドを使用して <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> のロックされていないコピーを作成し、それを新しい ElementFormat オブジェクトに割り当てます。次に、その新しい <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> を <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> に再リンクします。行が再改行されると、新しい行には新しいフォント設定が使用されます。</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontDescription_cloneExample extends Sprite {
        private var fd:FontDescription;
        private var fd2:FontDescription;
        
        public function FontDescription_cloneExample():void {
            fd = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;
            fd.fontPosture = flash.text.engine.FontPosture.ITALIC;

            var ef1:ElementFormat = new ElementFormat(fd);
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
            fd2 = (fd.locked) ? fd.clone() : fd;    
            fd2.fontWeight = flash.text.engine.FontWeight.NORMAL;
            var ef2:ElementFormat = new ElementFormat(fd2);

            tb.content.elementFormat=ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            
        }
    }    
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:FontDescription:isDeviceFontCompatible" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isDeviceFontCompatible</apiName><shortdesc class="- topic/shortdesc ">
	 使用可能なデバイス フォントを、指定された fontName、fontWeight および fontPosture で利用できる場合は true を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> のメンバーではありません。
	  
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">互換性のあるデバイスフォントを利用できる場合は <codeph class="+ topic/ph pr-d/codeph ">true</codeph>、それ以外の場合は <codeph class="+ topic/ph pr-d/codeph ">false</codeph> を返します。
	 
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">チェックするデバイスフォントの名前です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの太さを指定します。<codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの傾きを指定します。<codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> を使用します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 使用可能なデバイス フォントを、指定された 、<codeph class="+ topic/ph pr-d/codeph ">fontName</codeph>、<codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> および <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> で利用できる場合は true を返します。
	 
	 <p class="- topic/p ">flash.text.engine クラスで使用できるのは、OpenType および TrueType デバイスフォントのみです。 以前のフォント技術に基づいたフォントを使用している場合は、ランタイムはテキストの表示に文字ごとのベースで最適なデバイスフォントを使用します。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">fontLookup</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:FontDescription:isFontCompatible" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isFontCompatible</apiName><shortdesc class="- topic/shortdesc ">
	 Font.fontType が flash.text.FontType.EMBEDDED_CFF の場合に、指定された fontName、fontWeight、fontPosture で利用できる埋め込みフォントがある場合には、true を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> のメンバーではありません。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">互換性のある埋め込みフォントが利用できる場合には <codeph class="+ topic/ph pr-d/codeph ">true</codeph>、それ以外の場合には <codeph class="+ topic/ph pr-d/codeph ">false</codeph> となります。
	 
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">チェックする埋め込みフォントの名前です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの太さを指定します。<codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> を使用します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">フォントの傾きを指定します。<codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> を使用します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定された <codeph class="+ topic/ph pr-d/codeph ">fontName</codeph>、<codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph>、<codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> 、<codeph class="+ topic/ph pr-d/codeph ">Font.fontType</codeph> が <codeph class="+ topic/ph pr-d/codeph ">flash.text.FontType.EMBEDDED_CFFで利用できる埋め込みフォントがあり</codeph> の場合には、true を返します。Flash Player 10 以降では、2 種類の埋め込みフォントをアプリケーションのコンテンツに表示できます。 通常の埋め込みフォントは TextField でのみ使用されます。CFF の埋め込みフォントは flash.text.engine クラスでのみ使用されます。この 2 つのタイプは、<codeph class="+ topic/ph pr-d/codeph ">fontType</codeph> プロパティ（<codeph class="+ topic/ph pr-d/codeph ">Font</codeph> クラス）で区別されます。これは、<codeph class="+ topic/ph pr-d/codeph ">enumerateFonts()</codeph> 関数で返されます。
	 
	 <p class="- topic/p ">flash.text.engine クラスは <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> タイプのフォントを使用できません。<codeph class="+ topic/ph pr-d/codeph ">fontLookup</codeph> が <codeph class="+ topic/ph pr-d/codeph ">FontLookup.EMBEDDED_CFF</codeph> に設定され、指定された名前、太さ、傾きで実行時に利用可能なフォントのタイプが <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> の場合には、ランタイムはテキストの表示に文字ごとのベースでデバイスフォントを使用します。これは、指定された名前やスタイルで使用できる埋め込みフォントがないのと同じです。</p>
	 
	 <p class="- topic/p ">同じ名前、太さ、傾きで <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> および <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> フォントの両方が利用できる場合は、<codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> フォントが選択され、テキストは <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> フォントで表示されます。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">fontLookup</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.xml#FontType/EMBEDDED_CFF" class="- topic/link "><linktext class="- topic/linktext ">FontType.EMBEDDED_CFF</linktext></link><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:FontDescription:cffHinting:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cffHinting</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用される CFF ヒンティングのタイプです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用される CFF ヒンティングのタイプです。このプロパティには <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> 定数を使用します。このプロパティは、テキストの <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> プロパティが <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph> に設定されている場合にのみ適用されます。
	 
	 <p class="- topic/p ">使用されている CFF（コンパクトフォントフォーマット）ヒンティングのタイプによって、Flash ランタイムが強制的に太い水平線をサブピクセルグリッドに合わせるどうかが決まります。</p>
	 
	 <p class="- topic/p ">埋め込みフォントにのみ適用されます。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph> です。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> プロパティでは、CFFHinting から次の定数を使用できます。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting.NONE</codeph></entry><entry class="- topic/entry ">CFF ヒンティングは指定しません。文字中の水平線をサブピクセルグリッドに合わせる処理は行われません。 これはアニメーションや大きなフォントサイズに適した設定です。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph></entry><entry class="- topic/entry ">CFF ヒンティングを指定します。太い水平線は、スクリーンのサブピクセルグリッドに合わされます。 この設定を使用するには、<codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> プロパティが <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph> に設定されている必要があります。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#CFFHinting" class="- topic/link "><linktext class="- topic/linktext ">CFFHinting</linktext></link><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.renderingMode</linktext></link><link href="flash.text.engine.xml#RenderingMode" class="- topic/link "><linktext class="- topic/linktext ">RenderingMode</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontLookup:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontLookup</apiName><shortdesc class="- topic/shortdesc ">
	 フォントの検索方法を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 フォントの検索方法を指定します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">FontLookup.DEVICE</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontLookup.DEVICE</codeph></entry><entry class="- topic/entry ">ランタイムはテキストをレンダリングするローカルシステムの指定された <codeph class="+ topic/ph pr-d/codeph ">name</codeph> でデバイスフォントを検索します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontLookup.EMBEDDED_CFF</codeph></entry><entry class="- topic/entry ">ランタイムはテキストをレンダリングする指定された <codeph class="+ topic/ph pr-d/codeph ">name</codeph> で埋め込みの CFF フォントを検索します。<codeph class="+ topic/ph pr-d/codeph ">flash.text.Font.fontType.EMBEDDED_CFF</codeph> タイプのフォントだけが対象となります。指定された CFF フォントがアプリケーションに埋め込まれていない場合、ランタイムは、それぞれの文字に対するフォールバックデバイスフォントを使用しようとします。このメソッドは、最初からデバイスフォントを選択するより、効率が悪くなります。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#CFFHinting" class="- topic/link "><linktext class="- topic/linktext ">CFFHinting</linktext></link><link href="flash.text.engine.xml#FontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontName</apiName><shortdesc class="- topic/shortdesc ">
	 使用するフォント名またはフォント名のカンマ区切りリストです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 使用するフォント名またはフォント名のカンマ区切りリストです。 ランタイムは、リスト内の使用できる先頭のフォントを使用してエレメントをレンダリングします。例えば、「Arial」、「Helvetica」、「_sans」の場合は、「Arial」が検索され、Arial が見つからないときは「Helvetica」が、それらがいずれも見つからないときは「_sans」が検索されます。
	 
	 <p class="- topic/p ">Flash ランタイムでは、「_sans」（sans serif フォント用）、「_serif」（serif フォント用）、「_typewriter」（等幅フォント用）の 3 つのジェネリックなデバイスフォントをサポートしています。 これらのフォント名は、プラットフォームに応じて特定のデバイスフォントにマップされます。</p>
	 
	 <p class="- topic/p ">デフォルト値は<codeph class="+ topic/ph pr-d/codeph ">「_serif」</codeph>です。</p>
	 
	 <p class="- topic/p ">Flash ランタイムでは、選択されたフォントで見つからない文字に対するフォントフォールバックが提供されています。 使用されているフォントが埋め込みフォントであってもデバイスフォントであっても、文字がフォントに見つからない場合、Flash ランタイムは、その文字を含むと思われる別のデバイスフォントを使用する文字をレンダリングしようとします。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontPosture:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontPosture</apiName><shortdesc class="- topic/shortdesc ">
	 フォントの傾きを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 フォントの傾きを指定します。
	 
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">FontPosture.NORMAL</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、FontPosture クラスから以下の定数を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontPosture.NORMAL</codeph></entry><entry class="- topic/entry ">標準フォントの傾斜です。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontPosture.ITALIC</codeph></entry><entry class="- topic/entry ">イタリックフォントの傾斜です。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontWeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontWeight</apiName><shortdesc class="- topic/shortdesc ">
	 フォントの太さを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 フォントの太さを指定します。
	 
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">FontWeight.NORMAL</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、FontWeight クラスから以下の定数を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontWeight.NORMAL</codeph></entry><entry class="- topic/entry ">標準フォントの太さです。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontWeight.BOLD</codeph></entry><entry class="- topic/entry ">ボールドフォントの太さです。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:locked:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locked</apiName><shortdesc class="- topic/shortdesc ">
	 FontDescription がロックされているかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 FontDescription がロックされているかどうかを示します。<codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合、FontDescription を変更することはできません。<codeph class="+ topic/ph pr-d/codeph ">FontDescription.clone()</codeph> を呼び出して FontDescription オブジェクトのロックされていないコピーを取得します。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontDescription:renderingMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">renderingMode</apiName><shortdesc class="- topic/shortdesc ">
	 このテキストに使用されるレンダリングモードです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> のメンバーでないいずれかの値に設定する場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">FontDescription オブジェクトのロック後に設定する場合（<codeph class="+ topic/ph pr-d/codeph ">locked</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合）。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このテキストに使用されるレンダリングモードです。このプロパティには <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> 定数を使用します。 
	 
	 <p class="- topic/p ">埋め込みフォントにのみ適用されます。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、RenderingMode クラスから以下の定数を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">RenderingMode.NORMAL</codeph></entry><entry class="- topic/entry ">標準のテキストレンダリングを適用します。これは、Flash Player 7 以前のバージョンで使用されているレンダリングのタイプと一致します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph></entry><entry class="- topic/entry ">テキストを読みやすくする CFF（コンパクトフォントフォーマット）レンダリングを適用します。これは Flash Player 10 で使用可能になった機能です。 CFF レンダリングでは、小さいサイズのフォントフェイスを高品質でレンダリングすることができます。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#RenderingMode" class="- topic/link "><linktext class="- topic/linktext ">RenderingMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:GroupElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GroupElement</apiName><shortdesc class="- topic/shortdesc ">
 GroupElement オブジェクトは、TextElement、GraphicElement、または他の GroupElement オブジェクトの集合をグループ化します。これを一単位として TextBlock オブジェクトの content プロパティに割り当てることができます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 GroupElement オブジェクトは、TextElement、GraphicElement、または他の GroupElement オブジェクトの集合をグループ化します。これを一単位として TextBlock オブジェクトの <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティに割り当てることができます。GroupElement オブジェクトでは、別の GroupElement オブジェクト内で共通フォーマットを共有することもできます。 
 
 <p class="- topic/p ">GroupElement に他の GroupElement が含まれているときには、内部の GroupElement は独自のフォーマットを保持しています（ElementFormat 設定）。外側の GroupElement のフォーマットは継承しません。</p>
 
 <p class="- topic/p ">GroupElement に対しては、フォーマットプロパティのほとんどは何の影響も与えません。この理由から、<codeph class="+ topic/ph pr-d/codeph ">elementFormat</codeph> パラメーターが null となっている GroupElement オブジェクトのテキスト行を作成することができます。<codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> や <codeph class="+ topic/ph pr-d/codeph ">ligature</codeph> など小数のフォーマットプロパティは、グループのメンバー間で交差がある箇所に関するフォーマットに影響を与えます。グループが持っているフォーマットが null の場合には、グループのメンバー間で生じる交差におけるフォーマットは、前のエレメントのフォーマットにより決定します。</p>
  
 </apiDesc><example conref="examples\GroupElementExample.as" class="- topic/example "> この例では、GraphicElement オブジェクトとして赤いボックスを作成し、これを 2 つの TextElement オブジェクトと結合して、GroupElement オブジェクトを作成します。GroupElement オブジェクトを TextBlock の <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティに割り当て、そこから 3 行作成します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.display.MovieClip;
    import flash.text.engine.ContentElement;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.GraphicElement;
    import flash.text.engine.GroupElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class GroupElementExample extends Sprite {
        
        public function GroupElementExample():void {
            
            var redBox:MovieClip = new MovieClip();
            redBox.graphics.beginFill(0xCC0000, 1.0);
            redBox.graphics.drawRect(0, 0, 20, 20);
            redBox.graphics.endFill(); 
            
            var format:ElementFormat = new ElementFormat();
            var fontDescription:FontDescription = new FontDescription("Arial");
            format.fontSize = 16;
            format.fontDescription = fontDescription;
            
            var str1:String = "This red box is a GraphicElement ";
            var str2:String = " in the middle of two TextElements, " +
            " which together make " +
            "up a GroupElement in a TextBlock that is broken into three lines.";
            
            var textElement1:TextElement = new TextElement(str1,format);
            var graphicElement:GraphicElement = new GraphicElement(redBox,redBox.width,redBox.height, format);
            var textElement2:TextElement = new TextElement(str2, format);
            var groupVector:Vector.&lt;ContentElement> = new Vector.&lt;ContentElement>();
            groupVector.push(textElement1, graphicElement, textElement2);
            var groupElement = new GroupElement(groupVector);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = groupElement;
            createTextLines(textBlock);
        }
        
        private function createTextLines(textBlock:TextBlock):void 
        {
        
            var yPos = 20;
            var line_length:Number = 450;
            var textLine:TextLine = textBlock.createTextLine (null, line_length);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.height+8;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, line_length);
            }
        }
    }    
}


</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links><apiConstructor id="flash.text.engine:GroupElement:GroupElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GroupElement</apiName><shortdesc class="- topic/shortdesc ">
	 新しい GroupElement インスタンスを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">element</codeph> に <codeph class="+ topic/ph pr-d/codeph ">null</codeph> エレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">element</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> の既知のサブクラスではないエレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">element</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">content</codeph>（<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>）として指定されたエレメントが含まれています。 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">element</codeph> に、既にグループのメンバーであるか、<codeph class="+ topic/ph pr-d/codeph ">elements</codeph> に複数回表示されたエレメントが含まれています。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elements</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">GroupElement 内に格納される ContentElement オブジェクトの Vector です。Vector が空の可能性があります。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">グループのエレメント形式です。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。このフォーマットは、グループ内のエレメントが交わる部分に適用されます。これらのエレメントはフォーマットを継承しません。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このコンテンツエレメントに基づいて作成されたテキスト行に送出されるすべてのイベントのコピーを受け取る <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">単位としてエレメントに適用される回転です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> 定数を使用します。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> です。 
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 新しい GroupElement インスタンスを作成します。
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:GroupElement:getElementAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 charIndex パラメーターで指定された位置の文字を含むエレメントを返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> が <codeph class="+ topic/ph pr-d/codeph ">0 ～ rawText.length</codeph> の範囲内にない場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> で指定された位置の文字を含むエレメントです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">検索するエレメントの文字に対する 0 から始まるインデックス値です。0 の値はグループ内の最初の文字に対応します。TextBlock 内の最初の文字ではありません。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> パラメーターで指定された位置の文字を含むエレメントを返します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:getElementAt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementAt</apiName><shortdesc class="- topic/shortdesc ">
	 グループ内からエレメントを取得します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">index</codeph> が範囲外の場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">index</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">取得するエレメントのインデックスです。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 グループ内からエレメントを取得します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:getElementIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementIndex</apiName><shortdesc class="- topic/shortdesc ">
	 element パラメーターで指定されたエレメントのインデックスを返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">element</codeph> で指定されたエレメントのインデックスです。エレメントがグループ内にない場合は -1 になります。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">element</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">インデックスを検索するグループのエレメントです。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">element</codeph> パラメーターで指定されたエレメントのインデックスを返します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:groupElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupElements</apiName><shortdesc class="- topic/shortdesc ">
	 beginIndex パラメーターと endIndex パラメーターで指定されたエレメント範囲を、これらのエレメントを含む新しい GroupElement に置き換えます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> または <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> が範囲外の場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">新しいグループです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:GroupElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">グループ化する範囲の開始位置の 0 から始まるインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">グループ化する範囲の終了位置の後の 0 から始まるインデックス値です。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> パラメーターと <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> パラメーターで指定されたエレメント範囲を、これらのエレメントを含む新しい <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> パラメーターに置き換えます。意図したとおり、beginIndex から endIndex-1 までのエレメントが置き換えられます。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:mergeTextElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">mergeTextElements</apiName><shortdesc class="- topic/shortdesc ">
	 エレメントのフォーマットに影響を与えずに、beginIndex パラメーターと endIndex パラメーターで指定されたエレメントの範囲からのテキストを beginIndex で指定されたエレメントに結合します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> または <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> が範囲外の場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された範囲内のいずれかのエレメントが TextElement ではない場合。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">範囲内の最初のテキストエレメントに、範囲内のすべてのテキストが含まれるようになります。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">結合範囲の開始位置の 0 から始まるインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">結合範囲の終了位置に後続する位置の 0 ベースのインデックス値です。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 エレメントのフォーマットに影響を与えずに、<codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> パラメーターと <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> パラメーターで指定されたエレメントの範囲からのテキストを <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> で指定されたエレメントに結合します。意図したとおり、beginIndex から endIndex-1 までのエレメントからのテキストが結合されます。テキストが結合された後、beginIndex+1 から endIndex-1 までのエレメントはグループ解除されて孤立化し、<codeph class="+ topic/ph pr-d/codeph ">group</codeph> プロパティが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:GroupElement:replaceElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceElements</apiName><shortdesc class="- topic/shortdesc ">
	 beginIndex パラメーターと endIndex パラメーターで指定されたエレメント範囲を、newElements パラメーターの内容に置き換えます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> または <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> は範囲外です。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に <codeph class="+ topic/ph pr-d/codeph ">null</codeph> エレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に <codeph class="+ topic/ph pr-d/codeph ">this</codeph> が含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> の既知のサブクラスではないエレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">content</codeph>（<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>）として指定されたエレメントが含まれています。 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に、既にグループのメンバーであるか、<codeph class="+ topic/ph pr-d/codeph ">elements</codeph> に複数回表示されたエレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">処理の結果、<codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> 内で回転がネストする場合。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">置き換えられたエレメントを含む Vector です。
	  
     </apiDesc><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">置換範囲の開始位置の 0 から始まるインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">置換範囲の終了位置に後続する位置の 0 ベースのインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newElements</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定されたエレメント範囲の置き換えに使用されるエレメントです。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> パラメーターと <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> パラメーターで指定されたエレメント範囲を、<codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> パラメーターの内容に置き換えます。beginIndex から endIndex-1 までのエレメントが置き換えられます。
	 <p class="- topic/p ">エレメントを削除するには、<codeph class="+ topic/ph pr-d/codeph ">null</codeph> を <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> に渡します。エレメントを挿入するには、<codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> および <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> に同じ値を渡します。新しいエレメントは、指定されたインデックスの前に挿入されます。エレメントを追加するには、<codeph class="+ topic/ph pr-d/codeph ">elementCount</codeph> を <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> および <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> に渡します。</p>
	 <p class="- topic/p ">処理の後、置き換えられたエレメントは孤立化し、<codeph class="+ topic/ph pr-d/codeph ">group</codeph> プロパティが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> となって返されます。</p>
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:setElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setElements</apiName><shortdesc class="- topic/shortdesc ">
	 グループ内のエレメントを Vector のコンテンツに設定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> に <codeph class="+ topic/ph pr-d/codeph ">null</codeph> エレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> に <codeph class="+ topic/ph pr-d/codeph ">this</codeph> が含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> の既知のサブクラスではないエレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> に、<codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph> の <codeph class="+ topic/ph pr-d/codeph ">content</codeph> として指定されたエレメントが含まれています。 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> に、既にグループのメンバーであるか、<codeph class="+ topic/ph pr-d/codeph ">value</codeph> に複数回表示されたエレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">処理の結果、<codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> 内で回転がネストする場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 グループ内のエレメントを Vector のコンテンツに設定します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:splitTextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">splitTextElement</apiName><shortdesc class="- topic/shortdesc ">
	 TextElement を 2 つに分割し、指定された位置に新しい TextElement を作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">elementIndex</codeph> または <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> が範囲外の場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">elementIndex</codeph> の位置のエレメントが TextElement ではない場合。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">元のテキストエレメントの後ろの部分を含む新しいテキストエレメントです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">グループ内のエレメントの位置の 0 から始まるインデックス値です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">splitIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">分割が発生する TextElement 内の文字の 0 から始まるインデックス値です。指定された文字は、新しい TextElement 内の最初の文字になります。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextElement を 2 つに分割し、指定された位置に新しい TextElement を作成します。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:GroupElement:ungroupElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">ungroupElements</apiName><shortdesc class="- topic/shortdesc ">
	 groupIndex が外側の GroupElement オブジェクト内で指定するネストされた GroupElement のエレメントをグループ解除します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> が範囲外の場合。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> の位置のエレメントが GroupElement ではない場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">分割されるグループの位置の 0 から始まるインデックス値です。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> が外側の GroupElement オブジェクト内で指定するネストされた GroupElement のエレメントをグループ解除します。処理後、グループ解除されたエレメントは、ネストされた GroupElement に置き換えられて孤立化し、<codeph class="+ topic/ph pr-d/codeph ">group</codeph> プロパティが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:GroupElement:elementCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementCount</apiName><shortdesc class="- topic/shortdesc ">
	 グループ内のエレメント数です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 グループ内のエレメント数です。
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:ContentElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ContentElement</apiName><shortdesc class="- topic/shortdesc ">
 ContentElement クラスは、GroupElement に表示されるエレメントタイプ、つまり、GraphicElement、別の GroupElement または TextElement に対する基本クラスとして機能します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 ContentElement クラスは、GroupElement に表示されるエレメントタイプ、つまり、GraphicElement、別の GroupElement または TextElement に対する基本クラスとして機能します。
 
 <p class="- topic/p ">ContentElement は抽象基本クラスであるため、ContentElement を直接インスタンス化することはできません。<codeph class="+ topic/ph pr-d/codeph ">new ContentElement()</codeph> を呼び出すと <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph> 例外がスローされます。 </p>
 
 <p class="- topic/p ">ContentElement エレメントは、1 つの <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> にだけ、または 1 つのテキストブロックの <codeph class="+ topic/ph pr-d/codeph ">content</codeph> にだけ割り当てることができます。</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBlock/content" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.content</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links><apiConstructor id="flash.text.engine:ContentElement:ContentElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ContentElement</apiName><shortdesc class="- topic/shortdesc ">
	new ContentElement() コンストラクターを呼び出すと、ArgumentError 例外がスローされます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメント内のテキストのエレメント形式です。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このコンテンツエレメントに基づいて作成された有効なテキスト行に送出されるすべてのイベントのコピーを受け取る <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントを単位として適用される回転です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> 定数を使用します。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> です。
   	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	<codeph class="+ topic/ph pr-d/codeph ">new ContentElement()</codeph> コンストラクターを呼び出すと、<codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph> 例外がスローされます。ただし、次に示す ContentElement のサブクラスについては、コンストラクターを呼び出すことができます<i class="+ topic/ph hi-d/i "/>。
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new GraphicElement()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new GroupElement()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new TextElement()</codeph></li></ul>
	
 	</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.text.engine:ContentElement:GRAPHIC_ELEMENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GRAPHIC_ELEMENT</apiName><shortdesc class="- topic/shortdesc "> 
	テキスト内にグラフィックエレメントが存在するかどうかを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xFDEF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキスト内にグラフィックエレメントが存在するかどうかを示します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/rawText" class="- topic/link "><linktext class="- topic/linktext ">rawText</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 アプリケーションが任意のデータをエレメントに関連付けるための方法を提供します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 アプリケーションが任意のデータをエレメントに関連付けるための方法を提供します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:elementFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementFormat</apiName><shortdesc class="- topic/shortdesc ">
	 エレメントに使用される ElementFormat オブジェクトです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ElementFormat</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 エレメントに使用される ElementFormat オブジェクトです。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">elementFormat</codeph> プロパティが設定されているときは、提供された ElementFormat オブジェクトがロックされます。その <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">true</codeph> に設定されます。ロックされた ElementFormat を変更することはできません。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:eventMirror:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">eventMirror</apiName><shortdesc class="- topic/shortdesc ">
	 このコンテンツエレメントに基づいた有効なテキスト行に送出されるすべてのイベントのコピーを受け取る EventDispatcher オブジェクトです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.events:EventDispatcher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このコンテンツエレメントに基づいた有効なテキスト行に送出されるすべてのイベントのコピーを受け取る <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。実行時に行のどの部分が特定のコンテンツエレメントに基づいて作成されたかを判断することは困難な場合があるため、指定されたオブジェクトを使用して、テキストのテキストリンクまたは他のインタラクティブ要素に対するリスナーを設定できます。リスナーを使用して、下線やテキストがレイアウトされるまで決定できないメトリックなど文字飾りを適用することもできます。 デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。これは、ミラーされるイベントが送出されないことを意味します。
	 
	 <p class="- topic/p ">イベントミラーは、<codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> クラスのインスタンスなどのテキスト行に明示されます。双方向処理および改行によって、1 つ以上のミラー領域が作成されます。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:groupElement:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupElement</apiName><shortdesc class="- topic/shortdesc ">
	 このエレメントを含む GroupElement オブジェクトです。グループ内に存在しない場合は null になります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:GroupElement</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このエレメントを含む GroupElement オブジェクトです。グループ内に存在しない場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> になります。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:rawText:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rawText</apiName><shortdesc class="- topic/shortdesc ">
	 任意の U+FDEF 文字を含む、エレメント内のテキストのコピーです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 任意の U+FDEF 文字を含む、エレメント内のテキストのコピーです。Unicode 文字、U+FDEF は、String 内のグラフィックエレメントの位置をマークします。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:textBlockBeginIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 このエレメントの最初の文字のテキストブロック内のインデックスです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このエレメントの最初の文字のテキストブロック内のインデックスです。この値はキャッシュされません。このメソッドが呼び出されるたびに算出されます。
	 
	 <p class="- topic/p ">デフォルト値は -1 です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:textBlock:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlock</apiName><shortdesc class="- topic/shortdesc ">
	 このエレメントが含まれる TextBlock です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextBlock</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このエレメントが含まれる TextBlock です。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:textRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textRotation</apiName><shortdesc class="- topic/shortdesc ">
	 エレメントを単位として適用される回転です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TextRotation のメンバーではないいずれかの値に設定する場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> に設定する場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">処理の結果、GroupElement 内で回転がネストする場合。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 エレメントを単位として適用される回転です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> 定数を使用します。
	 
	 <p class="- topic/p ">デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> です。</p>
	 
	 <p class="- topic/p ">任意の文字の最終的な回転は、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> および <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> の合計になります。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> は、それを含む行とは回転が異なる短いテキストを作成するために使用されます。日本語テキスト内の TCY（縦中横）のテキスト範囲は、この一例です。TCY とは、縦、中、横を表しており、縦書きの日本語テキストの中で使用される小さな横書きのテキスト（通常は数字）です。TCY のテキスト範囲を含む、縦書きの日本語テキストの Paragraph を作成するには、次の処理を行います。</p>
	 <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation=TextRotation.ROTATE_90</codeph> と設定します。</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.content</codeph> を、3 つの TextElement オブジェクトで構成される GroupElement に設定します。これらのエレメントのうち、1 番目は TCY のテキスト範囲の前にある日本語テキスト、2 番目は TCY のラテン語のテキスト範囲、3 番目は TCY のテキスト範囲の後にある日本語テキストです。</li><li class="- topic/li ">TCY の <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> の textRotation プロパティを <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph> に設定します。TCY のテキストエレメントは、単位として回転します。この回転は、行から継承された 90 度回転で開始されます。さらに 270 度回転させると、水平方向に戻ります。</li></ol>
	 
	 <p class="- topic/p ">回転したコンテンツエレメントは、ネストできません。コンテンツエレメントのどの階層でも、複雑さの程度に関係なく、1 つのコンテンツエレメントの <codeph class="+ topic/ph pr-d/codeph ">textRotation</codeph> プロパティだけを設定できます。以下のメソッドおよびプロパティの setter は、ネストされた回転が検出されると引数エラーをスローします。</p>
	 <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">GroupElement.setElements</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">GroupElement.replaceElements</codeph></li></ol>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">エレメントは、回転されません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">エレメントは時計回りに 90 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">エレメントは 180 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">エレメントは時計回りに 270 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">サポートされません。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 String 内でグラフィックエレメントを表す、いずれの U+FDEF 文字も含まない、エレメント内のテキストのコピーです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 String 内でグラフィックエレメントを表す、いずれの U+FDEF 文字も含まない、エレメント内のテキストのコピーです。
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement/text" class="- topic/link "><linktext class="- topic/linktext ">TextElement.text</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextBlock" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextBlock</apiName><shortdesc class="- topic/shortdesc ">
 TextBlock クラスは、表示リストに配置して表示できる TextLine オブジェクトを作成するためのファクトリです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TextBlock クラスは、表示リストに配置して表示できる TextLine オブジェクトを作成するためのファクトリです。
 
 <p class="- topic/p ">Unicode 双方向アルゴリズムおよび改行アルゴリズムは一度に 1 つの段落に対して実行されるので、TextBlock クラスは単一の段落が含まれることを想定しています。複数の段落でテキストを構成するアプリケーションは、テキストを段落に分割し、段落ごとに 1 つの TextBlock を作成するために、マークアップ言語またはテキスト解析を使用します。</p>
 
 <p class="- topic/p ">TextBlock オブジェクトは、ContentElement クラスのインスタンスである <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティにそのコンテンツを格納します。ContentElement クラスのインスタンスを作成することはできないため、<codeph class="+ topic/ph pr-d/codeph ">content</codeph> をそのサブクラスである TextElement、GraphicElement または GroupElement のいずれかのインスタンスに設定します。純粋なテキストコンテンツには TextElement、イメージコンテンツまたはグラフィックコンテンツには GraphicElement、TextElement オブジェクト、GraphicElement オブジェクトおよびその他の GroupElement オブジェクトの組み合わせを含むコンテンツには GroupElement を使用します。フォーマットされたテキスト範囲、埋め込みのサブテキストおよびグラフィックエレメントの管理について詳しくは、ContentElement クラスおよびそのサブクラスを参照してください。</p>
 
 <p class="- topic/p ">TextBlock インスタンスを作成して <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティを設定した後、<codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> メソッドを呼び出して <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> クラスのインスタンスのテキスト行を作成します。 </p>
 
 </apiDesc><example conref="examples\TextBlockExample.as" class="- topic/example "> この例は、日本語および英語テキスト中の 3 つの TextBlock 段落です。日本語テキストは、Unicode 文字コードから String に変換されます。ボタンをクリックすると、テキストが水平から垂直へ、または垂直から水平へと回転します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package { 
    import fl.controls.Button;
     import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.TextRotation;
    import flash.text.engine.TextBaseline;
    import flash.text.engine.LineJustification;
    import flash.text.engine.FontDescription;
    import flash.text.engine.EastAsianJustifier; 
    import flash.display.Loader;
    import flash.display.Sprite;
    import flash.display.Stage;
    import flash.events.MouseEvent;
    import flash.system.Capabilities;
    
    public class TextBlockExample extends Sprite {
        
        var vertical:Boolean;    
        var container:Sprite;
        var textBlocks:Vector.&lt;TextBlock>;
        var loader:Loader = new Loader();
        var directionButton:Button = new Button();
        
        public function TextBlockExample():void {
            addChild(directionButton);
            directionButton.width = 30;
            directionButton.move(50, 350);
            directionButton.addEventListener(MouseEvent.CLICK, clickHandler);
            createContent();
            createLines();
        }

        private function createEmptyBlock():TextBlock {
        
            var textBlock:TextBlock = new TextBlock();
            textBlock.baselineZero = TextBaseline.IDEOGRAPHIC_CENTER;
            textBlock.textJustifier = new EastAsianJustifier("ja", LineJustification.ALL_BUT_LAST);
            textBlock.lineRotation = vertical? TextRotation.ROTATE_90: TextRotation.ROTATE_0;
            return textBlock;    
        }
        
        private function paragraph1(format:ElementFormat):TextBlock {
        
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002), format);
            return textBlock;
        }

        private function paragraph2(format:ElementFormat):TextBlock {
            
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(
                0x30AF, 0x30ED, 0x30B9, 0x30D7, 0x30E9, 0x30C3, 0x30C8, 0x30D5, 
                0x30A9, 0x30FC, 0x30E0, 0x4E0A, 0x3067, 0x518D, 0x751F, 0x53EF, 
                0x80FD, 0x306A
            ) + 
            "Flash Video" +
            String.fromCharCode(
                0x3092, 0x914D, 0x4FE1, 0x3001, 0x653F, 0x5E9C, 0x6700, 0x65B0, 
                0x60C5, 0x5831, 0x3092, 0x3088, 0x308A, 0x591A, 0x304F, 0x306E, 
                0x56FD, 0x6C11, 0x306B, 0x9AD8, 0x54C1, 0x8CEA, 0x306A, 0x753B, 
                0x50CF, 0x3067, 0x7C21, 0x5358, 0x304B, 0x3064, 0x30EA, 0x30A2, 
                0x30EB, 0x30BF, 0x30A4, 0x30E0, 0x306B, 0x63D0, 0x4F9B, 0x3059, 
                0x308B, 0x3053, 0x3068, 0x304C, 0x53EF, 0x80FD, 0x306B, 0x306A, 
                0x308A, 0x307e, 0x3057, 0x305F, 0x3002), format);
            return textBlock;    
        }

        private function paragraph3(format:ElementFormat):TextBlock {
            
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(0x3010) +
            "2007" +
            String.fromCharCode(0x5E74) + "2" + String.fromCharCode(0x6708) +
            "21" +
            String.fromCharCode(0x65E5, 0x3011),
            format);
            return textBlock;    
        }

        private function createContent():void {
            
            var font:FontDescription = new FontDescription();
            if (Capabilities.os.search("Mac OS") > -1) 
                font.fontName = String.fromCharCode(0x5C0F, 0x585A, 0x660E, 0x671D) + " Pro R"; // "Kozuka Mincho Pro R"                    koFont.fontName = "Adobe " + String.fromCharCode(0xBA85, 0xC870) + " Std M"; // "Adobe Myungjo Std M"
            else 
                font.fontName = "Kozuka Mincho Pro R";        
            var format:ElementFormat = new ElementFormat();
            format.fontDescription = font;
            format.fontSize = 12;
            format.locale = "ja";
            format.color = 0x000000;
            if (!vertical) 
                format.textRotation = TextRotation.ROTATE_0; 
            textBlocks = new Vector.&lt;TextBlock>();
            textBlocks.push(
                paragraph1(format),
                paragraph2(format),
                paragraph3(format)//,
            );
        }

        private function createLines():void {    
        
            if (container != null) {
                removeChild(container);
            }            
            container = new Sprite();
            container.y = 45;
            container.x = 40;
            addChild(container);
            var linePosition:Number = vertical? this.stage.stageWidth - 120: 12;
        
            for (var i:uint = 0; i &lt; textBlocks.length; i++) {
                var textBlock:TextBlock = textBlocks[i];
                var previousLine:TextLine = null;
        
                while (true) {
                    var textLine:TextLine = textBlock.createTextLine(
                        previousLine, 
                        300);
                    if (textLine == null) 
                        break;
                    if (vertical) 
                    {
                        textLine.x = linePosition;
                        linePosition -= 24;
                        directionButton.label = " -- ";
                    }
                    else 
                    {
                        textLine.y = linePosition+50;
                        linePosition += 24;
                        directionButton.label = " | ";
                    }
                    container.addChild(textLine);                
                    previousLine = textLine;
                }
                if (vertical) 
                    linePosition -= 16;
                else 
                    linePosition += 16; 
            }
        }

        private function clickHandler(event:MouseEvent):void {
            
            vertical = !vertical;
            createContent();
            createLines();
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#TabStop" class="- topic/link "><linktext class="- topic/linktext ">TabStop</linktext></link></related-links><apiConstructor id="flash.text.engine:TextBlock:TextBlock" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextBlock</apiName><shortdesc class="- topic/shortdesc ">
 	 TextBlock オブジェクトを作成します。
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">content</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> の既知のサブクラスではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">content</codeph> は、既にグループのメンバーです。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">lineRotation</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">baselineZero</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではありません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> は、0 未満です。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> に <codeph class="+ topic/ph pr-d/codeph ">null</codeph> エレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> は、位置が大きくなる順にソートされません。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph> が、0 未満です。
 	  
 	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">content</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロックの内容です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tabStops</apiItemName><apiType value="Vector$flash.text.engine:TabStop" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロック内のテキストのタブストップです。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textJustifier</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このブロックの行作成時に使用される TextJustifier オブジェクトです。均等配置を指定しない場合は、英語ロケールに基づいてデフォルトの均等配置が作成されます。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロックを単位として生成されるテキスト行に適用する回転です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineZero</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ブロック内のすべての行に対して y=0 であるベースラインを指定します。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bidiLevel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロック内のテキストのデフォルトの双方向埋め込みレベルです。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applyNonLinearFontScaling</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">WYSIWYG 印刷の再現性を犠牲にして、画面の外観を強調するように指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineFontDescription</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ブロック内のすべての行に対して、行のベースラインの派生元にするフォントの説明を指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineFontSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">12.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">baselineFontDescription に使用するサイズを指定します。このパラメーターは、<codeph class="+ topic/ph pr-d/codeph ">baselineFontDescription</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合は無視されます。
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 TextBlock オブジェクトを作成します。
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/applyNonLinearFontScaling" class="- topic/link "><linktext class="- topic/linktext ">applyNonLinearFontScaling</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineFontDescription" class="- topic/link "><linktext class="- topic/linktext ">baselineFontDescription</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineFontSize" class="- topic/link "><linktext class="- topic/linktext ">baselineFontSize</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">baselineZero</linktext></link><link href="flash.text.engine.xml#TextBlock/bidiLevel" class="- topic/link "><linktext class="- topic/linktext ">bidiLevel</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">lineRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">tabStops</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:TextBlock:createTextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">createTextLine</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロックの内容からテキスト行を作成し、その場合に previousLine パラメーターで指定されたポイントで開始し、width パラメーターで指定されたポイントで改行するように指示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> で指定された TextLine が有効でない場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> で指定された TextLine が別の TextBlock に所有されている場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">width</codeph> が 0 未満の場合（<codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> が true の場合を除く）。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">width</codeph> が <codeph class="+ topic/ph pr-d/codeph ">TextLine.MAX_LINE_WIDTH</codeph> より大きい場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロックの 1 つ以上のエレメントに <codeph class="+ topic/ph pr-d/codeph ">null ElementFormat</codeph> がある場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキスト行。テキストブロックが空か、指定された幅が次のエレメントの幅より小さい場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。これらのいずれの場合かを識別するには、テキストブロックの <codeph class="+ topic/ph pr-d/codeph ">textLineCreationResult</codeph> プロパティをチェックします。
     	 
     	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">previousLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">直前に改行された行を指定します。この行の次から改行処理を開始します。1 行目を改行する場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> を指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">線幅をピクセル単位で指定します。実際の幅はより小さくなることがあります。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の起点とタブストップの起点の差をピクセルで指定するオプションのパラメーターです。行揃えしていないが、タブを整列させる必要がある場合に使用できます。このパラメーターのデフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fitSomething</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された幅には関係なく（例外がスローされる場合もある幅が 0 または負の場合でも）、1 文字以上をテキスト行に収めるように Flash Player に指示するオプションのパラメーターです。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロックの内容からテキスト行を作成し、その場合に <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> パラメーターで指定されたポイントで開始し、<codeph class="+ topic/ph pr-d/codeph ">width</codeph> パラメーターで指定されたポイントで改行するように指示します。テキスト行は TextLine オブジェクトで表され、表示リストに追加できます。
	 
	 <p class="- topic/p ">既に改行されているテキストブロックの範囲を越えて行を改行すると、改行が発生する領域の内外で行の有効性が変更されることがあります。行のステータスが、VALID から INVALID または POSSIBLY_INVALID に変更されることがあります。新しく改行された行が、ステータスが POSSIBLY_INVALID の前回改行された行に完全に揃っている場合、前回改行された行およびそれ以降のすべての POSSIBLY_INVALID の行のステータスが VALID に戻ります。<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> のメンバーではない値に設定された行の有効性は、VALID には変更されませんが、INVALID には変更されることがあります。テキストブロックに対する変更の後は、再改行するテキスト行を開始または継続する位置を <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> プロパティで確認します。</p>
	 
	 <p class="- topic/p ">テキストに Unicode Zero Width Space（ZWSP）文字を含めることによって、人為的な単語分割を作成できます。これは、正しく改行するために辞書が必要になるタイ語などの言語の場合に便利です。Flash ランタイムは、このような辞書を含んでいません。</p>
	 
	 <p class="- topic/p ">メモリのオーバーヘッドを削減する方法として、目的の行がすべて作成済みの場合、親のフレームのリサイズなどでその度に再改行が必要になることがない限り、ユーザーは <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> メソッドを呼び出して、改行に関連する一時データからテキストブロックを解放することができます。</p>
	 
	 </apiDesc><example conref="examples\TextBlock_createTextLineExample.as" class="- topic/example "> この例では、<codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> メソッドを呼び出して、テキストブロック内にテキスト行を作成します。以下の手順を実行して行います。
  <ul class="- topic/ul "><li class="- topic/li ">String から TextElement を作成し、フォントサイズ 20 を設定します。</li><li class="- topic/li ">TextBlock を作成し、このオブジェクトに TextElement を割り当てます。</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> を呼び出して、テキストブロックから 300 ピクセルの幅を持つ行を作成します。</li><li class="- topic/li ">各行を Stage（<codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>）に配置し、その位置（<codeph class="+ topic/ph pr-d/codeph ">x</codeph> および <codeph class="+ topic/ph pr-d/codeph ">y</codeph>）を設定します。</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class TextBlock_createTextLineExample extends Sprite {
        
        public function TextBlock_createTextLineExample():void {
            
            var str:String = "I am a TextElement, created from a String and assigned " +
            "to the content property of a TextBlock. The createTextLine() method " +
            "then created these lines, 300 pixels wide, for display." ;
            
            var fontDescription:FontDescription = new FontDescription("Arial");
            var format:ElementFormat = new ElementFormat(fontDescription);
            format.fontSize = 16;
            var textElement:TextElement = new TextElement(str, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement; 
            createLines(textBlock); 
        }
        
        private function createLines(textBlock:TextBlock):void 
        {            
            var lineWidth:Number = 300;
            var xPos:Number = 15.0;
            var yPos:Number = 20.0;
            
            var textLine:TextLine = textBlock.createTextLine (null, lineWidth);
            while (textLine)
            {
                textLine.x = xPos;
                textLine.y = yPos;
                yPos += textLine.height + 2;
                addChild (textLine);
                textLine = textBlock.createTextLine (textLine, lineWidth);
            }
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link><link href="flash.text.engine.xml#TextBlock/releaseLineCreationData()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.releaseLineCreationData()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:dump" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dump</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock の基になるコンテンツを XML ストリングとしてダンプします。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock の基になるコンテンツを XML ストリングとしてダンプします。これにはテキスト、書式およびレイアウト情報が含まれており、自動化されたテストで役立ちます。
	 
	 <p class="- topic/p ">次に出力について説明します。</p>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 >block&lt;
	 	[0-N LINE]
	 >/block&lt;
	 </pre>
	 
	 <p class="- topic/p ">各行の出力の説明については、TextLine.dump() メソッドを参照してください。</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：</b>コンテンツおよび出力のフォーマットは、今後変更される可能性があります。アドビ システムズ社は、このメソッドの後方互換性は保証しません。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextLine.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findNextAtomBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findNextAtomBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 指定された文字インデックスの次のアトム境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">index</codeph> は範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このインデックス位置の文字が含まれる TextLine は無効です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字インデックスの次のアトム境界のインデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">次のアトム境界の検索を開始する文字のインデックスを指定します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定された文字インデックスの次のアトム境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。アトム境界間の文字は結合されて、「e」と結合されるアキュートアクセントのように、<codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> で 1 つのアトムを形成します。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/atomCount" class="- topic/link "><linktext class="- topic/linktext ">TextLine.atomCount</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findNextWordBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findNextWordBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 指定された文字インデックスの次の単語境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">index</codeph> は範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このインデックス位置の文字が含まれる TextLine は無効です。
	 
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字インデックスの次の単語境界のインデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">次の単語境界の検索を開始する文字のインデックスを指定します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定された文字インデックスの次の単語境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。単語境界は、文字の Unicode プロパティに基づいて決定されます。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:findPreviousAtomBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findPreviousAtomBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 指定された文字インデックスの前のアトム境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">index</codeph> は範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このインデックス位置の文字が含まれる TextLine は無効です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字インデックスの前のアトム境界のインデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">前のアトム境界の検索を開始する文字のインデックスを指定します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定された文字インデックスの前のアトム境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。アトム境界間の文字は結合されて、「e」と結合されるアキュートアクセントのように、<codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph> で 1 つのアトムを形成します。
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/atomCount" class="- topic/link "><linktext class="- topic/linktext ">TextLine.atomCount</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findPreviousWordBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findPreviousWordBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 指定された文字インデックスの前の単語境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">index</codeph> は範囲外です。
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このインデックス位置の文字が含まれる TextLine は無効です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字インデックスの前の単語境界のインデックスです。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">前の単語境界の検索を開始する文字のインデックスを指定します。
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 指定された文字インデックスの前の単語境界のインデックスを検索します。指定されたインデックス位置の文字は含めません。単語境界は、文字の Unicode プロパティに基づいて決定されます。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:getTextLineAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getTextLineAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 charIndex パラメーターで指定された位置の文字を含む TextLine を返します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された文字インデックスは範囲外です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> で指定された位置の文字を含む TextLine です。
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">文字の 0 から始まるインデックス値です。つまり、最初の文字は 0、2 番目の文字は 1 で、以下同様に続きます。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> パラメーターで指定された位置の文字を含む TextLine を返します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:recreateTextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">recreateTextLine</apiName><shortdesc class="- topic/shortdesc ">
	 既存のテキスト行を再利用するテキストブロックの内容からテキスト行を作成します。その際、previousLine パラメーターで指定されたポイントで開始し、width パラメーターで指定されたポイントで改行するように指示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> が null の場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> で指定された TextLine が有効でない場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> で指定された TextLine が別の TextBlock に所有されている場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> で指定された TextLine が <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> でも指定されている場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">width</codeph> が 0 未満の場合（<codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> が true の場合を除く）。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">width</codeph> が <codeph class="+ topic/ph pr-d/codeph ">TextLine.MAX_LINE_WIDTH</codeph> より大きい場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキストブロックの 1 つ以上のエレメントに <codeph class="+ topic/ph pr-d/codeph ">null ElementFormat</codeph> がある場合。
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">テキスト行。テキストブロックが空か、指定された幅が次のエレメントの幅より小さい場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。これらのいずれの場合かを識別するには、テキストブロックの <codeph class="+ topic/ph pr-d/codeph ">textLineCreationResult</codeph> プロパティをチェックします。
     	 
     	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">前に作成された TextLine を再利用するよう指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">previousLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">直前に改行された行を指定します。この行の次から改行処理を開始します。1 行目を改行する場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> を指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">線幅をピクセル単位で指定します。実際の幅はより小さくなることがあります。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">行の起点とタブストップの起点の差をピクセルで指定するオプションのパラメーターです。行揃えしていないが、タブを整列させる必要がある場合に使用できます。このパラメーターのデフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fitSomething</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された幅には関係なく（例外がスローされる場合もある幅が 0 または負の場合でも）、1 文字以上をテキスト行に収めるように Flash Player に指示するオプションのパラメーターです。
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 既存のテキスト行を再利用するテキストブロックの内容からテキスト行を作成します。その際、<codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> パラメーターで指定されたポイントで開始し、<codeph class="+ topic/ph pr-d/codeph ">width</codeph> パラメーターで指定されたポイントで改行するように指示します。テキスト行は TextLine オブジェクトで表され、表示リストに追加できます。既存のテキスト行を再利用すると、作成されるオブジェクトの数が少なくなるので、パフォーマンスが向上します。
	 
     <p class="- topic/p ">再作成される <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> は、どのテキストブロック内にあっても解放されます。さらに、<codeph class="+ topic/ph pr-d/codeph ">DisplayObjectContainer</codeph>、<codeph class="+ topic/ph pr-d/codeph ">InteractiveObject</codeph> および <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> から継承されたプロパティを含むすべてのプロパティは、デフォルト値にリセットされます。最後に、グラフィック要素およびその他の装飾を含む行のすべての子は削除され、その行に対するすべてのイベントリスナーも削除されます。パフォーマンスを向上させるために、このような全体的なリセットでは唯一例外的に、行自体は親から削除されません。</p>
	 
	 <p class="- topic/p ">既に改行されているテキストブロックの範囲を越えて行を改行すると、改行が発生する領域の内外で行の有効性が変更されることがあります。行のステータスが、VALID から INVALID または POSSIBLY_INVALID に変更されることがあります。新しく改行された行が、ステータスが POSSIBLY_INVALID の前回改行された行に完全に揃っている場合、前回改行された行およびそれ以降のすべての POSSIBLY_INVALID の行のステータスが VALID に戻ります。<codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> のメンバーではない値に設定された行の有効性は、VALID には変更されませんが、INVALID には変更されることがあります。テキストブロックに対する変更の後は、再改行するテキスト行を開始または継続する位置を <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> プロパティで確認します。</p>
	 
	 <p class="- topic/p ">テキストに Unicode Zero Width Space（ZWSP）文字を含めることによって、人為的な単語分割を作成できます。これは、正しく改行するために辞書が必要になるタイ語などの言語の場合に便利です。Flash ランタイムは、このような辞書を含んでいません。</p>
	 
	 <p class="- topic/p ">メモリのオーバーヘッドを削減する方法として、目的の行がすべて作成済みの場合、親のフレームのリサイズなどでその度に再改行が必要になることがない限り、ユーザーは <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> メソッドを呼び出して、改行に関連する一時データからテキストブロックを解放することができます。</p>
	 
	 </apiDesc><example conref="examples\TextBlock_recreateTextLineExample.as" class="- topic/example "> この例では、<codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> という TextLine オブジェクトを再利用します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var elementFormat:ElementFormat = new ElementFormat();
elementFormat.fontDescription = new FontDescription("Arial");
elementFormat.fontSize = 48;

var textElement:TextElement = new TextElement("Text you'll never see", elementFormat)
var textBlock:TextBlock = new TextBlock(textElement);
var textLine:TextLine = textBlock.createTextLine();
textLine.x = 50;
textLine.y = 50;
addChild(textLine);

// Reuse the element format to preserve the text formatting
var elementTwo:TextElement = new TextElement("Text you see", elementFormat);  
textBlock.content = elementTwo;
textBlock.recreateTextLine(textLine);

// Set the position (and any other display object properties like alpha, children, etc.)
// otherwise, they're all set to default properties.
textLine.x = 50;  
textLine.y = 50;
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link><link href="flash.text.engine.xml#TextBlock/releaseLineCreationData()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.releaseLineCreationData()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:releaseLineCreationData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">releaseLineCreationData</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロックに、テキスト行の作成に関連する一時ファイルのデータをすべて解放するように指示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロックに、テキスト行の作成に関連する一時ファイルのデータをすべて解放するように指示します。アプリケーションのメモリ使用率をできるだけ低く抑えるには、テキストブロックからテキスト行を作成するときに <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> メソッドを呼び出します。 ただし、（例えば、親のフレームのリサイズなどで発生する）再改行のパフォーマンスをできるだけ高くするには、<codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> メソッドは呼び出さないようにします。メモリとパフォーマンスとのバランスはアプリケーションによって異なります。
	 
	 <p class="- topic/p ">内容が確定し、更新されることがないテキストの場合、推奨される処理は、テキストブロックを初期化し、目的の出力が得られるまで繰り返し <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> メソッドを呼び出した後、 <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> メソッドを呼び出します。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:releaseLines" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">releaseLines</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock によって維持される行のリストから、テキスト行の範囲を削除します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> または <codeph class="+ topic/ph pr-d/codeph ">lastLine</codeph> によって指定される TextLine が、テキストブロックによって維持されるテキスト行のリストにない場合。
     	 
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">firstLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">リリースされる最初の行を指定します。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lastLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">リリースされる最後の行を指定します。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock によって維持される行のリストから、テキスト行の範囲を削除します。これにより、他の参照が存在しない場合、行がガベージコレクションされます。
	 
	 <p class="- topic/p ">削除された行の <codeph class="+ topic/ph pr-d/codeph ">textBlock</codeph>、<codeph class="+ topic/ph pr-d/codeph ">nextLine</codeph> および <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> メンバーを <codeph class="+ topic/ph pr-d/codeph ">null</codeph> に設定します。TextBlock の削除された行および削除された行の後のすべての行の <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> を <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph> に設定します。</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:TextBlock:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 アプリケーションが任意のデータをテキストブロックに関連付けるための方法を提供します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 アプリケーションが任意のデータをテキストブロックに関連付けるための方法を提供します。データは改訂日付や作者名などのコンテンツを指す情報の場合もあれば、処理中に使用するキャッシュされたデータの場合もあります。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextBlock:applyNonLinearFontScaling:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applyNonLinearFontScaling</apiName><shortdesc class="- topic/shortdesc ">
	 WYSIWYG 印刷の再現性を犠牲にして、画面の外観を強調するように指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 WYSIWYG 印刷の再現性を犠牲にして、画面の外観を強調するように指定します。デバイスによるフォントのレンダリング中のサブピクセル文字配置をサポートしていないが、非直線的な拡大 / 縮小をサポートしているプラットフォームとフォントでは、このプロパティを <codeph class="+ topic/ph pr-d/codeph ">true</codeph> に設定することで、特に小さいポイントサイズで WYSIWYG 出力を犠牲にして、これらのメトリックを使用できます。非直線的な拡大 / 縮小は、個々の文字の幅を選択的に拡大 / 縮小することでピクセルの吸着で発生する見苦しい隙間を隠します。
	 
	 <p class="- topic/p ">サブピクセル文字配置をサポートしているプラットフォームでは、このフラグは無視されます。</p>  
	 
	 <p class="- topic/p ">このフラグは、埋め込みフォントのレンダリングには影響しません。</p>
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">true</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextBlock:baselineFontDescription:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineFontDescription</apiName><shortdesc class="- topic/shortdesc ">
	 行の内容には関係なく、ブロックから作成されたすべての行に対するベースラインを特定するために使用されるフォントです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:FontDescription</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行の内容には関係なく、ブロックから作成されたすべての行に対するベースラインを特定するために使用されるフォントです。ベースラインは、フォントおよびフォントサイズによって異なります。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。ベースラインフォントが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合、ベースラインフォントのサイズは無視され、いずれの行に対するベースラインも、行内の最大のテキストのフォントおよびサイズによって決まります。<codeph class="+ topic/ph pr-d/codeph ">baselineFontDescription</codeph> および <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph> の両方を指定すると、それらの内容に関係なく、テキストブロックのすべての行に対するベースラインを決定します。この組み合わせは、文字体裁で最も役立ちます。</p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineFontSize" class="- topic/link "><linktext class="- topic/linktext ">baselineFontSize</linktext></link><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:baselineFontSize:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineFontSize</apiName><shortdesc class="- topic/shortdesc ">
	 ブロックから作成された行に対するベースラインを計算するのに使用されるフォントサイズです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph> が、0 未満です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 ブロックから作成された行に対するベースラインを計算するのに使用されるフォントサイズです。ベースラインは、フォントおよびフォントサイズによって異なります。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">12</codeph> です。ベースラインフォントが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> の場合、ベースラインフォントのサイズは無視され、いずれの行に対するベースラインも、行内の最大のテキストのフォントおよびサイズによって決まります。</p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineFontDescription" class="- topic/link "><linktext class="- topic/linktext ">baselineFontDescription</linktext></link><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:baselineZero:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineZero</apiName><shortdesc class="- topic/shortdesc ">
	 このブロックから作成した行に対して y=0 であるベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> のメンバーではないいずれかの値に設定する場合。
     
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このブロックから作成した行に対して y=0 であるベースラインを指定します。このプロパティの有効な値は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> クラスのメンバー内に含まれます。
	 
	 <p class="- topic/p ">デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、次のストリング値を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry ">行の欧文ベースラインが y=0 になります。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry ">行のアセントのベースラインが y=0 になります。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry ">行のディセントのベースラインが y=0 になります。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry ">行の文字最上部のベースラインが y=0 になります。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry ">行の文字の中心のベースラインが y=0 になります。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry ">行の文字最下部のベースラインが y=0 になります。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:bidiLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bidiLevel</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">0 未満の値に設定する場合。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロック内のテキストのデフォルトの双方向埋め込みレベルを指定します。偶数値は左から右の方向を意味し、奇数値は右から左の方向を意味します。特定のテキストが左から右または右から左の方向に埋め込まれるレベル数を示すには、<codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> をインクリメントすることができます。
	 
	 <p class="- topic/p ">デフォルト値は 0 です。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> を変更すると、すべての前の改行の有効性が TextLineValidity.INVALID に変わります。<codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> の変更後、<codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> プロパティに等しくなるため、TextBlock のすべての行を再度改行する必要があります。</p>
	 
     </apiDesc><example conref="examples\TextBlock_bidiLevelExample.as" class="- topic/example "> この例は、まず <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> even、次に <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> odd でレンダリングされた同じテキストストリング（論理的順序：a、b、c、alef、bet、gimel）を示します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class TextBlock_bidiLevelExample extends Sprite {
        
        public function TextBlock_bidiLevelExample():void {             
            var fontSize:Number = 36;

            var format:ElementFormat = new ElementFormat();        
            format.fontDescription = new FontDescription("Adobe Hebrew");
            format.fontSize = fontSize;
            var y:Number = 0;
            var leading:Number = fontSize * 0.2;
            var text:String = "abc" + String.fromCharCode(0x05D0, 0x05D1, 0x05D2);

            var textBlock:TextBlock = new TextBlock();
            textBlock.content = new TextElement(text, format);
                        
            // bidiLevel even
            textBlock.bidiLevel = 0;
            var textLine = textBlock.createTextLine(null, 400);
            y += leading + textLine.ascent;
            textLine.y = y;
            y += textLine.descent;
            addChild(textLine);      
            
            // bidiLevel odd
            textBlock.content = new TextElement(text, format);
            textBlock.bidiLevel = 1;
            textLine = textBlock.createTextLine(null, 400);
            y += leading + textLine.ascent;          
            textLine.y = y;
            addChild(textLine);   
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:content:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">content</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロックの内容を保持します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ContentElement</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> の既知のサブクラスではない値に設定する場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> は、既にグループのメンバーです。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロックの内容を保持します。ContentElement は、基本クラスであるため、<codeph class="+ topic/ph pr-d/codeph ">content</codeph> を ContentElement サブクラスのインスタンスである、TextElement、GraphicElement または GroupElement に割り当てます。TextElement オブジェクトは String、GraphicElement オブジェクトは DisplayObject、GroupElement は、1 つ以上の TextElement、GraphicElement またはその他の GroupElement オブジェクトを含む Vector オブジェクトをそれぞれ含みます。均一なテキストの段落には TextElement、グラフィックには GraphicElement、テキストエレメントとグラフィックエレメントの組み合わせ、またはこれらのエレメントの複数のインスタンスには GroupElement をその他の GroupElement オブジェクトと共に使用します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティを変更すると、以前作成されたすべての行の有効性が <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph> に変わります。<codeph class="+ topic/ph pr-d/codeph ">content</codeph> の変更後、<codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> プロパティは <codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> プロパティに等しくなるため、TextBlock のすべての行を再度改行する必要があります。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:firstInvalidLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">firstInvalidLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextLine.validity と TextLineValidity.VALID が等しくないテキストブロックで最初の行を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">TextLine.validity</codeph> と <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.VALID</codeph> が等しくないテキストブロックで最初の行を指定します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:firstLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">firstLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock 内の最初の TextLine（存在する場合）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock 内の最初の TextLine（存在する場合）です。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:lastLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock 内の最後の TextLine（存在する場合）です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock 内の最後の TextLine（存在する場合）です。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:lineRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lineRotation</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロックのテキスト行を単位として回転します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> のメンバーではないいずれかの値に設定する場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> に設定する場合。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロックのテキスト行を単位として回転します。有効にするには <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> メソッドは <i class="+ topic/ph hi-d/i "/><codeph class="+ topic/ph pr-d/codeph ">lineRotation</codeph> を設定してから呼び出します。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph> です。
	 
	 <p class="- topic/p ">文字の最終的な回転は、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> および <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> の値によって異なります。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> は一般に、日中韓のテキストで使用されます。縦書きの日本語テキストの段落を作成するには、次の処理を行います。</p>
     <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> プロパティを <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph> に設定します。</li><li class="- topic/li ">コンテンツの <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph> プロパティをデフォルトの <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> のままにしておきます。</li></ol>
	 
	 <p class="- topic/p ">このプロパティの値を設定するには、<codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> クラスで定義される次の定数を使用します。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">行は回転しません。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">行は時計回りに 90 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">行は 180 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">行は時計回りに 270 度回転します。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">サポートされません。</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextBlock_lineRotationExample.as" class="- topic/example "> この例では、TextBlock に日本語テキストを追加し、<codeph class="+ topic/ph pr-d/codeph ">lineRotation()</codeph> プロパティを TextRotation.ROTATE_90 に設定して、行を垂直に表示します。 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.FontDescription;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextRotation;
    import flash.text.engine.ElementFormat;
    
    public class TextBlock_lineRotationExample extends Sprite {
        
        public function TextBlock_lineRotationExample():void {
            var Japanese:String = String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002);

            var fontDescription:FontDescription = new FontDescription("MS Mincho");
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 15;
            format.fontDescription = fontDescription;
                        
            var textElement:TextElement = new TextElement(Japanese, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textBlock.lineRotation = TextRotation.ROTATE_90;

            var linePosition:Number = this.stage.stageWidth - 120;
            var previousLine:TextLine = null;
        
            while (true) {
                var textLine:TextLine = textBlock.createTextLine(
                    previousLine, 
                    300);
                if (textLine == null) 
                    break;
                textLine.y = 30;    
                textLine.x = linePosition;
                linePosition -= 24;
                addChild(textLine);                
                previousLine = textLine;
            }        
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:tabStops:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tabStops</apiName><shortdesc class="- topic/shortdesc ">
	 テキストブロック内のテキストのタブストップを TabStop オブジェクトの Vector の形式で指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.text.engine:TabStop" name="type" class="- topic/state reference/state apiRef/apiType "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> に <codeph class="+ topic/ph pr-d/codeph ">null</codeph> エレメントが含まれています。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> は、位置が大きくなる順にソートされません。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストブロック内のテキストのタブストップを <codeph class="+ topic/ph pr-d/codeph ">TabStop</codeph> オブジェクトの Vector の形式で指定します。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。これは、タブストップが指定されていないことを意味します。タブストップが指定されていない場合（または最後に指定されたタブストップを挿入ポイントが超えている場合）、ランタイムはデフォルトで 1/2 インチのタブを作成します。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> プロパティが設定されているときは、TextBlock によって内部使用のために Vector のコピーが作成されます。元の Vector またはそのコンテンツを変更しても TextBlock には影響しません。<codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> プロパティを照会すると、内部 Vector のコピーが返されます。この返された Vector またはそのコンテンツを変更しても TextBlock には影響しません。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop" class="- topic/link "><linktext class="- topic/linktext ">TabStop</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:textJustifier:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textJustifier</apiName><shortdesc class="- topic/shortdesc ">
	 行の作成時に使用する TextJustifier を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextJustifier</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph> の既知のサブクラスではない値に設定する場合。
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 行の作成時に使用する TextJustifier を指定します。
	 
	 <p class="- topic/p ">デフォルト値は、作成されるデフォルトの TextJustifier オブジェクトです。</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">textJustifier</codeph> プロパティが設定されているときは、TextBlock によって内部使用のためにオブジェクトのコピーが作成されます。元のオブジェクトを変更しても TextBlock には影響しません。<codeph class="+ topic/ph pr-d/codeph ">textJustifier</codeph> プロパティを照会すると、内部オブジェクトのコピーが返されます。この返されたオブジェクトを変更しても TextBlock には影響しません。</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:textLineCreationResult:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textLineCreationResult</apiName><shortdesc class="- topic/shortdesc ">
	 createTextLine() 操作の結果を示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> 操作の結果を示します。ブロックの内容が変更されると、以前に改行された行が無効化され、このプロパティが <codeph class="+ topic/ph pr-d/codeph ">null</codeph> にリセットされます。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 <p class="- topic/p ">このプロパティの値は、<codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult</codeph> 内に含まれます。</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">ストリング値</entry><entry class="- topic/entry ">説明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.SUCCESS</codeph></entry><entry class="- topic/entry ">行が正常に改行されました。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.COMPLETE</codeph></entry><entry class="- topic/entry ">作成された新しい行が継続行に完全に揃っており、POSSIBLY_INVALID から VALID に変更されたかまたはブロック内のすべてのテキストが既に改行されていたので、行は作成されませんでした。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.INSUFFICIENT_WIDTH</codeph></entry><entry class="- topic/entry ">テキストが指定された幅に収まらないので、行は作成されませんでした。</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLineCreationResult" class="- topic/link "><linktext class="- topic/linktext ">TextLineCreationResult</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineCreationResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineCreationResult</apiName><shortdesc class="- topic/shortdesc ">
TextLineCreationResult クラスは、TextBlock.textLineCreationResult で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TextLineCreationResult クラスは、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.textLineCreationResult</codeph> で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextBlock/textLineCreationResult" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textLineCreationResult</linktext></link></related-links><apiValue id="flash.text.engine:TextLineCreationResult:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc "> 
	ブロック内のすべてのテキストが既に改行されていたので行が作成されなかったことを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ブロック内のすべてのテキストが既に改行されていたので行が作成されなかったことを示します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:EMERGENCY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMERGENCY</apiName><shortdesc class="- topic/shortdesc "> 
	指定された幅で使用できる改行の条件がなかったため、応急的に改行して行が作成されたことを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">emergency</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	指定された幅で使用できる改行の条件がなかったため、応急的に改行して行が作成されたことを示します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:INSUFFICIENT_WIDTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INSUFFICIENT_WIDTH</apiName><shortdesc class="- topic/shortdesc "> 
	テキストが指定された幅に収まらないので行が作成されず、fitSomething が createTextLine() の呼び出しで指定されなかったことを示します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">insufficientWidth</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	テキストが指定された幅に収まらないので行が作成されず、<codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> が <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> の呼び出しで指定されなかったことを示します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:SUCCESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SUCCESS</apiName><shortdesc class="- topic/shortdesc "> 
	行が正常に改行されたことを表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">success</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行が正常に改行されたことを表します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:LigatureLevel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LigatureLevel</apiName><shortdesc class="- topic/shortdesc ">
LigatureLevel クラスは、ElementFormat クラスの ligatureLevel プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
LigatureLevel クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> プロパティの設定で使用される定数値の列挙です。 2 つ以上の letter-form が 1 つの文字に結合された場合には、合字が起こります。合字は通常、「fi」、「fl」、「ae」などの文字の組の用に共通のコンポーネントを共有する連続した文字を置き換えます。合字は、ラテン語およびラテン語以外の文字セットの両方で使用されます。
<p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：</b>アラビア語またはシリア語フォントを使用する場合は、<codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> を MINIMUM 以上に設定する必要があります。</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/ligatureLevel" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.ligatureLevel</linktext></link></related-links><apiValue id="flash.text.engine:LigatureLevel:COMMON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMMON</apiName><shortdesc class="- topic/shortdesc "> 
	一般的な欧文合字を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">common</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	一般的な欧文合字を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:EXOTIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXOTIC</apiName><shortdesc class="- topic/shortdesc "> 
	特殊な合字を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exotic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	特殊な合字を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:MINIMUM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MINIMUM</apiName><shortdesc class="- topic/shortdesc "> 
	最小限の合字を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">minimum</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	最小限の合字を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	合字しないことを指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	合字しないことを指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:UNCOMMON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCOMMON</apiName><shortdesc class="- topic/shortdesc "> 
	珍しい合字を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncommon</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	珍しい合字を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextRotation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextRotation</apiName><shortdesc class="- topic/shortdesc ">
TextRotation クラスは、ElementFormat.textRotation、ContentElement.textRotation、TextBlock.lineRotation および TextLine.getAtomTextRotation() の各プロパティで使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TextRotation クラスは、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> および <codeph class="+ topic/ph pr-d/codeph ">TextLine.getAtomTextRotation()</codeph> の各プロパティで使用される定数値の列挙です。 

<p class="- topic/p ">任意の文字の最終的な回転は、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph>、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph> および <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> の合計になります。</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link><link href="flash.text.engine.xml#TextLine/getAtomTextRotation()" class="- topic/link "><linktext class="- topic/linktext ">TextLine.getAtomTextRotation()</linktext></link></related-links><apiValue id="flash.text.engine:TextRotation:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	文字の Unicode プロパティに従って、全角文字に対してのみ、反時計回りの 90 度回転を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	文字の Unicode プロパティに従って、全角文字に対してのみ、反時計回りの 90 度回転を指定します。この値は通常、日中韓のテキストで回転が必要な文字に対してのみ使用されます。この回転は、縦書きテキストにのみ適用され、他の文字に影響を与えずに全角文字を垂直方向に変えます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_0" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_0</apiName><shortdesc class="- topic/shortdesc "> 
	回転は指定しません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	回転は指定しません。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_180" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_180</apiName><shortdesc class="- topic/shortdesc "> 
	180 度回転を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate180</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	180 度回転を指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_270" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_270</apiName><shortdesc class="- topic/shortdesc "> 
	時計回りの 270 度回転を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate270</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	時計回りの 270 度回転を指定します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_90" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_90</apiName><shortdesc class="- topic/shortdesc "> 
	時計回りの 90 度回転を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate90</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	時計回りの 90 度回転を指定します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TabAlignment" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TabAlignment</apiName><shortdesc class="- topic/shortdesc ">
TabAlignment クラスは、TabStop クラスの tabAlignment プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TabAlignment クラスは、<codeph class="+ topic/ph pr-d/codeph ">TabStop</codeph> クラスの <codeph class="+ topic/ph pr-d/codeph ">tabAlignment</codeph> プロパティの設定で使用される定数値の列挙です。 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop/alignment" class="- topic/link "><linktext class="- topic/linktext ">TabStop.alignment</linktext></link><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.tabStops</linktext></link></related-links><apiValue id="flash.text.engine:TabAlignment:CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CENTER</apiName><shortdesc class="- topic/shortdesc "> 
	タブで区切ったテキストの中心をタブストップに配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">center</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	タブで区切ったテキストの中心をタブストップに配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TabAlignment:DECIMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DECIMAL</apiName><shortdesc class="- topic/shortdesc "> 
	タブで区切ったテキストの整列トークンをタブストップに配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">decimal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	タブで区切ったテキストの整列トークンをタブストップに配置します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop/decimalAlignmentToken" class="- topic/link "><linktext class="- topic/linktext ">TabStop.decimalAlignmentToken</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabAlignment:END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END</apiName><shortdesc class="- topic/shortdesc "> 
	タブで区切ったテキストの終了をタブストップに配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">end</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	タブで区切ったテキストの終了をタブストップに配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TabAlignment:START" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">START</apiName><shortdesc class="- topic/shortdesc "> 
	タブで区切ったテキストの開始をタブストップに配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">start</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	タブで区切ったテキストの開始をタブストップに配置します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:GraphicElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GraphicElement</apiName><shortdesc class="- topic/shortdesc ">
 GraphicElement クラスは、TextBlock または GroupElement オブジェクトのグラフィックエレメントを表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 GraphicElement クラスは、TextBlock または GroupElement オブジェクトのグラフィックエレメントを表します。GraphicElement オブジェクトを TextBlock オブジェクトの <codeph class="+ topic/ph pr-d/codeph ">content</codeph> プロパティに割り当てて、<codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> を使用して、グラフィックまたはイメージを表示するか、GroupElement オブジェクトに割り当てて、他のグラフィックエレメントまたはテキストエレメントと結合します。
 
 </apiDesc><example conref="examples\GraphicElementExample.as" class="- topic/example "> 次の例では、GraphicElement（赤いボックス）を使用して TextBlock を作成して表示し、キャプションを含む 2 番目の TextBlock をその下に追加します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.display.MovieClip;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.GraphicElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class GraphicElementExample extends Sprite {
        
        public function GraphicElementExample():void {
            
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 14;
            var redBox:MovieClip = new MovieClip();
            redBox.graphics.beginFill(0xCC0000, 1.0);
            redBox.graphics.drawRect(0,0, 200, 200);
            redBox.graphics.endFill();   
            var graphicElement:GraphicElement = new GraphicElement(redBox,redBox.width,redBox.height, format);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = graphicElement;
            var textLine1:TextLine = textBlock.createTextLine(null,redBox.width);
            addChild(textLine1);
            textLine1.x = 15
            textLine1.y = 215
            var str:String = "Your picture here ...";
            var textElement:TextElement = new TextElement(str, format);
            textBlock = new TextBlock();
            textBlock.content = textElement;
            var textLine2 = textBlock.createTextLine(null, 300);
            addChild(textLine2);
            textLine2.x = textLine1.x;
            textLine2.y += textLine1.y + format.fontSize;        
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links><apiConstructor id="flash.text.engine:GraphicElement:GraphicElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GraphicElement</apiName><shortdesc class="- topic/shortdesc ">
	 新しい GraphicElement インスタンスを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">graphic</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:DisplayObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">GraphicElement を設定する DisplayObject です。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementWidth</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">15.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントに予約された領域の幅です（ピクセル単位）。デフォルト値は 15 です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementHeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">15.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントに予約された領域の高さです（ピクセル単位）。デフォルト値は 15 です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">エレメントのエレメント形式です。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このコンテンツエレメントに基づいて作成されたテキスト行に送出されるすべてのイベントのコピーを受け取る <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">単位としてエレメントに適用される回転です。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.TextRotation</codeph> 定数を使用します。デフォルト値は、<codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.TextRotation.ROTATE_0</codeph> です。
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 新しい GraphicElement インスタンスを作成します。
	 
	 <p class="- topic/p ">グラフィックの基準点は、<codeph class="+ topic/ph pr-d/codeph ">elementHeight</codeph>、<codeph class="+ topic/ph pr-d/codeph ">elementWidth</codeph> および <codeph class="+ topic/ph pr-d/codeph ">elementFormat.baselineShift</codeph> によって定義される領域の左上隅に整列します。領域のサイズに合わせたグラフィックの拡大 / 縮小は行われません。GraphicElement に <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> がある場合は、グラフィックによってではなく、<codeph class="+ topic/ph pr-d/codeph ">elementWidth</codeph> プロパティと <codeph class="+ topic/ph pr-d/codeph ">elementHeight</codeph> プロパティによって、結果のミラー領域のサイズと位置が決定されます。ローダーを使用している場合は、テキスト行とミラー領域の作成時にグラフィックが読み込まれないことがあります。</p>
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:GraphicElement:elementHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementHeight</apiName><shortdesc class="- topic/shortdesc ">
	 その行でグラフィックのために予約された高さです（ピクセル単位）。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 その行でグラフィックのために予約された高さです（ピクセル単位）。グラフィックの拡大 / 縮小は、呼び出し元が受け持つことになります。
	 
	 <p class="- topic/p ">デフォルト値は 15.0 です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:GraphicElement:elementWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementWidth</apiName><shortdesc class="- topic/shortdesc ">
	 その行でグラフィックのために予約された幅です（ピクセル単位）。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 その行でグラフィックのために予約された幅です（ピクセル単位）。グラフィックの拡大 / 縮小は、呼び出し元が受け持つことになります。
	 
	 <p class="- topic/p ">デフォルト値は 15.0 です。</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:GraphicElement:graphic:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">graphic</apiName><shortdesc class="- topic/shortdesc ">
	 GraphicElement のグラフィックとして使用される DisplayObject です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:DisplayObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 GraphicElement のグラフィックとして使用される DisplayObject です。
	 
	 <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">null</codeph> です。</p>
	 
	 <p class="- topic/p ">GraphicElement がテキスト行の一部になる場合、グラフィックは行の子として追加されます。グラフィックを設定すると、行から古いグラフィックが削除され、新しいグラフィックが追加されます。</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontWeight" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontWeight</apiName><shortdesc class="- topic/shortdesc ">
FontWeight クラスは、FontDescription.fontWeight で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
FontWeight クラスは、<codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontWeight</codeph> で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontWeight" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.fontWeight</linktext></link></related-links><apiValue id="flash.text.engine:FontWeight:BOLD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BOLD</apiName><shortdesc class="- topic/shortdesc "> 
	ボールドフォントの太さを示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">bold</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ボールドフォントの太さを示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontWeight:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc "> 
	標準フォントの太さを示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	標準フォントの太さを示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextBaseline" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextBaseline</apiName><shortdesc class="- topic/shortdesc ">
TextBaseline クラスは、ElementFormat クラスの dominantBaseline プロパティおよび alignmentBaseline プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
TextBaseline クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> プロパティおよび <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> プロパティの設定で使用される定数値の列挙です。このクラスは、TextBlock クラス内の <codeph class="+ topic/ph pr-d/codeph ">baselineZero</codeph> プロパティで使用することもできます。次の状況を考えます。
<p class="- topic/p "><adobeimage alt="テキストのベースラインの整列" href="../../../images/textBaselines.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
<p class="- topic/p ">行が 4 つの <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> オブジェクトで構成され、各オブジェクトにはそれぞれ「a」「b」「cccccccc」および「X」が含まれています。「X」を含むエレメントが行内で最大のエレメントなので、行のベースラインはそのエレメントによって決定されます。「X」のエレメントの欧文ベースラインが、行の欧文ベースラインに揃えられます。「a」のエレメントの文字の最上部が、行の文字の最上部に揃えます。「b」のエレメントの文字の最下部が、行の文字の最下部に揃えます。「cccccccc」のエレメントの文字の中心が、行の文字の中心に揃えます。</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links><apiValue id="flash.text.engine:TextBaseline:ASCENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ASCENT</apiName><shortdesc class="- topic/shortdesc "> 
	アセントのベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ascent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	アセントのベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエンジンはエレメントの幾何学的最上部を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:DESCENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DESCENT</apiName><shortdesc class="- topic/shortdesc "> 
	ディセントのベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">descent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ディセントのベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエレメントはエレメントの幾何学的最下部を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_BOTTOM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_BOTTOM</apiName><shortdesc class="- topic/shortdesc "> 
	文字の最下部のベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicBottom</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	文字の最下部のベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエンジンはエレメントの幾何学的最下部を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_CENTER</apiName><shortdesc class="- topic/shortdesc "> 
	文字の中心のベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicCenter</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	文字の中心のベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエンジンはエレメントの幾何学的中心を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_TOP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_TOP</apiName><shortdesc class="- topic/shortdesc "> 
	文字の最上部のベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicTop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	文字の最上部のベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエンジンはエレメントの幾何学的最上部を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:ROMAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROMAN</apiName><shortdesc class="- topic/shortdesc "> 
	欧文ベースラインを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	欧文ベースラインを指定します。テキストエレメントの場合は、テキストのフォントおよびポイントサイズによりこの値が決まります。グラフィックエレメントの場合、テキストエンジンはエレメントの幾何学的最下部を使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:USE_DOMINANT_BASELINE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USE_DOMINANT_BASELINE</apiName><shortdesc class="- topic/shortdesc "> 
	alignmentBaseline が dominantBaseline と同じであることを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">useDominantBaseline</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	alignmentBaseline が dominantBaseline と同じであることを指定します。この値は <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.alignmentBaseline</codeph> を設定する場合のみに使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:BreakOpportunity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">BreakOpportunity</apiName><shortdesc class="- topic/shortdesc ">
BreakOpportunity クラスは、ElementFormat クラスの breakOpportunity プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
BreakOpportunity クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">breakOpportunity</codeph> プロパティの設定で使用される定数値の列挙です。 折り返しテキストが複数行に分けられるときにどの文字が改行文字として使用できるかは、このプロパティにより決められます。


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/breakOpportunity" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.breakOpportunity</linktext></link></related-links><apiValue id="flash.text.engine:BreakOpportunity:ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL</apiName><shortdesc class="- topic/shortdesc "> 
	ContentElement オブジェクト内のすべての文字が、改行を行うかどうかの判断に使用されます。これは、文字ごとに改行が行われることを意味します。 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">all</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ContentElement オブジェクト内のすべての文字が、改行を行うかどうかの判断に使用されます。これは、文字ごとに改行が行われることを意味します。 このオプションを使用して、できる限り短い行を生成して、1 行でテキストを作成したり、同様の効果を得たりできます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:BreakOpportunity:ANY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ANY</apiName><shortdesc class="- topic/shortdesc "> 
	ContentElement オブジェクト内の文字が、改行を行うかどうかの判断に使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">any</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ContentElement オブジェクト内の文字が、改行を行うかどうかの判断に使用されます。通常、ローマン体のテキストが日中韓のテキストに埋め込まれており、単語の途中で改行されることが望ましい場合に使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:BreakOpportunity:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	Unicode 文字プロパティに基づいて改行を行うかどうかを判断します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Unicode 文字プロパティに基づいて改行を行うかどうかを判断します。この設定は、Unicode Standard Annex #14 によって定義される Unicode line breaking プロパティを実装します。 
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="http://unicode.org/reports/tr14/tr14-12.html" class="- topic/link "><linktext class="- topic/linktext ">Unicode line breaking プロパティに関する記事</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:BreakOpportunity:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	ContentElement オブジェクト内の文字は、改行を行うかどうかの判断に使用されません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ContentElement オブジェクト内の文字は、改行を行うかどうかの判断に使用されません。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:DigitWidth" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DigitWidth</apiName><shortdesc class="- topic/shortdesc ">
DigitWidth クラスは、ElementFormat クラスの digitWidth プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
DigitWidth クラスは、ElementFormat クラスの <codeph class="+ topic/ph pr-d/codeph ">digitWidth</codeph> プロパティの設定で使用される定数値の列挙です。 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/digitWidth" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.ElementFormat.digitWidth</linktext></link></related-links><apiValue id="flash.text.engine:DigitWidth:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	デフォルトの数字の幅を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	デフォルトの数字の幅を指定するために使用されます。結果はフォントによって異なります。文字には、フォントデザイナーによって指定された何も機能を適用しない状態の設定が使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitWidth:PROPORTIONAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PROPORTIONAL</apiName><shortdesc class="- topic/shortdesc "> 
	プロポーショナル数字の幅を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">proportional</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	プロポーショナル数字の幅を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitWidth:TABULAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TABULAR</apiName><shortdesc class="- topic/shortdesc "> 
	等幅数字の幅を指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabular</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	等幅数字の幅を指定するために使用されます。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:CFFHinting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CFFHinting</apiName><shortdesc class="- topic/shortdesc ">
CFFHinting クラスは、FontDescription クラス中の CFF ヒンティングの値を定義します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
CFFHinting クラスは、FontDescription クラス中の CFF ヒンティングの値を定義します。

<p class="- topic/p ">ヒンティングは、アウトラインフォントの表示を調整し、ピクセルグリッドに合わせて並べます。スクリーンサイズが小さい場合は、ヒンティングによって、鮮明で読みやすいテキストの表示が可能になります。
</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription</linktext></link></related-links><apiValue id="flash.text.engine:CFFHinting:HORIZONTAL_STEM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HORIZONTAL_STEM</apiName><shortdesc class="- topic/shortdesc ">
	太い水平線がピクセルグリッドに合わされ、読みやすくなります。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">horizontalStem</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	太い水平線がピクセルグリッドに合わされ、読みやすくなります。この定数は、FontDescription クラスの <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> プロパティの設定で使用されます。<codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph> のシンタックスを使用します。
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：</b> アニメーションには推奨されません。</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/cffHinting" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.cffHinting</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:CFFHinting:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	ヒンティングは適用されません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	ヒンティングは適用されません。文字中の水平線をピクセルグリッドに合わせる処理は行われません。この定数は、FontDescription クラスの <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> プロパティの設定で使用されます。これはアニメーションや大きなフォントサイズにお勧めする設定です。<codeph class="+ topic/ph pr-d/codeph ">CFFHinting.NONE</codeph> のシンタックスを使用します。
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/cffHinting" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.cffHinting</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:Kerning" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Kerning</apiName><shortdesc class="- topic/shortdesc ">
Kerning クラスは、ElementFormat.kerning で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Kerning クラスは、<codeph class="+ topic/ph pr-d/codeph ">ElementFormat.kerning</codeph> で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/kerning" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.kerning</linktext></link></related-links><apiValue id="flash.text.engine:Kerning:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	アジア系文字のテキスト編集で不適切な場合を除き、カーニングを有効にするよう指定するために使用されます。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	アジア系文字のテキスト編集で不適切な場合を除き、カーニングを有効にするよう指定するために使用されます。カーニングは、漢字、ひらがなまたはカタカナのいずれでもない 2 文字の間に適用されます。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:Kerning:OFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OFF</apiName><shortdesc class="- topic/shortdesc "> 
	カーニングが無効にされていることを示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">off</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	カーニングが無効にされていることを示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:Kerning:ON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON</apiName><shortdesc class="- topic/shortdesc "> 
	カーニングが有効にされていることを示すために使用します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">on</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	カーニングが有効にされていることを示すために使用します。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineMirrorRegion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineMirrorRegion</apiName><shortdesc class="- topic/shortdesc ">
 TextLineMirrorRegion クラスは、イベントを別のイベントディスパッチャにミラーするテキスト行の部分を表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 TextLineMirrorRegion クラスは、イベントを別のイベントディスパッチャにミラーするテキスト行の部分を表します。
 
 <p class="- topic/p ">テキスト行に対する通常のイベント送出処理が終了した後で、テキスト行が有効で、イベント通知が停止していない場合は、テキスト行のミラー領域にイベントが送出されます。</p>
 
 <p class="- topic/p ">マウスイベントのミラーは特殊なケースです。ミラー領域は実際には表示オブジェクトではないので、<codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> イベントと <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> イベントはシミュレートされます。<codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> イベントと <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> イベントはシミュレートされません。自然に発生するすべての <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> イベント、<codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> イベント、<codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> イベントおよび <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> イベントは、そのターゲットがテキスト行であるか、テキスト行の子であるかに関係なしに無視され、ミラーされません。</p>
 
 <p class="- topic/p ">ActionScript コードから直接 TextLineMirrorRegion オブジェクトを作成することはできません。<codeph class="+ topic/ph pr-d/codeph ">new TextLineMirrorRegion()</codeph> を呼び出すと、例外がスローされます。TextLineMirrorRegion は、テキスト行が mirror イベントを設定した ContentElement オブジェクトから作成された際に作成され、テキスト行に関連付けられます。</p>
 
 <p class="- topic/p ">TextLineMirrorRegion クラスは final クラスであるため、サブクラス化することはできません。</p>
 
 </apiDesc><example conref="examples\TextLineMirrorRegionExample.as" class="- topic/example "> この例は、ミラー領域のあるテキストのブロックを示しています。この領域をクリックすると赤色に表示されます。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ContentElement;
    import flash.text.engine.GroupElement;
    import flash.text.engine.TextLineMirrorRegion;
    import flash.events.MouseEvent;
    import flash.events.EventDispatcher;
    import flash.ui.Mouse;

    public class TextLineMirrorRegionExample extends Sprite {
        
        var myEvent:EventDispatcher = new EventDispatcher();
        var fontDescription:FontDescription = new FontDescription();
        var textBlock:TextBlock = new TextBlock();

        public function TextLineMirrorRegionExample():void {
            
            fontDescription.fontWeight = "bold";
            var blackFormat:ElementFormat = new ElementFormat();
            blackFormat.fontSize = 18;
            blackFormat.color = 0x000000;
            blackFormat.fontDescription = fontDescription;
            
            var textElement1 = new TextElement("Click on different parts of me to find the ", blackFormat);
            var textElement2 = new TextElement("mirror regions",blackFormat);
            var textElement3 = new TextElement(". If I am a mirror region, I'll ",blackFormat);
            var textElement4 = new TextElement("turn red",blackFormat);
            var textElement5 = new TextElement(".",blackFormat);
            
            myEvent.addEventListener("click", clickHandler);
            myEvent.addEventListener("mouseOut", mouseOutHandler);
            myEvent.addEventListener("mouseOver", mouseOverHandler);
            
            var groupVector:Vector.&lt;ContentElement> = new Vector.&lt;ContentElement>;
            groupVector.push(textElement1, textElement2, textElement3, textElement4, textElement5);
            var groupElement:GroupElement = new GroupElement(groupVector);
            
            textElement2.eventMirror=myEvent;
            textElement4.eventMirror=myEvent;
            
            textBlock.content = groupElement;
            createLines(textBlock);
        }
    
        private function clickHandler(event:MouseEvent):void
        {
            var redFormat:ElementFormat = new ElementFormat();
            redFormat.color = 0xCC0000;
            redFormat.fontSize = 18;
            redFormat.fontDescription = fontDescription;
            var line:TextLine = event.target as TextLine;
            var region:TextLineMirrorRegion = line.getMirrorRegion(myEvent);
            region.element.elementFormat = redFormat;
            createLines(textBlock);
        }
        
        private function mouseOverHandler(event:MouseEvent):void
        {
            Mouse.cursor = "button";
        }
        
        private function mouseOutHandler(event:MouseEvent):void
        {
            Mouse.cursor = "arrow";
        }
            
        private function createLines(textBlock:TextBlock):void 
        {
            var purgeLine:TextLine = textBlock.firstLine;
                
            while (purgeLine)
            {
                removeChild (purgeLine);
                purgeLine = purgeLine.nextLine;
            }
            var lineWidth:Number = 150;
            var xPos:Number = 15.0;
            var yPos:Number = 20.0;
            var textLine:TextLine = textBlock.createTextLine (null, lineWidth);
                
            while (textLine)
            {
                textLine.x = xPos;
                textLine.y = yPos;
                yPos += textLine.height + 2;
                addChild (textLine);
                textLine = textBlock.createTextLine (textLine, lineWidth);
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLine/mirrorRegions" class="- topic/link "><linktext class="- topic/linktext ">TextLine.mirrorRegions</linktext></link></related-links><apiValue id="flash.text.engine:TextLineMirrorRegion:bounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bounds</apiName><shortdesc class="- topic/shortdesc ">
	 テキストラインを基準にするミラー領域の境界です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストラインを基準にするミラー領域の境界です。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:element:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">element</apiName><shortdesc class="- topic/shortdesc ">
	 ミラー領域の派生元の ContentElement オブジェクトです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ContentElement</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">このエレメントが含まれる TextLine は無効です。
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 ミラー領域の派生元の <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> オブジェクトです。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:mirror:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mirror</apiName><shortdesc class="- topic/shortdesc ">
	 ミラー領域に影響を与えるイベントをミラーする先の EventDispatcher オブジェクトです。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.events:EventDispatcher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 ミラー領域に影響を与えるイベントをミラーする先の <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> オブジェクトです。このオブジェクトは、ミラー領域で特に発生するマウスイベントと、テキスト行がターゲットになる他のすべてのイベントを含みます。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:nextRegion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nextRegion</apiName><shortdesc class="- topic/shortdesc ">
	 テキストエレメントから派生するセット内の次の TextLineMirrorRegion。現在の領域が、セット内の最後のミラー領域である場合は null。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLineMirrorRegion</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストエレメントから派生するセット内の次の TextLineMirrorRegion。これが、セット内の最後のミラー領域である場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。同じ行または別のテキスト行にあります。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:previousRegion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousRegion</apiName><shortdesc class="- topic/shortdesc ">
	 テキストエレメントから派生するセット内の前の TextLineMirrorRegion。現在の領域が、セット内の最初のミラー領域である場合は null。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLineMirrorRegion</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 テキストエレメントから派生するセット内の前の TextLineMirrorRegion。現在の領域が、セット内の最初のミラー領域である場合は <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。同じ行または別のテキスト行にあります。
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:textLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textLine</apiName><shortdesc class="- topic/shortdesc ">
	 このミラー領域を含む TextLine です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 このミラー領域を含む TextLine です。
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:LineJustification" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LineJustification</apiName><shortdesc class="- topic/shortdesc ">
LineJustification クラスは、TextJustifier サブクラスの lineJustfication プロパティの設定で使用される定数値の列挙です。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
LineJustification クラスは、TextJustifier サブクラスの <codeph class="+ topic/ph pr-d/codeph ">lineJustfication</codeph> プロパティの設定で使用される定数値の列挙です。 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextJustifier/lineJustification" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier.lineJustification</linktext></link></related-links><apiValue id="flash.text.engine:LineJustification:ALL_BUT_LAST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL_BUT_LAST</apiName><shortdesc class="- topic/shortdesc "> 
	最終行を除くすべての行を均等配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">allButLast</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	最終行を除くすべての行を均等配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LineJustification:ALL_INCLUDING_LAST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL_INCLUDING_LAST</apiName><shortdesc class="- topic/shortdesc "> 
	すべての行を均等配置します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">allIncludingLast</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	すべての行を均等配置します。
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LineJustification:UNJUSTIFIED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNJUSTIFIED</apiName><shortdesc class="- topic/shortdesc "> 
	行を均等配置しません。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unjustified</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	行を均等配置しません。
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:SpaceJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SpaceJustifier</apiName><shortdesc class="- topic/shortdesc ">
 SpaceJustifier クラスは、テキストブロック内のテキスト行に対する均等配置オプションを制御するために必要なプロパティを表します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:TextJustifier</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 SpaceJustifier クラスは、テキストブロック内のテキスト行に対する均等配置オプションを制御するために必要なプロパティを表します。 
 
 <p class="- topic/p "> SpaceJustifier オブジェクトのプロパティを設定する前に、コンストラクター <codeph class="+ topic/ph pr-d/codeph ">new SpaceJustifier()</codeph> を使用して SpaceJustifier オブジェクトを作成する必要があります。SpaceJustifier オブジェクトが TextBlock に適用された後で SpaceJustifier オブジェクトのプロパティを設定しても、TextBlock は無効化されません。</p>
 
 </apiDesc><example conref="examples\SpaceJustifierExample.as" class="- topic/example "> 次の例では、文字間隔を使用して、最後の行を除くテキストのブロックすべてを均等配置します。
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.SpaceJustifier;
    import flash.text.engine.LineJustification;
    
    public class SpaceJustifierExample extends Sprite {
        
        public function SpaceJustifierExample():void {
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, " +
            "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut " +
            "enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut " +
            "aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit " +
            "in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " +
            "sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt " +
            "mollit anim id est laborum.";
            
            var format:ElementFormat = new ElementFormat(null, 12, 0xCC0000);
            var textElement:TextElement = new TextElement(str, format);
            var spaceJustifier:SpaceJustifier = new SpaceJustifier("en", LineJustification.ALL_BUT_LAST);
            spaceJustifier.letterSpacing = true;
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textBlock.textJustifier = spaceJustifier;
            createLines(textBlock);
        }
        
        private function createLines(textBlock:TextBlock):void {
        
            var yPos = 20;
            var textLine:TextLine = textBlock.createTextLine (null, 150);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.textHeight+2;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, 150);
            }        
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:SpaceJustifier:SpaceJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SpaceJustifier</apiName><shortdesc class="- topic/shortdesc ">
     SpaceJustifier オブジェクトを作成します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>
     </internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> が <codeph class="+ topic/ph pr-d/codeph ">null</codeph> であるか、有効なロケールを表すには短すぎます。
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> のメンバーではありません。
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">en</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">均等配置規則を決定するためのロケールです。デフォルト値は<codeph class="+ topic/ph pr-d/codeph ">「en」</codeph>です。
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unjustified</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">段落に対する行の均等配置タイプです。このプロパティには、<codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> 定数を使用します。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">LineJustification.UNJUSTIFIED</codeph> です。
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">letterSpacing</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">均等配置に文字間隔を使用するかどうかを指定します。デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">false</codeph> です。
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     SpaceJustifier オブジェクトを作成します。LineJustification クラスには、適用可能な行の均等配置のタイプを指定する定数が含まれます。
     
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:SpaceJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 SpaceJustifier のクローンコピーを構築します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This class is currently stored as a live reference, but there is no way to track when its 
	 properties change.  This means that when changes are made, text blocks are not invalidated, which in 
	 the current implementation can lead to player crashes.  Even from the API perspective its wrong, as 
	 the affected text lines should be marked INVALID when format changes are made, but they�re not. The 
	 solution is to use a copy-on-set model.  When the object is passed in, the player copies it, so later
	 changes to the object that was passed in have no effect. The setter makes an internal copy of the 
	 array; the getter returns a copy of the internal copy. Operations like 
	 myBlock.textJustifier.spaceJustifier.letterSpacing = true will have no effect. Users who subclass 
	 this class in the future will need to use the clone() method to implement this technique of 
	 'locking' the format once it has been set.  
	 
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">SpaceJustifier</codeph> オブジェクトのコピーです。
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 SpaceJustifier のクローンコピーを構築します。
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:SpaceJustifier:letterSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">letterSpacing</apiName><shortdesc class="- topic/shortdesc ">
     均等配置に文字間隔を使用するかどうかを指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     均等配置に文字間隔を使用するかどうかを指定します。
     
     <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">false</codeph> です</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:maximumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maximumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     均等配置に使用する単語間の最大間隔（通常の間隔幅の倍数）を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> は、<codeph class="+ topic/ph pr-d/codeph ">optimumSpacing</codeph> よりも小さくなります。
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     均等配置に使用する単語間の最大間隔（通常の間隔幅の倍数）を指定します。<codeph class="+ topic/ph pr-d/codeph ">letterSpacing</codeph> が <codeph class="+ topic/ph pr-d/codeph ">true</codeph> の場合は、単語間の間隔が最大間隔に達すると、文字間隔が使用されます。<codeph class="+ topic/ph pr-d/codeph ">letterSpacing</codeph> が <codeph class="+ topic/ph pr-d/codeph ">false</codeph> の場合は、単語間の間隔は最大間隔以上に広げられます。
     
     <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">1.5</codeph> です</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:minimumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">minimumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     均等配置に使用する単語間の最小間隔（通常の間隔幅の倍数）を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> が、0 より小さいか、<codeph class="+ topic/ph pr-d/codeph ">optimumSpacing</codeph> よりも大きくなります。
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     均等配置に使用する単語間の最小間隔（通常の間隔幅の倍数）を指定します。
     
     <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">0.5</codeph> です</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:optimumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">optimumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     均等配置に使用する単語間の最適な間隔（通常の間隔幅の倍数）を指定します。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定された <codeph class="+ topic/ph pr-d/codeph ">value</codeph> が <codeph class="+ topic/ph pr-d/codeph ">minimumSpacing</codeph> より小さいか、<codeph class="+ topic/ph pr-d/codeph ">maximumSpacing</codeph> より大きくなります。
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     均等配置に使用する単語間の最適な間隔（通常の間隔幅の倍数）を指定します。
     
     <p class="- topic/p ">デフォルト値は <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> です</p>
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>