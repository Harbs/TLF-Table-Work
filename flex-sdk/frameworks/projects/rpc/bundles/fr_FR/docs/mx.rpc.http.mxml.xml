<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.rpc.http.mxml"><apiName>mx.rpc.http.mxml</apiName><apiDetail/><apiClassifier id="mx.rpc.http.mxml:HTTPService"><apiName>HTTPService</apiName><shortdesc>
 Utilisez la balise &amp;lt;mx:HTTPService&amp;gt; pour représenter un objet HTTPService dans un fichier MXML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 <p>
 The &lt;mx:HTTPService&gt; tag accepts the following tag attributes:
 </p>
 <pre>
 &lt;mx:HTTPService
 <b>Properties</b>
 concurrency="multiple|single|last"
 contentType="application/x-www-form-urlencoded|application/xml"
 destination="<i>DefaultHTTP</i>"
 id="<i>No default.</i>"
 method="GET|POST|HEAD|OPTIONS|PUT|TRACE|DELETE"
 resultFormat="object|array|xml|e4x|flashvars|text"
 showBusyCursor="false|true"
 makeObjectsBindable="false|true"
 url="<i>No default.</i>"
 useProxy="false|true"
 xmlEncode="<i>No default.</i>"
 xmlDecode="<i>No default.</i>"
 
 <b>Events</b>
 fault="<i>No default.</i>"
 result="<i>No default.</i>"
 /&gt;
 </pre>
 
 The <code>&lt;mx:HTTPService&gt;</code> tag can have a single &lt;mx:request&gt; tag under which the parameters can be specified.
 </p>
 
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.rpc.mxml:IMXMLSupport</apiBaseInterface><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>mx.rpc.http:HTTPService</apiBaseClassifier></apiClassifierDef><apiDesc>
 Utilisez la balise <codeph>&lt;mx:HTTPService></codeph> pour représenter un objet HTTPService dans un fichier MXML. Lorsque vous appelez la méthode <codeph>send()</codeph> de l’objet HTTPService, elle effectue une demande HTTP auprès de l’URL spécifiée et une réponse HTTP est retournée. Si vous le souhaitez, vous pouvez transmettre des paramètres à l’URL spécifiée. Lorsque vous n’utilisez pas le service proxy de serveur, vous ne pouvez utiliser que les méthodes HTTP GET ou POST. Toutefois, lorsque vous définissez la propriété useProxy sur true et que vous utilisez le service proxy de serveur, vous pouvez aussi utiliser les méthodes HTTP HEAD, OPTIONS, TRACE et DELETE.
 
 <p><b>Remarque :</b> en raison d’une limitation logicielle, la classe HTTPService ne génère pas de messages d’erreur conviviaux lorsqu’elle utilise GET.
 </p>
 
 </apiDesc><example conref="HTTPServiceExample.mxml"/></apiClassifierDetail><related-links><link href="mx.rpc.http.xml#HTTPService"><linktext>mx.rpc.http.HTTPService</linktext></link><link href="" invalidHref="mx.validators.Validator.xml"><linktext>mx.validators.Validator</linktext></link><link href="" invalidHref="mx.managers.CursorManager.xml"><linktext>mx.managers.CursorManager</linktext></link></related-links><apiConstructor id="mx.rpc.http.mxml:HTTPService:HTTPService"><apiName>HTTPService</apiName><shortdesc>
     Crée une nouvelle classe HTTPService.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>rootURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Adresse URL que la classe HTTPService doit utiliser lorsqu’elle calcule des adresses URL relatives.
     
     </apiDesc></apiParam><apiParam><apiItemName>destination</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom de destination HTTPService dans le fichier service-config.xml file.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Crée une nouvelle classe HTTPService. Ce constructeur est généralement appelé par le code généré d’un document MXML. Vous utilisez en général la classe mx.rpc.http.HTTPService pour créer une classe HTTPService dans ActionScript.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.rpc.http.mxml:HTTPService:initialized"><apiName>initialized</apiName><shortdesc>
     Appelé une fois que l’objet d’implémentation a été créé et que toutes les propriétés de composants spécifiées sur la balise MXML ont été initialisées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>Document MXML ayant créé cet objet.
     
     </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Identifiant utilisé par le <codeph>document</codeph> pour se référer à cet objet. Si l’objet est une propriété profonde dans le document, la valeur <codeph>id</codeph> est null. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Appelé une fois que l’objet d’implémentation a été créé et que toutes les propriétés de composants spécifiées sur la balise MXML ont été initialisées. Si vous créez cette classe dans ActionScript et voulez qu’elle fonctionne avec la validation, vous devez appeler cette méthode et transmettre l’<codeph>id</codeph> du document MXML et de la classe HTTPService.
     
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.rpc.http.mxml:HTTPMultiService"><apiName>HTTPMultiService</apiName><shortdesc>
 Utilisez la balise &amp;lt;mx:HTTPMultiService&amp;gt; pour représenter un objet HTTPMultiService dans un fichier MXML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="operationList"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseInterface>mx.rpc.mxml:IMXMLSupport</apiBaseInterface><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>mx.rpc.http:HTTPMultiService</apiBaseClassifier></apiClassifierDef><apiDesc>
 Utilisez la balise <codeph>&lt;mx:HTTPMultiService</codeph> pour représenter un objet HTTPMultiService dans un fichier MXML. L’objet HTTPMultiService est similaire à HTTPService à ceci près qu’il prend en charge plusieurs opérations pour chaque balise individuelle.
 
 <p><b>Remarque :</b> en raison d’une limitation logicielle, la classe HTTPService ne génère pas de messages d’erreur conviviaux lorsqu’elle utilise GET.
 </p>
 
 </apiDesc></apiClassifierDetail><related-links><link href="mx.rpc.http.xml#HTTPMultiService"><linktext>mx.rpc.http.HTTPMultiService</linktext></link></related-links><apiConstructor id="mx.rpc.http.mxml:HTTPMultiService:HTTPMultiService"><apiName>HTTPMultiService</apiName><shortdesc>
     Crée un nouvel HTTPMultiService.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>rootURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Adresse URL que la classe HTTPService doit utiliser lorsqu’elle calcule des adresses URL relatives.
     
     </apiDesc></apiParam><apiParam><apiItemName>destination</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom de destination HTTPService dans le fichier service-config.xml file.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Crée un nouvel HTTPMultiService. Ce constructeur est généralement appelé par le code généré d’un document MXML. Vous utilisez en général la classe mx.rpc.http.HTTPService pour créer une classe HTTPService dans ActionScript.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.rpc.http.mxml:HTTPMultiService:initialized"><apiName>initialized</apiName><shortdesc>
     Appelé une fois que l’objet d’implémentation a été créé et que toutes les propriétés de composants spécifiées sur la balise MXML ont été initialisées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>Document MXML ayant créé cet objet.
     
     </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Identifiant utilisé par le <codeph>document</codeph> pour se référer à cet objet. Si l’objet est une propriété profonde dans le document, la valeur <codeph>id</codeph> est null. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Appelé une fois que l’objet d’implémentation a été créé et que toutes les propriétés de composants spécifiées sur la balise MXML ont été initialisées. Si vous créez cette classe dans ActionScript et voulez qu’elle fonctionne avec la validation, vous devez appeler cette méthode et transmettre l’<codeph>id</codeph> du document MXML et de la classe HTTPService.
     
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>