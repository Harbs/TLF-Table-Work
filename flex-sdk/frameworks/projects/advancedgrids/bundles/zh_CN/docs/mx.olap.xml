<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.olap"><apiName>mx.olap</apiName><apiDetail/><apiClassifier id="mx.olap:IOLAPMember"><apiName>IOLAPMember</apiName><shortdesc>
  IOLAPMember 接口提供 OLAP 架构的一个层次的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPMember 接口提供 OLAP 架构的一个层次的成员。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPMember"><linktext>mx.olap.OLAPMember</linktext></link></related-links><apiOperation id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:findChildMember"><apiName>findChildMember</apiName><shortdesc>
      返回具有给定名称的此成员的子级。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例列表，用于表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回具有给定名称的此成员的子级。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:children:get"><apiName>children</apiName><shortdesc>
      此成员的子级，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此成员的子级，作为 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:hierarchy:get"><apiName>hierarchy</apiName><shortdesc>
     此成员所属的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPHierarchy</apiValueClassifier></apiValueDef><apiDesc>
     此成员所属的层次结构。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:isAll:get"><apiName>isAll</apiName><shortdesc>
      如果此为层次结构的所有成员，则返回 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      如果此为层次结构的所有成员，则返回 <codeph>true</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:isMeasure:get"><apiName>isMeasure</apiName><shortdesc>
     如果此成员表示维度的测量，则返回 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     如果此成员表示维度的测量，则返回 <codeph>true</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:level:get"><apiName>level</apiName><shortdesc>
     此成员所属的级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
     此成员所属的级别。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPMember:mx.olap:IOLAPMember:parent:get"><apiName>parent</apiName><shortdesc>
     此成员的父级。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
     此成员的父级。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPAxisPosition"><apiName>OLAPAxisPosition</apiName><shortdesc>
  OLAPAxisPosition 类提供 OLAP 查询结果的结果轴上的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPAxisPosition</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPAxisPosition 类提供 OLAP 查询结果的结果轴上的位置。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#IOLAPResult"><linktext>mx.olap.IOLAPResult</linktext></link><link href="mx.olap.xml#OLAPResult"><linktext>mx.olap.OLAPResult</linktext></link></related-links><apiConstructor id="mx.olap:OLAPAxisPosition:OLAPAxisPosition"><apiName>OLAPAxisPosition</apiName><shortdesc>
      构造函数
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.olap:OLAPAxisPosition:members:get"><apiName>members</apiName><shortdesc>
      查询结果的成员，在此位置作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      查询结果的成员，在此位置作为 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPAttribute"><apiName>IOLAPAttribute</apiName><shortdesc>
  IOLAPAttribute 接口表示 OLAP 架构的维度中的属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPHierarchy</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPAttribute 接口表示 OLAP 架构的维度中的属性。
 
  
  </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="mx.olap:IOLAPQueryAxis"><apiName>IOLAPQueryAxis</apiName><shortdesc>
  IOLAPQueryAxis 接口表示 OLAP 查询的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPQueryAxis 接口表示 OLAP 查询的轴。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link></related-links><apiOperation id="mx.olap:IOLAPQueryAxis:mx.olap:IOLAPQueryAxis:addMember"><apiName>addMember</apiName><shortdesc>
      将单个成员添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier><apiDesc>要添加到查询中的成员。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将单个成员添加到查询轴中。该成员会自动转换为 IOLPASet 实例。将成员添加到切片轴中时使用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPQueryAxis:mx.olap:IOLAPQueryAxis:addSet"><apiName>addSet</apiName><shortdesc>
      将集添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>要添加到查询中的集。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将集添加到查询轴中。该集会定义为查询轴提供信息的成员和 tuple。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPQueryAxis:mx.olap:IOLAPQueryAxis:addTuple"><apiName>addTuple</apiName><shortdesc>
      将 tuple 添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>t</apiItemName><apiOperationClassifier>mx.olap:IOLAPTuple</apiOperationClassifier><apiDesc>要添加到查询中的 tuple。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将 tuple 添加到查询轴中。tuple 会自动转换为 IOLPASet 实例。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPQueryAxis:mx.olap:IOLAPQueryAxis:sets:get"><apiName>sets</apiName><shortdesc>
      查询轴的所有集，作为 IOLAPSet 实例数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      查询轴的所有集，作为 IOLAPSet 实例数组。此数组包括使用 <codeph>addMember()</codeph> 和 <codeph>addTuple()</codeph> 方法添加的集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPQueryAxis:mx.olap:IOLAPQueryAxis:tuples:get"><apiName>tuples</apiName><shortdesc>
      添加到查询轴的所有 tuple，作为 IOLAPTuple 实例数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      添加到查询轴的所有 tuple，作为 IOLAPTuple 实例数组。此数组包括使用 <codeph>addMember()</codeph> 和 <codeph>addSet()</codeph> 方法添加的 tuple。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPCell"><apiName>IOLAPCell</apiName><shortdesc>
  IOLAPCell 接口表示 OLAPResult 实例中的单元格。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPCell 接口表示 OLAPResult 实例中的单元格。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPCell"><linktext>mx.olap.OLAPCell</linktext></link></related-links><apiValue id="mx.olap:IOLAPCell:mx.olap:IOLAPCell:formattedValue:get"><apiName>formattedValue</apiName><shortdesc>
      单元格中的格式化值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      单元格中的格式化值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPCell:mx.olap:IOLAPCell:value:get"><apiName>value</apiName><shortdesc>
     单元格中的原始值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
     单元格中的原始值。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPAxisPosition"><apiName>IOLAPAxisPosition</apiName><shortdesc>
  IOLAPAxisPosition 接口表示 OLAP 轴上的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPAxisPosition 接口表示 OLAP 轴上的位置。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link></related-links><apiValue id="mx.olap:IOLAPAxisPosition:mx.olap:IOLAPAxisPosition:members:get"><apiName>members</apiName><shortdesc>
     此位置的成员，如 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
     此位置的成员，如 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPElement"><apiName>OLAPElement</apiName><shortdesc>
  OLAPElement 类定义为 OLAP 元素提供常用属性的基本接口。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPElement&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPElement
    <b>Properties</b>
    dimensions=""
    name=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPElement</apiBaseInterface><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPElement 类定义为 OLAP 元素提供常用属性的基本接口。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPElement"><linktext>mx.olap.IOLAPElement</linktext></link></related-links><apiConstructor id="mx.olap:OLAPElement:OLAPElement"><apiName>OLAPElement</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。例如，“Time_Year”，其中“Year”是 OLAP 架构中“Time”维度的级别。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 元素的名称，可作为 String 显示。
     
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPElement:toString"><apiName>toString</apiName><shortdesc>
      返回该元素的唯一名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>元素的唯一名称。
      
      </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
      返回该元素的唯一名称。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPElement:dimension:get"><apiName>dimension</apiName><shortdesc>
      
      此元素所属的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPDimension</apiValueClassifier></apiValueDef><apiDesc>
      
      此元素所属的维度。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPElement:displayName:get"><apiName>displayName</apiName><shortdesc>
      
      OLAP 元素的名称，可作为 String 显示。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      OLAP 元素的名称，可作为 String 显示。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPElement:name:get"><apiName>name</apiName><shortdesc>
      
      OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。例如，“Time_Year”是 OLAP 元素的名称，其中“Year”是 OLAP 架构中“Time”维度的级别。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPElement:uniqueName:get"><apiName>uniqueName</apiName><shortdesc>
      
      多维数据集中 OLAP 元素的唯一名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      
      多维数据集中 OLAP 元素的唯一名称。例如，“[Time][Year][2007]”是一个唯一名称，其中 2007 是属于“Time”维度的“Year”级别的元素名称。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPSet"><apiName>OLAPSet</apiName><shortdesc>
  OLAPSet 类表示集，该集可用于配置 OLAP 查询的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPSet</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPSet 类表示集，该集可用于配置 OLAP 查询的轴。包含零个或多个 tuple 的集；不包含任何 tuple 的集称为空集。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPSet"><linktext>mx.olap.IOLAPSet</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link></related-links><apiConstructor id="mx.olap:OLAPSet:OLAPSet"><apiName>OLAPSet</apiName><shortdesc>
      构造函数
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPSet:addElement"><apiName>addElement</apiName><shortdesc>
      
     在集中添加新成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>e</apiItemName><apiOperationClassifier>mx.olap:IOLAPElement</apiOperationClassifier><apiDesc>要添加的成员。如果 <codeph>element</codeph> 为层次结构或级别结构，则表示已添加其成员。如果 <codeph>element</codeph> 为 IOLAPMember 的实例，则会直接添加它。已为每个成员创建了新的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      
     在集中添加新成员。
    
     <p>此方法会根据传入的元素类型将适当的元素添加到集中。如果已传递 IOLAPHierarchy 元素，则它会添加该层次结构的默认成员。如果已传递 IOLAPLevel 元素，它会添加该级别的所有成员。如果已传递 IOLAPMember 元素，则会将其添加到集中。</p>
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:addElements"><apiName>addElements</apiName><shortdesc>
      
     将成员列表添加到集中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>members</apiItemName><apiType value="mx.collections:IList"/><apiDesc>要作为 IOLAPMember 实例列表添加的成员。已为每个成员创建了新的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      
     将成员列表添加到集中。当层次结构的成员或子级或者个别成员需要添加到集中时，可以调用此方法。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:addTuple"><apiName>addTuple</apiName><shortdesc>
      
     在集中添加新的 tuple。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tuple</apiItemName><apiOperationClassifier>mx.olap:IOLAPTuple</apiOperationClassifier><apiDesc>要添加的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      
     在集中添加新的 tuple。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:protected:compareMembers"><apiName>compareMembers</apiName><shortdesc>
      返回关于集中两个成员的相对位置的信息。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>如下：
      <ul>
        <li>如果成员在相同级别，则显示 0</li>
        <li>如果在层次结构中 m2 比 m1 高，则显示 1</li>
        <li>如果在层次结构中 m1 比 m2 高，则显示 -1</li>
      </ul>
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>m1</apiItemName><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier><apiDesc>第一个成员。
     
      </apiDesc></apiParam><apiParam><apiItemName>m2</apiItemName><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier><apiDesc>第二个成员。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回关于集中两个成员的相对位置的信息。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:crossJoin"><apiName>crossJoin</apiName><shortdesc>
     
     返回一个新的 IOLAPSet 实例，其中包含此 IOLAPSet 实例和输入的交叉连接。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>包含此 IOLAPSet 实例和 <codeph>input</codeph> 的交叉连接的 IOLAPSet 实例。
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>input</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>IOLAPSet 实例。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     返回一个新的 IOLAPSet 实例，其中包含此 IOLAPSet 实例和 <codeph>input</codeph> 的交叉连接。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:protected:findCommonHierarchy"><apiName>findCommonHierarchy</apiName><shortdesc>
      返回两个 tuple 的常用 IOLAPHierarchy 实例，或者如果 tuple 不共享层次结构，则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>两个 tuple 的常用 IOLAPHierarchy 实例，或者如果 tuple 不共享层次结构则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPHierarchy</apiOperationClassifier></apiReturn><apiParam><apiItemName>t1</apiItemName><apiOperationClassifier>mx.olap:OLAPTuple</apiOperationClassifier><apiDesc>第一个 tuple。
     
      </apiDesc></apiParam><apiParam><apiItemName>t2</apiItemName><apiOperationClassifier>mx.olap:OLAPTuple</apiOperationClassifier><apiDesc>第二个 tuple。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回两个 tuple 的常用 IOLAPHierarchy 实例，或者如果 tuple 不共享层次结构，则为 null。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:hierarchize"><apiName>hierarchize</apiName><shortdesc>
     
     返回此集的层次结构版本的新 IOLAPSet。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>此集的层次结构版本的新 IOLAPSet。
    
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>post</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>如果为 <codeph>true</codeph>，则指示子级应该先于父级。默认情况下，父级先于子级。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     返回此集的层次结构版本的新 IOLAPSet。
      
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:protected:sortTuple"><apiName>sortTuple</apiName><shortdesc>
      返回关于集中两个 tuple 的相对位置的信息。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>如下：
      <ul>
        <li>如果 tuple 在相同级别，则显示 0</li>
        <li>如果 t2 比 t1 高，则显示 1</li>
        <li>如果 t1 比 t2 高，则显示 -1</li>
      </ul>
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>t1</apiItemName><apiOperationClassifier>mx.olap:OLAPTuple</apiOperationClassifier><apiDesc>第一个 tuple。
     
      </apiDesc></apiParam><apiParam><apiItemName>t2</apiItemName><apiOperationClassifier>mx.olap:OLAPTuple</apiOperationClassifier><apiDesc>第二个 tuple。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回关于集中两个 tuple 的相对位置的信息。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSet:union"><apiName>union</apiName><shortdesc>
      
     返回一个新 IOLAPSet 实例，其中包含此 IOLAPSet 实例和输入的联合。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>包含此 IOLAPSet 实例和 <codeph>input</codeph> 的联合的 IOLAPSet 实例。
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>secondSet</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>IOLAPSet 实例。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      
     返回一个新 IOLAPSet 实例，其中包含此 IOLAPSet 实例和 <codeph>input</codeph> 的联合。
    
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPSet:tuples:get"><apiName>tuples</apiName><shortdesc>
      此集实例中包含的 tuple，作为 IOLAPTuple 实例数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      此集实例中包含的 tuple，作为 IOLAPTuple 实例数组。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPLevel"><apiName>OLAPLevel</apiName><shortdesc>
  OLAPLevel 类表示 OLAP 多维数据集中的级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPLevel&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPLevel
    <b>Properties</b>
    attributeName=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPLevel</apiBaseInterface><apiBaseClassifier>mx.olap:OLAPElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPLevel 类表示 OLAP 多维数据集中的级别。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPLevel"><linktext>mx.olap.IOLAPLevel</linktext></link></related-links><apiConstructor id="mx.olap:OLAPLevel:OLAPLevel"><apiName>OLAPLevel</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>包括元素的 OLAP 架构层次结构的 OLAP 层次的名称。例如，“Time_Year”，其中“Year”是 OLAP 架构中“Time”维度的级别。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 导次的名称，可作为 String 显示。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPLevel:findMember"><apiName>findMember</apiName><shortdesc>
      
      返回层次结构中有此给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>表示成员的 IOLAPMember 实例列表，或者如果未找到成员，则为 null。
      
      </apiDesc><apiType value="mx.collections:IList"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回层次结构中有此给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPLevel:attributeName:get"><apiName>attributeName</apiName><shortdesc>
      要在此级别使用的属性名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      要在此级别使用的属性名称。此属性的值与相应属性的 <codeph>OLAPAttribute.name</codeph> 属性的值相对应。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:attribute:get"><apiName>attribute</apiName><shortdesc>
      与此级别相连的属性，作为 OLAPAttribute 的实例。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:OLAPAttribute</apiValueClassifier></apiValueDef><apiDesc>
      与此级别相连的属性，作为 OLAPAttribute 的实例。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:child:get"><apiName>child</apiName><shortdesc>
      
      层次结构中的下一个子层次。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
      
      层次结构中的下一个子层次。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:dataField:get"><apiName>dataField</apiName><shortdesc>
      为此 OLAPLevel 实例提供数据的输入数据集的字段。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      为此 OLAPLevel 实例提供数据的输入数据集的字段。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:depth:get"><apiName>depth</apiName><shortdesc>
      
      维度层次结构中的层次深度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      
      维度层次结构中的层次深度。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:hierarchy:get"><apiName>hierarchy</apiName><shortdesc>
      
      此层次所属维度的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPHierarchy</apiValueClassifier></apiValueDef><apiDesc>
      
      此层次所属维度的层次结构。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:members:get"><apiName>members</apiName><shortdesc>
      
      此层次的成员，如 IOLAPMember 实例列表，或者如果未找到成员，则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此层次的成员，如 IOLAPMember 实例列表，或者如果未找到成员，则为 null。该列表可能会表示远程数据，因此可以引发 ItemPendingError。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:name:get"><apiName>name</apiName><shortdesc>
      与此 OLAPLevel 实例相关联的 OLAPAttribute 实例的名称属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      与此 OLAPLevel 实例相关联的 OLAPAttribute 实例的 <codeph>name</codeph> 属性的值。即使此属性是可写的，其值也由与级别关联的 OLAPAttribute 实例来决定，无法设置。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:parent:get"><apiName>parent</apiName><shortdesc>
      
      此层次的父层次，或者如果未将此层次嵌入其它层次，则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
      
      此层次的父层次，或者如果未将此层次嵌入其它层次，则为 null。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPLevel:uniqueName:get"><apiName>uniqueName</apiName><shortdesc>
      
      多维数据集中 OLAP 元素的唯一名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      
      多维数据集中 OLAP 元素的唯一名称。例如，“[Time][Year][2007]”是一个唯一名称，其中 2007 是属于“Time”维度的“Year”级别的元素名称。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPQuery"><apiName>OLAPQuery</apiName><shortdesc>
  OLAPQuery 接口表示在 IOLAPCube 上执行的 OLAP 查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="axes"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPQuery&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPQuery
    <b>Properties</b>
       axis=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPQuery</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPQuery 接口表示在 IOLAPCube 上执行的 OLAP 查询。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPQuery"><linktext>mx.olap.IOLAPQuery</linktext></link><link href="mx.olap.xml#IOLAPQueryAxis"><linktext>mx.olap.IOLAPQueryAxis</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link></related-links><apiOperation id="mx.olap:OLAPQuery:getAxis"><apiName>getAxis</apiName><shortdesc>
      
      从查询中获取轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPQueryAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>axisOrdinal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      从查询中获取轴。通常您会调用此方法来获得未初始化的 IOLAPQueryAxis 实例，然后配置用于查询的 IOLAPQueryAxis 实例。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPQuery:setAxis"><apiName>setAxis</apiName><shortdesc>
      
      将轴设置为查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>axisOrdinal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.olap:IOLAPQueryAxis</apiOperationClassifier><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      将轴设置为查询。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPQuery:COLUMN_AXIS"><apiName>COLUMN_AXIS</apiName><shortdesc>
      指定列轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定列轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPQuery:ROW_AXIS"><apiName>ROW_AXIS</apiName><shortdesc>
      指定行轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定行轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPQuery:SLICER_AXIS"><apiName>SLICER_AXIS</apiName><shortdesc>
      指定切片轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定切片轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPQuery:axes:set"><apiName>axes</apiName><shortdesc>
      作为 OLAPQueryAxis 实例数组的查询的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      作为 OLAPQueryAxis 实例数组的查询的轴。查询可以有三个轴：列轴、行轴和切片轴。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPQuery"><apiName>IOLAPQuery</apiName><shortdesc>
  IOLAPQuery 接口表示在 IOLAPCube 上执行的 OLAP 查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPQuery 接口表示在 IOLAPCube 上执行的 OLAP 查询。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#IOLAPQueryAxis"><linktext>mx.olap.IOLAPQueryAxis</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link></related-links><apiOperation id="mx.olap:IOLAPQuery:mx.olap:IOLAPQuery:getAxis"><apiName>getAxis</apiName><shortdesc>
      从查询中获取轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPQueryAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>axisOridnal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      从查询中获取轴。通常您会调用此方法来获得未初始化的 IOLAPQueryAxis 实例，然后配置用于查询的 IOLAPQueryAxis 实例。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPQuery:mx.olap:IOLAPQuery:setAxis"><apiName>setAxis</apiName><shortdesc>
      将轴设置为查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>axisOridnal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.olap:IOLAPQueryAxis</apiOperationClassifier><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将轴设置为查询。
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.olap:IOLAPSet"><apiName>IOLAPSet</apiName><shortdesc>
  IOLAPSet 接口表示一个集，该集用于配置 OLAP 查询的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPSet 接口表示一个集，该集用于配置 OLAP 查询的轴。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPSet"><linktext>mx.olap.OLAPSet</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link></related-links><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:addElement"><apiName>addElement</apiName><shortdesc>
     在集中添加新成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>mx.olap:IOLAPElement</apiOperationClassifier><apiDesc>要添加的成员。如果 <codeph>element</codeph> 为层次结构或级别结构，则表示已添加其成员。如果 <codeph>element</codeph> 为 IOLAPMember 的实例，则会直接添加它。已为每个成员创建了新的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     在集中添加新成员。
    
     <p>此方法会根据传入的元素类型将适当的元素添加到集中。如果已传递 IOLAPHierarchy 元素，则它会添加该层次结构的默认成员。如果已传递 IOLAPLevel 元素，它会添加该级别的所有成员。如果已传递 IOLAPMember 元素，则会将其添加到集中。</p>
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:addElements"><apiName>addElements</apiName><shortdesc>
     将成员列表添加到集中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elements</apiItemName><apiType value="mx.collections:IList"/><apiDesc>要作为 IOLAPMember 实例列表添加的成员。已为每个成员创建了新的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     将成员列表添加到集中。当层次结构的成员或子级或者个别成员需要添加到集中时，可以调用此方法。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:addTuple"><apiName>addTuple</apiName><shortdesc>
     在集中添加新的 tuple。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tuple</apiItemName><apiOperationClassifier>mx.olap:IOLAPTuple</apiOperationClassifier><apiDesc>要添加的 tuple。
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     在集中添加新的 tuple。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:crossJoin"><apiName>crossJoin</apiName><shortdesc>
     返回一个新的 IOLAPSet 实例，其中包含此 IOLAPSet 实例和输入的交叉连接。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>包含此 IOLAPSet 实例和 <codeph>input</codeph> 的交叉连接的 IOLAPSet 实例。
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>input</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>IOLAPSet 实例。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     返回一个新的 IOLAPSet 实例，其中包含此 IOLAPSet 实例和 <codeph>input</codeph> 的交叉连接。
    
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:hierarchize"><apiName>hierarchize</apiName><shortdesc>
     返回此集的层次结构版本的新 IOLAPSet。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>此集的层次结构版本的新 IOLAPSet。
    
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>post</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>如果为 <codeph>true</codeph>，则指示子级应该先于父级。默认情况下，父级先于子级。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     返回此集的层次结构版本的新 IOLAPSet。
      
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSet:mx.olap:IOLAPSet:union"><apiName>union</apiName><shortdesc>
     返回一个新 IOLAPSet 实例，其中包含此 IOLAPSet 实例和输入的联合。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>包含此 IOLAPSet 实例和 <codeph>input</codeph> 的联合的 IOLAPSet 实例。
     
     </apiDesc><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>input</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>IOLAPSet 实例。
    
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     返回一个新 IOLAPSet 实例，其中包含此 IOLAPSet 实例和 <codeph>input</codeph> 的联合。
    
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.olap:OLAPTrace"><apiName>OLAPTrace</apiName><shortdesc>
  OLAPTrace 类控制 OLAP 类生成并写入日志文件的跟踪信息的生成。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPTrace 类控制 OLAP 类生成并写入日志文件的跟踪信息的生成。此类内部使用 <codeph>trace()</codeph> 方法来写出日志信息。
 
  <p>您必须在 mm.cfg 中设置 <codeph>TraceOutputFileEnable=1</codeph>，并使用 Debug Flash Player 或 AIR Debug Launcher 生成跟踪输出。</p> 
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.olap.trace().xml"><linktext>trace()</linktext></link></related-links><apiOperation id="mx.olap:OLAPTrace:traceMsg"><apiName>traceMsg</apiName><shortdesc>
      将跟踪信息写入日志文件。您必须在 mm.cfg 中设置 TraceOutputFileEnable=1，并使用 Debug Flash Player 或 AIR Debug Launcher 通过调用此方法生成跟踪输出。 
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>msg</apiItemName><apiType value="String"/><apiDesc>跟踪消息。
     
      </apiDesc></apiParam><apiParam><apiItemName>level</apiItemName><apiType value="int"/><apiData>1</apiData><apiDesc>消息的跟踪级别。只有 <codeph>level</codeph> 参数小于 <codeph>traceLevel</codeph> 的跟踪消息才会发送到日志文件。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将跟踪消息写入日志文件
     
      <p>必须在 mm.cfg 中设置 <codeph>TraceOutputFileEnable=1</codeph>，并使用 Debug Flash Player 或 AIR Debug Launcher 通过调用此方法来生成跟踪输出。</p> 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPTrace:TRACE_LEVEL_1"><apiName>TRACE_LEVEL_1</apiName><shortdesc>
      指定在日志文件中写入最少跟踪信息。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定在日志文件中写入最少跟踪信息。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPTrace:TRACE_LEVEL_2"><apiName>TRACE_LEVEL_2</apiName><shortdesc>
      指定在日志文件中写入多于 TRACE_LEVEL_1 的跟踪信息。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定在日志文件中写入多于 <codeph>TRACE_LEVEL_1</codeph> 的跟踪信息。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPTrace:TRACE_LEVEL_3"><apiName>TRACE_LEVEL_3</apiName><shortdesc>
      指定在日志文件中写入最多跟踪信息。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定在日志文件中写入最多跟踪信息。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPTrace:traceLevel"><apiName>traceLevel</apiName><shortdesc>
      TRACE_LEVEL_1 是确定写入日志文件的跟踪信息量的当前跟踪级别，表示将最小量信息写入日志文件，TRACE_LEVEL_3 表示写入最多信息量。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/><apiDefaultValue>TRACE_LEVEL_1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>TRACE_LEVEL_1</codeph> 是确定写入日志文件的跟踪信息量的当前跟踪级别，表示将最小量信息写入日志文件，<codeph>TRACE_LEVEL_3</codeph> 表示写入最多信息量。
     
      <p>通过调用 <codeph>traceMsg()</codeph> 方法，具有小于 <codeph>traceLevel</codeph> 的 <codeph>level</codeph> 参数的所有跟踪信息输出都会发送到日志文件。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPTrace:traceOn"><apiName>traceOn</apiName><shortdesc>
      设置为 true 可启用跟踪输出。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      设置为 <codeph>true</codeph> 可启用跟踪输出。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPElement"><apiName>IOLAPElement</apiName><shortdesc>
 IOLAPElement 接口定义为全部 OLAP 元素提供常用属性的基本接口。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
 IOLAPElement 接口定义为全部 OLAP 元素提供常用属性的基本接口。

 </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPElement"><linktext>mx.olap.OLAPElement</linktext></link></related-links><apiValue id="mx.olap:IOLAPElement:mx.olap:IOLAPElement:dimension:get"><apiName>dimension</apiName><shortdesc>
      此元素所属的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPDimension</apiValueClassifier></apiValueDef><apiDesc>
      此元素所属的维度。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPElement:mx.olap:IOLAPElement:displayName:get"><apiName>displayName</apiName><shortdesc>
      OLAP 元素的名称，可作为 String 显示。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      OLAP 元素的名称，可作为 String 显示。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPElement:mx.olap:IOLAPElement:name:get"><apiName>name</apiName><shortdesc>
      OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。例如，“Time_Year”是 OLAP 元素的名称，其中“Year”是 OLAP 架构中“Time”维度的级别。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPElement:mx.olap:IOLAPElement:uniqueName:get"><apiName>uniqueName</apiName><shortdesc>
      多维数据集中 OLAP 元素的唯一名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      多维数据集中 OLAP 元素的唯一名称。例如，“[Time][Year][2007]”是一个唯一名称，其中 2007 是属于“Time”维度的“Year”级别的元素名称。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPDimension"><apiName>OLAPDimension</apiName><shortdesc>
  OLAPDimension 类表示 OLAP 多维数据集的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="property" name="dimension"/><DefaultProperty name="elements"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPDimension&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPDimension
    <b>Properties</b>
    attributes=""
    elements=""
    hierarchies=""
   /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPDimension</apiBaseInterface><apiBaseClassifier>mx.olap:OLAPElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPDimension 类表示 OLAP 多维数据集的维度。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPDimension"><linktext>mx.olap.IOLAPDimension</linktext></link></related-links><apiConstructor id="mx.olap:OLAPDimension:OLAPDimension"><apiName>OLAPDimension</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>包括元素的 OLAP 架构层次结构的 OLAP 维度的名称。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 维度的名称，可以作为 String 显示。 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPDimension:findAttribute"><apiName>findAttribute</apiName><shortdesc>
     
      返回具有维度中给定名称的属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPAttribute 实例，用于表示属性，或者如果未找到属性则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPAttribute</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>属性的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      返回具有维度中给定名称的属性。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPDimension:findHierarchy"><apiName>findHierarchy</apiName><shortdesc>
      
      返回具有维度中给定名称的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPHierarchy 实例，表示层次结构，或者如果未找到层次结构则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPHierarchy</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>层次结构的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回具有维度中给定名称的层次结构。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPDimension:findMember"><apiName>findMember</apiName><shortdesc>
      
      返回具有维度中给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例，表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回具有维度中给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPDimension:attributes:get"><apiName>attributes</apiName><shortdesc>
      
      此维度的属性，作为 OLAPAttribute 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此维度的属性，作为 OLAPAttribute 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:cube:get"><apiName>cube</apiName><shortdesc>
      
      此维度所属的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPCube</apiValueClassifier></apiValueDef><apiDesc>
      
      此维度所属的多维数据集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:defaultMember:get"><apiName>defaultMember</apiName><shortdesc>
      
      此维度的默认成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
      
      此维度的默认成员。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:hierarchies:get"><apiName>hierarchies</apiName><shortdesc>
      
      此维度的所有层次结构，作为 IOLAPHierarchy 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此维度的所有层次结构，作为 IOLAPHierarchy 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:isMeasure:get"><apiName>isMeasure</apiName><shortdesc>
      
     如果此为保留所有测量成员的测量维度，则包含 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     如果此为保留所有测量成员的测量维度，则包含 <codeph>true</codeph>。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:members:get"><apiName>members</apiName><shortdesc>
      
      返回此维度的所有成员，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      返回此维度的所有成员，作为 IOLAPMember 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPDimension:elements:set"><apiName>elements</apiName><shortdesc>
      处理输入数组，并根据该数组的元素初始化属性和层次结构属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
      处理输入数组，并根据数组元素初始化 <codeph>attributes</codeph> 和 <codeph>hierarchies</codeph> 属性。属性由 OLAPAttribute 类的实例在数组中表示，层次结构由 OLAPHierarchy 类的实例表示。
     
      <p>使用此属性定义单个数组中多维数据集的属性和层次结构。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPSchema"><apiName>IOLAPSchema</apiName><shortdesc>
  IOLAPSchema 接口表示 OLAP 架构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPSchema 接口表示 OLAP 架构。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPSchema"><linktext>mx.olap.OLAPSchema</linktext></link></related-links><apiOperation id="mx.olap:IOLAPSchema:mx.olap:IOLAPSchema:createCube"><apiName>createCube</apiName><shortdesc>
      从架构创建 OLAP 多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPCube 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCube</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>多维数据集的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      从架构创建 OLAP 多维数据集。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPSchema:mx.olap:IOLAPSchema:getCube"><apiName>getCube</apiName><shortdesc>
      返回按名称指定的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPCube 实例，或者如果一个也未找到则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCube</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>多维数据集的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回按名称指定的多维数据集。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPSchema:mx.olap:IOLAPSchema:cubes:get"><apiName>cubes</apiName><shortdesc>
      此架构已知的所有多维数据集，作为 IOLAPCube 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此架构已知的所有多维数据集，作为 IOLAPCube 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPLevel"><apiName>IOLAPLevel</apiName><shortdesc>
  IOLAPLevel 接口表示 OLAP 多维数据集的 OLAP 架构中级别，其中维度的层次结构包含一个或多个级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPLevel 接口表示 OLAP 多维数据集的 OLAP 架构中级别，其中维度的层次结构包含一个或多个级别。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPLevel"><linktext>mx.olap.OLAPLevel</linktext></link></related-links><apiOperation id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:findMember"><apiName>findMember</apiName><shortdesc>
      返回层次结构中有此给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>表示成员的 IOLAPMember 实例列表，或者如果未找到成员，则为 null。
      
      </apiDesc><apiType value="mx.collections:IList"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回层次结构中有此给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:child:get"><apiName>child</apiName><shortdesc>
      层次结构中的下一个子层次。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
      层次结构中的下一个子层次。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:depth:get"><apiName>depth</apiName><shortdesc>
      维度层次结构中的层次深度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      维度层次结构中的层次深度。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:hierarchy:get"><apiName>hierarchy</apiName><shortdesc>
      此层次所属维度的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPHierarchy</apiValueClassifier></apiValueDef><apiDesc>
      此层次所属维度的层次结构。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:members:get"><apiName>members</apiName><shortdesc>
      此层次的成员，如 IOLAPMember 实例列表，或者如果未找到成员，则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此层次的成员，如 IOLAPMember 实例列表，或者如果未找到成员，则为 null。该列表可能会表示远程数据，因此可以引发 ItemPendingError。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPLevel:mx.olap:IOLAPLevel:parent:get"><apiName>parent</apiName><shortdesc>
      此层次的父层次，或者如果未将此层次嵌入其它层次，则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
      此层次的父层次，或者如果未将此层次嵌入其它层次，则为 null。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPAttribute"><apiName>OLAPAttribute</apiName><shortdesc>
  OLAPAttribute 类提供 OLAPDimension 的单个属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="property" name="elements"/><Exclude kind="property" name="levels"/><DefaultProperty name="elements"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPAttribute&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPAttribute
    <b>Properties</b>
    dataField=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPAttribute</apiBaseInterface><apiBaseClassifier>mx.olap:OLAPHierarchy</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPAttribute 类提供 OLAPDimension 的单个属性。使用此类关联用于填充具有维度级别的 OLAP 多维数据集的平构数据字段。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPDimension"><linktext>mx.olap.OLAPDimension</linktext></link><link href="mx.olap.xml#OLAPLevel"><linktext>mx.olap.OLAPLevel</linktext></link></related-links><apiConstructor id="mx.olap:OLAPAttribute:OLAPAttribute"><apiName>OLAPAttribute</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAPAttribute 实例的名称。使用此参数将 OLAPAttribute 实例与 OLAPLevel 实例关联起来。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>属性的名称，可以作为 String 显示。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.olap:OLAPAttribute:dataCompareFunction"><apiName>dataCompareFunction</apiName><shortdesc>
      用户提供的回调函数，可用于在排序数据时比较数据元素。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      用户提供的回调函数，可用于在排序数据时比较数据元素。默认情况下，会直接比较数据成员。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPAttribute:displayNameFunction"><apiName>displayNameFunction</apiName><shortdesc>
      返回成员元素的显示名称的回调函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      返回成员元素的显示名称的回调函数。Flex 会为添加到 OLAPAttribute 实例的每个成员调用此函数。 
     
      <p>函数签名为：</p>
     
      <pre>
          function myDisplayNameFunction(memberName:String):String</pre>
     
      <p>其中 <codeph>memberName</codeph> 包含元素名称。</p>
     
      <p>返回元素的显示名称的函数。</p>
     
      <p>下例将数字组名称 1,2 或 3 等转换为显示名称“0-9”、“10-19”：</p>
     
      <pre>
          private function myDispFunction(name:String):String
          {
              var value:int = parseInt(name);
              return String((value)0 + " - ") + String((value+1)0-1);     
          }</pre>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPAttribute:dataFunction:get"><apiName>dataFunction</apiName><shortdesc>
     返回该属性的实际数据的回调函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     返回该属性的实际数据的回调函数。使用此回调函数返回基于实际数据计算的数据。例如，您可以从将该月显示为数字的实际日期作为 String 返回月名称。或者可以计算值。例如，您的输入数据包含人们的年龄，如 1、4、9、10、12、15 或 20。您的回调函数可以返回包含年龄的年龄组，如 1-10 或 11-20。
    
     <p>回调函数的签名为：</p>
    
     <pre>
         function myDataFunction(rowData:Object, dataField:String):Object;</pre>
    
     其中 <codeph>rowData</codeph> 包含输入平构数据行的数据，<codeph>dataField</codeph> 包含数据字段的名称。
    
     <p>该函数可以返回 String 或 Number。</p>
    
     <p>下例返回了该平构数据中每个年龄值的年龄组：</p>
    
     <pre>
         private function ageGroupingHandler(rowData:Object, field:String):Object
         {
             return rowData[field] / 10;
         } </pre>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPAttribute:hasAll:get"><apiName>hasAll</apiName><shortdesc>
      因为假定属性可聚合并且所有成员都存在，所以包含 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      因为假定属性可聚合并且所有成员都存在，所以包含 <codeph>true</codeph>。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPAttribute:members:get"><apiName>members</apiName><shortdesc>
      
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPAttribute:dataField:set"><apiName>dataField</apiName><shortdesc>
      为此 OLAPAttribute 实例提供数据的输入数据集的字段。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      为此 OLAPAttribute 实例提供数据的输入数据集的字段。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPCube"><apiName>OLAPCube</apiName><shortdesc>
  OLAPCube 类表示 OLAP 多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="elements"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPCube&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPCube
    <b>Properties</b>
    dataProvider=""
    dimensions=""
    elements=""
    measures=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPCube</apiBaseInterface><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPCube 类表示 OLAP 多维数据集。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPCube"><linktext>mx.olap.IOLAPCube</linktext></link></related-links><adobeApiEvent id="mx.olap:OLAPCube_mx.events.CubeEvent.QUERY_PROGRESS_queryProgress"><apiName>queryProgress</apiName><shortdesc>
 通过调用 execute() 方法生成查询结果时持续分派。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CubeEvent.QUERY_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events.CubeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 通过调用 <codeph>execute()</codeph> 方法生成查询结果时持续分派。

 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.olap:OLAPCube_mx.events.CubeEvent.CUBE_PROGRESS_progress"><apiName>progress</apiName><shortdesc>
 通过调用 refresh() 方法创建多维数据集时持续分派。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CubeEvent.CUBE_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events.CubeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 通过调用 <codeph>refresh()</codeph> 方法创建多维数据集时持续分派。

 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.olap:OLAPCube_mx.events.CubeEvent.CUBE_COMPLETE_complete"><apiName>complete</apiName><shortdesc>
 已创建多维数据集并为查询准备就绪时分派。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CubeEvent.CUBE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events.CubeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 已创建多维数据集并为查询准备就绪时分派。

 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.olap:OLAPCube:OLAPCube"><apiName>OLAPCube</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 多维数据集的名称。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPCube:addEventListener"><apiName>addEventListener</apiName><shortdesc>
      使用 EventDispatcher 对象注册事件侦听器对象，以使侦听器能够接收事件通知。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件的类型。
     
      </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>处理事件的侦听器函数。 
     
      </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>确定侦听器是运行于捕获阶段还是运行于目标和冒泡阶段。
     
      </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>事件侦听器的优先级。 
     
      </apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>确定对侦听器的引用是强引用，还是弱引用。强引用（默认值）可防止您的侦听器被当作垃圾回收。弱引用则没有此作用。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      使用 EventDispatcher 对象注册事件侦听器对象，以使侦听器能够接收事件通知。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#EventDispatcher/addEventListener()"><linktext>flash.events.EventDispatcher.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="mx.olap:OLAPCube:cancelQuery"><apiName>cancelQuery</apiName><shortdesc>
      
      中止已为执行提交的查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>mx.olap:IOLAPQuery</apiOperationClassifier><apiDesc>要中止的查询。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      中止已为执行提交的查询。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:cancelRefresh"><apiName>cancelRefresh</apiName><shortdesc>
      
      如果正在执行一个多维数据集，则中止当前多维数据集的刷新。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      如果正在执行一个多维数据集，则中止当前多维数据集的刷新。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
      将事件调度到事件流中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>如果成功调度了事件，则值为 <codeph>true</codeph>。值 <codeph>false</codeph> 表示失败或对事件调用了 <codeph>preventDefault()</codeph> 方法。
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>分派到事件流中的 Event 对象。 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将事件调度到事件流中。事件目标是对其调用 <codeph>dispatchEvent()</codeph> 方法的 对象。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#EventDispatcher/dispatchEvent()"><linktext>flash.events.EventDispatcher.dispatchEvent()</linktext></link></related-links></apiOperation><apiOperation id="mx.olap:OLAPCube:execute"><apiName>execute</apiName><shortdesc>
      
      排队要执行的 OLAP 查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>AsyncToken 实例。
     
      </apiDesc><apiType value="mx.rpc:AsyncToken"/></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>mx.olap:IOLAPQuery</apiOperationClassifier><apiDesc>要执行的查询，由 IOLAPQuery 实例表示。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      排队要执行的 OLAP 查询。调用 <codeph>refresh()</codeph> 方法来更新多维数据集后，您必须等待 <codeph>complete</codeph> 事件，然后才能调用 <codeph>execute()</codeph> 方法。
     
      <p>OLAP 多维数据集可能很复杂，因此您不希望在 Flex 计算 OLAP 查询结果时暂停应用程序。<codeph>execute()</codeph> 方法会返回 AsyncToken 类的实例，这样您就可以设置异步操作的处理函数，从而在查询处理期间不间断应用程序的执行。</p>
     
      <p>使用 AsyncToken 类时，您可以设置两个函数来处理查询结果。在该例中，showResult() 函数会在查询成功完成后处理查询结果，showFault() 函数会处理查询执行期间检测到的任何错误： </p>
     
      <pre>
      &lt;mx:Script>
              
              // Function to execute a query.
              private function runQuery(cube:IOLAPCube):void {
                  // Create a query instance.
                  var query:IOLAPQuery = getQuery(cube);
                  // Execute the query.
                  var token:AsyncToken = cube.execute(query);
                  // Set up handlers for the query results.
                  token.addResponder(new AsyncResponder(showResult, showFault));
              }
              
              // Handle a query fault.
              private function showFault(result:FaultEvent, token:Object):void {
                  Alert.show("Error in query.");
              }
      
              // Handle a query success.
              private function showResult(result:Object, token:Object):void {
                  if (!result) {
                      Alert.show("No results from query.");
                      return;
                  }
      
                  myOLAPDG.dataProvider= result as OLAPResult;            
              }        
      &lt;/mx:Script>
      
      &lt;mx:OLAPDataGrid id="myOLAPDG" width="100%" height="100%" />
      </pre> 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:findDimension"><apiName>findDimension</apiName><shortdesc>
      
      返回 OLAP 多维数据集中具有给定名称的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPDimension 实例，用于表示维度，或者如果未找到维度则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPDimension</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>维度的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回 OLAP 多维数据集中具有给定名称的维度。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:hasEventListener"><apiName>hasEventListener</apiName><shortdesc>
      检查 对象是否为特定事件类型注册了任何侦听器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>如果指定类型的侦听器已注册，则值为 <codeph>true</codeph>；否则，值为 <codeph>false</codeph>。
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件的类型。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      检查 对象是否为特定事件类型注册了任何侦听器。这样，您就可以确定对象在事件流层次结构中的哪个位置改变了对事件类型的处理。 
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#EventDispatcher/hasEventListener()"><linktext>flash.events.EventDispatcher.hasEventListener()</linktext></link></related-links></apiOperation><apiOperation id="mx.olap:OLAPCube:refresh"><apiName>refresh</apiName><shortdesc>
      
      刷新数据提供者的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      刷新数据提供者的多维数据集。设置多维数据集的架构后，您必须调用此方法来生成多维数据集。
     
      <p>此方法会分派 <codeph>progress</codeph> 事件来显示进度，当多维数据集完成并准备执行查询时分派 <codeph>complete</codeph> 事件。您必须等待 <codeph>complete</codeph> 事件，然后才能调用 <codeph>execute()</codeph> 方法来运行查询。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
      删除侦听器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件的类型。
     
      </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>要删除的侦听器对象。
     
      </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指出是为捕获阶段还是为目标和冒泡阶段注册了侦听器。 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      删除侦听器。如果没有注册任何匹配的侦听器，则对此方法的调用不起任何作用。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#EventDispatcher/removeEventListener()"><linktext>flash.events.EventDispatcher.removeEventListener()</linktext></link></related-links></apiOperation><apiOperation id="mx.olap:OLAPCube:toString"><apiName>toString</apiName><shortdesc>
      返回多维数据集的名称
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>多维数据集的名称。
      
      </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
      返回多维数据集的名称
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPCube:willTrigger"><apiName>willTrigger</apiName><shortdesc>
      检查是否用此对象或其任何始祖为指定事件类型注册了事件侦听器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>如果已触发指定类型的侦听器，则会显示值 <codeph>true</codeph>，否则显示值 <codeph>false</codeph>。
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件的类型。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      检查是否用此对象或其任何始祖为指定事件类型注册了事件侦听器。将指定类型的事件分派给此对象或其任一后代时，如果在事件流的任何阶段触发了事件侦听器，则此方法返回 <codeph>true</codeph>。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.events.xml#EventDispatcher/willTrigger()"><linktext>flash.events.EventDispatcher.willTrigger()</linktext></link></related-links></apiOperation><apiValue id="mx.olap:OLAPCube:protected:cubeBuildingTimeInterval"><apiName>cubeBuildingTimeInterval</apiName><shortdesc>
      refresh() 方法的计时器用于以迭代方式生成多维数据集的时间间隔（以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>5</apiData><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>refresh()</codeph> 方法的计时器用于以迭代方式生成多维数据集的时间间隔（以毫秒为单位）。如果您会在生成多维数据集前等待较长的时间，就可以将其设置为较高的值。可以将其设置为较低的值，但是这可能对应用程序的响应能力有负面影响。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:protected:measureDimensionName"><apiName>measureDimensionName</apiName><shortdesc>
      设置该 OLAP 多维数据集测量的维度名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>Measures</apiData><apiType value="String"/><apiDefaultValue>"Measures"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      设置该 OLAP 多维数据集测量的维度名称。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:protected:queryBuildingTimeInterval"><apiName>queryBuildingTimeInterval</apiName><shortdesc>
      execute() 方法的计时器用于迭代处理查询的时间间隔（以毫秒计/以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>execute()</codeph> 方法的计时器用于迭代处理查询的时间间隔。如果您会在多维数据集生成查询结果前等待较长的时间，就可以将其设置为较高的值。为了更快地获得查询结果，可以将其设置为较低的值，但是这可能对应用程序的响应能力有负面影响。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:protected:resultClass"><apiName>resultClass</apiName><shortdesc>
      OLAPCube 实例用于返回结果的类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Class"/><apiDefaultValue>OLAPResult
      
      </apiDefaultValue></apiValueDef><apiDesc>
      OLAPCube 实例用于返回结果的类。可以使用您自己的 IOLAPResult 接口的实现来替换默认类 OLAPResult，以便自定义结果。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:protected:workDuration"><apiName>workDuration</apiName><shortdesc>
      refresh() 方法用于以迭代方式生成多维数据集的时间（以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>50</apiData><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>refresh()</codeph> 方法用于以迭代方式生成多维数据集的时间（以毫秒为单位）。值越高，说明每个计时器事件中得到处理的行就越多。如果希望更快地生成多维数据集，可以将其设置为一个较高的值，但这样对应用程序的响应速度可能会有负面影响。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      用于填充 OLAP 多维数据集的平面数据。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:ICollectionView"/></apiValueDef><apiDesc>
      用于填充 OLAP 多维数据集的平面数据。设置此属性后，必须调用 <codeph>refresh()</codeph> 方法来初始化多维数据集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:dimensions:get"><apiName>dimensions</apiName><shortdesc>
      
      多维数据集中的所有维度，作为 IOLAPDimension 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      多维数据集中的所有维度，作为 IOLAPDimension 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:name:get"><apiName>name</apiName><shortdesc>
      
      OLAP 多维数据集的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      OLAP 多维数据集的名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:elements:set"><apiName>elements</apiName><shortdesc>
     处理输入数组，并根据该数组的元素初始化维度和测量属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
     处理输入数组，并根据该数组的元素初始化 <codeph>dimensions</codeph> 和 <codeph>measures</codeph> 属性。在数组中维度是由 OLAPDimension 类的实例提供的，测量则是由 OLAPMeasure 类的实例提供的。
    
     <p>使用此属性定义单个数组中多维数据集的维度和测量。</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCube:measures:set"><apiName>measures</apiName><shortdesc>
      设置 OLAP 多维数据集的测量，作为 OLAPMeasure 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      设置 OLAP 多维数据集的测量，作为 OLAPMeasure 实例列表。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPCell"><apiName>OLAPCell</apiName><shortdesc>
  OLAPCell 类表示 OLAPResult 实例中的单元格。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPCell</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPCell 类表示 OLAPResult 实例中的单元格。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPResult"><linktext>mx.olap.OLAPResult</linktext></link></related-links><apiConstructor id="mx.olap:OLAPCell:OLAPCell"><apiName>OLAPCell</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>单元格中的原始值。
     
      </apiDesc></apiParam><apiParam><apiItemName>formattedValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>单元格中的格式化值。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.olap:OLAPCell:formattedValue:get"><apiName>formattedValue</apiName><shortdesc>
      
      单元格中的格式化值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      
      单元格中的格式化值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPCell:value:get"><apiName>value</apiName><shortdesc>
      
     单元格中的原始值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
     单元格中的原始值。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPCustomAggregator"><apiName>IOLAPCustomAggregator</apiName><shortdesc>
  IOLAPCustomAggregator 接口定义由自定义聚合器类实现的接口。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPCustomAggregator 接口定义由自定义聚合器类实现的接口。可以将实现此接口的类实例传递给 OLAPMeasure 对象来定义测量的聚合类型。 
 
  <p>可以将此接口的方法作为两组使用。第一组包含 <codeph>computeBegin()</codeph>、<codeph>computeLoop()</codeph> 和<codeph>computeEnd()</codeph> 方法。使用这些方法计算测量值的聚合。</p>
 
  <p>第二组包含 <codeph>computeObjectBegin()</codeph>、<codeph>computeObjectLoop()</codeph> 和<codeph>computeObjectEnd()</codeph> 方法。使用这些方法计算聚合值的聚合。</p>
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeBegin"><apiName>computeBegin</apiName><shortdesc>
      Flex 调用此方法来开始计算聚合值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>为聚合而初始化的对象。使用此对象保存执行聚合所需的信息。请将此对象传递给对 <codeph>computeLoop()</codeph> 和 <codeph>computeEnd()</codeph> 方法的后续调用。
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiDesc>要聚合的测量的 <codeph>OLAPMeasure.dataField</codeph> 属性的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Flex 调用此方法来开始计算聚合值。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeEnd"><apiName>computeEnd</apiName><shortdesc>
      Flex 会调用此方法来结束聚合值的计算。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>聚合的值。
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>通过对 <codeph>computeLoop()</codeph> 方法的调用返回的对象。使用此对象保存执行聚合所需的信息。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiDesc>要聚合的测量的 <codeph>OLAPMeasure.dataField</codeph> 属性的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Flex 会调用此方法来结束聚合值的计算。 
     
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeLoop"><apiName>computeLoop</apiName><shortdesc>
      当在聚合中添加新值时，Flex 会调用此方法。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>通过对 <codeph>computeBegin()</codeph> 方法的调用返回的对象，或者通过之前对 <codeph>computeLoop()</codeph> 方法的调用计算的对象。使用此对象保存执行聚合所需的信息。此方法会修改此对象，但不会返回值。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiDesc>要聚合的测量的 <codeph>OLAPMeasure.dataField</codeph> 属性的名称。
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>代表正在分析的行数据的对象。 
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      当在聚合中添加新值时，Flex 会调用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeObjectBegin"><apiName>computeObjectBegin</apiName><shortdesc>
      Flex 会调用此方法开始聚合值的聚合。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>为聚合而初始化的对象。使用此对象保存执行聚合所需的信息。请将此对象传递给对 <codeph>computeObjectLoop()</codeph> 和 <codeph>computeObjectEnd()</codeph> 方法的后续调用。
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>针对前一个聚合调用 <codeph>computeEnd()</codeph> 方法而返回的对象。使用此对象保存执行聚合所需的信息。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Flex 会调用此方法开始聚合值的聚合。计算平均值组的平均值是聚合值聚合的示例。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeObjectEnd"><apiName>computeObjectEnd</apiName><shortdesc>
      Flex 会调用此方法结束计算。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>聚合的值。
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>通过对 <codeph>computeObjectLoop()</codeph> 方法的调用返回的对象，用于存储聚合结果。此方法会修改此对象，但不会返回值。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiDesc>要聚合的测量的 <codeph>OLAPMeasure.dataField</codeph> 属性的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Flex 会调用此方法结束计算。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCustomAggregator:mx.olap:IOLAPCustomAggregator:computeObjectLoop"><apiName>computeObjectLoop</apiName><shortdesc>
      需要在聚合中添加新聚合值时，Flex 会调用此方法。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>通过对 <codeph>computeObjectBegin()</codeph> 方法的调用返回的对象或者通过之前对 <codeph>computeObjectLoop()</codeph> 方法的调用计算的对象。此方法会修改此对象，但不会返回值。
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiDesc>针对前一个聚合调用 <codeph>computeEnd()</codeph> 方法而返回的对象。 
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      需要在聚合中添加新聚合值时，Flex 会调用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.olap:IOLAPTuple"><apiName>IOLAPTuple</apiName><shortdesc>
  IOLAPTuple 接口表示 tuple。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPTuple 接口表示 tuple。可以使用 tuple 来指定作为 OLAPSet 实例的查询轴上的元素。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPSet"><linktext>mx.olap.OLAPSet</linktext></link></related-links><apiOperation id="mx.olap:IOLAPTuple:mx.olap:IOLAPTuple:addMember"><apiName>addMember</apiName><shortdesc>
      在 tuple 中添加新成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>member</apiItemName><apiOperationClassifier>mx.olap:IOLAPElement</apiOperationClassifier><apiDesc>要添加的成员。如果 <codeph>member</codeph> 是维度或层次结构，则会添加其默认成员。如果 <codeph>member</codeph> 是 IOLAPMember 的实例，则会直接添加它。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      在 tuple 中添加新成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPTuple:mx.olap:IOLAPTuple:addMembers"><apiName>addMembers</apiName><shortdesc>
      将成员列表添加到 tuple 中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="mx.collections:IList"/><apiDesc>要作为 IOLAPMember 实例列表添加的成员。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将成员列表添加到 tuple 中。当需要将多个成员添加到 tuple 中时可调用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPTuple:mx.olap:IOLAPTuple:explicitMembers:get"><apiName>explicitMembers</apiName><shortdesc>
     用户已作为 IOLAPMember 实例列表添加此 tuple 中的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
     用户已作为 IOLAPMember 实例列表添加此 tuple 中的成员。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPHierarchy"><apiName>OLAPHierarchy</apiName><shortdesc>
  OLAPHierarchy 类提供 OLAP 多维数据集架构的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="elements"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPHierarchy&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPHierarchy
    <b>Properties</b>
    allMemberName="(All)"
    elements="<i>An array of Levels of this hierarchy</i>"
    hasAll="true|false"
    name="<i>No default</i>"
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPHierarchy</apiBaseInterface><apiBaseClassifier>mx.olap:OLAPElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPHierarchy 类提供 OLAP 多维数据集架构的层次结构。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPHierarchy"><linktext>mx.olap.IOLAPHierarchy</linktext></link></related-links><apiConstructor id="mx.olap:OLAPHierarchy:OLAPHierarchy"><apiName>OLAPHierarchy</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>包括元素的 OLAP 架构层次结构的 OLAP 层次的名称。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 导次的名称，可作为 String 显示。 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPHierarchy:findLevel"><apiName>findLevel</apiName><shortdesc>
      
      返回层次结构中具有给定名称的级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPLevel 实例，表示级别，或者如果未找到级别则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPLevel</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>级别的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回层次结构中具有给定名称的级别。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPHierarchy:findMember"><apiName>findMember</apiName><shortdesc>
      
      返回层次结构中具有给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例，表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回层次结构中具有给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPHierarchy:allMemberName:get"><apiName>allMemberName</apiName><shortdesc>
      
      层次结构的所有成员的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"(All)"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      层次结构的所有成员的名称。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:children:get"><apiName>children</apiName><shortdesc>
      
      所有成员的子级别，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      所有成员的子级别，作为 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:defaultMember:get"><apiName>defaultMember</apiName><shortdesc>
      
      层次结构的默认成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
      
      层次结构的默认成员。如果使用所需成员的层次机构，则需要使用默认成员。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:hasAll:get"><apiName>hasAll</apiName><shortdesc>
      
      指定层次结构是否具有所有成员，如果具有，则为 true，否则为 false。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
      指定层次结构是否具有所有成员，如果具有，则为 <codeph>true</codeph>，否则为 <codeph>false</codeph>。如果为 <codeph>true</codeph>，则所有成员名称由 <codeph>allMemberName</codeph> 属性指定。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:levels:get"><apiName>levels</apiName><shortdesc>
      
      此层次机构的所有级别，作为 IOLAPLevel 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此层次机构的所有级别，作为 IOLAPLevel 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:members:get"><apiName>members</apiName><shortdesc>
      
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:name:get"><apiName>name</apiName><shortdesc>
     用户定义的此层次结构的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
     用户定义的此层次结构的名称。如果用户尚未显式设置名称，则会返回维度名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPHierarchy:elements:set"><apiName>elements</apiName><shortdesc>
     层次结构层次的数组，作为 OLAPLevel 实例。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
     层次结构层次的数组，作为 OLAPLevel 实例。
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPTuple"><apiName>OLAPTuple</apiName><shortdesc>
  OLAPTuple 类指供指向 OLAP 多维数据集单元格的 tuple 表达式。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPTuple</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPTuple 类指供指向 OLAP 多维数据集单元格的 tuple 表达式。tuple 由多维数据集中包含的每个维度中的一个成员组成。tuple 标识符的完整表达式由一个或多个显式指定的成员组成，包含在括号中。tuple 可以是完全限定的，可以包含隐式成员，也可以只包含一个成员。tuple 中未显式引用的任何维度都是隐式引用的。 
 
  <p>隐式引用维度的成员取决于维度的结构：
  <ul>
    <li>如果隐式引用的维度具有默认成员，则会将默认成员添加到 tuple 中。</li>
    <li>如果隐式引用的维度没有默认成员，则会使用默认层次结构中的（全部）成员。</li>
    <li>如果隐式引用的维度没有默认成员，并且默认层次结构没有（全部）成员，则会使用默认层次结构最上层的第一个成员。</li>
  </ul>
  </p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPTuple"><linktext>mx.olap.IOLAPTuple</linktext></link></related-links><apiConstructor id="mx.olap:OLAPTuple:OLAPTuple"><apiName>OLAPTuple</apiName><shortdesc>
      构造函数
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPTuple:addMember"><apiName>addMember</apiName><shortdesc>
      
      在 tuple 中添加新成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>mx.olap:IOLAPElement</apiOperationClassifier><apiDesc>要添加的成员。如果 <codeph>member</codeph> 是维度或层次结构，则会添加其默认成员。如果 <codeph>member</codeph> 是 IOLAPMember 的实例，则会直接添加它。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      在 tuple 中添加新成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPTuple:addMembers"><apiName>addMembers</apiName><shortdesc>
      
      将成员列表添加到 tuple 中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="mx.collections:IList"/><apiDesc>要作为 IOLAPMember 实例列表添加的成员。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      将成员列表添加到 tuple 中。当需要将多个成员添加到 tuple 中时可调用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPTuple:explicitMembers:get"><apiName>explicitMembers</apiName><shortdesc>
      
     用户已作为 IOLAPMember 实例列表添加此 tuple 中的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
     用户已作为 IOLAPMember 实例列表添加此 tuple 中的成员。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPSchema"><apiName>OLAPSchema</apiName><shortdesc>
  OLAPSchema 类表示 OLAP 多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="cubeArray"/></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPSchema&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPSchema
    <b>Properties</b>
       cubeArray=""
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPSchema</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPSchema 类表示 OLAP 多维数据集。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPSchema"><linktext>mx.olap.IOLAPSchema</linktext></link><link href="mx.olap.xml#OLAPCube"><linktext>mx.olap.OLAPCube</linktext></link></related-links><apiOperation id="mx.olap:OLAPSchema:createCube"><apiName>createCube</apiName><shortdesc>
      
      从架构创建 OLAP 多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPCube 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCube</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>多维数据集的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      从架构创建 OLAP 多维数据集。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPSchema:getCube"><apiName>getCube</apiName><shortdesc>
      
      返回按名称指定的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPCube 实例，或者如果一个也未找到则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCube</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>多维数据集的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回按名称指定的多维数据集。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPSchema:cubes:get"><apiName>cubes</apiName><shortdesc>
      
      此架构已知的所有多维数据集，作为 IOLAPCube 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此架构已知的所有多维数据集，作为 IOLAPCube 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPSchema:cubeArray:set"><apiName>cubeArray</apiName><shortdesc>
      让您通过传递 IOLAPCube 实例数组来设置架构的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
      让您通过传递 IOLAPCube 实例数组来设置架构的多维数据集。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPResult"><apiName>IOLAPResult</apiName><shortdesc>
  IOLAPResult 接口表示 OLAP 多维数据集上的查询结果。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPResult 接口表示 OLAP 多维数据集上的查询结果。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link><link href="mx.olap.xml#OLAPResult"><linktext>mx.olap.OLAPResult</linktext></link></related-links><apiOperation id="mx.olap:IOLAPResult:mx.olap:IOLAPResult:getAxis"><apiName>getAxis</apiName><shortdesc>
      返回查询结果的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPResultAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>axisOrdinal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回查询结果的轴。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPResult:mx.olap:IOLAPResult:getCell"><apiName>getCell</apiName><shortdesc>
      返回查询结果中的指定位置的单元格。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>表示单元格的 IOLAPCell 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCell</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>查询结果的列。
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>查询结果的行。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回查询结果中的指定位置的单元格。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPResult:mx.olap:IOLAPResult:axes:get"><apiName>axes</apiName><shortdesc>
     IOLAPResultAxis 实例数组，用于表示查询的所有轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
     IOLAPResultAxis 实例数组，用于表示查询的所有轴。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPResult:mx.olap:IOLAPResult:query:get"><apiName>query</apiName><shortdesc>
      由此对象表示结果的查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPQuery</apiValueClassifier></apiValueDef><apiDesc>
      由此对象表示结果的查询。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPMember"><apiName>OLAPMember</apiName><shortdesc>
  OLAPMember 类表示 OLAP 维度的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPMember&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPMember
    <b>Properties</b>
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPMember</apiBaseInterface><apiBaseClassifier>mx.olap:OLAPElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPMember 类表示 OLAP 维度的成员。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPMember"><linktext>mx.olap.IOLAPMember</linktext></link></related-links><apiConstructor id="mx.olap:OLAPMember:OLAPMember"><apiName>OLAPMember</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。例如，“Time_Year”，其中“Year”是 OLAP 架构中“Time”维度的级别。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 成员的名称，可作为 String 显示。
     
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPMember:findChildMember"><apiName>findChildMember</apiName><shortdesc>
      
      返回具有给定名称的此成员的子级。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例列表，用于表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回具有给定名称的此成员的子级。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPMember:children:get"><apiName>children</apiName><shortdesc>
      
      此成员的子级，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
      此成员的子级，作为 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:dataField:get"><apiName>dataField</apiName><shortdesc>
      为此 OLAPMember 实例提供数据的输入数据集的字段。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      为此 OLAPMember 实例提供数据的输入数据集的字段。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:dimension:get"><apiName>dimension</apiName><shortdesc>
      此成员所属的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPDimension</apiValueClassifier></apiValueDef><apiDesc>
      此成员所属的维度。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:hierarchy:get"><apiName>hierarchy</apiName><shortdesc>
      
     此成员所属的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPHierarchy</apiValueClassifier></apiValueDef><apiDesc>
      
     此成员所属的层次结构。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:isAll:get"><apiName>isAll</apiName><shortdesc>
      
      如果此为层次结构的所有成员，则返回 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      如果此为层次结构的所有成员，则返回 <codeph>true</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:isMeasure:get"><apiName>isMeasure</apiName><shortdesc>
      
     如果此成员表示维度的测量，则返回 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     如果此成员表示维度的测量，则返回 <codeph>true</codeph>。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:level:get"><apiName>level</apiName><shortdesc>
      
     此成员所属的级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPLevel</apiValueClassifier></apiValueDef><apiDesc>
      
     此成员所属的级别。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:parent:get"><apiName>parent</apiName><shortdesc>
      
     此成员的父级。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
      
     此成员的父级。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPMember:uniqueName:get"><apiName>uniqueName</apiName><shortdesc>
      
      多维数据集中 OLAP 元素的唯一名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      
      多维数据集中 OLAP 元素的唯一名称。例如，“[Time][Year][2007]”是一个唯一名称，其中 2007 是属于“Time”维度的“Year”级别的元素名称。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPResultAxis"><apiName>IOLAPResultAxis</apiName><shortdesc>
  IOLAPResultAxis 接口用于表示 OLAP 查询结果的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPResultAxis 接口用于表示 OLAP 查询结果的轴。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link><link href="mx.olap.xml#IOLAPResult"><linktext>mx.olap.IOLAPResult</linktext></link><link href="mx.olap.xml#OLAPResult"><linktext>mx.olap.OLAPResult</linktext></link></related-links><apiValue id="mx.olap:IOLAPResultAxis:mx.olap:IOLAPResultAxis:positions:get"><apiName>positions</apiName><shortdesc>
     IOLAPAxisPosition 实例列表，其中每个位置都表示轴上的点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
     IOLAPAxisPosition 实例列表，其中每个位置都表示轴上的点。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPMeasure"><apiName>OLAPMeasure</apiName><shortdesc>
  OLAPMeasure 类表示 OLAP 多维数据集架构的测量维度的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.olap:OLAPMember</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPMeasure 类表示 OLAP 多维数据集架构的测量维度的成员。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.olap:OLAPMeasure:OLAPMeasure"><apiName>OLAPMeasure</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OLAP 元素的名称，包含该元素的 OLAP 架构层次结构。例如，“Time_Year”，其中“Year”是 OLAP 架构中“Time”维度的级别。
     
      </apiDesc></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>测量的名称，可作为 String 显示。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.olap:OLAPMeasure:aggregator:get"><apiName>aggregator</apiName><shortdesc>
      要对此测量执行的聚合。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      要对此测量执行的聚合。可以使用下列属性值之一：<codeph>"SUM"</codeph>、<codeph>"AVG"</codeph>、<codeph>"MIN"</codeph>、<codeph>"MAX"</codeph> 或 <codeph>"COUNT"</codeph>。
     
      <p>还可以通过实现 IOLAPCustomAggregator 接口来使用自定义聚合器，然后将 <codeph>aggregator</codeph> 属性设置为该自定义聚合器，如下例所示：</p>
     
     <pre>aggregator={new CustomAgg()}</pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.olap.xml#IOLAPCustomAggregator"><linktext>mx.olap.IOLAPCustomAggregator</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPDimension"><apiName>IOLAPDimension</apiName><shortdesc>
  IOLAPDimension 接口表示 IOLAPCube 实例中的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPDimension 接口表示 IOLAPCube 实例中的维度。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPDimension"><linktext>mx.olap.OLAPDimension</linktext></link></related-links><apiOperation id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:findAttribute"><apiName>findAttribute</apiName><shortdesc>
      返回具有维度中给定名称的属性。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPAttribute 实例，用于表示属性，或者如果未找到属性则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPAttribute</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>属性的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回具有维度中给定名称的属性。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:findHierarchy"><apiName>findHierarchy</apiName><shortdesc>
      返回具有维度中给定名称的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPHierarchy 实例，表示层次结构，或者如果未找到层次结构则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPHierarchy</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>层次结构的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回具有维度中给定名称的层次结构。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:findMember"><apiName>findMember</apiName><shortdesc>
      返回具有维度中给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例，表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回具有维度中给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:attributes:get"><apiName>attributes</apiName><shortdesc>
      此维度的属性，作为 OLAPAttribute 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此维度的属性，作为 OLAPAttribute 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:cube:get"><apiName>cube</apiName><shortdesc>
      此维度所属的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPCube</apiValueClassifier></apiValueDef><apiDesc>
      此维度所属的多维数据集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:defaultMember:get"><apiName>defaultMember</apiName><shortdesc>
      此维度的默认成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
      此维度的默认成员。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:hierarchies:get"><apiName>hierarchies</apiName><shortdesc>
      此维度的所有层次结构，作为 IOLAPHierarchy 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此维度的所有层次结构，作为 IOLAPHierarchy 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:isMeasure:get"><apiName>isMeasure</apiName><shortdesc>
     如果此为保留所有测量成员的测量维度，则包含 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     如果此为保留所有测量成员的测量维度，则包含 <codeph>true</codeph>。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPDimension:mx.olap:IOLAPDimension:members:get"><apiName>members</apiName><shortdesc>
      返回此维度的所有成员，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      返回此维度的所有成员，作为 IOLAPMember 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPHierarchy"><apiName>IOLAPHierarchy</apiName><shortdesc>
  IOLAPHierarchy 接口表示 OLAP 架构的维度中用户定义的层次结构。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPHierarchy 接口表示 OLAP 架构的维度中用户定义的层次结构。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPHierarchy"><linktext>mx.olap.OLAPHierarchy</linktext></link></related-links><apiOperation id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:findLevel"><apiName>findLevel</apiName><shortdesc>
      返回层次结构中具有给定名称的级别。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPLevel 实例，表示级别，或者如果未找到级别则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPLevel</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>级别的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回层次结构中具有给定名称的级别。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:findMember"><apiName>findMember</apiName><shortdesc>
      返回层次结构中具有给定名称的成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPMember 实例，表示成员，或者如果未找到成员则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>该成员的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回层次结构中具有给定名称的成员。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:allMemberName:get"><apiName>allMemberName</apiName><shortdesc>
      层次结构的所有成员的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiDefaultValue>"(All)"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      层次结构的所有成员的名称。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:children:get"><apiName>children</apiName><shortdesc>
      所有成员的子级别，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      所有成员的子级别，作为 IOLAPMember 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:defaultMember:get"><apiName>defaultMember</apiName><shortdesc>
      层次结构的默认成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.olap:IOLAPMember</apiValueClassifier></apiValueDef><apiDesc>
      层次结构的默认成员。如果使用所需成员的层次机构，则需要使用默认成员。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:hasAll:get"><apiName>hasAll</apiName><shortdesc>
      指定层次结构是否具有所有成员，如果具有，则为 true，否则为 false。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      指定层次结构是否具有所有成员，如果具有，则为 <codeph>true</codeph>，否则为 <codeph>false</codeph>。如果为 <codeph>true</codeph>，则所有成员名称由 <codeph>allMemberName</codeph> 属性指定。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:levels:get"><apiName>levels</apiName><shortdesc>
      此层次机构的所有级别，作为 IOLAPLevel 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      此层次机构的所有级别，作为 IOLAPLevel 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPHierarchy:mx.olap:IOLAPHierarchy:members:get"><apiName>members</apiName><shortdesc>
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      属于此层次结构的所有级别的所有成员，作为 IOLAPMember 实例列表。返回的列表可能表示远程数据，因此可以引发 ItemPendingError。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPResultAxis"><apiName>OLAPResultAxis</apiName><shortdesc>
  OLAPResultAxis 类表示 OLAP 查询的结果的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPResultAxis</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPResultAxis 类表示 OLAP 查询的结果的轴。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#IOLAPResult"><linktext>mx.olap.IOLAPResult</linktext></link><link href="mx.olap.xml#OLAPResult"><linktext>mx.olap.OLAPResult</linktext></link></related-links><apiOperation id="mx.olap:OLAPResultAxis:addPosition"><apiName>addPosition</apiName><shortdesc>
      将位置添加到查询结果的轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>p</apiItemName><apiOperationClassifier>mx.olap:IOLAPAxisPosition</apiOperationClassifier><apiDesc>表示位置的 IOLAPAxisPosition 实例。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      将位置添加到查询结果的轴中。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPResultAxis:removePosition"><apiName>removePosition</apiName><shortdesc>
      从查询结果的轴中删除位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>如果从轴中删除了位置，则为 <codeph>true</codeph>，否则为 <codeph>false</codeph>。 
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>p</apiItemName><apiOperationClassifier>mx.olap:IOLAPAxisPosition</apiOperationClassifier><apiDesc>表示位置的 IOLAPAxisPosition 实例。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      从查询结果的轴中删除位置。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPResultAxis:positions:get"><apiName>positions</apiName><shortdesc>
      
     IOLAPAxisPosition 实例列表，其中每个位置都表示轴上的点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      
     IOLAPAxisPosition 实例列表，其中每个位置都表示轴上的点。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPQueryAxis"><apiName>OLAPQueryAxis</apiName><shortdesc>
  OLAPQueryAxis 接口表示 OLAP 查询的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:OLAPQueryAxis&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:OLAPQueryAxis
    <b>Properties</b>
  /&gt;
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPQueryAxis</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPQueryAxis 接口表示 OLAP 查询的轴。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#IOLAPQueryAxis"><linktext>mx.olap.IOLAPQueryAxis</linktext></link></related-links><apiConstructor id="mx.olap:OLAPQueryAxis:OLAPQueryAxis"><apiName>OLAPQueryAxis</apiName><shortdesc>
      构造函数
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>ordinal</apiItemName><apiType value="int"/><apiDesc>轴的类型。对列轴使用 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴使用 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴使用 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.olap:OLAPQueryAxis:addMember"><apiName>addMember</apiName><shortdesc>
      
      将单个成员添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>m</apiItemName><apiOperationClassifier>mx.olap:IOLAPMember</apiOperationClassifier><apiDesc>要添加到查询中的成员。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      将单个成员添加到查询轴中。该成员会自动转换为 IOLPASet 实例。将成员添加到切片轴中时使用此方法。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPQueryAxis:addSet"><apiName>addSet</apiName><shortdesc>
      
      将集添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiOperationClassifier>mx.olap:IOLAPSet</apiOperationClassifier><apiDesc>要添加到查询中的集。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      将集添加到查询轴中。该集会定义为查询轴提供信息的成员和 tuple。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPQueryAxis:addTuple"><apiName>addTuple</apiName><shortdesc>
      
      将 tuple 添加到查询轴中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>t</apiItemName><apiOperationClassifier>mx.olap:IOLAPTuple</apiOperationClassifier><apiDesc>要添加到查询中的 tuple。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      将 tuple 添加到查询轴中。tuple 会自动转换为 IOLPASet 实例。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPQueryAxis:clear"><apiName>clear</apiName><shortdesc>
     清除此轴上的所有集、tuple 和成员。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     清除此轴上的所有集、tuple 和成员。
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPQueryAxis:axisOrdinal"><apiName>axisOrdinal</apiName><shortdesc>
      轴的类型，对于列轴使用 OLAPQuery.COLUMN AXIS，对于行轴使用 OLAPQuery.ROW_AXIS，对于切片轴使用 OLAPQuery.SLICER_AXIS。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      轴的类型，对于列轴使用 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对于行轴使用 <codeph>OLAPQuery.ROW_AXIS</codeph>，对于切片轴使用 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPQueryAxis:sets:get"><apiName>sets</apiName><shortdesc>
      
      查询轴的所有集，作为 IOLAPSet 实例数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      查询轴的所有集，作为 IOLAPSet 实例数组。此数组包括使用 <codeph>addMember()</codeph> 和 <codeph>addTuple()</codeph> 方法添加的集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPQueryAxis:tuples:get"><apiName>tuples</apiName><shortdesc>
      
      添加到查询轴的所有 tuple，作为 IOLAPTuple 实例数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      添加到查询轴的所有 tuple，作为 IOLAPTuple 实例数组。此数组包括使用 <codeph>addMember()</codeph> 和 <codeph>addSet()</codeph> 方法添加的 tuple。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:OLAPResult"><apiName>OLAPResult</apiName><shortdesc>
  OLAPResult 类表示 OLAP 多维数据集上的查询结果。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.olap:IOLAPResult</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  OLAPResult 类表示 OLAP 多维数据集上的查询结果。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#IOLAPResult"><linktext>mx.olap.IOLAPResult</linktext></link><link href="mx.olap.xml#OLAPQuery"><linktext>mx.olap.OLAPQuery</linktext></link><link href="mx.olap.xml#OLAPQueryAxis"><linktext>mx.olap.OLAPQueryAxis</linktext></link><link href="mx.olap.xml#IOLAPResultAxis"><linktext>mx.olap.IOLAPResultAxis</linktext></link><link href="mx.olap.xml#OLAPResultAxis"><linktext>mx.olap.OLAPResultAxis</linktext></link></related-links><apiOperation id="mx.olap:OLAPResult:getAxis"><apiName>getAxis</apiName><shortdesc>
      
      返回查询结果的轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPQueryAxis 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPResultAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>axisOrdinal</apiItemName><apiType value="int"/><apiDesc>对列轴指定 <codeph>OLAPQuery.COLUMN AXIS</codeph>，对行轴指定 <codeph>OLAPQuery.ROW_AXIS</codeph>，对切片轴指定 <codeph>OLAPQuery.SLICER_AXIS</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回查询结果的轴。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPResult:getCell"><apiName>getCell</apiName><shortdesc>
      
      返回查询结果中的指定位置的单元格。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>表示单元格的 IOLAPCell 实例。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPCell</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>查询结果的列。
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>查询结果的行。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      返回查询结果中的指定位置的单元格。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:OLAPResult:hasRowData"><apiName>hasRowData</apiName><shortdesc>
      如果行包含数据，则返回 true。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>如果行包含数据，则返回 <codeph>true</codeph>，否则返回 <codeph>false</codeph>。 
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>结果中行的索引。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      如果行包含数据，则返回 <codeph>true</codeph>。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.olap:OLAPResult:COLUMN_AXIS"><apiName>COLUMN_AXIS</apiName><shortdesc>
      指定列轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定列轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPResult:ROW_AXIS"><apiName>ROW_AXIS</apiName><shortdesc>
      指定行轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定行轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPResult:SLICER_AXIS"><apiName>SLICER_AXIS</apiName><shortdesc>
      指定切片轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef><apiDesc>
      指定切片轴。将此属性用作 <codeph>getAxis()</codeph> 方法的 <codeph>axisOrdinal</codeph> 参数的值。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPResult:protected:cellData"><apiName>cellData</apiName><shortdesc>
      包含结果的每个单元格值的一组数组。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      包含结果的每个单元格值的一组数组。单元格是行和列轴位置的交集。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPResult:axes:get"><apiName>axes</apiName><shortdesc>
      
     IOLAPResultAxis 实例数组，用于表示查询的所有轴。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
     IOLAPResultAxis 实例数组，用于表示查询的所有轴。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:OLAPResult:query:get"><apiName>query</apiName><shortdesc>
      
      由此对象表示结果的查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.olap:IOLAPQuery</apiValueClassifier></apiValueDef><apiDesc>
      
      由此对象表示结果的查询。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.olap:IOLAPCube"><apiName>IOLAPCube</apiName><shortdesc>
  IOLAPCube 接口表示保留平构数据集的 N 维表示形式的 OLAP 多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IOLAPCube 接口表示保留平构数据集的 N 维表示形式的 OLAP 多维数据集。使用 OLAP 架构来定义多维数据集表示输入平构数据集的方式。
 
  <p>OLAP 多维数据集与相关数据库表相似。但是相关数据库表只有二维，而 OLAP 多维数据集可以有任何维度。其最简单的形式是，OLAP 多维数据集的维度与平构数据集中的字段相对应。</p>
 
  <p>设置 OLAP 多维数据集的架构后，您必须调用 <codeph>IOLAPCube.refresh()</codeph> 方法来生成多维数据集。完成多维数据集初始化后，OLAP 多维数据集会分派 <codeph>complete</codeph> 事件发出多维数据集已为查询准备就绪的信号。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.olap.xml#OLAPCube"><linktext>mx.olap.OLAPCube</linktext></link></related-links><apiOperation id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:cancelQuery"><apiName>cancelQuery</apiName><shortdesc>
      中止已为执行提交的查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>mx.olap:IOLAPQuery</apiOperationClassifier><apiDesc>要中止的查询。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      中止已为执行提交的查询。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:cancelRefresh"><apiName>cancelRefresh</apiName><shortdesc>
      如果正在执行一个多维数据集，则中止当前多维数据集的刷新。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      如果正在执行一个多维数据集，则中止当前多维数据集的刷新。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:execute"><apiName>execute</apiName><shortdesc>
      排队要执行的 OLAP 查询。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>AsyncToken 实例。
     
      </apiDesc><apiType value="mx.rpc:AsyncToken"/></apiReturn><apiParam><apiItemName>query</apiItemName><apiOperationClassifier>mx.olap:IOLAPQuery</apiOperationClassifier><apiDesc>要执行的查询，由 IOLAPQuery 实例表示。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      排队要执行的 OLAP 查询。调用 <codeph>refresh()</codeph> 方法来更新多维数据集后，您必须等待 <codeph>complete</codeph> 事件，然后才能调用 <codeph>execute()</codeph> 方法。
     
      <p>OLAP 多维数据集可能很复杂，因此您不希望在 Flex 计算 OLAP 查询结果时暂停应用程序。<codeph>execute()</codeph> 方法会返回 AsyncToken 类的实例，这样您就可以设置异步操作的处理函数，从而在查询处理期间不间断应用程序的执行。</p>
     
      <p>使用 AsyncToken 类时，您可以设置两个函数来处理查询结果。在该例中，showResult() 函数会在查询成功完成后处理查询结果，showFault() 函数会处理查询执行期间检测到的任何错误： </p>
     
      <pre>
      &lt;mx:Script>
              
              // Function to execute a query.
              private function runQuery(cube:IOLAPCube):void {
                  // Create a query instance.
                  var query:IOLAPQuery = getQuery(cube);
                  // Execute the query.
                  var token:AsyncToken = cube.execute(query);
                  // Set up handlers for the query results.
                  token.addResponder(new AsyncResponder(showResult, showFault));
              }
              
              // Handle a query fault.
              private function showFault(result:FaultEvent, token:Object):void {
                  Alert.show("Error in query.");
              }
      
              // Handle a query success.
              private function showResult(result:Object, token:Object):void {
                  if (!result) {
                      Alert.show("No results from query.");
                      return;
                  }
      
                  myOLAPDG.dataProvider= result as OLAPResult;            
              }        
      &lt;/mx:Script>
      
      &lt;mx:OLAPDataGrid id="myOLAPDG" width="100%" height="100%" />
      </pre> 
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.rpc.AsyncToken.xml"><linktext>mx.rpc.AsyncToken</linktext></link><link href="" invalidHref="mx.rpc.AsyncResponder.xml"><linktext>mx.rpc.AsyncResponder</linktext></link></related-links></apiOperation><apiOperation id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:findDimension"><apiName>findDimension</apiName><shortdesc>
      返回 OLAP 多维数据集中具有给定名称的维度。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>IOLAPDimension 实例，用于表示维度，或者如果未找到维度则为 null。
      
      </apiDesc><apiOperationClassifier>mx.olap:IOLAPDimension</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>维度的名称。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      返回 OLAP 多维数据集中具有给定名称的维度。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:refresh"><apiName>refresh</apiName><shortdesc>
      刷新数据提供者的多维数据集。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      刷新数据提供者的多维数据集。设置多维数据集的架构后，您必须调用此方法来生成多维数据集。
     
      <p>此方法会分派 <codeph>progress</codeph> 事件来显示进度，当多维数据集完成并准备执行查询时分派 <codeph>complete</codeph> 事件。您必须等待 <codeph>complete</codeph> 事件，然后才能调用 <codeph>execute()</codeph> 方法来运行查询。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CubeEvent"><linktext>mx.events.CubeEvent</linktext></link></related-links></apiOperation><apiValue id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:dimensions:get"><apiName>dimensions</apiName><shortdesc>
      多维数据集中的所有维度，作为 IOLAPDimension 实例列表。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.collections:IList"/></apiValueDef><apiDesc>
      多维数据集中的所有维度，作为 IOLAPDimension 实例列表。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.olap:IOLAPCube:mx.olap:IOLAPCube:name:get"><apiName>name</apiName><shortdesc>
      OLAP 多维数据集的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      OLAP 多维数据集的名称。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>