<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.controls.listClasses"><apiName>mx.controls.listClasses</apiName><apiDetail/><apiClassifier id="mx.controls.listClasses:AdvancedListBase"><apiName>AdvancedListBase</apiName><shortdesc>
  Die AdvancedListBase-Klasse ist die Basisklasse für Steuerelemente wie AdvancedDataGrid und OLAPDataGrid, die Listen von Elementen darstellen, in denen mindestens ein Element markiert sein kann und bei denen ein Bildlauf durch die Elemente möglich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="dataChangeEffect" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Object">
<description>
 Der Effekt, der verwendet wird, wenn Änderungen im Datenprovider des Steuerelements eintreten. Dies kann ein Klassenverweis (auf eine Unterklasse des Effekts) oder eine Effect-Objektinstanz sein. Ersteres ist für CSS geeignet, Letzteres für Inline-Definitionen innerhalb einer Komponente.
 
 </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="String">
<description>
  Die vertikale Ausrichtung eines Renderers in einer Zeile. Mögliche Werte sind <codeph>"top"</codeph>, <codeph>"middle"</codeph> und <codeph>"bottom"</codeph>. Das DataGrid-Objekt platziert die Renderer in einer Zeile basierend auf diesem Stil und den Stilen <codeph>paddingTop</codeph> und <codeph>paddingBottom</codeph>. Wenn die Elemente in den Spalten für eine Zeile unterschiedliche Höhen haben, verwenden andere Listenklassen nicht <codeph>verticalAlign</codeph>, sondern die Elementrenderer können diese Stileigenschaft prüfen und ihre Formatierung auf dieser Basis ändern.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="useRollOver" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Boolean">
<description>
  Ein Flag, das steuert, ob Elemente bei Rollover markiert werden. Wenn <codeph>true</codeph>, werden Zeilen bei Rollover markiert. Wenn <codeph>false</codeph>, werden Zeilen nur markiert, wenn sie ausgewählt werden.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Texts eines Renderers, wenn der Benutzer ihn auswählt.
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Texts eines Renderers bei Rollover durch den Benutzer.
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Function">
<description>
  Die easingFunction für den Auswahleffekt. Wenn ein Element ausgewählt wird, entsteht ein Effekt in der Farbe des Hintergrunds. Standardverhalten ist ein lineares Einblenden der Farbe. Eine easingFunction kann zur Steuerung des Auswahleffekts verwendet werden.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Die Dauer des Auswahleffekts. Wenn ein Element ausgewählt wird, entsteht ein Effekt in der Farbe des Hintergrunds. Auf 0 einstellen, um den Effekt zu deaktivieren.
  
  </description>
<default>250
  
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers, wenn die Komponente deaktiviert ist.
 
  </description>
<default>0xDDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers, wenn der Benutzer ihn auswählt.
 
  </description>
<default>0x7FCEFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers bei Rollover durch den Benutzer.
 
  </description>
<default>0xEEFEE6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl von Pixeln zwischen dem oberen Rand der Zeile und dem oberen Rand des Renderers in der Zeile.
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl von Pixeln zwischen dem unteren Rand der Zeile und dem unteren Rand des Renderers in der Zeile.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropIndicatorSkin" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Class">
<description>
  Die Skin, die verwendet werden soll, um anzuzeigen, ob ein gezogenes Element abgelegt werden kann. Wenn eine von AdvancedListBase abgeleitete Komponente ein mögliches Ablageziel in einem Drag Drop-Vorgang ist, erstellt ein Aufruf der <codeph>showDropFeedback()</codeph>-Methode eine Instanz dieser Klasse und platziert sie ein Pixel über dem Elementrenderer für das Element, wo sich nach dem Abschluss des Drag &amp; Drop-Vorgangs das Element befindet, das nach dem abgelegten Element kommt.
 
  </description>
<default>mx.controls.listClasses.ListDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Array">
<description>
  Die Farben, die für die Hintergründe der Elemente in der Liste zu verwenden sind. Der Wert ist ein Array von zwei oder mehr Farben. Die Hintergründe der Listenelemente wechseln sich unter den Farben im Array ab. 
 
  <p>Für DataGrid-Steuerelemente haben alle Elemente in einer Zeile dieselbe Hintergrundfarbe und die Hintergrundfarbe jeder Zeile wird aus dem Farben-Array bestimmt.</p>
 
  <p>Für das TileList-Steuerelement, das eine einzige Farbe verwendet, um eine zweidimensionale Anzeige zu erstellen, kann der Stil eine Darstellung als Schachbrettmuster, mit Streifen oder mit einem anderen Muster bewirken, die auf der Anzahl der Spalten und Zeilen sowie der Anzahl der festgelegten Farben basiert. TileList wechselt die Farben ab und setzt die einzelnen Element-Hintergrundfarben entsprechend der Richtung des Layouts. Wenn eine gerade Anzahl von Farben und eine gerade Anzahl von Spalten für ein TileList-Objekt mit horizontalem Layout festgelegt sind, werden Streifen angezeigt. Wenn die Anzahl von Spalten ungerade ist, ergibt sich ein Schachbrettmuster.
  </p>
 
  <p>Ist nur wirksam, wenn <codeph>backgroundColor</codeph> nicht festgelegt ist.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie des Steuerelements und dem rechten Rand seines Inhaltsbereichs.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie des Steuerelements und dem linken Rand seines Inhaltsbereichs.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="String">
<description>
  Gibt an, welche Ecken des Fokusrechtecks gerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls.listClasses:AdvancedListBase" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest.
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The AdvancedListBase class inherits all of the tag properties of its superclasses,
  and adds the following tag properties:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>
    <b>Properties</b>
    allowDragSelection="false|true"
    allowMultipleSelection="false|true"
    columnCount="4"
    columnWidth="NaN"
    dataProvider="null"
    dataTipField="label"
    dataTipFunction="null"
    dragEnabled="false|true"
    dragMoveEnabled="false|true"
    dropEnabled="false|true"
    iconField="null"
    iconFunction="null"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    lockedColumnCount=0
    lockedRowCount=0
    menuSelectionMode="false|true"
    rowCount="-1"
    rowHeight="NaN"
    selectable="true|false"
    selectedIndex="-1"
    selectedIndices="null"
    selectedItem="null"
    selectedItems="null"
    showDataTips="false|true"
    variableRowHeight="false|true"
    wordWrap="false|true"
 
    <b>Styles</b>
    alternatingItemColors="undefined"
    dataChangeEffect="undefined"
    dropIndicatorSkin="ListDropIndicator"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    paddingBottom="2"
    paddingLeft="2"
    paddingRight="0"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0x7FCEFF"
    selectionDisabledColor="0xDDDDDD"
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    useRollOver="true|false"
    verticalAlign="top|middle|bottom"
 
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    itemClick="<i>No default</i>"
    itemDoubleClick="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    itemClick="<i>No default</i>"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.effects:IEffectTargetHost</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die AdvancedListBase-Klasse ist die Basisklasse für Steuerelemente wie AdvancedDataGrid und OLAPDataGrid, die Listen von Elementen darstellen, in denen mindestens ein Element markiert sein kann und bei denen ein Bildlauf durch die Elemente möglich ist. Elemente werden über die <codeph>dataProvider</codeph>-Eigenschaft bezogen und über Elementrenderer angezeigt.
 
  <p>In einer Modell/Ansicht-Architektur stellt die AdvancedListBase-Unterklasse die Ansicht und der Datenprovider das Modell dar.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.collections.ICollectionView.xml"><linktext>mx.collections.ICollectionView</linktext></link><link href="mx.controls.xml#AdvancedDataGrid"><linktext>mx.controls.AdvancedDataGrid</linktext></link><link href="mx.controls.xml#OLAPDataGrid"><linktext>mx.controls.OLAPDataGrid</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.ListEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement doppelklickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement doppelklickt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.ListEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement klickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement klickt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird bei Rollout aus einem Element des Steuerelements ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollout aus einem Element des Steuerelements ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird bei Rollover über ein Element des Steuerelements ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollover über ein Element des Steuerelements ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:AdvancedListBase_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Eigenschaften selectedIndex oder selectedItem aufgrund eines Benutzereingriffs ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Eigenschaften <codeph>selectedIndex</codeph> oder <codeph>selectedItem</codeph> aufgrund eines Benutzereingriffs ändern.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:AdvancedListBase:AdvancedListBase"><apiName>AdvancedListBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:AdvancedListBase:addDataEffectItem"><apiName>addDataEffectItem</apiName><shortdesc>
      Fügt einen Elementrenderer hinzu, wenn ein Datenänderungseffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Der Elementrenderer, der dem Layout des Steuerelements hinzugefügt werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt einen Elementrenderer hinzu, wenn ein Datenänderungseffekt läuft. Der Elementrenderer muss einem kürzlich hinzugefügten Datenelement in der Sammlung des Datenproviders entsprechen, das noch nicht angezeigt wurde. Diese Funktion wird von einem <codeph>AddItemAction</codeph>-Effekt als Teil eines Datenänderungseffekts aufgerufen, um den Punkt festzulegen, an dem ein zu einer Sammlung hinzugefügtes Datenelement vom Steuerelement über einen Elementrenderer angezeigt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:addDragData"><apiName>addDragData</apiName><shortdesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag &amp; Drop-Vorgangs hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dragSource</apiItemName><apiType value="Object"/><apiDesc>Das DragSource-Objekt, dem die Daten hinzugefügt werden sollen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag &amp; Drop-Vorgangs hinzu. Überschreiben Sie diese Methode, um dem DragSource-Objekt andere Daten hinzuzufügen.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:addToFreeItemRenderers"><apiName>addToFreeItemRenderers</apiName><shortdesc>
      Fügt der Liste der wiederverwendeten Renderer einen Renderer hinzu, macht ihn unsichtbar und bereinigt Verweise darauf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der hinzuzufügende IListItemRenderer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt der Liste der wiederverwendeten Renderer einen Renderer hinzu, macht ihn unsichtbar und bereinigt Verweise darauf. Wenn ein Dateneffekt läuft, wird der Renderer für zukünftige Verwendungen mit diesen Daten reserviert. Sonst wird er dem allgemeinen freeItemRenderers-Stapel hinzugefügt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Wird von der updateDisplayList()-Methode aufgerufen, um die Größe und Position der Listeninhalte anzupassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Legt die Breite der Komponente in Pixeln in den Koordinaten der Komponente fest.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Legt die Höhe der Komponente in Pixeln in den Koordinaten der Komponente fest.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird von der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, um die Größe und Position von listContent anzupassen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:applySelectionEffect"><apiName>applySelectionEffect</apiName><shortdesc>
      Legt den Effekt für das Anwenden des Auswahlindikators fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, welches die Grafiken enthält, die die Auswahl abbilden.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID für das ausgewählte Element, die für die Indizierung in eine Tabelle und die Verfolgung von mehr als einem Auswahleffekt verwendet werden kann.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, der als ausgewählt angezeigt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Richtet den Effekt ein, der für die Anwendung des Auswahlindikators verwendet wird. Der Standardwert ist ein Basis-Alpha-Tween.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:calculateDropIndex"><apiName>calculateDropIndex</apiName><shortdesc>
      Gibt einen Index zurück, dem die abgelegten Elemente zum Ablageziel hinzugefügt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index, dem abgelegte Elemente hinzugefügt werden sollen.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiData>null</apiData><apiDesc>Ein DragEvent, das Informationen über die Position der Maus enthält. Wenn <codeph>null</codeph>, muss die Methode den <codeph>dropIndex</codeph>-Wert aus dem letzten gültigen Ereignis zurückgeben.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Index zurück, dem die abgelegten Elemente zum Ablageziel hinzugefügt werden sollen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:calculateDropIndicatorY"><apiName>calculateDropIndicatorY</apiName><shortdesc>
      Berechnet die Y-Position des Dropindikators bei einem Drag &amp; Drop-Vorgang.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Y-Achsenkoordinate des Dropindikators.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>rowCount</apiItemName><apiType value="Number"/><apiDesc>Die Anzahl sichtbarer Zeilen im Steuerelement.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Nummer der Zeile im Steuerelement, wo der Dropindikator erscheinen soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Berechnet die Y-Position des Dropindikators bei einem Drag &amp; Drop-Vorgang.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:clearIndicators"><apiName>clearIndicators</apiName><shortdesc>
      Entfernt alle Auswahl-, Hervorhebungs- und Einfügezeichenindikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Entfernt alle Auswahl-, Hervorhebungs- und Einfügezeichenindikatoren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:clearSelected"><apiName>clearSelected</apiName><shortdesc>
      Löscht die Menge ausgewählter Elemente und entfernt alle Grafiken, die diese Elemente im Status „ausgewählt“ anzeigen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn die Grafiken einen Ausblendeffekt haben sollen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Löscht die Menge ausgewählter Elemente und entfernt alle Grafiken, die diese Elemente im Status „ausgewählt“ anzeigen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      Verarbeitet CollectionEvents, die vom Datenprovider ausgelöst werden, wenn sich Daten ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das CollectionEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet CollectionEvents, die vom Datenprovider ausgelöst werden, wenn sich Daten ändern. Aktualisiert erforderlichenfalls die Renderer, ausgewählten Indizes und Bildlaufleisten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      Berechnet die Spaltenbreite und Zeilenhöhe sowie die Anzahl der Zeilen und Spalten basierend auf expliziten columnCount-, columnWidth-, rowHeight- und rowCount-Einstellungen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die Spaltenbreite und Zeilenhöhe sowie die Anzahl der Zeilen und Spalten basierend auf expliziten <codeph>columnCount</codeph>-, <codeph>columnWidth</codeph>-, <codeph>rowHeight</codeph>- und <codeph>rowCount</codeph>-Einstellungen.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.ScrollControlBase.xml"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:configureScrollBars"><apiName>configureScrollBars</apiName><shortdesc>
      Konfiguriert die Bildlaufleisten basierend auf der Anzahl von Zeilen und Spalten sowie der anzeigbaren Zeilen und Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Konfiguriert die Bildlaufleisten basierend auf der Anzahl von Zeilen und Spalten sowie der anzeigbaren Zeilen und Spalten. Diese Methode wird aus der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, nachdem Zeilen und Spalten aktualisiert wurden. Die Methode sollte herausfinden, welche Parameter an <codeph>setScrollBarProperties()</codeph> zu übergeben sind, um die Bildlaufleisten korrekt einzurichten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:copyItemWithUID"><apiName>copyItemWithUID</apiName><shortdesc>
	  Erstellt eine tiefe Kopie des Objekts, indem die ObjectUtil.copy()-Methode aufgerufen wird, und ersetzt die uid-Eigenschaft der Kopie (wenn vorhanden) durch einen neuen Wert, indem die UIDUtil.createUID()-Methode aufgerufen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Kopie des Objekts.
	 
	  </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das zu kopierende Element.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Erstellt eine tiefe Kopie des Objekts, indem die <codeph>ObjectUtil.copy()</codeph>-Methode aufgerufen wird, und ersetzt die <codeph>uid</codeph>-Eigenschaft der Kopie (wenn vorhanden) durch einen neuen Wert, indem die <codeph>UIDUtil.createUID()</codeph>-Methode aufgerufen wird.
	 
	  <p>Diese Methode wird für eine Drag &amp; Drop-Kopie verwendet.</p>
	 
	  </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.utils.ObjectUtil.xml"><linktext>mx.utils.ObjectUtil</linktext></link><link href="" invalidHref="mx.utils.UIDUtil.xml"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:copySelectedItems"><apiName>copySelectedItems</apiName><shortdesc>
      Erstellt eine Kopie der ausgewählten Elemente in der Reihenfolge, in der sie ausgewählt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Array der ausgewählten Elemente.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>useDataField</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn das Array mit den aktuellen Elementen gefüllt werden soll, oder <codeph>false</codeph>, wenn das Array mit den Indexdaten der Elementen gefüllt werden soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine Kopie der ausgewählten Elemente in der Reihenfolge, in der sie ausgewählt wurden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
      Erstellt Objekte, die untergeordnete Objekte dieser ListBase sind, in diesem Fall das listContent-Objekt, das alle Elementrenderer enthalten wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erstellt Objekte, die untergeordnete Objekte dieser ListBase sind, in diesem Fall das <codeph>listContent</codeph>-Objekt, das alle Elementrenderer enthalten wird. Beachten Sie: Die Elementrenderer werden nicht sofort erstellt, sondern zu einem späteren Zeitpunkt, wenn Flex die <codeph>updateDisplayList()</codeph>-Methode aufruft.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_COMPLETE-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_COMPLETE</codeph>-Ereignisse. Diese Methode entfernt das Element aus dem Datenprovider.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_DROP-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_DROP</codeph>-Ereignisse. Diese Methode verbirgt das UI-Feeback durch Aufruf der <codeph>hideDropFeedback()</codeph>-Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragEnterHandler"><apiName>dragEnterHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_ENTER-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_ENTER</codeph>-Ereignisse. Diese Methode bestimmt, ob das DragSource-Objekt gültige Elemente enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode, um das UI-Feedback einzurichten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragExitHandler"><apiName>dragExitHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_EXIT-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_EXIT</codeph>-Ereignisse. Diese Methode verbirgt das UI-Feeback durch Aufruf der <codeph>hideDropFeedback()</codeph>-Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragOverHandler"><apiName>dragOverHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_OVER-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_OVER</codeph>-Ereignisse. Diese Methode bestimmt, ob das DragSource-Objekt gültige Elemente enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode, um das UI-Feedback einzurichten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragScroll"><apiName>dragScroll</apiName><shortdesc>
      Intervallfunktion, die einen Bildlauf der Liste nach oben oder unten durchführt, wenn die Maus über oder unter die Liste geführt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Intervallfunktion, die einen Bildlauf der Liste nach oben oder unten durchführt, wenn die Maus über oder unter die Liste geführt wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Die Standardprozedur für das dragStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>dragStart</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:drawCaretIndicator"><apiName>drawCaretIndicator</apiName><shortdesc>
      Zeichnet den Einfügezeichenindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Einfügezeichenindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:drawHighlightIndicator"><apiName>drawHighlightIndicator</apiName><shortdesc>
      Zeichnet den Hervorhebungsindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Hervorhebungsindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:drawItem"><apiName>drawItem</apiName><shortdesc>
      Zeichnet den Renderer mit Hervorhebungs-, Auswahl- oder Einfügezeichen-Indikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Renderer.
      </apiDesc></apiParam><apiParam><apiItemName>selected</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer im Status „ausgewählt“ gezeichnet werden soll.
      </apiDesc></apiParam><apiParam><apiItemName>highlighted</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer in seinem hervorgehobenen Status gezeichnet werden soll.
      </apiDesc></apiParam><apiParam><apiItemName>caret</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer so gezeichnet werden soll, als wäre er das Auswahl-Einfügezeichen.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Auswahlstatus über einen Effekt ausgeblendet werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Renderer mit Hervorhebungs-, Auswahl- oder Einfügezeichen-Indikatoren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:drawRowBackgrounds"><apiName>drawRowBackgrounds</apiName><shortdesc>
      Zeichnet abwechselnde Zeilenfarben, Rahmenlinien und Hintergründe für die Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeichnet abwechselnde Zeilenfarben, Rahmenlinien und Hintergründe für die Zeilen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:drawSelectionIndicator"><apiName>drawSelectionIndicator</apiName><shortdesc>
      Zeichnet den Auswahlindikator in das gegebene Sprite-Objekt an der Position, in der Breite, in der Höhe und mit der Farbe, die festgelegt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Auswahlindikator in das gegebene Sprite-Objekt an der Position, in der Breite, in der Höhe und mit der Farbe, die festgelegt wurden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:findKey"><apiName>findKey</apiName><shortdesc>
      Sucht das nächste Element im Datenprovider, das mit dem Zeichen im eventCode-Parameter beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn eine Übereinstimmung gefunden wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>eventCode</apiItemName><apiType value="int"/><apiDesc>Die Taste, die auf der Tastatur gedrückt wurde.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sucht das nächste Element im Datenprovider, das mit dem Zeichen im <codeph>eventCode</codeph>-Parameter beginnt. Sie können dies überschreiben, um kompliziertere Type-Ahead-Suchvorgänge durchzuführen. Die Suche startet an der <codeph>selectedIndex</codeph>-Stelle. Wenn sie das Ende des Datenproviders erreicht, beginnt sie wieder am Anfang.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:findString"><apiName>findString</apiName><shortdesc>
      Findet ein Element in der Liste basierend auf einem String und verlegt die Auswahl an diese Stelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn eine Übereinstimmung gefunden wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiType value="String"/><apiDesc>Der String, der gesucht wird.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Findet ein Element in der Liste basierend auf einem String und verlegt die Auswahl an diese Stelle. Die Suche startet an der <codeph>selectedIndex</codeph>-Stelle. Wenn sie das Ende des Datenproviders erreicht, beginnt sie wieder am Anfang.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:finishDataChangeEffect"><apiName>finishDataChangeEffect</apiName><shortdesc>
      Bereinigt nach dem Abschluss eines Datenänderungseffekts die Daten, indem die ursprüngliche Sammlung und der Iterator wiederhergestellt und alle zwischengespeicherten, von diesem Effekt verwendeten Werte entfernt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:EffectEvent"/><apiDesc>Der Effekt, der beendet wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bereinigt nach dem Abschluss eines Datenänderungseffekts die Daten, indem die ursprüngliche Sammlung und der Iterator wiederhergestellt und alle zwischengespeicherten, von diesem Effekt verwendeten Werte entfernt werden. Diese Methode wird vom Flex-Framework aufgerufen. Sie brauchen sie nicht aus dem Programmcode aufzurufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:finishKeySelection"><apiName>finishKeySelection</apiName><shortdesc>
      Stellt ausgewählte Elemente basierend auf den Eigenschaften caretIndex und anchorIndex ein.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Legt ausgewählte Elemente basierend auf den <codeph>caretIndex</codeph>- und <codeph>anchorIndex</codeph>-Eigenschaften fest. Wird über die Tastaturauswahlprozeduren und die <codeph>updateDisplayList()</codeph>-Methode aufgerufen, wenn der Tastaturauswahlprozedur ein Seitenfehler gemeldet wird, während ein Bildlauf zur Anzeige zusätzlicher Elemente erfolgt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:getRendererSemanticValue"><apiName>getRendererSemanticValue</apiName><shortdesc> 
      Gibt den Wert für eine bestimmte semantische Eigenschaft eines Elementrenderers oder null zurück, wenn diese Eigenschaft nicht definiert ist, während ein Dateneffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Wert für eine bestimmte semantische Eigenschaft eines Elementrenderers oder null, wenn diese Eigenschaft nicht definiert ist, während ein Dateneffekt läuft.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>Ein Elementrenderer.
     
      </apiDesc></apiParam><apiParam><apiItemName>semanticProperty</apiItemName><apiType value="String"/><apiDesc>Die semantische Eigenschaft des Renderers, dessen Wert zurückgegeben wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Gibt den Wert für eine bestimmte semantische Eigenschaft eines Elementrenderers oder null zurück, wenn diese Eigenschaft nicht definiert ist, während ein Dateneffekt läuft. Diese Funktion wird von Filtern in Datenänderungseffekten verwendet, um die Effekte auf Renderer zu beschränken, die entfernten oder hinzugefügten Datenelementen entsprechen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:getReservedOrFreeItemRenderer"><apiName>getReservedOrFreeItemRenderer</apiName><shortdesc>
      Ruft einen bereits erstellten, derzeit nicht verwendeten Elementrenderer ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein bereits erstellter, derzeit nicht verwendeter Elementrenderer.
      
      </apiDesc><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die vom Elementrenderer darzustellenden Daten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft einen bereits erstellten, derzeit nicht verwendeten Elementrenderer ab. Wenn ein Dateneffekt läuft, wird zunächst ein Abruf aus der reservedItemRenderers-Matrix versucht. Sonst (oder wenn kein reservierter Renderer gefunden wird) erfolgt der Abruf aus dem freeItemRenderers-Stapel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:hideDropFeedback"><apiName>hideDropFeedback</apiName><shortdesc>
      Verbirgt den Dropindikator unter dem Mauszeiger, der darauf hinweist, dass ein Drag &amp; Drop-Vorgang zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Ein DragEvent-Objekt, das Informationen über die Position des Mauszeigers enthält.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verbirgt den Dropindikator unter dem Mauszeiger, der darauf hinweist, dass ein Drag &amp; Drop-Vorgang zulässig ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:indexToColumn"><apiName>indexToColumn</apiName><shortdesc>
      Die Spalte für das Datenproviderelement an einer gegebenen Indexposition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Spalte, in der das Element in der Komponente angezeigt werden würde.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Spalte für das Datenproviderelement an einer gegebenen Indexposition.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:indexToItemRenderer"><apiName>indexToItemRenderer</apiName><shortdesc>
      Rufen Sie einen Elementrenderer für die Indexposition eines Elements im Datenprovider ab, wenn einer existiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Elementrenderer, der das Element anzeigt, oder <codeph>null</codeph>, wenn das Element derzeit nicht angezeigt wird.
      
      </apiDesc><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider für ein Element.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Rufen Sie einen Elementrenderer für die Indexposition eines Elements im Datenprovider ab, wenn einer existiert. Da Elementrenderer nur für Elemente in einer Gruppe von anzeigbaren Zeilenelementen existieren, können Sie diese Methode nicht für Elemente verwenden, die nicht sichtbar sind.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:indexToRow"><apiName>indexToRow</apiName><shortdesc>
      Die Zeile für das Datenproviderelement an einer gegebenen Indexposition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Zeile, in der das Element in der Komponente angezeigt werden würde.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Zeile für das Datenproviderelement an einer gegebenen Indexposition.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:indicesToIndex"><apiName>indicesToIndex</apiName><shortdesc>
      Berechnet den Offset in den Datenprovider des Elements an colIndex, rowIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Offset in den Datenprovider.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index der Zeile, einschließlich der Zeilen, durch die ein Bildlauf von oben her erfolgte. Daher gilt: Wenn <codeph>verticalScrollPosition</codeph> gleich 2 ist, hat die erste sichtbare Zeile den rowIndex 2.
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index der Spalte, einschließlich Spalten, die von links abgerollt wurden. Wenn <codeph>horizontalScrollPosition</codeph> gleich 2 ist, dann hat die erste Spalte links den columnIndex 2.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Berechnet den Offset in den Datenprovider des Elements an colIndex, rowIndex. Die 9. Zeile, 3. Spalte in einer TileList kann unterschiedliche Elemente im Datenprovider darstellen, je nach der Richtung der Musterelemente und der Anzahl der Zeilen und Spalten in der TileList.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:initiateDataChangeEffect"><apiName>initiateDataChangeEffect</apiName><shortdesc>
      Leitet einen Datenänderungseffekt ein, wenn Änderungen im Datenprovider eingetreten sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Leitet einen Datenänderungseffekt ein, wenn Änderungen im Datenprovider eingetreten sind.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:invalidateList"><apiName>invalidateList</apiName><shortdesc>
      Ruft bei der nächsten Aktualisierung alle Zeilen neu ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei der nächsten Aktualisierung alle Zeilen neu ab.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:isItemHighlighted"><apiName>isItemHighlighted</apiName><shortdesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement hervorgehoben ist (wenn ein Mauszeiger darüber bewegt wird oder unter dem Einfügezeichen bei Tastaturnavigation).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element hervorgehoben ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement hervorgehoben ist (wenn ein Mauszeiger darüber bewegt wird oder unter dem Einfügezeichen bei Tastaturnavigation).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:isItemSelectable"><apiName>isItemSelectable</apiName><shortdesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement auswählbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element auswählbar ist
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement auswählbar ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:isItemSelected"><apiName>isItemSelected</apiName><shortdesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement ausgewählt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element hervorgehoben ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob der Elementrenderer für ein Datenproviderelement ausgewählt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:isItemShowingCaret"><apiName>isItemShowingCaret</apiName><shortdesc>
	  Bestimmt, ob der Elementrenderer für ein Datenproviderelement das Element ist, das sich bei Tastaturnavigation unter dem Einfügezeichen befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn sich das Element unter dem Einfügezeichen befindet.
	  
	  </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement.
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Bestimmt, ob der Elementrenderer für ein Datenproviderelement das Element ist, das sich bei Tastaturnavigation unter dem Einfügezeichen befindet.
	 
	  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:isItemVisible"><apiName>isItemVisible</apiName><shortdesc>
      Bestimmt, ob ein Element von einem Renderer angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element angezeigt wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Ein Datenproviderelement.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob ein Element von einem Renderer angezeigt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:isRendererUnconstrained"><apiName>isRendererUnconstrained</apiName><shortdesc>
      Gibt „true“ zurück, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird, während ein Datenänderungseffekt aufgrund eines Aufrufs der unconstrainRenderer()-Methode läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Ein Elementrenderer.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt <codeph>true</codeph> zurück, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird, während ein Datenänderungseffekt aufgrund eines Aufrufs der <codeph>unconstrainRenderer()</codeph>-Methode läuft.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemRendererContains"><apiName>itemRendererContains</apiName><shortdesc>
      Bestimmt, ob ein Renderer ein Anzeigeobjekt enthält (oder besitzt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn der Renderer das Anzeigeobjekt enthält oder besitzt.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>renderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Renderer, der das Anzeigeobjekt enthält oder besitzt.
     
      </apiDesc></apiParam><apiParam><apiItemName>object</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Das Anzeigeobjekt, das mit dem Renderer verbunden ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob ein Renderer ein Anzeigeobjekt enthält (oder besitzt). Eigentum bedeutet, dass das Anzeigeobjekt dem Renderer nicht untergeordnet, sondern mit ihm in anderer Weise verbunden ist. Popups sollten Eigentum des Renderers sein, damit Aktivitäten im Popup mit dem Renderer verbunden sind und nicht als Aktivität in einer anderen Komponente gesehen werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemRendererToIndex"><apiName>itemRendererToIndex</apiName><shortdesc>
      Gibt die Indexposition des Elements im Datenprovider des Elements zurück, das von diesem Elementrenderer dargestellt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Indexposition des Elements im Datenprovider.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, der das Element darstellt, für das Sie die Datenprovider-Indexposition ermitteln möchten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Indexposition des Elements im Datenprovider des Elements zurück, das von diesem Elementrenderer dargestellt wird. Da Elementrenderer nur für Elemente existieren, die sich in der Gruppe von anzeigbaren Zeilen befinden, können Sie diese Methode nicht für Elemente verwenden, die nicht sichtbar sind.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:itemRendererToIndices"><apiName>itemRendererToIndices</apiName><shortdesc>
      Gibt eine Point-Instanz zurück, die die Spalten- und Spalten-Indexposition eines Elementrenderers enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Eine Point-Instanz. Die <codeph>x</codeph>-Eigenschaft enthält die Spalten-Indexposition und die <codeph>y</codeph>-Eigenschaft die Zeilen-Indexposition.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Ein Elementrenderer.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt eine Point-Instanz zurück, die die Spalten- und Spalten-Indexposition eines Elementrenderers enthält. Da Elementrenderer nur für Elemente innerhalb der Menge anzeigbarer Zeilen erstellt werden, können Sie diese Methode nicht verwenden, um die Indizes für Elemente abzurufen, die nicht sichtbar sind. Außerdem werden Elementrenderer wiederverwendet, sodass die Indexpositionen, die Sie für ein Element erhalten, geändert werden können, wenn dieser Elementrenderer wiederverwendet wird, um ein anderes Element anzuzeigen. In der Regel wird diese Methode während Maus- und Tastaturvorgängen aufgerufen, wenn die von einem Elementrenderer angezeigte Datenmenge noch nicht geändert wurde.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemToDataTip"><apiName>itemToDataTip</apiName><shortdesc>
      Gibt den dataTip-String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der dataTipField- und dataTipFunction-Eigenschaften anzeigen würde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Anzeigbares Stringobjekt, das auf den Daten basiert.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt den dataTip-String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der dataTipField- und dataTipFunction-Eigenschaften anzeigen würde. Falls die Methode den Parameter nicht in einen String konvertieren kann, wird ein einzelnes Leerzeichen zurückgegeben.
      <p>Für Entwickler, die Unterklassen von ListBase oder untergeordneten Objekten erstellen. Von Anwendungsentwicklern nicht verwendet.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      Gibt basierend auf den iconField- und iconFunction-Eigenschaften die Klasse für ein eventuelles Symbol für ein Datenelement zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Symbol für das Element als Klassenverweis oder <codeph>null</codeph>, wenn nicht vorhanden.
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Element, aus dem die Symbolklasse extrahiert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt basierend auf den iconField- und iconFunction-Eigenschaften die Klasse für ein eventuelles Symbol für ein Datenelement zurück. Das Feld im Element kann einen String zurückgeben, wenn dieser String den Namen einer Klasse in der Anwendung darstellt. Das Feld im Element kann auch ein String sein, der der Name einer Variablen in dem Dokument ist, die die Klasse für das Symbol enthält.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemToItemRenderer"><apiName>itemToItemRenderer</apiName><shortdesc>
      Gibt einen Elementrenderer für ein gegebenes Element im Datenprovider zurück, wenn vorhanden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Elementrenderer oder <codeph>null</codeph>, wenn das Element derzeit nicht angezeigt wird.
      
      </apiDesc><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Elementrenderer für ein gegebenes Element im Datenprovider zurück, wenn vorhanden. Da Elementrenderer nur für Elemente existieren, die sich in der Gruppe anzeigbarer Zeilen befinden, gibt diese Methode <codeph>null</codeph> zurück, wenn das Element nicht sichtbar ist. Dies gibt für ein Datenraster den Renderer der ersten Spalte zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der Eigenschaften „labelField“ und „labelFunction“ anzeigen würde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der auf der Grundlage der Daten anzuzeigende String.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der labelField- und labelFunction-Eigenschaften anzeigen würde. Falls die Methode den Parameter nicht in einen String konvertieren kann, wird ein einzelnes Leerzeichen zurückgegeben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      Bestimmt die UID für ein Datenproviderelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die UID als String.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt die UID für ein Datenproviderelement. Alle Elemente in einem Datenprovider müssen entweder eine eindeutige ID (Unique ID oder UID) haben oder es wird jeweils eine generiert und mit ihnen verknüpft. Dies bedeutet, dass kein Objekt und kein Skalarwert in einem Datenprovider zweimal vorkommen darf. 
      
      <p>Beispiel: Der folgende Datenprovider wird nicht unterstützt, weil der Wert „foo“ zweimal vorkommt und die UID für einen String der String selbst ist:</p>
     
      <pre>
      var sampleDP:Array = ["foo", "bar", "foo"]
      </pre>
     
      <p>Einfache dynamische Objekte können zweimal vorkommen, wenn es sich um zwei getrennte Instanzen handelt. Der folgende Code ist zulässig, weil jede Instanz eine eigene UID hat, da es sich um verschiedene Objekte handelt:</p>
     
      <pre>
      var sampleDP:Array = [{label: "foo"}, {label: "foo"}]
      </pre>
     
      <p>Beachten Sie: Der folgende Code ist nicht zulässig, weil dieselbe Instanz zweimal vorkommt:</p>
     
      <pre>
      var foo:Object = {label: "foo"};
      sampleDP:Array = [foo, foo];
      </pre>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:measureHeightOfItems"><apiName>measureHeightOfItems</apiName><shortdesc>
      Misst eine Gruppe von Elementen vom Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die Summe der Höhen dieser Elemente zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Summe der Höhen der gemessenen Elemente.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Das Datenproviderelement, bei dem die Berechnung der Höhen beginnen soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Anzahl der Elemente, die für die Berechnung der Höhen einbezogen werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Misst eine Gruppe von Elementen vom Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die Summe der Höhen dieser Elemente zurück.
     
      <p>Diese Methode ist in der AdvancedListBase-Klasse nicht implementiert und muss in der untergeordneten Klasse implementiert werden.</p>
     
      <p>Ein negativer <codeph>index</codeph>-Wert kann verwendet werden, um anzugeben, dass die Höhenberechnung auch Kopfzeilen enthält.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:measureWidthOfItems"><apiName>measureWidthOfItems</apiName><shortdesc>
      Misst eine Gruppe von Elementen aus dem Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die höchste gefundene Breite zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das breiteste der gefundenen Elemente.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Das Datenproviderelement, bei dem die Messung der Breite beginnen soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Anzahl der Elemente, die für die Messung der Breite einbezogen werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Misst eine Gruppe von Elementen aus dem Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die höchste gefundene Breite zurück. Diese Methode wird verwendet, um die Breite der Komponente zu berechnen. Die diversen von ListBase-abgeleiteten Klassen haben leicht unterschiedliche Implementierungen. DataGrid misst seine Spalten anstelle von Datenproviderelementen und TileList misst nur das erste Element und nimmt an, dass alle Elemente gleich groß sind.
     
      <p>Diese Methode ist in der AdvancedListBase-Klasse nicht implementiert und muss in der untergeordneten Klasse implementiert werden.</p>
     
      <p>Ein negativer <codeph>index</codeph>-Wert kann verwendet werden, um anzugeben, dass die Breitenberechnung auch Kopfzeilen enthält.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:measure"><apiName>measure</apiName><shortdesc>
      Berechnet die gemessene Breite und Höhe der Komponente basierend auf den Eigenschaften rowCount, columnCount, rowHeight und columnWidth.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die gemessene Breite und Höhe der Komponente basierend auf den Eigenschaften <codeph>rowCount</codeph>, <codeph>columnCount</codeph>, <codeph>rowHeight</codeph> und <codeph>columnWidth</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.ScrollControlBase.xml"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseClickHandler"><apiName>mouseClickHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_CLICK-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_CLICK</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode bestimmt, welcher Renderer angeklickt wurde, und löst ein <codeph>ListEvent.ITEM_CLICK</codeph>-Ereignis aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseDoubleClickHandler"><apiName>mouseDoubleClickHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOUBLE_CLICK-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOUBLE_CLICK</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode bestimmt, welcher Renderer angeklickt wurde, und löst ein <codeph>ListEvent.ITEM_DOUBLE_CLICK</codeph>-Ereignis aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOWN-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode findet den Renderer, auf den geklickt wurde, und bereitet den Empfang eines <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignisses vor.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseEventToItemRenderer"><apiName>mouseEventToItemRenderer</apiName><shortdesc>
      Bestimmt, welcher Elementrenderer sich unter dem Mauszeiger befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der Elementrenderer, über dem der Mauszeiger steht, oder <codeph>null</codeph>, wenn keiner vorhanden ist.
      
      </apiDesc><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ein MouseEvent, das die Position des Mauszeigers und des Objekts enthält, über dem er steht.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, welcher Elementrenderer sich unter dem Mauszeiger befindet. Elementrenderer können aus mehreren Mauszielen bestehen oder sichtbare Bereiche haben, die keine Mausziele sind. Diese Methode prüft sowohl die Ziele als auch die Position, um zu ermitteln, über welchem Elementrenderer der Mauszeiger aus der Perspektive des Benutzers steht, weil diese von den Informationen abweichen kann, die vom Mausereignis übergeben wurden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseMoveHandler"><apiName>mouseMoveHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_MOVE-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_MOVE</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode wartet auf eine Bewegung, die den Beginn eines Drag&amp;Drop-Vorgangs darstellt und sendet ein <codeph>DragEvent.DRAG_START</codeph>-Ereignis. Sie prüft auch, ob der Mauszeiger über einem nicht als Ziel ausgewiesenen Bereich eines Renderers steht, damit Flex versuchen kann, es so aussehen zu lassen, als ob dieser Renderer das Ziel wäre.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseOutHandler"><apiName>mouseOutHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_OUT-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_OUT</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, welchen Renderer der Mauszeiger verlassen hat, und entfernt die Hervorhebung.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseOverHandler"><apiName>mouseOverHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_OVER-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_OVER</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, über welchem Renderer der Mauszeiger steht, und zeigt den Renderer hervorgehoben an.
     
      <p>Die Listenklassen rufen dies auch von einem <codeph>MouseEvent.MOUSE_MOVE</codeph>-Ereignis ab. Dieses Ereignis wird verwendet, um eine Bewegung in nicht als Ziel ausgewiesenen Bereichen der Renderer und in den Füllbereichen rund um die Renderer zu erkennen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOWN-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode findet den Renderer, auf den geklickt wurde, und bereitet den Empfang eines <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignisses vor.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:mouseWheelHandler"><apiName>mouseWheelHandler</apiName><shortdesc>
      Verarbeitet mouseWheel-Ereignisse, indem die Bildlaufpositionen verändert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>mouseWheel</codeph>-Ereignisse, indem die Bildlaufpositionen verändert werden. Dies ist eine Kopie der Version in der ScrollControlBase-Klasse, die modifiziert ist, um die <codeph>horizontalScrollPosition</codeph>-Eigenschaft zu ändern, wenn das Ziel horizontal läuft.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.xml#ScrollControlBase/mouseWheelHandler()"><linktext>mx.core.ScrollControlBase.mouseWheelHandler()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:moveIndicatorsHorizontally"><apiName>moveIndicatorsHorizontally</apiName><shortdesc conref="mx.controls.listClasses.ListBase#moveIndicatorsHorizontally()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc conref="mx.controls.listClasses.ListBase#moveIndicatorsHorizontally()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:moveIndicatorsVertically"><apiName>moveIndicatorsVertically</apiName><shortdesc conref="mx.controls.listClasses.ListBase#moveIndicatorsVertically()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc conref="mx.controls.listClasses.ListBase#moveIndicatorsVertically()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:moveSelectionHorizontally"><apiName>moveSelectionHorizontally</apiName><shortdesc>
      Verschiebt die Auswahl in horizontaler Richtung, wenn der Benutzer mithilfe der Nach-links- bzw. Nach-rechts-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Die gedrückte Taste (z. B. Keyboard.LEFT)
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Umschalttaste gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Strg-Taste gehalten wurde
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verschiebt die Auswahl in horizontaler Richtung, wenn der Benutzer mithilfe der Nach-links- bzw. Nach-rechts-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt. Diese Methode kann die Eigenschaften <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> und <codeph>caretIndex</codeph> ändern sowie die <codeph>finishKeySelection()</codeph>-Methode aufrufen, um die Auswahl zu aktualisieren.
     
      <p>In AdvancedListBase nicht implementiert, weil die Standardliste nur eine Spalte hat und daher keinen horizontalen Bildlauf benötigt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:moveSelectionVertically"><apiName>moveSelectionVertically</apiName><shortdesc>
      Verschiebt die Auswahl in vertikaler Richtung, wenn der Benutzer mithilfe der Nach-oben- bzw. Nach-unten-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Die gedrückte Taste (z. B. Keyboard.DOWN)
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Umschalttaste gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Strg-Taste gehalten wurde
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verschiebt die Auswahl in vertikaler Richtung, wenn der Benutzer mithilfe der Nach-oben- bzw. Nach-unten-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt. Diese Methode kann die Eigenschaften <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> und <codeph>caretIndex</codeph> ändern sowie die <codeph>finishKeySelection()</codeph>-Methode aufrufen, um die Auswahl zu aktualisieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:removeDataEffectItem"><apiName>removeDataEffectItem</apiName><shortdesc>
      Entfernt einen Elementrenderer, wenn ein Datenänderungseffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Der Elementrenderer, der aus dem Layout des Steuerelements entfernt werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt einen Elementrenderer, wenn ein Datenänderungseffekt läuft. Der Elementrenderer muss mit Daten übereinstimmen, die bereits aus der Datenprovider-Sammlung entfernt wurden. Diese Funktion wird von einem <codeph>RemoveItemAction</codeph>-Effekt als Teil eines Datenänderungseffekts aufgerufen, um den Punkt festzulegen, an dem ein Datenelement vom Steuerelement über einen Elementrenderer nicht mehr angezeigt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:removeIndicators"><apiName>removeIndicators</apiName><shortdesc>
      Entfernt Auswahlhervorhebungen und andere damit verbundene Grafikeffekte für ein gegebenes Element im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Datenproviderelements.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt Auswahlhervorhebungen und andere damit verbundene Grafikeffekte für ein gegebenes Element im Datenprovider.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:scrollHorizontally"><apiName>scrollHorizontally</apiName><shortdesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Ist immer eine positive Zahl.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die list-Klassen versuchen, den Bildlauf zu optimieren, wenn sich die Bildlaufposition um weniger als die Anzahl der sichtbaren Zeilen geändert hat. In diesem Fall bleiben einige Zeilen unverändert und müssen lediglich verschoben werden, während andere Zeilen entfernt und neue hinzugefügt werden. Wenn die Bildlaufposition zu stark verändert wird, werden alle alten Zeilen entfernt und neue Zeilen hinzugefügt, indem die <codeph>makeRowsAndColumns()</codeph>-Methode für den gesamten sichtbaren Bereich aufgerufen wird.</p>
     
      <p>In AdvancedListBase nicht implementiert, weil die Standardliste nur eine Spalte hat und daher keinen horizontalen Bildlauf benötigt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      Gibt die Datenprovider-Indexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Indexposition des Datenproviders.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der Wert der <codeph>horizontalScrollPosition</codeph>-Eigenschaft, der der Bildlaufposition entspricht.
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der Wert der <codeph>verticalScrollPosition</codeph>-Eigenschaft, der der Bildlaufposition entspricht.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Datenprovider-Indexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:scrollToIndex"><apiName>scrollToIndex</apiName><shortdesc>
      Sorgt dafür, dass das Datenproviderelement an der gegebenen Indexposition sichtbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn sich <codeph>verticalScrollPosition</codeph> geändert hat.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sorgt dafür, dass das Datenproviderelement an der gegebenen Indexposition sichtbar ist. Wenn das Element sichtbar ist, bleibt die <codeph>verticalScrollPosition</codeph>-Eigenschaft unverändert, auch wenn das Element nicht das erste sichtbare Element ist. Wenn das Element derzeit nicht sichtbar ist, wird die <codeph>verticalScrollPosition</codeph>-Eigenschaft geändert, um das Element zum ersten sichtbaren Element zu machen, außer wenn nicht genügend Zeilen vorhanden sind, um dies zu tun, weil der <codeph>verticalScrollPosition</codeph>-Wert durch die <codeph>maxVerticalScrollPosition</codeph>-Eigenschaft begrenzt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
     
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Ist immer eine positive Zahl.
     
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die Listenklassen versuchen, den Bildlauf zu optimieren, wenn die Bildlaufposition um einen Wert verändert wird, der niedriger ist als die Anzahl sichtbarer Zeilen. In dieser Situation bleiben einige Zeilen unverändert und müssen nur bewegt werden. Andere Zeilen werden entfernt und neue Zeilen werden hinzugefügt. Wenn die Bildlaufposition zu stark verändert wird, werden alle alten Zeilen entfernt und neue Zeilen hinzugefügt, indem die <codeph>makeRowsAndColumns()</codeph>-Methode für den gesamten sichtbaren Bereich aufgerufen wird.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/makeRowsAndColumns()"><linktext>mx.controls.listClasses.ListBase.makeRowsAndColumns()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:seekPendingFailureHandler"><apiName>seekPendingFailureHandler</apiName><shortdesc>
      Die Standard-Fehlerprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die den Fehler verursacht haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="mx.controls.listClasses:ListBaseSeekPending"/><apiDesc>Daten über einen Suchvorgang, der durch einen ItemPendingError-Fehler unterbrochen wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standard-Fehlerprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:seekPendingResultHandler"><apiName>seekPendingResultHandler</apiName><shortdesc>
      Die Standard-Ergebnisprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die den Fehler verursacht haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="mx.controls.listClasses:ListBaseSeekPending"/><apiDesc>Daten über einen Suchvorgang, der durch einen ItemPendingError-Fehler unterbrochen wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standard-Ergebnisprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt. Diese Methode prüft, ob sie über das neueste Seitenfehlerergebnis verfügt. Wenn nicht, bleibt sie einfach untätig. Wenn ja, stellt Sie den Iterator auf die richtige Position.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:selectItem"><apiName>selectItem</apiName><shortdesc>
      Aktualisiert die Gruppe der ausgewählten Elemente, sofern der angegebene Elementrenderer angeklickt wurde und die Tastatur-Zusatztasten im angegebenen Zustand sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn die Gruppe der ausgewählten Elemente geändert wurde. Wenn auf ein bereits ausgewähltes Element geklickt wird, ändert dies nicht immer die Gruppe der ausgewählten Elemente.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiDesc>Der Elementrenderer, auf den geklickt wurde.
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Mausklicken die Umschalttaste auf der Tastatur gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Mausklicken die Strg-Taste auf der Tastatur gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn die Grafiken für den Status „ausgewählt“ mit einem Effekt eingeblendet werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Aktualisiert die Gruppe der ausgewählten Elemente, sofern der angegebene Elementrenderer angeklickt wurde und die Tastatur-Zusatztasten im angegebenen Zustand sind. Diese Methode aktualisiert auch die Anzeige der Elementrenderer basierend auf ihrem aktualisierten Auswahlstatus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:setRowCount"><apiName>setRowCount</apiName><shortdesc>
      Legt die rowCount-Eigenschaft fest, ohne die explicitRowCount-Eigenschaft, die die Zeilenanzahl permanent festlegt, ungültig zu machen oder einzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="int"/><apiDesc>Die Zeilenanzahl.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die <codeph>rowCount</codeph>-Eigenschaft fest, ohne die <codeph>explicitRowCount</codeph>-Eigenschaft, die die Zeilenanzahl permanent festlegt, ungültig zu machen oder einzustellen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:setRowHeight"><apiName>setRowHeight</apiName><shortdesc>
      Legt die rowHeight-Eigenschaft fest, ohne die explicitRowHeight-Eigenschaft, die die Zeilenhöhe permanent festlegt, ungültig zu machen oder einzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="Number"/><apiDesc>Die Zeilenhöhe in Pixeln.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die <codeph>rowHeight</codeph>-Eigenschaft fest, ohne die <codeph>explicitRowHeight</codeph>-Eigenschaft, die die Zeilenhöhe permanent festlegt, ungültig zu machen oder einzustellen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:showDropFeedback"><apiName>showDropFeedback</apiName><shortdesc>
      Zeigt einen Dropindikator unter dem Mauszeiger an, um darauf hinzuweisen, dass ein Drag &amp; Drop-Vorgang zulässig ist und wo die Elemente abgelegt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Ein DragEvent-Objekt, das Informationen darüber enthält, wo sich der Mauszeiger befindet.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeigt einen Dropindikator unter dem Mauszeiger an, um darauf hinzuweisen, dass ein Drag &amp; Drop-Vorgang zulässig ist und wo die Elemente abgelegt werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:unconstrainRenderer"><apiName>unconstrainRenderer</apiName><shortdesc>
      Stoppt vorübergehend die Platzierung eines Elementrenderers durch den Layout-Algorithmus des Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Die Daten für den Elementrenderer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Stoppt vorübergehend die Platzierung eines Elementrenderers durch den Layout-Algorithmus des Steuerelements. Diese Funktion wird im Zuge eines Datenänderungseffekts aufgerufen, wenn die zu bestimmten Datenelementen gehörenden Elementrenderer ausserhalb der normalen Positionen von Elementrenderern im Steuerelement bewegt werden müssen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Fügt Elementrenderer hinzu oder entfernt sie, wenn sich die Anzahl anzeigbarer Elemente ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt Elementrenderer hinzu oder entfernt sie, wenn sich die Anzahl anzeigbarer Elemente ändert. Aktualisiert die Elementrenderer, wenn sie sich verändert haben könnten. Wendet die Auswahl an, wenn sie programmgesteuert geändert wurde.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.ScrollControlBase.xml"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:AdvancedListBase:protected:updateList"><apiName>updateList</apiName><shortdesc>
      Aktualisiert alle Zeilen jetzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert alle Zeilen jetzt. Der Aufruf dieser Methode kann größere Verarbeitungsleistungen erfordern und ist daher zeitaufwendig, weil dadurch alle Renderer in der Liste neu gezeichnet werden und die Rückgabe erst erfolgt, wenn die Verarbeitung abgeschlossen ist.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:actualCollection"><apiName>actualCollection</apiName><shortdesc>
      Eine Kopie des Werts, der normalerweise in der „collection“-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:ICollectionView"/></apiValueDef><apiDesc>
      Eine Kopie des Werts, der normalerweise in der <codeph>collection</codeph>-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird. Dieser Wert sollte null sein, wenn kein Datenänderungseffekt läuft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:actualIterator"><apiName>actualIterator</apiName><shortdesc>
      Eine Kopie des Werts, der normalerweise in der „iterator“-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:IViewCursor"/></apiValueDef><apiDesc>
      Eine Kopie des Werts, der normalerweise in der <codeph>iterator</codeph>-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:allowDragSelection"><apiName>allowDragSelection</apiName><shortdesc>
      Ein Flag, das anzeigt, ob eine Zieh-Auswahl aktiviert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob eine Zieh-Auswahl aktiviert ist. Die Auswahl zum Ziehen ist die Möglichkeit, ein Element auszuwählen, indem der Mauszeiger hineingezogen wird, im Gegensatz zur normalen Auswahl, bei der die Maustaste gedrückt sein muss, während Sie den Mauszeiger über das Element führen, das Sie auswählen möchten. Dieses Merkmal wird in ComboBox-Dropdownelementen verwendet, damit die Möglichkeit besteht, die Maustaste zu drücken, während der Mauszeiger über der Dropdown-Schaltfläche steht, und dann den Mauszeiger in die Dropdownliste zu führen, um ein Element auszuwählen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:anchorBookmark"><apiName>anchorBookmark</apiName><shortdesc>
      Ein Lesezeichen für das Element, das den Anker bildet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:CursorBookmark"/></apiValueDef><apiDesc>
      Ein Lesezeichen für das Element, das den Anker bildet. Mit einem Lesezeichen kann die Komponente rasch eine Position in der Sammlung der Elemente suchen. Diese Eigenschaft wird benutzt, wenn Sie eine Gruppe von Elementen zwischen dem Anker und dem Einfügezeichen oder dem hervorgehobenen Element auswählen und das ausgewählte Element nach dem Anwenden eines Sortiervorgangs oder eines Filters suchen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:anchorIndex"><apiName>anchorIndex</apiName><shortdesc>
      Der Offset des Elements im Datenprovider, der den Auswahl-Ankerpunkt darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Der Offset des Elements im Datenprovider, der den Auswahl-Ankerpunkt darstellt.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/caretItemRenderer"><linktext>mx.controls.listClasses.ListBase.caretItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:cachedDataChangeEffect"><apiName>cachedDataChangeEffect</apiName><shortdesc>
      Der Effekt, der ausgelöst wird, wenn im Datenprovider für das Steuerelement Änderungen eintreten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>null</apiData><apiType value="mx.effects:Effect"/></apiValueDef><apiDesc>
      Der Effekt, der ausgelöst wird, wenn im Datenprovider für das Steuerelement Änderungen eintreten. Stellt den Effekt ein, indem der <codeph>dataChangeEffect</codeph>-Stil festgelegt wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:caretBookmark"><apiName>caretBookmark</apiName><shortdesc>
      Ein Lesezeichen zum Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:CursorBookmark"/></apiValueDef><apiDesc>
      Ein Lesezeichen zum Element unter dem Einfügezeichen. Mit einem Lesezeichen kann die Komponente rasch eine Position in der Sammlung der Elemente suchen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:caretIndex"><apiName>caretIndex</apiName><shortdesc>
      Der Offset des Elements im Datenprovider, das sich am Auswahl-Einfügezeichenpunkt befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Der Offset des Elements im Datenprovider, das sich am Auswahl-Einfügezeichenpunkt befindet.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/caretItemRenderer"><linktext>mx.controls.listClasses.ListBase.caretItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:caretIndicator"><apiName>caretIndicator</apiName><shortdesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer das Einfügezeichen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer das Einfügezeichen ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:caretItemRenderer"><apiName>caretItemRenderer</apiName><shortdesc>
      Der Renderer für das Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiValueDef><apiDesc>
      Der Renderer für das Element unter dem Einfügezeichen. Im Auswahlmodell befinden sich ein Anker, ein Einfügezeichen und ein hervorgehobenes Element. Bei Auswahl mit der Maus wird das Element unter dem Mauszeiger bei Rollover hervorgehoben. Bei einem Mausklick ohne Zusatztaste (Umschalttaste oder Steuerungstaste) wird die Gruppe der ausgewählten Elemente gelöscht, das Element unter der Hervorhebung wird ausgewählt und zum Anker. Das Einfügezeichen wird bei der Auswahl per Mausklick nicht verwendet.  
     
      <p>Wenn ein Anker vorhanden ist und die Auswahl eines anderen Elements mit gedrückter Umschalttaste erfolgt, wird die bisherige Gruppe ausgewählter Elemente gelöscht und alle Elemente zwischen dem Element und dem Anker werden ausgewählt. Bei der Auswahl mehrerer Elemente per Mausklick bei gedrückter Steuerungstaste werden die einzelnen Elemente nacheinander ausgewählt, der Anker hingegen wird nicht verschoben.</p>
     
      <p>Wenn bei der Auswahl von Elementen über die Tastatur die Pfeiltasten ohne Zusatztasten verwendet werden, wird die bisherige Auswahl gelöscht. Das neue Element wird ausgewählt und zum Anker und ein Einfügezeichenindikator wird rund um die hervorgehobene Auswahl angezeigt.  </p>
     
      <p>Wenn der Benutzer die Pfeiltasten mit gedrückter Umschalttaste verwendet, wird die bisherige Auswahl gelöscht und die Elemente zwischen dem Anker und dem neuen Element werden ausgewählt. Das Einfügezeichen wandert zum neuen Objekt.  </p>
     
      <p>Wenn Pfeiltasten mit gedrückter Steuerungstaste verwendet werden, bewegt sich nur das Einfügezeichen. Der Benutzer kann die Leertaste betätigen, um ein Element unter dem Einfügezeichen an- oder abzuwählen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:caretUID"><apiName>caretUID</apiName><shortdesc>
      Die UID für das Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die UID für das Element unter dem Einfügezeichen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:collection"><apiName>collection</apiName><shortdesc>
      Eine ICollectionView, die den Datenprovider darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:ICollectionView"/></apiValueDef><apiDesc>
      Eine ICollectionView, die den Datenprovider darstellt. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft festlegen, hüllt Flex den Datenprovider erforderlichenfalls ein, um die ICollectionView-Schnittstelle zu unterstützen, und definiert diese Eigenschaft mit dem Ergebnis. Die AdvancedListBase-Klasse verwendet dann diese Eigenschaft, um auf die Daten im Provider zuzugreifen. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft abrufen, gibt Flex diesen Wert zurück.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:dataEffectCompleted"><apiName>dataEffectCompleted</apiName><shortdesc>
      Ein Flag, das angibt, dass ein Datenänderungseffekt gerade abgeschlossen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, dass ein Datenänderungseffekt gerade abgeschlossen wurde. Die Komponente reagiert in der Regel, indem sie diverse interne Datenstrukturen beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf bereinigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:dataItemWrappersByRenderer"><apiName>dataItemWrappersByRenderer</apiName><shortdesc>
      Ein Wörterbuch, das Elementrenderer den ItemWrappers zuordnet, die zur Bereitstellung ihrer Daten verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Ein Wörterbuch, das Elementrenderer den ItemWrappers zuordnet, die zur Bereitstellung ihrer Daten verwendet werden. Nur anwendbar, wenn ein Dateneffekt läuft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:defaultColumnCount"><apiName>defaultColumnCount</apiName><shortdesc>
      Die Standardanzahl der anzuzeigenden Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Standardanzahl der anzuzeigenden Spalten. Dieser Wert wird verwendet, wenn die Berechnung für die Anzahl der Spalten bei der Ermittlung der Spaltenanzahl auf der Basis von Größe oder Inhalt einen Wert unter 1 ergibt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:defaultRowCount"><apiName>defaultRowCount</apiName><shortdesc>
      Die Standardanzahl der anzuzeigenden Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Standardanzahl der anzuzeigenden Zeilen. Dieser Wert wird verwendet, wenn die Berechnung für die Anzahl der Spalten bei der Ermittlung der Zeilenanzahl auf der Basis von Größe oder Inhalt einen Wert unter 1 ergibt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:explicitColumnCount"><apiName>explicitColumnCount</apiName><shortdesc>
      Die durch explizites Festlegen der columnCount-Eigenschaft angeforderte Spaltenanzahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>columnCount</codeph>-Eigenschaft angeforderte Spaltenanzahl.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:explicitColumnWidth"><apiName>explicitColumnWidth</apiName><shortdesc>
      Die durch explizites Festlegen der columnWidth-Eigenschaft angeforderte Spaltenbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>columnWidth</codeph>-Eigenschaft angeforderte Spaltenbreite.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:explicitRowCount"><apiName>explicitRowCount</apiName><shortdesc>
      Die durch explizites Festlegen der rowCount-Eigenschaft angeforderte Zeilenanzahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>rowCount</codeph>-Eigenschaft angeforderte Zeilenanzahl.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:explicitRowHeight"><apiName>explicitRowHeight</apiName><shortdesc>
      Die durch explizites Festlegen der rowHeight-Eigenschaft angeforderte Zeilenhöhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>rowHeight</codeph>-Eigenschaft angeforderte Zeilenhöhe.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:freeItemRenderers"><apiName>freeItemRenderers</apiName><shortdesc>
      Ein Stapel nicht verwendeter Elementrenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Stapel nicht verwendeter Elementrenderer. Die meisten Listenklassen rezyklieren bereits erstellte Renderer, wenn diese sich aus dem anzeigbaren Bereich hinausbewegen. Das spart Zeit beim Bildlauf. Die wiederverwendeten Renderer werden hier gespeichert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:highlightIndicator"><apiName>highlightIndicator</apiName><shortdesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer hervorgehoben ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer hervorgehoben ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:highlightItemRenderer"><apiName>highlightItemRenderer</apiName><shortdesc>
      Der Renderer, über den der Mauszeiger bewegt wird oder der unter dem Einfügezeichen liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiValueDef><apiDesc>
      Der Renderer, über den der Mauszeiger bewegt wird oder der unter dem Einfügezeichen liegt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:highlightUID"><apiName>highlightUID</apiName><shortdesc>
      Die UID des Elements, über das der Mauszeiger bewegt wird oder das unter dem Einfügezeichen liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die UID des Elements, über das der Mauszeiger bewegt wird oder das unter dem Einfügezeichen liegt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:itemsNeedMeasurement"><apiName>itemsNeedMeasurement</apiName><shortdesc>
      Ein Flag, das anzeigt, ob die Eigenschaften columnWidth und rowHeight berechnet werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob die Eigenschaften <codeph>columnWidth</codeph> und <codeph>rowHeight</codeph> berechnet werden müssen. Diese Eigenschaft wird auf <codeph>true</codeph> eingestellt, wenn ein Stil geändert wird, der sich auf die Messwerte des Renderers auswirken kann, oder wenn der Datenprovider geändert wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:itemsSizeChanged"><apiName>itemsSizeChanged</apiName><shortdesc>
      Ein Flag, das anzeigt, dass sich die Größe der Renderer möglicherweise geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, dass sich die Größe der Renderer möglicherweise geändert hat. Die Komponente reagiert normalerweise, indem Sie die Datenelemente beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf auf alle Renderer anwendet. Es wird angenommen, dass die Wiederanwendung der Elemente die Elementrenderer ungültig macht und damit eine Neuberechnung der Messwerte veranlasst.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:iteratorValid"><apiName>iteratorValid</apiName><shortdesc>
      Ein Flag, das anzeigt, dass ein Seitenfehler aufgetreten und die Position des Iterators nicht gültig ist (d. h., dieser befindet sich nicht auf dem obersten Element, das angezeigt wird).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, dass ein Seitenfehler aufgetreten und die Position des Iterators nicht gültig ist (d. h., dieser befindet sich nicht auf dem obersten Element, das angezeigt wird). Wenn der Komponente ein Seitenfehler gemeldet wird (ein ItemPending-Fehler), stellt es <codeph>iteratorValid</codeph> auf <codeph>false</codeph> ein. Der Code, der normalerweise die Wiedergabe von Elementen verarbeitet, prüft dieses Flag und wird erst ausgeführt, wenn die Seite mit Daten vom Server empfangen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      Die Haupt-IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:IViewCursor"/></apiValueDef><apiDesc>
      Die Haupt-IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben. Am Ende einer Codesequenz muss sie immer auf das oberste sichtbare Element gesetzt werden, das angezeigt wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:keySelectionPending"><apiName>keySelectionPending</apiName><shortdesc>
      Ein Flag, das anzeigt, ob die Auswahl über die Tastatur durch einen Seitenfehler unterbrochen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob die Auswahl über die Tastatur durch einen Seitenfehler unterbrochen wurde. Die Komponente reagiert, indem sie das Rendern von Elementen unterbricht, bis die Seite mit Daten empfangen wird. Die <codeph>finishKeySelection()</codeph>-Methode wird aufgerufen, wenn die Daten der Seite empfangen werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:lastDropIndex"><apiName>lastDropIndex</apiName><shortdesc>
      Die zuletzt berechnete Indexposition, an der das gezogene Objekt dem Ablageziel hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die zuletzt berechnete Indexposition, an der das gezogene Objekt dem Ablageziel hinzugefügt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:lastSeekPending"><apiName>lastSeekPending</apiName><shortdesc>
      Der zuletzt durchgeführte Suchvorgang, der einen Seitenfehler bewirkt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.controls.listClasses:ListBaseSeekPending"/></apiValueDef><apiDesc>
      Der zuletzt durchgeführte Suchvorgang, der einen Seitenfehler bewirkt hat. Wenn mehrere Seitenfehler auftreten, ist nur der letzte von Interesse, weil hier der Iterator platziert und die Darstellung der Zeilen neu begonnen werden muss.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:listContent"><apiName>listContent</apiName><shortdesc>
      Ein internes Anzeigeobjekt, das allen Elementrenderern, Auswahl- und Hervorhebungsindikatoren sowie anderen Hilfsgrafiken übergeordnet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.controls.listClasses:AdvancedListBaseContentHolder"/></apiValueDef><apiDesc>
      Ein internes Anzeigeobjekt, das allen Elementrenderern, Auswahl- und Hervorhebungsindikatoren sowie anderen Hilfsgrafiken übergeordnet ist. Dies entspricht etwa <codeph>contentPane</codeph> in der Container-Klasse und wird für die Verarbeitung des Bildlaufs verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:listItems"><apiName>listItems</apiName><shortdesc>
      Ein Array von Arrays, das die Elementrendererinstanzen enthält, die für die Darstellung jedes einzelnen Datenproviderelements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Arrays, das die Elementrendererinstanzen enthält, die für die Darstellung jedes einzelnen Datenproviderelements verwendet werden. Dies ist ein zweidimensionales Zeilen-Haupt-Array (Array von Zeilen, die Arrays von Spalten sind).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:menuSelectionMode"><apiName>menuSelectionMode</apiName><shortdesc>
      Ein Flag, das anzeigt, ob eine Auswahl vom Menütyp verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob eine Auswahl vom Menütyp verwendet werden soll. In einem Menü wird beim Ziehen aus einem Renderer in einen anderen der neue Renderer aus- und der bisherige abgewählt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:modifiedCollectionView"><apiName>modifiedCollectionView</apiName><shortdesc>
      Die Sammlungsansicht, die temporär den früheren Datenproviderstatus beibehält, um laufende Datenänderungseffekte zu ermöglichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:ModifiedCollectionView"/></apiValueDef><apiDesc>
      Die Sammlungsansicht, die temporär den früheren Datenproviderstatus beibehält, um laufende Datenänderungseffekte zu ermöglichen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:offscreenExtraColumnsLeft"><apiName>offscreenExtraColumnsLeft</apiName><shortdesc>
      Die Anzahl von Spalten auf der linken Seite des Steuerelements, die derzeit nicht sichtbar sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von Spalten auf der linken Seite des Steuerelements, die derzeit nicht sichtbar sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:offscreenExtraColumnsRight"><apiName>offscreenExtraColumnsRight</apiName><shortdesc>
      Die Anzahl von Spalten auf der rechten Seite des Steuerelements, die derzeit nicht sichtbar sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von Spalten auf der rechten Seite des Steuerelements, die derzeit nicht sichtbar sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:offscreenExtraColumns"><apiName>offscreenExtraColumns</apiName><shortdesc>
      Die Anzahl von Spalten, die derzeit nicht sichtbar sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von Spalten, die derzeit nicht sichtbar sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:offscreenExtraRowsBottom"><apiName>offscreenExtraRowsBottom</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Elementen, die sich derzeit unter dem untersten sichtbaren Elementrenderer befinden
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Elementen, die sich derzeit unter dem untersten sichtbaren Elementrenderer befinden
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:offscreenExtraRowsTop"><apiName>offscreenExtraRowsTop</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Elementen, die sich derzeit über dem obersten sichtbaren Renderer befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Elementen, die sich derzeit über dem obersten sichtbaren Renderer befinden. Diese Zahl ist &lt;= offscreenExtraRows / 2.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:offscreenExtraRows"><apiName>offscreenExtraRows</apiName><shortdesc>
      Die Anzahl zusätzlicher Elementrenderer, die der Layout-Algorithmus verwenden kann, wenn er Animationen für Dateneffekte konstruiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl zusätzlicher Elementrenderer, die der Layout-Algorithmus verwenden kann, wenn er Animationen für Dateneffekte konstruiert. Änderungen, die im Datenprovider erfolgen, der den auf dem Bildschirm sichtbaren Elementen oder dieser Anzahl von Elementen vor oder nach den auf dem Bildschirm sichtbaren Elementen entspricht, werden einer kompletten Effektverarbeitung unterzogen. Elemente außerhalb dieses Bereichs werden möglicherweise von den Effekten nicht perfekt animiert.
     
      <p>Ein angemessener Wert für diese Eigenschaft ist ungefähr die Anzahl der auf dem Bildschirm sichtbaren Zeilen. Wenn dieser Wert sehr hoch angesetzt wird, kann dies bei Verwendung eines Datenproviders mit vielen Elementen die Leistung beeinträchtigen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:rendererChanged"><apiName>rendererChanged</apiName><shortdesc>
      Ein Flag, das eine Änderung des Renderers anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das eine Änderung des Renderers anzeigt. Die Komponente reagiert in der Regel, indem sie alle bestehenden Renderer zerstört und alle Renderer beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf neu zeichnet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:reservedItemRenderers"><apiName>reservedItemRenderers</apiName><shortdesc>
      Eine Hash-Matrix von derzeit nicht verwendeten Elementrenderern, die in naher Zukunft wieder verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von derzeit nicht verwendeten Elementrenderern, die in naher Zukunft wieder verwendet werden können. Wird beim Ausführen von Dateneffekten verwendet. Die Matrix wird durch die UID des Datenproviderelements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:rowInfo"><apiName>rowInfo</apiName><shortdesc>
      Ein Array von ListRowInfo-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen in der listItems-Eigenschaft zwischenspeichern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von <codeph>ListRowInfo</codeph>-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen in der listItems-Eigenschaft zwischenspeichern.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:rowMap"><apiName>rowMap</apiName><shortdesc>
      Eine Hash-Matrix von Elementrenderern für ihr jeweiliges ListRowInfo-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von Elementrenderern für ihr jeweiliges ListRowInfo-Objekt. Das ListRowInfo-Objekt wird mit dem DisplayObject-Namen des Elementrenderers indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:runDataEffectNextUpdate"><apiName>runDataEffectNextUpdate</apiName><shortdesc>
      Ein Flag, das anzeigt, ob ein Dateneffekt eingeleitet werden soll, wenn die Anzeige das nächste Mal aktualisiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob ein Dateneffekt eingeleitet werden soll, wenn die Anzeige das nächste Mal aktualisiert wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:runningDataEffect"><apiName>runningDataEffect</apiName><shortdesc>
      Ein Flag, das anzeigt, ob derzeit ein Datenänderungseffekt läuft
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob derzeit ein Datenänderungseffekt läuft
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:selectedData"><apiName>selectedData</apiName><shortdesc>
      Eine Hash-Tabelle von ListBaseSelectionData-Objekten, die verfolgen, welche Elemente gerade ausgewählt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von ListBaseSelectionData-Objekten, die verfolgen, welche Elemente gerade ausgewählt sind. Die Tabelle wird durch die UIDs der Elemente indiziert.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.ListBaseSelectionData.xml"><linktext>mx.controls.listClasses.ListBaseSelectionData</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:selectionIndicators"><apiName>selectionIndicators</apiName><shortdesc>
      Eine Hash-Tabelle von Auswahl-Indikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Auswahl-Indikatoren. Mit dieser Tabelle kann eine Komponente rasch die Indikatoren finden und entfernen, wenn die Gruppe der ausgewählten Elemente gelöscht wird. Die Tabelle wird durch die UID des Elements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:selectionLayer"><apiName>selectionLayer</apiName><shortdesc>
      Die Ebene in listContent, auf der alle Auswahl- und Hervorhebungs-Indikatoren gezeichnet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Die Ebene in <codeph>listContent</codeph>, auf der alle Auswahl- und Hervorhebungs-Indikatoren gezeichnet werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:selectionTweens"><apiName>selectionTweens</apiName><shortdesc>
      Eine Hash-Tabelle von Auswahl-Tweens.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Auswahltweens. Damit kann die Komponente rasch alle laufenden Tweens finden und löschen, wenn die Gruppe von ausgewählten Elementen gelöscht wird. Die Tabelle wird durch die UID des Elements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:showCaret"><apiName>showCaret</apiName><shortdesc>
      Ein Flag, das anzeigt, ob ein Einfügezeichen angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob ein Einfügezeichen angezeigt werden soll. Diese Eigenschaft wird normalerweise auf <codeph>false</codeph> gesetzt, wenn eine Mausaktivität erkannt wird, und auf <codeph>true</codeph> zurückgesetzt, wenn die Tastatur für die Auswahl verwendet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:unconstrainedRenderers"><apiName>unconstrainedRenderers</apiName><shortdesc>
      Eine Hash-Matrix von Elementrenderern, die nicht Gegenstand der Layout-Algorithmen der Liste sind
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von Elementrenderern, die nicht Gegenstand der Layout-Algorithmen der Liste sind
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:visibleData"><apiName>visibleData</apiName><shortdesc>
      Eine Hash-Tabelle von Datenproviderelementrenderern, die sich derzeit in der Ansicht befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Datenproviderelementrenderern, die sich derzeit in der Ansicht befinden. Die Tabelle wird durch die UID des Datenproviderelements indiziert und wird verwendet, damit der für die Anzeige eines bestimmten Elements verwendete Renderer rasch abgerufen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:wordWrapChanged"><apiName>wordWrapChanged</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Wert der wordWrap-Eigenschaft seit der letzten Aktualisierung der Anzeigeliste geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Wert der <codeph>wordWrap</codeph>-Eigenschaft seit der letzten Aktualisierung der Anzeigeliste geändert wurde. Diese Eigenschaft wird gesetzt, wenn Sie den Wert der <codeph>wordWrap</codeph>-Eigenschaft ändern. Sie wird von der <codeph>updateDisplayList()</codeph>-Methode auf <codeph>false</codeph> zurückgesetzt. Die Komponente reagiert normalerweise, indem Sie die Datenelemente beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf auf alle Renderer anwendet. Dies unterscheidet sich von itemsSizeChanged, weil zusätzlich angezeigt wird, dass die erneute Anwendung der Datenelemente auf die Renderer diese nicht unbedingt entwerten muss, da die einzige Änderung in der Angabe darüber besteht, ob der Renderer die wordWrap-Eigenschaft in seine Größenberechnungen einbeziehen soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      Ein Flag, das angibt, ob gleichzeitig mehrere Elemente ausgewählt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob gleichzeitig mehrere Elemente ausgewählt werden können. Wenn <codeph>true</codeph>, können Benutzer mehrere Elemente auswählen. Es gibt keine Option zur Sperre der Auswahl nicht nebeneinander liegender Elemente. Komplexe Standardauswahloptionen sind immer gültig (Umschalttaste-Klick, Strg-Klick).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:columnCount:get"><apiName>columnCount</apiName><shortdesc>
      Die Anzahl der Spalten, die in einem TileList-Steuerelement angezeigt werden sollen, oder Elemente in einem HorizontalList-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl der Spalten, die in einem TileList-Steuerelement angezeigt werden sollen, oder Elemente in einem HorizontalList-Steuerelement. Legt für die Datenraster die Anzahl der sichtbaren Spalten fest.
     
      <p><b>Hinweis</b>: Wenn diese Eigenschaft eingestellt wird, hat diese keine Auswirkung auf ein DataGrid-Steuerelement, das die Anzahl der Spalten auf der Breite des Steuerelements und den einzelnen Spaltenbreiten aufbaut.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
      Die Breite der Spalten des Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>50
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Breite der Spalten des Steuerelements. Diese Eigenschaft wird von den Steuerelementen TileList und HorizontalList verwendet. Sie hat keine Auswirkung auf die Datenraster-Steuerelemente, bei denen Sie die einzelnen Spaltenbreiten festlegen.
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Der anzuzeigende Datensatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="collectionChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Der anzuzeigende Datensatz. Mit dieser Eigenschaft können Sie die meisten Objekttypen als Datenprovider verwenden. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft mit einem Array festlegen, wird es in eine ArrayCollection umgewandelt. Wenn Sie die Eigenschaft mit einem XML-Objekt festlegen, wird es in eine XMLListCollection mit nur einem Element umgewandelt. Wenn Sie die Eigenschaft mit einem XML-List-Objekt festlegen, wird es in eine XMLListCollection umgewandelt. Wenn Sie die Eigenschaft mit einem Objekt festlegen, das die IList- oder ICollectionView-Schnittstelle implementiert, wird das Objekt direkt verwendet.
     
      <p>Aus den Umwandlungen ergibt sich: Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft abrufen, ist sie immer eine ICollectionView-Schnittstelle und stellt daher nicht notwendigerweise den Objekttyp dar, den Sie verwendet haben, um die Eigenschaft festzulegen. Dieses Verhalten ist zu berücksichtigen, wenn Sie die Daten im Datenprovider ändern möchten: Änderungen an den Originaldaten werden möglicherweise nicht erkannt, Änderungen im ICollectionView-Objekt, das Sie von der <codeph>dataProvider</codeph>-Eigenschaft zurück erhalten, werden erkannt.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.collections.ICollectionView.xml"><linktext>mx.collections.ICollectionView</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dataTipField:get"><apiName>dataTipField</apiName><shortdesc>
      Name des Felds in den Datenproviderelementen, das als Datentipp angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataTipFieldChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds in den Datenproviderelementen, das als Datentipp angezeigt werden soll. Standardmäßig sucht das List-Steuerelement in jedem Element nach einer Eigenschaft namens <codeph>label</codeph> und zeigt sie an. Wenn allerdings die Datenobjekte keine <codeph>label</codeph>-Eigenschaft enthalten, können Sie die <codeph>dataTipField</codeph>-Eigenschaft so festlegen, dass sie eine andere Eigenschaft im Datenobjekt verwendet. Ein Beispiel wäre etwa „FullName“ bei der Anzeige von Personennamen, die aus einer Datenbank abgerufen werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dataTipFunction:get"><apiName>dataTipFunction</apiName><shortdesc>
      Vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Datentipps ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataTipFunctionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Datentipps ausgeführt werden soll. Standardmäßig sucht das List-Steuerelement nach einer Eigenschaft namens <codeph>label</codeph> in jedem Datenproviderelement und zeigt sie an. Allerdings haben einige Elemente keine <codeph>label</codeph>-Eigenschaft bzw. keine andere Eigenschaft, die Sie für die Anzeige in den Zeilen verwenden können. Als Beispiel kann ein Datensatz angeführt werden, der die Felder lastName und firstName besitzt. Sie möchten aber die vollständigen Namen anzeigen. Sie können eine <codeph>dataTipFunction</codeph> verwenden, die die entsprechenden Felder findet und einen anzeigbaren String zurückgibt. Die <codeph>dataTipFunction</codeph> ist für die Verarbeitung von Formatierungen und lokalisierten Texten sinnvoll.
     
      <p>Die dataTipFunction übernimmt ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt einen String zurück:</p>
     
      <blockquote>
      <codeph>myDataTipFunction(item:Object):String</codeph>
      </blockquote>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:data:get"><apiName>data</apiName><shortdesc>
      Das Element in dem Datenprovider, den diese Komponente rendern soll, wenn diese Komponente als Elementrenderer oder Elementeditor verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Element in dem Datenprovider, den diese Komponente rendern soll, wenn diese Komponente als Elementrenderer oder Elementeditor verwendet wird. Die Listenklasse legt diese Eigenschaft für jeden Renderer oder Editor fest und die Komponente zeigt die Daten an. Von ListBase abgeleitete Klassen unterstützen diese Eigenschaften für komplexe Situationen, etwa wenn eine Liste mit DataGrids oder ein DataGrid vorhanden ist, in dem eine Spalte eine Liste ist.
     
      <p>Die Listenklassen verwenden die <codeph>listData</codeph>-Eigenschaft zusätzlich zur <codeph>data</codeph>-Eigenschaft, um zu bestimmen, was angezeigt werden soll. Wenn sich die Listenklasse in einem DataGrid befindet, erwartet sie, dass die <codeph>dataField</codeph>-Eigenschaft der Spalte einer Eigenschaft in den Daten zugeordnet wird, und legt den <codeph>selectedItem</codeph>-Wert mit dieser Eigenschaft fest. Wenn sie sich in einem List- oder TileList-Steuerelement befindet, erwartet sie, dass die <codeph>labelField</codeph>-Eigenschaft der Liste einer Eigenschaft in den Daten zugeordnet wird, und legt den <codeph>selectedItem</codeph>-Wert mit dieser Eigenschaft fest. Sonst legt sie <codeph>selectedItem</codeph> mit den Daten selbst fest.</p>
     
      <p>Diese Eigenschaft nutzt den Datenprovider, legt ihn aber nicht fest. In allen Fällen müssen Sie den Datenprovider auf andere Weise festlegen.</p>
     
      <p>In MXML wird diese Eigenschaft nicht festgelegt.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dragEnabled:get"><apiName>dragEnabled</apiName><shortdesc>
      Ein Flag, das angibt, ob Sie Elemente aus diesem Steuerelement herausziehen und auf anderen Steuerelementen ablegen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob Sie Elemente aus diesem Steuerelement herausziehen und auf anderen Steuerelementen ablegen können. Wenn <codeph>true</codeph>, wird das Ziehen für das Steuerelement zugelassen. Wenn die <codeph>dropEnabled</codeph>-Eigenschaft ebenfalls <codeph>true</codeph> ist, können Sie Elemente ziehen und in diesem Steuerelement ablegen, um diese Elemente neu anzuordnen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:dragImageOffsets:get"><apiName>dragImageOffsets</apiName><shortdesc>
      Der Offset des Ziehbilds bei Drag &amp; Drop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Point"/></apiValueDef><apiDesc>
      Der Offset des Ziehbilds bei Drag &amp; Drop.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:protected:dragImage:get"><apiName>dragImage</apiName><shortdesc>
      Eine Instanz einer Klasse, die die Grafiken während des Drag &amp; Drop-Vorgangs anzeigt. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:IUIComponent"/><apiDefaultValue>mx.controls.listClasses.ListItemDragProxy
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine Instanz einer Klasse, die die Grafiken während des Drag &amp; Drop-Vorgangs anzeigt. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Ein Flag, das anzeigt, ob Elemente aus dem Steuerelement bei einem Drag &amp; Drop-Vorgang verschoben werden können, anstatt sie nur zu kopieren. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob Objekte aus dem Steuerelement bei einem Drag &amp; Drop-Vorgang verschoben werden können, anstatt sie nur zu kopieren. Wenn <codeph>true</codeph> und die <codeph>dragEnabled</codeph>-Eigenschaft ebenfalls <codeph>true</codeph> ist, können Elemente bewegt werden. Oft sollen oder können Objekte nicht aus dem Datenprovider entfernt werden. In diesem Fall sollte ein MOVE-Vorgang bei Drag &amp; Drop nicht zulässig sein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:dropEnabled:get"><apiName>dropEnabled</apiName><shortdesc>
      Ein Flag, das anzeigt, ob gezogene Elemente auf dem Steuerelement abgelegt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob gezogene Elemente auf dem Steuerelement abgelegt werden können.
     
      <p>Wenn Sie diese Eigenschaft auf <codeph>true</codeph> einstellen, akzeptiert das Steuerelement alle Datenformate und geht davon aus, dass die gezogenen Daten zum Format der Daten im Datenprovider passen. Wenn Sie das Datenformat der gezogenen Daten explizit prüfen möchten, müssen Sie mindestens ein Drag-Ereignis verarbeiten, wie beispielsweise <codeph>dragOver</codeph>, und die <codeph>preventDefault()</codeph>-Methode des DragEvents aufrufen, um die Art anzupassen, wie die Listenklasse abgelegte Daten akzeptiert.</p>
     
      <p>Wenn Sie <codeph>dropEnabled</codeph> auf <codeph>true</codeph> einstellen, ruft Flex automatisch die <codeph>showDropFeedback()</codeph>- und <codeph>hideDropFeedback()</codeph>-Methode auf, um den Dropindikator anzuzeigen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:iconField:get"><apiName>iconField</apiName><shortdesc>
      Der Name des Felds im Datenprovider-Objekt, der bestimmt, was als Symbol angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="iconFieldChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenprovider-Objekt, der bestimmt, was als Symbol angezeigt werden soll. Standardmäßig versucht die Listenklasse nicht, Symbole mit Texten in den Zeilen anzuzeigen. Wenn Sie aber ein Symbolfeld angeben, können Sie die Grafik festlegen, die als Symbol in der Zeile erstellt und angezeigt wird. Diese Eigenschaft wird von DataGrid ignoriert.
     
      <p>Die Renderer suchen im Datenprovider-Objekt nach einer Eigenschaft mit dem Namen, der als iconField übergeben wurde. Wenn der Wert der Eigenschaft eine Klasse ist, wird diese Klasse instanziiert und es wird erwartet, dass diese Klasse eine Instanz von IFlexDisplayObject ist. Wenn der Wert der Eigenschaft ein String ist, wird geprüft, ob eine Klasse mit diesem Namen in der Anwendung vorhanden ist. Sollte keine gefunden werden, wird nach dem Dokument mit diesem Namen gesucht und erwartet, dass diese Eigenschaft einer Klasse zugeordnet ist.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Symbols ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="iconFunctionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Symbols ausgeführt werden soll. Standardmäßig versucht die Liste nicht, Symbole mit Texten in den Zeilen anzuzeigen. Wenn Sie aber eine Symbolfunktion angeben, können Sie eine Klasse für eine Grafik festlegen, die als Symbol in der Zeile erstellt und angezeigt wird.   
     
      <p>Die <codeph>iconFunction</codeph> übernimmt ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt eine Klasse zurück. Nachstehend wird die Signatur der Funktion gezeigt:</p>
     
      <pre>iconFunction(item:Object):Class</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement. Sie können einen Renderer für die Ablage von Elementen, einen Inline- oder einen benutzerdefinierten Elementrenderer festlegen.
     
      <p>Welcher Elementrenderer Standardwert ist, hängt von der Komponentenklasse ab. Beispiel: Die AdvancedDataGrid-Klasse verwendet den AdvancedDataGridItemRenderer.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:labelField:get"><apiName>labelField</apiName><shortdesc>
      Der Name des Felds im Datenproviderelement, das als Beschriftung angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="labelFieldChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenproviderelement, das als Beschriftung angezeigt werden soll. Standardmäßig sucht das List-Steuerelement in jedem Element nach einer Eigenschaft namens <codeph>label</codeph> und zeigt sie an. Wenn allerdings die Datenobjekte keine <codeph>label</codeph>-Eigenschaft enthalten, können Sie die <codeph>labelField</codeph>-Eigenschaft so festlegen, dass sie eine andere Eigenschaft im Datenobjekt verwendet. Ein Beispiel wäre etwa „FullName“ bei der Anzeige von Personennamen, die aus einer Datenbank abgerufen werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seiner Bezeichnung ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="labelFunctionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seiner Bezeichnung ausgeführt werden soll. Standardmäßig sucht das List-Steuerelement nach einer Eigenschaft namens <codeph>label</codeph> in jedem Datenproviderelement und zeigt sie an. Allerdings haben einige Datensätze keine <codeph>label</codeph>-Eigenschaft bzw. keine andere Eigenschaft, die Sie für die Anzeige verwenden können. Als Beispiel kann ein Datensatz angeführt werden, der die Felder lastName und firstName besitzt. Sie möchten aber die vollständigen Namen anzeigen.
     
      <p>Sie können eine <codeph>labelFunction</codeph> verwenden, die die entsprechenden Felder findet und einen anzeigbaren String zurückgibt. Die <codeph>labelFunction</codeph> ist für die Verarbeitung von Formatierungen und lokalisierten Texten sinnvoll. </p>
     
      <p>Bei den meisten Komponenten übernimmt die labelFunction ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt einen String zurück.</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
      <p>Die Methodensignatur für die Datenrasterklassen ist:</p>
      <pre>
      myLabelFunction(item:Object, column:DataGridColumn):String</pre>
     
      <p>Dabei gilt: <codeph>item</codeph> enthält das DataGrid-Elementobjekt und <codeph>column</codeph> legt die DataGrid-Spalte fest.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:listData:get"><apiName>listData</apiName><shortdesc>
      
      Wenn eine Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die listData-Eigenschaft der Komponente mit den zusätzlichen Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.controls.listClasses:BaseListData"/></apiValueDef><apiDesc>
      
      Wenn eine Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den zusätzlichen Daten aus dem List-Steuerelement. Die Komponente kann dann die <codeph>listData</codeph>-Eigenschaft und <codeph>data</codeph>-Eigenschaft verwenden, um die entsprechenden Informationen als Renderer oder Editor, in dem Elemente abgelegt werden können, anzuzeigen.
     
      <p>Sie stellen diese Eigenschaften in MXML oder ActionScript nicht ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.IDropInListItemRenderer.xml"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:lockedColumnCount:get"><apiName>lockedColumnCount</apiName><shortdesc>
      Die Indexposition der ersten Spalte des bildlauffähigen Steuerelements, wobei die erste Spalte an der Indexposition 0 steht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition der ersten Spalte des bildlauffähigen Steuerelements, wobei die erste Spalte an der Indexposition 0 steht. Spalten mit Indexpositionen unterhalb dieses Werts bleiben in der Ansicht fixiert. Diese Eigenschaft wird nicht von allen Listenklassen unterstützt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:lockedRowCount:get"><apiName>lockedRowCount</apiName><shortdesc>
      Die Indexposition der ersten Zeile des bildlauffähigen Steuerelements, wobei die erste Zeile an der Indexposition 0 steht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition der ersten Zeile des bildlauffähigen Steuerelements, wobei die erste Zeile an der Indexposition 0 steht. Zeilen über dieser Zeile bleiben in der Ansicht fixiert.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      Anzahl der anzuzeigenden Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Anzahl der anzuzeigenden Zeilen. Wenn die Höhe der Komponente explizit festgelegt wurde, hat diese Eigenschaft möglicherweise keine Auswirkungen.
     
      <p>Bei einem Datenraster-Steuerelement enthält die <codeph>rowCount</codeph>-Eigenschaft die Überschriftzeile. Daher gilt: Bei einem Datenraster-Steuerelement mit 3 Hauptzeilen und einer Überschriftzeile ist die <codeph>rowCount</codeph>-Eigenschaft gleich 4.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:rowHeight:get"><apiName>rowHeight</apiName><shortdesc>
      Die Höhe der Zeilen in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe der Zeilen in Pixeln. Alle Zeilen haben dieselbe Höhe, außer wenn die <codeph>variableRowHeight</codeph>-Eigenschaft <codeph>true</codeph> ist. Wenn nicht festgelegt, basiert die Zeilenhöhe auf der Schriftgröße und anderen Eigenschaften des Renderers.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:selectable:get"><apiName>selectable</apiName><shortdesc>
      Ein Flag, das angibt, ob die Liste ausgewählte Elemente als ausgewählt anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob die Liste ausgewählte Elemente als ausgewählt anzeigt. Wenn <codeph>true</codeph>, unterstützt das Steuerelement die Auswahl.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition im Datenprovider des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition im Datenprovider des ausgewählten Elements.
     
      <p>Der Standardwert ist -1 (kein ausgewähltes Element).</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:selectedIndices:get"><apiName>selectedIndices</apiName><shortdesc>
      Ein Array von Indizes im Datenprovider der ausgewählten Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array von Indizes im Datenprovider der ausgewählten Elemente. Die Elemente sind nicht in umgekehrter Reihenfolge der Benutzerauswahl.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Ein Verweis auf das ausgewählte Element im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Verweis auf das ausgewählte Element im Datenprovider.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:selectedItems:get"><apiName>selectedItems</apiName><shortdesc>
      Ein Array von Verweisen auf die ausgewählten Elemente im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array von Verweisen auf die ausgewählten Elemente im Datenprovider. Die Elemente sind nicht in umgekehrter Reihenfolge der Benutzerauswahl.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:showDataTips:get"><apiName>showDataTips</apiName><shortdesc>
      Ein Flag, das anzeigt, ob Datentipps für den Text in den Zeilen angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="showDataTipsChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob Datentipps für den Text in den Zeilen angezeigt werden. Wenn <codeph>true</codeph>, werden Datentipps angezeigt. Datentipps sind QuickInfo-Informationen, die den Text anzeigen, der zu lang für die Zeile ist. Wenn Sie eine dataTipFunction festlegen, werden Datentipps angezeigt, auch wenn der Text zu lang für die Zeile ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:value:get"><apiName>value</apiName><shortdesc>
      Das ausgewählte Element oder das Daten- oder Beschriftungsfeld des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="valueCommit"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Das ausgewählte Element oder das Daten- oder Beschriftungsfeld des ausgewählten Elements. Wenn das ausgewählte Feld eine Zahl oder ein String ist, ist der Wert das Element. Wenn das Element ein Objekt ist, ist der Wert die data-Eigenschaft, wenn eine solche existiert, oder die label-Eigenschaft, wenn eine solche existiert.
     
      <p>Hinweis: <codeph>selectedItem</codeph> ist in den meisten Fällen zu bevorzugen. Diese Eigenschaft wird aus Gründen der Abwärtskompatibilität mit älteren Anwendungen bereitgestellt.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:variableRowHeight:get"><apiName>variableRowHeight</apiName><shortdesc>
      Ein Flag, das angibt, ob die einzelnen Zeilen unterschiedliche Höhen aufweisen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob die einzelnen Zeilen unterschiedliche Höhen aufweisen können. Diese Eigenschaft wird von TileList und HorizontalList ignoriert. Wenn <codeph>true</codeph>, können einzelne Zeilen unterschiedliche Höhenwerte aufweisen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:AdvancedListBase:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      Ein Flag, das angibt, ob Text in einer Zeile umbrochen werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob Text in einer Zeile umbrochen werden soll. Wenn <codeph>true</codeph>, wird der Wortumbruch für Text in den Zeilen aktiviert. Wirkt sich nur aus, wenn <codeph>variableRowHeight</codeph> ebenfalls <codeph>true</codeph> ist.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>