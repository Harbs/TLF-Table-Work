<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.collections.errors"><apiName>mx.collections.errors</apiName><apiDetail/><apiClassifier id="mx.collections.errors:ChildItemPendingError"><apiName>ChildItemPendingError</apiName><shortdesc>
  Cette erreur est renvoyée lorsque l’extraction d’un élément enfant d’une vue de collection nécessite un appel asynchrone.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.collections.errors:ItemPendingError</apiBaseClassifier></apiClassifierDef><apiDesc>
  Cette erreur est renvoyée lorsque l’extraction d’un élément enfant d’une vue de collection nécessite un appel asynchrone. Cette erreur se produit lorsque les données sont fournies à partir d’une source distante et qu’elles ne sont pas encore disponibles localement.
 
  <p>Si le récepteur de cette erreur souhaite recevoir une notification lorsque l’élément demandé sera à nouveau disponible (c’est-à-dire au terme de l’appel asynchrone), il doit utiliser la méthode <codeph>addResponder()</codeph> et spécifier un objet prenant en charge l’interface <codeph>mx.rpc.IResponder</codeph>, qui sera chargé d’envoyer une réponse lorsque l’élément sera disponible. La classe <codeph>mx.collections.ItemResponder</codeph> implémente l’interface IResponder et prend en charge une propriété <codeph>data</codeph>.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.collections.errors.ItemPendingError.xml"><linktext>mx.collections.errors.ItemPendingError</linktext></link><link href="" invalidHref="mx.collections.ItemResponder.xml"><linktext>mx.collections.ItemResponder</linktext></link><link href="" invalidHref="mx.rpc.IResponder.xml"><linktext>mx.rpc.IResponder</linktext></link></related-links><apiConstructor id="mx.collections.errors:ChildItemPendingError:ChildItemPendingError"><apiName>ChildItemPendingError</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>Message fournissant des informations sur la cause de l’erreur.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      <p>Appelé par la classe HierarchicalCollectionViewCursor lorsqu’une demande concerne un élément enfant qui n’est pas local.</p>
     
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>