<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.layouts"><apiName>spark.layouts</apiName><apiDetail/><apiClassifier id="spark.layouts:ViewMenuLayout"><apiName>ViewMenuLayout</apiName><shortdesc>
  Класс ViewMenuLayout определяет макет контейнера ViewMenu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>The <code>&lt;s:ViewMenuLayout&gt;</code> tag inherits all of the tag 
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:ViewMenuLayout 
    <strong>Properties</strong>
    horizontalGap="2"
    requestedMaxColumnCount="3"
    verticalGap="2"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.layouts.supportClasses:LayoutBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ViewMenuLayout определяет макет контейнера ViewMenu. В зависимости от количества элементов меню может иметь несколько строк.
 
  <p>Свойство <codeph>requestedMaxColumnCount</codeph> определяет максимальное количество элементов меню в строке. По умолчанию свойство ограничивает количество элементов тремя.</p>
 
  <p>Класс ViewMenuLayout определяет макет следующим образом: </p>
  
  <ul>
    <li>Если определить не более трех элементов меню, когда свойство <codeph>requestedMaxColumnCount</codeph> содержит значение по умолчанию "три", то элементы меню будут отображаться в одной строке. Элементы меню будут иметь одинаковые размеры. 
       <p>Если будут определены четыре или более элементов меню - т. е. больше, чем указано в свойстве <codeph>requestedMaxColumnCount</codeph> – контейнер ViewMenu создаст несколько строк.</p></li>
    <li>Если свойство <codeph>requestedMaxColumnCount</codeph> сможет разделить количество элементов меню на равные части, каждая строка будет содержать одинаковое количество элементов меню. Элементы меню будут иметь одинаковые размеры.
       <p>Например, для свойства <codeph>requestedMaxColumnCount</codeph> указано значение по умолчанию "три", а пользователь определил шесть элементов меню. В меню отобразятся две строки, каждая из которых будет содержать три элемента меню. </p></li>
    <li>Если свойству <codeph>requestedMaxColumnCount</codeph> не удастся разделить количество элементов меню на равные части, строки будут содержать разное количество элементов меню. Размер элементов меню будет зависеть от их количества в строке. 
       <p>Например, для свойства <codeph>requestedMaxColumnCount</codeph> указано значение по умолчанию "три", а пользователь определил восемь элементов меню. В меню отобразятся три строки. Первая строка будет содержать два элемента меню. Вторая и третья строки будут содержать по три элемента. </p></li>
  </ul>
  
  <p>Для создания пользовательского макета меню необходимо создать класс layout. По умолчанию класс spark.skins.mobile.ViewMenuSkin определяет тему оформления контейнера ViewMenu. Чтобы применить настроенный класс ViewMenuLayout к контейнеру ViewMenu, определите новый класс темы оформления для контейнера ViewMenu. </p>
 
  <p>Класс ViewMenuSkin включает определение для контейнера Group с именем <codeph>contentGroup</codeph>, как показано ниже:</p>
 
  <pre>
    &lt;s:Group id="contentGroup" left="0" right="0" top="3" bottom="2" 
        minWidth="0" minHeight="0"> 
        &lt;s:layout> 
            &lt;s:ViewMenuLayout horizontalGap="2" verticalGap="2" id="contentGroupLayout" 
                requestedMaxColumnCount="3" requestedMaxColumnCount.landscapeGroup="6"/> 
        &lt;/s:layout> 
    &lt;/s:Group></pre>
 
  <p>Чтобы применить настроенный класс ViewMenuLayout, класс темы оформления должен определить контейнер с именем <codeph>contentGroup</codeph>. Этот контейнер использует свойство <codeph>layout</codeph> для указания настроенного класса макета. </p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ViewMenu"><linktext>spark.components.ViewMenu</linktext></link><link href="spark.components.xml#ViewMenuItem"><linktext>spark.components.ViewMenuItem</linktext></link><link href="" invalidHref="spark.skins.mobile.ViewMenuSkin.xml"><linktext>spark.skins.mobile.ViewMenuSkin</linktext></link></related-links><apiConstructor id="spark.layouts:ViewMenuLayout:ViewMenuLayout"><apiName>ViewMenuLayout</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.layouts:ViewMenuLayout:horizontalGap:get"><apiName>horizontalGap</apiName><shortdesc>
      Промежуток по горизонтали между столбцами (в пикселах).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="propertyChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>2
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Промежуток по горизонтали между столбцами (в пикселах).
     
      </apiDesc></apiValueDetail><related-links><link href="spark.layouts.xml#ViewMenuLayout/verticalGap"><linktext>verticalGap</linktext></link></related-links></apiValue><apiValue id="spark.layouts:ViewMenuLayout:requestedMaxColumnCount:get"><apiName>requestedMaxColumnCount</apiName><shortdesc>
      Максимальное количество отображаемых столбцов в строке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>3
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Максимальное количество отображаемых столбцов в строке. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.layouts:ViewMenuLayout:verticalGap:get"><apiName>verticalGap</apiName><shortdesc>
      Промежуток по вертикали между строками (в пикселах).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="2.5"/><apiTool description="" name="Flex" version="4.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="propertyChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>2
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Промежуток по вертикали между строками (в пикселах).
     
      </apiDesc></apiValueDetail><related-links><link href="spark.layouts.xml#ViewMenuLayout/horizontalGap"><linktext>horizontalGap</linktext></link></related-links></apiValue></apiClassifier></apiPackage>