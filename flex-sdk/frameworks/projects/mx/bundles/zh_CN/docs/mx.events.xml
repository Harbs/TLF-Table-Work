<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.events"><apiName>mx.events</apiName><apiDetail/><apiClassifier id="mx.events:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
   DataGridEvent 类代表特定于 DataGrid 控件的事件对象，例如当可编辑的网格项获得焦点时分派的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   DataGridEvent 类代表特定于 DataGrid 控件的事件对象，例如当可编辑的网格项获得焦点时分派的事件。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DataGrid"><linktext>mx.controls.DataGrid</linktext></link></related-links><adobeApiEvent id="mx.events:DataGridEvent:COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DataGridEvent:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>发生事件的列的索引（从零开始）。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc> 与列关联的数据中的字段或属性的名称。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>数据提供程序中项目的索引（从零开始）。
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>发生 <codeph>itemEditEnd</codeph> 事件的原因。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiData>null</apiData><apiDesc>所编辑的项呈示器或被单击的标题呈示器。
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>用于重放 <codeph>columnStretch</codeph> 事件的列 x 位置。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。通常由 DataGrid 对象调用；不用于应用程序代码。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DataGridEvent:COLUMN_STRETCH"><apiName>COLUMN_STRETCH</apiName><shortdesc>
      DataGridEvent.COLUMN_STRETCH 常量可为 columnStretch 事件定义事件对象的 type 属性的值，指示用户已将列水平展开。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>columnStretch</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.COLUMN_STRETCH 常量可为 <codeph>columnStretch</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示用户已将列水平展开。
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>与列关联的数据中的字段或属性的名称。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>鼠标的 X 位置</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.COLUMN_STRETCH</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:HEADER_RELEASE"><apiName>HEADER_RELEASE</apiName><shortdesc>
      DataGridEvent.HEADER_RELEASE 常量可为 headerRelease 事件定义事件对象的 type 属性值，指示用户已在列标题上按下和释放鼠标。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.HEADER_RELEASE 常量可为 <codeph>headerRelease</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值，指示用户已在列标题上按下和释放鼠标。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>与列关联的数据中的字段或属性的名称。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>要释放的标题呈示器。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.HEADER_RELEASE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE"><apiName>ITEM_EDITOR_CREATE</apiName><shortdesc>
      DataGridEvent.ITEM_EDITOR_CREATE 常量可为 itemEditorCreate 事件定义事件对象的 type 属性值，指示 datagrid 已完成项目编辑器的创建。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditorCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM_EDITOR_CREATE 常量可为 <codeph>itemEditorCreate</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值，指示 datagrid 已完成项目编辑器的创建。
     
      <p>此事件不存在默认侦听器。</p>
     
      <p>您通常会为此事件写入您自己的事件侦听器，以在用户可以开始编辑之前允许对 <codeph>itemEditor</codeph> 进行自定义修改。</p>
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDITOR_CREATE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      DataGridEvent.ITEM__EDIT_BEGINNING 常量可为 itemEditBeginning 事件定义事件对象的 type 属性的值，指示用户已准备编辑项目，例如通过在项目上释放鼠标按键。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM__EDIT_BEGINNING 常量可为 <codeph>itemEditBeginning</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示用户已准备编辑项目，例如通过在项目上释放鼠标按键。 
     
      <p>此事件的默认侦听器将 <codeph>DataGrid.editedItemPosition</codeph> 属性设置为具有焦点的项目，该项目开始项目编辑会话。</p>
     
      <p>您通常可以为此事件编写自己的事件侦听器，以禁止编辑特定项目。在为此事件自己编写的事件侦听器内调用 <codeph>preventDefault()</codeph> 方法可以阻止默认侦听器执行。</p>
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>与项目的列关联的数据中的字段或属性的名称。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>要编辑的项目的项呈示器。如果此事件由键盘生成，则此属性为 null，因为要编辑的项目可能未在屏幕范围内显示。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGINNING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      DataGridEvent.ITEM_EDIT_BEGIN 常量可为 itemEditBegin 事件定义事件对象的 type 属性的值，指示项目可进行编辑。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM_EDIT_BEGIN 常量可为 <codeph>itemEditBegin</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示项目可进行编辑。 
     
      <p>此事件的默认侦听器执行下列操作：</p>
     
      <ul>
        <li>通过调用 <codeph>createItemEditor()</codeph> 方法创建项目编辑器对象。</li>
        <li>将 <codeph>data</codeph> 属性从项目复制到编辑器。默认情况下，项目编辑器对象是 TextInput 控件的实例。您可以使用 list 控件的 <codeph>itemEditor</codeph> 属性指定自定义项目编辑器类。</li>
     
        <li>设置 list 控件的 <codeph>itemEditorInstance</codeph> 属性，以引用项目编辑器实例。</li>
      </ul>
     
      <p>您可以为此事件编写事件侦听器以修改传递到项目编辑器的数据。例如，您可以修改项目编辑器使用的数据、数据格式或其他信息。</p>
     
      <p>您还可以创建事件侦听器以指定用于编辑项目的项目编辑器。例如，您可能有两个不同的项目编辑器。在事件侦听器中，您可以通过执行下列操作检查要编辑的数据或其他信息，并打开相应的项目编辑器：</p>
     
      <ol>
         <li>调用 <codeph>preventDefault()</codeph> 以阻止 Flex 在默认事件侦听器中调用 <codeph>createItemEditor()</codeph> 方法。</li>
         <li>将 <codeph>itemEditor</codeph> 属性设置为相应编辑器。</li>
         <li>调用 <codeph>createItemEditor()</codeph> 方法。</li>
      </ol>
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项呈示器。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      DataGridEvent.ITEM_EDIT_END 常量可为 itemEditEnd 事件定义事件对象的 type 属性的值，指示编辑会话结束。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM_EDIT_END 常量可为 <codeph>itemEditEnd</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示编辑会话结束。  
     
      <p>列表组件具有针对此事件的默认处理函数，此程序将数据从项目编辑器复制到 list 控件的数据提供程序。默认事件侦听器执行下列操作：</p>
     
      <ul>
        <li>使用与此事件相关联的 DataGridColumn 的 <codeph>editorDataField</codeph> 属性确定包含新数据的项目编辑器的属性，并使用这些新数据更新数据提供程序项目。因为默认项目编辑器是 TextInput 控件，所以 <codeph>editorDataField</codeph> 属性的默认值为 <codeph>"text"</codeph>，以指定 TextInput 的 <codeph>text</codeph> 属性包含新项目数据。</li>
     
        <li>调用 <codeph>destroyItemEditor()</codeph> 方法以关闭项目编辑器。</li>
      </ul>
     
      <p>通常，您可以为此事件编写事件侦听器，以执行下列操作：</p>
      <ul>
        <li>在事件侦听器中，您可以修改编辑器为列表组件返回的数据。例如，您可以在将数据返回到 list 控件之前重新设置其格式。默认情况下，项目编辑器只可以返回一个值。如果希望返回多个值，必须为 <codeph>itemEditEnd</codeph> 事件编写事件侦听器。</li> 
     
        <li>在事件侦听器中，您可以检查项目编辑器中输入的数据。如果数据不正确，可以调用 <codeph>preventDefault()</codeph> 方法阻止 Flex 将新数据传递回 list 控件和关闭编辑器。 </li>
      </ul>
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>与项目的列关联的数据中的字段或属性的名称。</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项呈示器。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>定义事件原因的常量。该值必须是 <codeph>DataGridEventReason</codeph> 类的成员。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      DataGridEvent.ITEM_FOCUS_IN 常量可为 itemFocusIn 事件定义事件对象的 type 属性的值，指示项目已获得焦点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM_FOCUS_IN 常量可为 <codeph>itemFocusIn</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示项目已获得焦点。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项目编辑器实例。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      DataGridEvent.ITEM_FOCUS_OUT 常量可为 itemFocusOut 事件定义事件对象的 type 属性的值，指示项目已失去焦点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      DataGridEvent.ITEM_FOCUS_OUT 常量可为 <codeph>itemFocusOut</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示项目已失去焦点。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> DataGrid 对象的 <codeph>columns</codeph> 数组中项目列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项目编辑器实例。</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>数据提供者中项目的索引（从零开始）。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      与事件关联的列在 DataGrid 对象的 columns 数组中从零开始的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      与事件关联的列在 DataGrid 对象的 <codeph>columns</codeph> 数组中从零开始的索引。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:dataField"><apiName>dataField</apiName><shortdesc>
      与列关联的数据中的字段或属性的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      与列关联的数据中的字段或属性的名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      用于正在进行编辑的项目的项呈示器，或者正在单击或拉伸的标题呈示器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiValueDef><apiDesc>
      用于正在进行编辑的项目的项呈示器，或者正在单击或拉伸的标题呈示器。您可以使用此属性访问数据提供程序。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:localX"><apiName>localX</apiName><shortdesc>
      列的 x 位置；用于重播列拉伸事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      列的 x 位置；用于重播列拉伸事件。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:reason"><apiName>reason</apiName><shortdesc>
      分派 itemEditEnd 事件的原因。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      分派 <codeph>itemEditEnd</codeph> 事件的原因。仅对类型为 <codeph>ITEM_EDIT_END</codeph> 的事件有效。DataGridEventReason 类中定义的可能值。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DataGridEventReason"><linktext>DataGridEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:DataGridEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      数据提供者中项目的索引（从零开始）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      数据提供者中项目的索引（从零开始）。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
  CuePointEvent 类代表传递到 VideoDisplay 控件分派的提示点事件的事件侦听器的事件对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  CuePointEvent 类代表传递到 VideoDisplay 控件分派的提示点事件的事件侦听器的事件对象。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:CuePointEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CuePointEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:CuePointEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CuePointEvent:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>提示点的名称。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>提示点的时间（以秒为单位）。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>字符串 <codeph>"actionscript"</codeph>。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CuePointEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
	  CuePointEvent.CUE_POINT 常量可为 cuePoint 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>CuePointEvent.CUE_POINT</codeph> 常量可为 <codeph>cuePoint</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>cuePointName</codeph></entry><entry>提示点的名称。</entry></row><row><entry><codeph>cuePointTime</codeph></entry><entry>提示点的时间（以秒为单位）。</entry></row><row><entry><codeph>cuePointType</codeph></entry><entry>字符串 <codeph>"actionscript"</codeph>。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointName"><apiName>cuePointName</apiName><shortdesc>
	  引发事件的提示点的名称。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  引发事件的提示点的名称。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointTime"><apiName>cuePointTime</apiName><shortdesc>
	  引发事件的提示点的时间（以秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  引发事件的提示点的时间（以秒为单位）。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointType"><apiName>cuePointType</apiName><shortdesc>
	  字符串“actionscript”。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  字符串 <codeph>"actionscript"</codeph>。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
  MetadataEvent 类可定义元数据和提示点事件的事件类型。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  MetadataEvent 类可定义元数据和提示点事件的事件类型。这些事件主要由 VideoDisplay 控件使用。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:MetadataEvent:ACTION_SCRIPT_actionscript"><apiName>actionscript</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:ACTION_SCRIPT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MetadataEvent:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>对于非 <codeph>ACTION_SCRIPT</codeph> 和 <codeph>CUE_POINT</codeph> 类型的事件，<codeph>VideoDisplay.cuePoint</codeph> Array 中的提示点的索引。对于非 <codeph>METADATA_RECEIVED</codeph> 类型的事件，描述 FLV 文件（包括所有的提示点）的对象，它包含的信息与 <codeph>VideoDisplay.metadata</codeph> 属性包含的信息相同。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MetadataEvent:ACTION_SCRIPT"><apiName>ACTION_SCRIPT</apiName><shortdesc>
      MetadataEvent.ACTION_SCRIPT 常量可为 actionscript 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>actionscript</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MetadataEvent.ACTION_SCRIPT 常量可为 <codeph>actionscript</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。在运行时使用 ActionScript 不会将这些提示点嵌入到 FLV 文件中，但可以对其进行定义。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>info</codeph></entry><entry>VideoDisplay.cuePoint Array 中的提示点的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
      MetadataEvent.CUE_POINT 常量可为 cuePoint 事件定义 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MetadataEvent.CUE_POINT 常量可为 <codeph>cuePoint</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>info</codeph></entry><entry>VideoDisplay.cuePoint Array 中的提示点的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:METADATA_RECEIVED"><apiName>METADATA_RECEIVED</apiName><shortdesc>
     MetadataEvent.METADATA_RECEIVED 常量可为 metadataReceived 事件定义 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>metadataReceived</apiData><apiType value="String"/></apiValueDef><apiDesc>
     MetadataEvent.METADATA_RECEIVED 常量可为 <codeph>metadataReceived</codeph> 事件定义 <codeph>type</codeph> 属性的值。
     
     <p>此事件具有以下属性：</p>
     <adobetable class="innertable">
         
         
         
         
         
         
             
     <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>；没有要取消的默认行为。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>info</codeph></entry><entry>描述 FLV 文件（包括所有提示点）的对象。此属性包含的信息与 <codeph>VideoDisplay.metadata</codeph> 属性包含的信息相同。有关详细信息，请参阅 <codeph>VideoDisplay.metadata</codeph> 属性。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>vp</codeph></entry><entry>VideoPlayer 对象的索引。</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:info"><apiName>info</apiName><shortdesc>
      对于非 ACTION_SCRIPT 和 CUE_POINT 类型的事件，VideoDisplay.cuePoint Array 中的提示点的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      对于非 <codeph>ACTION_SCRIPT</codeph> 和 <codeph>CUE_POINT</codeph> 类型的事件，<codeph>VideoDisplay.cuePoint</codeph> Array 中的提示点的索引。
     
      <p>对于非 <codeph>METADATA_RECEIVED</codeph> 类型的事件，描述 FLV 文件（包括所有的提示点）的对象，它包含的信息与 <codeph>VideoDisplay.metadata</codeph> 属性包含的信息相同。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/metadata"><linktext>mx.controls.VideoDisplay.metadata</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:ListEventReason"><apiName>ListEventReason</apiName><shortdesc>
  用于 type 属性的值为 ListEvent.ITEM_EDIT_END 的 ListEvent 对象的 reason 属性的值的常量。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  用于 <codeph>type</codeph> 属性的值为 <codeph>ListEvent.ITEM_EDIT_END</codeph> 的 ListEvent 对象的 <codeph>reason</codeph> 属性的值的常量。

  

  </apiDesc></apiClassifierDetail><apiValue id="mx.events:ListEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      指定用户取消了编辑，并且不希望保存已编辑的数据。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定用户取消了编辑，并且不希望保存已编辑的数据。即使从 <codeph>itemEditEnd</codeph> 事件的事件侦听器内调用 <codeph>preventDefault()</codeph> 方法，Flex 也仍旧调用 <codeph>destroyItemEditor()</codeph> 方法来关闭编辑器。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      指定用户将焦点移动到该控件中的新行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定用户将焦点移动到该控件中的新行。在事件侦听器中，可以更改焦点，或者阻止更改焦点。例如，事件侦听器可以检查用户是否为当前编辑的项目输入了有效值。如果输入值无效，可以通过调用 <codeph>preventDefault()</codeph> 方法阻止用户移动到新的项目。在这种情况下，项目编辑器保持打开状态，用户继续编辑当前的项目。如果调用 <codeph>preventDefault()</codeph> 方法并调用 <codeph>destroyItemEditor()</codeph> 方法，则会阻止移动到新的项目，但是项目编辑器关闭。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      指定 list 控件失去焦点、已滚动，或者由于某种原因处于不允许编辑的状态。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定 list 控件失去焦点、已滚动，或者由于某种原因处于不允许编辑的状态。即使从 <codeph>itemEditEnd</codeph> 事件的事件侦听器内调用 <codeph>preventDefault()</codeph> 方法，Flex 也仍旧调用 <codeph>destroyItemEditor()</codeph> 方法来关闭编辑器。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
  DateChooserEvent 类代表传递到 DateChooser 和 DateField 控件的 scroll 事件的事件侦听器的事件对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  DateChooserEvent 类代表传递到 DateChooser 和 DateField 控件的 <codeph>scroll</codeph> 事件的事件侦听器的事件对象。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links><adobeApiEvent id="mx.events:DateChooserEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DateChooserEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:DateChooserEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DateChooserEvent:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示触发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>指示滚动的单位和方向。可能的值为 <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>、<codeph>DateChooserEventDetail.NEXT_YEAR</codeph>、<codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> 或 <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>触发此 change 事件的事件；通常是 <codeph>scroll</codeph>。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。通常由 DateChooser 对象调用并且不在应用程序代码中使用。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DateChooserEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  DateChooserEvent.SCROLL 常量可为 scroll 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DateChooserEvent.SCROLL</codeph> 常量可为 <codeph>scroll</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
	  <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>detail</codeph></entry><entry>滚动方向。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>触发此 change 事件的事件；通常是 <codeph>scroll</codeph>。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEvent:detail"><apiName>detail</apiName><shortdesc>
      指示滚动的方向。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      指示滚动的方向。DateChooserEventDetail 类定义的值。可能的值为 <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>、<codeph>DateChooserEventDetail.NEXT_YEAR</codeph>、<codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> 或 <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>。
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:DateChooserEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  触发此更改的事件；通常是 scroll。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  触发此更改的事件；通常是 <codeph>scroll</codeph>。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
  代表按下、拖动或者释放分隔符时分派的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  代表按下、拖动或者释放分隔符时分派的事件。这些事件由 DividedBox 控件及其子项分派。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#DividedBox"><linktext>mx.containers.DividedBox</linktext></link></related-links><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_DRAG_dividerDrag"><apiName>dividerDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_DRAG</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_PRESS_dividerPress"><apiName>dividerPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_PRESS</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_RELEASE_dividerRelease"><apiName>dividerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DividerEvent:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dividerIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>生成事件的分隔符的索引。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>拖动分隔符的像素数目。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DividerEvent:DIVIDER_DRAG"><apiName>DIVIDER_DRAG</apiName><shortdesc>
	  DividerEvent.DIVIDER_DRAG 常量可为 dividerDrag 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DividerEvent.DIVIDER_DRAG</codeph> 常量可为 <codeph>dividerDrag</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
	  <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>delta</codeph></entry><entry>包含拖动分隔符的像素数目。正数表示向右或底部的拖动，负数表示向左或顶部的拖动。</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>包含正在拖动的分隔符的从零开始的索引。最左边或最上面的分隔符的 <codeph>dividerIndex</codeph> 为 0。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_PRESS"><apiName>DIVIDER_PRESS</apiName><shortdesc>
	  DividerEvent.DIVIDER_PRESS 常量可为 dividerPress 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DividerEvent.DIVIDER_PRESS</codeph> 常量可为 <codeph>dividerPress</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
	  <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>delta</codeph></entry><entry>包含拖动分隔符的像素数目。正数表示向右或底部的拖动，负数表示向左或顶部的拖动。</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>包含正在拖动的分隔符的从零开始的索引。最左边或最上面的分隔符的 <codeph>dividerIndex</codeph> 为 0。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_RELEASE"><apiName>DIVIDER_RELEASE</apiName><shortdesc>
	  DividerEvent.DIVIDER_RELEASE 常量可为 dividerRelease 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>DividerEvent.DIVIDER_RELEASE</codeph> 常量可为 <codeph>dividerRelease</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
	  <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>delta</codeph></entry><entry>包含拖动分隔符的像素数目。正数表示向右或底部的拖动，负数表示向左或顶部的拖动。</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>包含正在拖动的分隔符的从零开始的索引。最左边或最上面的分隔符的 <codeph>dividerIndex</codeph> 为 0。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:delta"><apiName>delta</apiName><shortdesc>
	  分隔符拖动的像素数目。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  分隔符拖动的像素数目。正数表示向右或底部的拖动，负数表示向左或顶部的拖动。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:dividerIndex"><apiName>dividerIndex</apiName><shortdesc>
	  按下或拖动的分隔符的从零开始的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  按下或拖动的分隔符的从零开始的索引。最左边或最上面的分隔符的 <codeph>dividerIndex</codeph> 为 0。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
  SliderEvent 类代表传递给 HSlider 和 VSlider 类的事件的事件侦听器的事件对象，这些事件包括 change、thumbDrag、thumbPress 和 thumbRelease。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  SliderEvent 类代表传递给 HSlider 和 VSlider 类的事件的事件侦听器的事件对象，这些事件包括 <codeph>change</codeph>、<codeph>thumbDrag</codeph>、<codeph>thumbPress</codeph> 和 <codeph>thumbRelease</codeph>。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links><adobeApiEvent id="mx.events:SliderEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_DRAG_thumbDrag"><apiName>thumbDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_DRAG</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_PRESS_thumbPress"><apiName>thumbPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_PRESS</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_RELEASE_thumbRelease"><apiName>thumbRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:SliderEvent:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>thumbIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>其位置发生更改的缩略图的从零开始的索引。
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>滑块的新值。
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>输入操作的类型。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的对象。
     
      </apiDesc></apiParam><apiParam><apiItemName>clickTarget</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>是否已按下滑块轨道或滑块缩略图。
     
      </apiDesc></apiParam><apiParam><apiItemName>keyCode</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>如果事件是由按键触发的，则为该键的键盘码。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:SliderEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      SliderEvent.CHANGE 常量可为 change 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>SliderEvent.CHANGE</codeph> 常量可为 <codeph>change</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>指定是否已按下滑块轨道或滑块缩略图。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>如果事件是由按键触发的，则为该键的键盘码。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>其位置发生更改的缩略图的从零开始的索引。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>包含指示输入操作类型的值。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的事件对象。</entry></row><row><entry><codeph>value</codeph></entry><entry>滑块的新值。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_DRAG"><apiName>THUMB_DRAG</apiName><shortdesc>
      SliderEvent.THUMB_DRAG 常量可为 thumbDrag 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>SliderEvent.THUMB_DRAG</codeph> 常量可为 <codeph>thumbDrag</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>指定是否已按下滑块轨道或滑块缩略图。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>如果事件是由按键触发的，则为该键的键盘码。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>其位置发生更改的缩略图的从零开始的索引。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>包含指示输入操作类型的值。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的事件对象。</entry></row><row><entry><codeph>value</codeph></entry><entry>滑块的新值。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_PRESS"><apiName>THUMB_PRESS</apiName><shortdesc>
      SliderEvent.THUMB_PRESS 常量可为 thumbPress 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>SliderEvent.THUMB_PRESS</codeph> 常量可为 <codeph>thumbPress</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>指定是否已按下滑块轨道或滑块缩略图。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>如果事件是由按键触发的，则为该键的键盘码。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>其位置发生更改的缩略图的从零开始的索引。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>包含指示输入操作类型的值。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的事件对象。</entry></row><row><entry><codeph>value</codeph></entry><entry>滑块的新值。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_RELEASE"><apiName>THUMB_RELEASE</apiName><shortdesc>
      SliderEvent.THUMB_RELEASE 常量可为 thumbRelease 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>SliderEvent.THUMB_RELEASE</codeph> 常量可为 <codeph>thumbRelease</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。 
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>指定是否已按下滑块轨道或滑块缩略图。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>如果事件是由按键触发的，则为该键的键盘码。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>其位置发生更改的缩略图的从零开始的索引。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>包含指示输入操作类型的值。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的事件对象。</entry></row><row><entry><codeph>value</codeph></entry><entry>滑块的新值。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:clickTarget"><apiName>clickTarget</apiName><shortdesc>
      指定是否已按下滑块轨道或滑块缩略图。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      指定是否已按下滑块轨道或滑块缩略图。此属性可以具有以下值之一：<codeph>SliderEventClickTarget.THUMB</codeph> 或者 <codeph>SliderEventClickTarget.TRACK</codeph>。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links></apiValue><apiValue id="mx.events:SliderEvent:keyCode"><apiName>keyCode</apiName><shortdesc>
      如果事件是由按键触发的，则为该键的键盘码。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      如果事件是由按键触发的，则为该键的键盘码。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:thumbIndex"><apiName>thumbIndex</apiName><shortdesc>
      其位置发生更改的缩略图的从零开始的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      其位置发生更改的缩略图的从零开始的索引。如果仅有一个缩略图，则此值是 0。如果有两个缩略图，则此值是 0 或 1。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      指示输入操作的类型。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      指示输入操作的类型。该值是 flash.events.MouseEvent 或 flash.events.KeyboardEvent 类型的事件对象。
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.MouseEvent.xml"><linktext>flash.events.MouseEvent</linktext></link><link href="" invalidHref="flash.events.KeyboardEvent.xml"><linktext>flash.events.KeyboardEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:SliderEvent:value"><apiName>value</apiName><shortdesc>
      滑块的新值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      滑块的新值。  
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDetail"><apiName>ScrollEventDetail</apiName><shortdesc>
  表示 ScrollEvent 的 detail 属性的值的常量。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  表示 ScrollEvent 的 <codeph>detail</codeph> 属性的值的常量。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDetail:AT_BOTTOM"><apiName>AT_BOTTOM</apiName><shortdesc>
	  指示滚动条在其滚动范围的底部。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atBottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条在其滚动范围的底部。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_LEFT"><apiName>AT_LEFT</apiName><shortdesc>
	  指示滚动条在其滚动范围的左边。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条在其滚动范围的左边。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_RIGHT"><apiName>AT_RIGHT</apiName><shortdesc>
	  指示滚动条在其滚动范围的右边。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条在其滚动范围的右边。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_TOP"><apiName>AT_TOP</apiName><shortdesc>
	  指示滚动条在其滚动范围的顶部。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atTop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条在其滚动范围的顶部。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_DOWN"><apiName>LINE_DOWN</apiName><shortdesc>
	  指示滚动条向下移动一行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向下移动一行。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_LEFT"><apiName>LINE_LEFT</apiName><shortdesc>
	  指示滚动条向左移动一行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向左移动一行。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_RIGHT"><apiName>LINE_RIGHT</apiName><shortdesc>
	  指示滚动条向右移动一行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向右移动一行。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_UP"><apiName>LINE_UP</apiName><shortdesc>
	  指示滚动条向上移动一行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向上移动一行。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_DOWN"><apiName>PAGE_DOWN</apiName><shortdesc>
	  指示滚动条向下移动一页。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向下移动一页。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_LEFT"><apiName>PAGE_LEFT</apiName><shortdesc>
	  指示滚动条向左移动一页。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向左移动一页。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_RIGHT"><apiName>PAGE_RIGHT</apiName><shortdesc>
	  指示滚动条向右移动一页。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向右移动一页。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_UP"><apiName>PAGE_UP</apiName><shortdesc>
	  指示滚动条向上移动一页。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条向上移动一页。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_POSITION"><apiName>THUMB_POSITION</apiName><shortdesc>
	  指示滚动条缩略图停止移动。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPosition</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条缩略图停止移动。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_TRACK"><apiName>THUMB_TRACK</apiName><shortdesc>
	  指示滚动条缩略图正在移动。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbTrack</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示滚动条缩略图正在移动。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
  TreeEvent 类代表传递到与树中活动（如打开或关闭树分支时）相关联的事件的事件侦听器的事件对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  TreeEvent 类代表传递到与树中活动（如打开或关闭树分支时）相关联的事件的事件侦听器的事件对象。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Tree"><linktext>mx.controls.Tree</linktext></link></related-links><adobeApiEvent id="mx.events:TreeEvent:ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TreeEvent:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>应用此事件的 Tree 节点（项目）。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiData>null</apiData><apiDesc>单元格的项呈示器对象。
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>如果打开或关闭节点以响应用户操作，则指示输入操作的类型。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。通常由 Flex Tree 控件调用；但不在应用程序代码中使用。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TreeEvent:ITEM_CLOSE"><apiName>ITEM_CLOSE</apiName><shortdesc>
      TreeEvent.ITEM_CLOSE 事件类型常量指示树分支已关闭或折叠。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClose</apiData><apiType value="String"/></apiValueDef><apiDesc>
      TreeEvent.ITEM_CLOSE 事件类型常量指示树分支已关闭或折叠。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>关闭的节点的 ListItemRenderer</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>如果节点关闭以响应用户操作，则确定此操作为键盘操作还是鼠标操作。</entry></row><row><entry><codeph>item</codeph></entry><entry>关闭的 Tree 项目（节点）</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_CLOSE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPENING"><apiName>ITEM_OPENING</apiName><shortdesc>
      TreeEvent.ITEM_OPENING 事件类型常量在树打开或关闭前一刻分派。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpening</apiData><apiType value="String"/></apiValueDef><apiDesc>
      TreeEvent.ITEM_OPENING 事件类型常量在树打开或关闭前一刻分派。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>animate</codeph></entry><entry>是否为打开或关闭操作设计动画效果。</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。</entry></row><row><entry><codeph>dispatchEvent</codeph></entry><entry>打开或关闭动画完成后，是否分派 <codeph>ITEM_OPEN</codeph> 或 <codeph>ITEM_CLOSE</codeph> 事件。true</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>打开的项目（节点）的 ListItemRenderer</entry></row><row><entry><codeph>item</codeph></entry><entry>打开的 Tree 节点。</entry></row><row><entry><codeph>opening</codeph></entry><entry>如果项目处于打开状态，则为 true；处于关闭状态，则为 false。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>如果项目打开以响应用户操作，则确定此操作为键盘操作还是鼠标操作。</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPENING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPEN"><apiName>ITEM_OPEN</apiName><shortdesc>
      TreeEvent.ITEM_OPEN 事件类型常量指示树分支已打开或展开。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpen</apiData><apiType value="String"/></apiValueDef><apiDesc>
      TreeEvent.ITEM_OPEN 事件类型常量指示树分支已打开或展开。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>打开的项目（节点）的 ListItemRenderer</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>如果项目（节点）打开以响应用户操作，则确定此操作为键盘操作还是鼠标操作。</entry></row><row><entry><codeph>item</codeph></entry><entry>打开的 Tree 节点。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:animate"><apiName>animate</apiName><shortdesc>
      是否为打开或关闭操作设计动画效果；仅用于 ITEM_OPENING 类型事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      是否为打开或关闭操作设计动画效果；仅用于 ITEM_OPENING 类型事件。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
      打开或关闭动画完成后，是否分派事件（ITEM_OPEN 或 ITEM_CLOSE）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      打开或关闭动画完成后，是否分派事件（<codeph>ITEM_OPEN</codeph> 或 <codeph>ITEM_CLOSE</codeph>）。仅用于 ITEM_OPENING 类型事件。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      关闭或打开的节点的 ListItemRenderer。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiValueDef><apiDesc>
      关闭或打开的节点的 ListItemRenderer。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:item"><apiName>item</apiName><shortdesc>
      项目属性的存储。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      项目属性的存储。如果您使用 XML 数据填充 Tree，请通过以下形式访问节点的属性：<codeph>event.item。@<i>attribute_name</i></codeph>。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:opening"><apiName>opening</apiName><shortdesc>
      仅用于 ITEM_OPENING 类型事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      仅用于 <codeph>ITEM_OPENING</codeph> 类型事件。指示项目处于打开状态 (<codeph>true</codeph>) 还是关闭状态 (<codeph>false</codeph>)。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      触发此事件的低级 MouseEvent 或 KeyboardEvent，如果以编程方式触发此事件则为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      触发此事件的低级 MouseEvent 或 KeyboardEvent，如果以编程方式触发此事件则为 <codeph>null</codeph>。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
  代表特定于 ColorPicker 控件的事件，如用户将鼠标滑过或滑离样本面板中的样本时。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  代表特定于 ColorPicker 控件的事件，如用户将鼠标滑过或滑离样本面板中的样本时。
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ColorPickerEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ColorPickerEvent:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Color 的数据提供程序中的从零开始的索引，此索引对应滑过、滑离或者所选的颜色。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0xFFFFFFFF</apiData><apiDesc>滑过、滑离、选择或者输入的 RGB 颜色。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ColorPickerEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  ColorPickerEvent.CHANGE 常量定义用户从 ColorPicker 控件中选择颜色时分派的事件的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ColorPickerEvent.CHANGE</codeph> 常量定义用户从 ColorPicker 控件中选择颜色时分派的事件的 <codeph>type</codeph> 属性的值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>选择的 RGB 颜色。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Color 的数据提供程序中的从零开始的索引，此索引对应所选的颜色。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
	  ColorPickerEvent.ENTER 常量定义用户在颜色选择器框中键入后按 Enter 键时分派的事件的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ColorPickerEvent.ENTER</codeph> 常量定义用户在颜色选择器框中键入后按 Enter 键时分派的事件的 <codeph>type</codeph> 属性的值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>输入的 RGB 颜色。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>始终为 -1。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
 	  ColorPickerEvent.ITEM_ROLL_OUT 常量定义用户将鼠标滑离样本面板中的样本时分派的事件的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  <codeph>ColorPickerEvent.ITEM_ROLL_OUT</codeph> 常量定义用户将鼠标滑离样本面板中的样本时分派的事件的 <codeph>type</codeph> 属性的值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>滑过的 RGB 颜色。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Color 的数据提供程序中的从零开始的索引，此索引对应滑过的颜色。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
 	  ColorPickerEvent.ITEM_ROLL_OVER 常量定义用户将鼠标滑过样本面板中的样本时分派的事件的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  <codeph>ColorPickerEvent.ITEM_ROLL_OVER</codeph> 常量定义用户将鼠标滑过样本面板中的样本时分派的事件的 <codeph>type</codeph> 属性值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>用户滑离的 RGB 颜色。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Color 的数据提供程序中的从零开始的索引，此索引对应用户滑离的颜色。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:color"><apiName>color</apiName><shortdesc>
	  滑过、滑离、选择或者输入的 RGB 颜色。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
	  滑过、滑离、选择或者输入的 RGB 颜色。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:index"><apiName>index</apiName><shortdesc>
	  Color 的数据提供程序中的从零开始的索引，此索引对应滑过、滑离或者所选的颜色。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Color 的数据提供程序中的从零开始的索引，此索引对应滑过、滑离或者所选的颜色。如果事件类型为 <codeph>ColorPickerEvent.ENTER</codeph>，则默认值为 -1；在这种情况下不对其进行设置，因为用户可以输入与数据提供程序中任何颜色都不匹配的 RGB 字符串。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DataGridEventReason"><apiName>DataGridEventReason</apiName><shortdesc>
  DataGridEventReason 类定义 type 属性为 itemEditEnd 时，代表 DataGridEvent 对象的 reason 属性值的常量。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  DataGridEventReason 类定义 <codeph>type</codeph> 属性为 <codeph>itemEditEnd</codeph> 时，代表 DataGridEvent 对象的 <codeph>reason</codeph> 属性值的常量。
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:DataGridEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      指定用户取消了编辑，并且不希望保存已编辑的数据。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定用户取消了编辑，并且不希望保存已编辑的数据。即使从 <codeph>itemEditEnd</codeph> 事件的事件侦听器中调用 <codeph>preventDefault()</codeph> 方法，Flex 仍通过调用 <codeph>destroyItemEditor()</codeph> 编辑器关闭编辑器。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_COLUMN"><apiName>NEW_COLUMN</apiName><shortdesc>
      指定用户已将焦点移到同一行中的新列。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newColumn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定用户已将焦点移到同一行中的新列。在事件侦听器中，可以更改焦点，或者阻止更改焦点。例如，事件侦听器可以检查用户是否为当前编辑的项目输入了有效值。如果输入值无效，可以通过调用 <codeph>preventDefault()</codeph> 方法阻止用户移动到新的项目。在这种情况下，项目编辑器保持打开状态，用户继续编辑当前的项目。如果调用 <codeph>preventDefault()</codeph> 方法并调用 <codeph>destroyItemEditor()</codeph> 方法，则会阻止移动到新的项目，但是项目编辑器关闭。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      指定用户已将焦点移到新行。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定用户已将焦点移到新行。处理此原因的方式与处理 <codeph>NEW_COLUMN</codeph> 非常相似。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      指定 list 控件失去焦点、已滚动，或者由于某种原因处于不允许编辑的状态。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      指定 list 控件失去焦点、已滚动，或者由于某种原因处于不允许编辑的状态。即使从 <codeph>itemEditEnd</codeph> 事件的事件侦听器中调用 <codeph>preventDefault()</codeph> 方法，Flex 仍通过调用 <codeph>destroyItemEditor()</codeph> 编辑器关闭编辑器。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
  VideoEvent 类代表传递给由 VideoDisplay 控件分派的事件的事件侦听器的事件对象，并定义了 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  VideoEvent 类代表传递给由 VideoDisplay 控件分派的事件的事件侦听器的事件对象，并定义了 <codeph>VideoDisplay.state</codeph> 属性的值。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:VideoEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:REWIND_rewind"><apiName>rewind</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:REWIND</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:STATE_CHANGE_stateChange"><apiName>stateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:VideoEvent:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。
     
      </apiDesc></apiParam><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>事件发生时播放头的位置。    
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:VideoEvent:BUFFERING"><apiName>BUFFERING</apiName><shortdesc>
      调用 play() 或 load() 方法后 VideoDisplay.state 属性立即采用的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef><apiDesc>
      调用 <codeph>play()</codeph> 或 <codeph>load()</codeph> 方法后 <codeph>VideoDisplay.state</codeph> 属性立即采用的值。
     
      <p>这是可响应状态。在可响应状态，对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用将立即执行。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      VideoEvent.CLOSE 常量可为 close 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.CLOSE</codeph> 常量可为 <codeph>close</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      VideoEvent.COMPLETE 常量可为 complete 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.COMPLETE</codeph> 常量可为 <codeph>complete</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CONNECTION_ERROR"><apiName>CONNECTION_ERROR</apiName><shortdesc>
      VideoDisplay 控件无法加载视频流时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connectionError</apiData><apiType value="String"/></apiValueDef><apiDesc>
      VideoDisplay 控件无法加载视频流时 <codeph>VideoDisplay.state</codeph> 属性的值。无法连接服务器、找不到视频流或存在其他原因时，会出现这种状态。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:DISCONNECTED"><apiName>DISCONNECTED</apiName><shortdesc>
      视频流超时或空闲时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnected</apiData><apiType value="String"/></apiValueDef><apiDesc>
      视频流超时或空闲时 <codeph>VideoDisplay.state</codeph> 属性的值。
     
      <p>这是可响应状态。在可响应状态，对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用将立即执行。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:EXEC_QUEUED_CMD"><apiName>EXEC_QUEUED_CMD</apiName><shortdesc>
      执行排队的命令时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>execQueuedCmd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      执行队列中的命令时 <codeph>VideoDisplay.state</codeph> 属性的值。永远不会为此状态分派 <codeph>stateChange</codeph> 事件；该事件仅限内部使用。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      调用 play() 或 load() 方法后 VideoDisplay.state 属性立即采用的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      调用 <codeph>play()</codeph> 或 <codeph>load()</codeph> 方法后 <codeph>VideoDisplay.state</codeph> 属性立即采用的值。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PAUSED"><apiName>PAUSED</apiName><shortdesc>
      FLV 文件已加载但暂停播放时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
      FLV 文件已加载但暂停播放时 <codeph>VideoDisplay.state</codeph> 属性的值。调用 <codeph>pause()</codeph> 或 <codeph>load()</codeph> 方法时进入此状态。
     
      <p>这是可响应状态。在可响应状态，对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用将立即执行。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYHEAD_UPDATE"><apiName>PLAYHEAD_UPDATE</apiName><shortdesc>
      VideoEvent.PLAYHEAD_UPDATE 常量可为 playheadUpdate 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playheadUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph> 常量可为 <codeph>playheadUpdate</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYING"><apiName>PLAYING</apiName><shortdesc>
      FLV 文件已加载并且正在播放时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      FLV 文件已加载并且正在播放时 <codeph>VideoDisplay.state</codeph> 属性的值。调用 <codeph>play()</codeph> 方法时进入此状态。
     
      <p>这是可响应状态。在可响应状态，对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用将立即执行。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:READY"><apiName>READY</apiName><shortdesc>
      VideoEvent.READY 常量可为 ready 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.READY</codeph> 常量可为 <codeph>ready</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:RESIZING"><apiName>RESIZING</apiName><shortdesc>
      调整 VideoDisplay 控件的大小时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resizing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      调整 VideoDisplay 控件的大小时 <codeph>VideoDisplay.state</codeph> 属性的值。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWINDING"><apiName>REWINDING</apiName><shortdesc>
      停止播放时触发自动后退期间 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewinding</apiData><apiType value="String"/></apiValueDef><apiDesc>
      停止播放时触发自动后退期间 <codeph>VideoDisplay.state</codeph> 属性的值。后退完成后此状态更改为 <codeph>STOPPED</codeph>。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWIND"><apiName>REWIND</apiName><shortdesc>
      VideoEvent.REWIND 常量可为 rewind 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewind</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.REWIND</codeph> 常量可为 <codeph>rewind</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:SEEKING"><apiName>SEEKING</apiName><shortdesc>
      由于设置 VideoDisplay.playHeadTime 属性而进行搜索时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeking</apiData><apiType value="String"/></apiValueDef><apiDesc>
      由于设置 <codeph>VideoDisplay.playHeadTime</codeph> 属性而进行搜索时 <codeph>VideoDisplay.state</codeph> 属性的值。
     
      <p>这是不可响应状态。如果控件为不可响应，将对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用进行排序，然后当控件更改为可响应状态时执行这些方法。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STATE_CHANGE"><apiName>STATE_CHANGE</apiName><shortdesc>
      VideoEvent.STATE_CHANGE 常量可为 stateChange 事件定义事件对象的 type 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>VideoEvent.STATE_CHANGE</codeph> 常量可为 <codeph>stateChange</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>事件发生时播放头的位置。</entry></row><row><entry><codeph>state</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STOPPED"><apiName>STOPPED</apiName><shortdesc>
      FLV 文件已加载但播放已停止时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef><apiDesc>
      FLV 文件已加载但播放已停止时 <codeph>VideoDisplay.state</codeph> 属性的值。当调用 <codeph>stop()</codeph> 方法或播放头到达视频流结尾时，进入此状态。
     
      <p>这是可响应状态。在可响应状态，对 <codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> 和 <codeph>pause()</codeph> 方法的调用将立即执行。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:playheadTime"><apiName>playheadTime</apiName><shortdesc>
      事件发生时 VideoDisplay 控件播放头的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      事件发生时 VideoDisplay 控件播放头的位置。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:state"><apiName>state</apiName><shortdesc>
      事件发生时 VideoDisplay.state 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      事件发生时 <codeph>VideoDisplay.state</codeph> 属性的值。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/state"><linktext>mx.controls.VideoDisplay.state</linktext></link></related-links></apiValue><apiValue id="mx.events:VideoEvent:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
      事件发生时 VideoDisplay.stateResponsive 属性的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      事件发生时 <codeph>VideoDisplay.stateResponsive</codeph> 属性的值。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/stateResponsive"><linktext>mx.controls.VideoDisplay.stateResponsive</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:ListEvent"><apiName>ListEvent</apiName><shortdesc>
   ListEvent 类代表与基于列表的控件（如 List、Tree、Menu 和 DataGrid）中的项目相关联的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   ListEvent 类代表与基于列表的控件（如 List、Tree、Menu 和 DataGrid）中的项目相关联的事件。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListBase"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><adobeApiEvent id="mx.events:ListEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ListEvent:ListEvent"><apiName>ListEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>包含呈示器的列的从零开始的索引。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>包含呈示器的行的从零开始的索引；对于正在编辑的事件，则是将要编辑的数据提供程序中项目的索引
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>发生 <codeph>itemEditEnd</codeph> 事件的原因。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiData>null</apiData><apiDesc>数据提供程序项目的项呈示器。
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。通常由 Flex 控件调用且不用于应用程序代码。
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ListEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      ListEvent.CHANGE 常量可为 change 事件定义 ListEvent 对象的 type 属性的值，指示由于用户交互所选内容已发生更改。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.CHANGE 常量可为 <codeph>change</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示由于用户交互所选内容已发生更改。
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>单击的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      ListEvent.ITEM_CLICK 常量可为 itemClick 事件定义 ListEvent 对象的 type 属性的值，指示用户在控件中某个可视项目上单击了鼠标。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_CLICK 常量可为 <codeph>itemClick</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示用户在控件中某个可视项目上单击了鼠标。
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>单击的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_DOUBLE_CLICK"><apiName>ITEM_DOUBLE_CLICK</apiName><shortdesc>
      ListEvent.ITEM_DOUBLE_CLICK 常量可为 itemDoubleClick 事件定义 ListEvent 对象的 type 属性的值，指示用户在控件中某个可视项目上双击了鼠标。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_DOUBLE_CLICK 常量可为 <codeph>itemDoubleClick</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示用户在控件中某个可视项目上双击了鼠标。
     
      <p>若要接收 itemDoubleClick 事件，必须将组件的 <codeph>doubleClickEnabled</codeph> 属性设置为 <codeph>true</codeph>。</p>
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>双击的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      ListEvent.ITEM_EDIT_BEGINNING 常量可为 itemEditBeginning 事件定义 ListEvent 对象的 type 属性的值，指示用户已准备好编辑某个项目，例如，通过在该项目上释放鼠标按键。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_EDIT_BEGINNING 常量可为 <codeph>itemEditBeginning</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示用已户准备编辑某个项目，例如，通过在该项目上释放鼠标按键。 
     
      <p>此事件的默认侦听器将 <codeph>List.editedItemPosition</codeph> 属性设置为具有焦点的项目，这可启动项目编辑会话。</p>
     
      <p>您通常可以为此事件编写自己的事件侦听器，以禁止编辑特定项目。在为此事件自己编写的事件侦听器内调用 <codeph>preventDefault()</codeph> 方法可以阻止默认侦听器执行。</p>
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>要编辑的项目的项呈示器。如果此事件由键盘生成，则此属性为 null，因为要编辑的项目可能未在屏幕范围内显示。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      ListEvent.ITEM_EDIT_BEGIN 常量可为 itemEditBegin 事件定义事件对象的 type 属性的值，指示准备编辑的项目。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_EDIT_BEGIN 常量可为 <codeph>itemEditBegin</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性的值，指示准备编辑的项目。 
     
      <p>此事件的默认侦听器执行下列操作：</p>
     
      <ul>
        <li>通过调用 <codeph>createItemEditor()</codeph> 方法来创建项目编辑器对象。</li>
        <li>将 <codeph>data</codeph> 属性从项目复制到编辑器。默认情况下，项目编辑器对象是 TextInput 控件的实例。您可以使用 list 控件的 <codeph>itemEditor</codeph> 属性指定自定义项目编辑器类。</li>
     
        <li>设置 list 控件的 <codeph>itemEditorInstance</codeph> 属性，以引用项目编辑器实例。</li>
      </ul>
     
      <p>您可以为此事件编写事件侦听器以修改传递到项目编辑器的数据。例如，您可以修改项目编辑器使用的数据、数据格式或其他信息。</p>
     
      <p>您还可以创建事件侦听器以指定用于编辑项目的项目编辑器。例如，您可能有两个不同的项目编辑器。在事件侦听器中，您可以通过执行下列操作检查要编辑的数据或其他信息，并打开相应的项目编辑器：</p>
     
      <ol>
         <li>调用 <codeph>preventDefault()</codeph> 以阻止 Flex 在默认事件侦听器中调用 <codeph>createItemEditor()</codeph> 方法。</li>
         <li>将 <codeph>itemEditor</codeph> 属性设置为相应编辑器。</li>
         <li>调用 <codeph>createItemEditor()</codeph> 方法。</li>
      </ol>
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      ListEvent.ITEM_EDIT_END 常量可为 itemEditEnd 事件定义 ListEvent 对象的 type 属性的值，指示编辑会话结束。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_EDIT_END 常量可为 <codeph>itemEditEnd</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性值，指示编辑会话结束。 
     
      <p>列表组件具有针对此事件的默认处理函数，此程序将数据从项目编辑器复制到 list 控件的数据提供程序。默认事件侦听器执行下列操作：</p>
     
      <ul>
        <li>使用 list 控件的 <codeph>editorDataField</codeph> 属性来确定包含新数据的项目编辑器的属性，并使用这些新数据更新数据提供程序项目。因为默认项目编辑器是 TextInput 控件，所以 <codeph>editorDataField</codeph> 属性的默认值为 <codeph>"text"</codeph>，以指定 TextInput 的 <codeph>text</codeph> 属性包含新项目数据。</li>
     
        <li>调用 <codeph>destroyItemEditor()</codeph> 方法以关闭项目编辑器。</li>
      </ul>
     
      <p>通常，您可以为此事件编写事件侦听器，以执行下列操作：</p>
      <ul>
        <li>在事件侦听器中，您可以修改编辑器为列表组件返回的数据。例如，您可以在将数据返回到 list 控件之前重新设置其格式。默认情况下，项目编辑器只可以返回一个值。如果希望返回多个值，必须为 <codeph>itemEditEnd</codeph> 事件编写事件侦听器。</li> 
     
        <li>在事件侦听器中，您可以检查项目编辑器中输入的数据。如果数据不正确，可以调用 <codeph>preventDefault()</codeph> 方法阻止 Flex 将新数据传递回 list 控件和关闭编辑器。 </li>
      </ul>
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>已编辑的项目的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>定义事件原因的常量。该值必须是 <codeph>ListEventReson</codeph> 类的成员。</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      ListEvent.ITEM_FOCUS_IN 常量可为 itemFocusIn 事件定义 ListEvent 对象的 type 属性的值，指示项目已获得焦点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_FOCUS_IN 常量可为 <codeph>itemFocusIn</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示项目已获得焦点。
     
      <p>事件对象的属性有下列值：</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>所编辑的项目的项目编辑器实例。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      ListEvent.ITEM_FOCUS_OUT 常量可为 itemFocusOut 事件定义 ListEvent 对象的 type 属性的值，指示项目已失去焦点。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_FOCUS_OUT 常量可为 <codeph>itemFocusOut</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示项目已失去焦点。
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>正在编辑的项目的项目编辑器实例。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      ListEvent.ITEM_ROLL_OUT 常量可为 itemRollOut 事件定义 ListEvent 对象的 type 属性的值，指示用户执行了将鼠标指针从控件中某个可视项目上移开的操作。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_ROLL_OUT 常量可为 <codeph>itemRollOut</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示用户执行了将鼠标指针从控件中某个可视项目上移开的操作。
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>被移开的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      ListEvent.ITEM_ROLL_OVER 常量可为 itemRollOver 事件定义 ListEvent 对象的 type 属性的值，指示用户执行了将鼠标指针滑过控件中某个可视项目的操作。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      ListEvent.ITEM_ROLL_OVER 常量可为 <codeph>itemRollOver</codeph> 事件定义 ListEvent 对象的 <codeph>type</codeph> 属性的值，指示用户执行了将鼠标指针滑过控件中某个可视项目的操作。
     
      <p>事件对象的属性有下列值：</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> 与事件相关联的列的从零开始的索引。</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>滑过的项呈示器。</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>与事件相关联的项目的从零开始的索引。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>类型</codeph></entry><entry>ListEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      包含在其中发生该事件的项呈示器的列的从零开始的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      包含在其中发生该事件的项呈示器的列的从零开始的索引。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      在其中发生该事件的项呈示器。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.listClasses:IListItemRenderer"/></apiValueDef><apiDesc>
      在其中发生该事件的项呈示器。您可以使用此属性访问数据提供程序。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:reason"><apiName>reason</apiName><shortdesc>
      分派 itemEditEnd 事件的原因。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      分派 <codeph>itemEditEnd</codeph> 事件的原因。仅对类型为 <codeph>ITEM_EDIT_END</codeph> 的事件有效。这些可能的值是在 ListEventReason 类中定义的。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>ListEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:ListEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      在包含项呈示器（在其中发生了此事件）的行的从零开始的索引中；对于编辑事件，则为在数据提供程序中正在编辑的项目的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      在包含项呈示器（在其中发生了此事件）的行的从零开始的索引中；对于编辑事件，则为在数据提供程序中正在编辑的项目的索引。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
  代表特定于 NumericStepper 控件的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  代表特定于 NumericStepper 控件的事件。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#NumericStepper"><linktext>mx.controls.NumericStepper</linktext></link></related-links><adobeApiEvent id="mx.events:NumericStepperEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:NumericStepperEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:NumericStepperEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:NumericStepperEvent:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>分派事件时，NumericStepper 控件的值。
         
          </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>如果值根据用户操作发生变化，则包含一个指示输入操作的类型的值，即 <codeph>InteractionInputType.MOUSE</codeph> 或 <codeph>InteractionInputType.KEYBOARD</codeph>。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:NumericStepperEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  NumericStepperEvent.CHANGE 常量可为 change 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>NumericStepperEvent.CHANGE</codeph> 常量可为 <codeph>change</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>value</codeph></entry><entry>分派事件时，NumericStepper 控件的值。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  如果此值更改以响应用户操作，则此属性包含指示输入操作类型的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  如果此值更改以响应用户操作，则此属性包含指示输入操作类型的值。该值为 <codeph>InteractionInputType.MOUSE</codeph> 或 <codeph>InteractionInputType.KEYBOARD</codeph>。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:value"><apiName>value</apiName><shortdesc>
	 分派事件时，NumericStepper 控件的值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	 分派事件时，NumericStepper 控件的值。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
  MenuEvent 类代表与 Menu、MenuBar 和 PopUpMenuButton 等控件中的菜单活动相关联的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:ListEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  MenuEvent 类代表与 Menu、MenuBar 和 PopUpMenuButton 等控件中的菜单活动相关联的事件。 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link></related-links><adobeApiEvent id="mx.events:MenuEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_HIDE_menuHide"><apiName>menuHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_SHOW_menuShow"><apiName>menuShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MenuEvent:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
     
      </apiDesc></apiParam><apiParam><apiItemName>menuBar</apiItemName><apiOperationClassifier>mx.controls:MenuBar</apiOperationClassifier><apiData>null</apiData><apiDesc>作为选定的 Menu 控件的父项的 MenuBar 实例；当目标 Menu 控件不是 MenuBar 控件的子项时，值为 null。
     
      </apiDesc></apiParam><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiData>null</apiData><apiDesc>与此事件相关联的特定 Menu 实例，例如隐藏或打开的菜单或子菜单。如果 MenuBar 项目分派此事件，则此属性为 null。 
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>关联菜单项的 dataProvider 中的项目。
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiType value="mx.controls.listClasses:IListItemRenderer"/><apiData>null</apiData><apiDesc>相关联菜单项的 ListItemRenderer。
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>关联菜单项的标签文本。
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>关联菜单项在菜单中的索引。 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。通常由 Menu 对象调用。 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MenuEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      MenuEvent.CHANGE 事件类型常量指示由于用户交互，所选内容已更改。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.CHANGE 事件类型常量指示由于用户交互，所选内容已更改。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>选定菜单项在菜单中的索引。</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>dataProvider 中选定的项目。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>选定菜单项的项呈示器。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>选定菜单项的标签文本。</entry></row><row><entry><codeph>menu</codeph></entry>
             <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      MenuEvent.ITEM_CLICK 事件类型常量指示用户已选择菜单项。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.ITEM_CLICK 事件类型常量指示用户已选择菜单项。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>选定菜单项在菜单中的索引。</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>dataProvider 中选定的项目。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>选定菜单项的 ListItemRenderer。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>选定菜单项的标签文本。</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      MenuEvent.ITEM_ROLL_OUT 类型常量指示鼠标指针滑离菜单项。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.ITEM_ROLL_OUT 类型常量指示鼠标指针滑离菜单项。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>鼠标指针滑离的菜单项的菜单中的索引。</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>对应于鼠标指针滑离的菜单项的 dataProvider 中的项目。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>鼠标指针滑离的菜单项的 ListItemRenderer。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>鼠标指针滑离的菜单项的标签文本。</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      MenuEvent.ITEM_ROLL_OVER 类型常量指示鼠标指针悬停在菜单项上。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.ITEM_ROLL_OVER 类型常量指示鼠标指针悬停在菜单项上。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>鼠标指针在其上悬停的菜单项的菜单中的索引。</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>与鼠标指针悬停在其上的菜单项关联的 dataProvider 中的项目。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>鼠标指针在其上悬停的菜单项的 ListItemRenderer。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>鼠标指针在其上悬停的菜单项的标签文本。</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_HIDE"><apiName>MENU_HIDE</apiName><shortdesc>
      MenuEvent.MENU_HIDE 事件类型常量指示菜单或子菜单已关闭。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.MENU_HIDE 事件类型常量指示菜单或子菜单已关闭。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1。对于这种类型的事件未设置此属性。 </entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>null。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_HIDE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_SHOW"><apiName>MENU_SHOW</apiName><shortdesc>
      MenuEvent.MENU_SHOW 类型常量指示鼠标指针已滑离打开的菜单或子菜单。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      MenuEvent.MENU_SHOW 类型常量指示鼠标指针已滑离打开的菜单或子菜单。
     
      <p>此事件类型的事件对象属性包含以下值。并非所有属性对于各种事件都有意义。有关详细信息，请参阅详细的属性说明。</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null。对于这种类型的事件未设置此属性。</entry></row><row><entry><codeph>label</codeph></entry>
             <entry><codeph>null。不为这种类型的事件设置此属性。</codeph></entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>与此事件关联的特定 Menu 实例；如果 MenuBar 项目正在分派此事件时，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>作为 Menu 控件父项的 MenuBar 实例；如果 Menu 控件不是 MenuBar 控件的子项，则为 <codeph>null</codeph>。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_SHOW</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:index"><apiName>index</apiName><shortdesc>
      相关联菜单项在其父菜单或子菜单中的索引。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      相关联菜单项在其父菜单或子菜单中的索引。对于 menuShow 和 menuHide 事件，此值为 -1。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:item"><apiName>item</apiName><shortdesc>
      dataProvider 中的特定项目。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      dataProvider 中的特定项目。对于 menuShow 和 menuHide 事件，此值为 null。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:label"><apiName>label</apiName><shortdesc>
      关联菜单项的标签文本。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      关联菜单项的标签文本。对于 menuShow 和 menuHide 事件，此值为 null。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menuBar"><apiName>menuBar</apiName><shortdesc>
      作为选定的 Menu 控件的父项的 MenuBar 实例；当目标 Menu 控件不是 MenuBar 控件的子项时，值为 null。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:MenuBar</apiValueClassifier></apiValueDef><apiDesc>
      作为选定的 Menu 控件的父项的 MenuBar 实例；当目标 Menu 控件不是 MenuBar 控件的子项时，值为 null。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menu"><apiName>menu</apiName><shortdesc>
      与此事件相关联的特定 Menu 实例，例如隐藏或打开的菜单或子菜单。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      与此事件相关联的特定 Menu 实例，例如隐藏或打开的菜单或子菜单。如果 MenuBar 项目正在分派此事件，则此属性为 null。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEventDetail"><apiName>DateChooserEventDetail</apiName><shortdesc>
  定义 DateChooserEvent 对象的 detail 属性值的常数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  定义 DateChooserEvent 对象的 <codeph>detail</codeph> 属性值的常量。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#DateChooserEvent"><linktext>mx.events.DateChooserEvent</linktext></link></related-links><apiValue id="mx.events:DateChooserEventDetail:NEXT_MONTH"><apiName>NEXT_MONTH</apiName><shortdesc>
	  指示用户已将日历滚动到下个月。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示用户已将日历滚动到下个月。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:NEXT_YEAR"><apiName>NEXT_YEAR</apiName><shortdesc>
	  指示用户已将日历滚动到下一年。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示用户已将日历滚动到下一年。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_MONTH"><apiName>PREVIOUS_MONTH</apiName><shortdesc>
	  指示用户已将日历滚动到上个月。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示用户已将日历滚动到上个月。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_YEAR"><apiName>PREVIOUS_YEAR</apiName><shortdesc>
	  指示用户已将日历滚动到上一年。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指示用户已将日历滚动到上一年。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
  CalendarLayoutChangeEvent 类代表传递到 DateChooser 和 DateField 控件的 change 事件的事件侦听器的事件对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  CalendarLayoutChangeEvent 类代表传递到 DateChooser 和 DateField 控件的 <codeph>change</codeph> 事件的事件侦听器的事件对象。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.events:CalendarLayoutChangeEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CalendarLayoutChangeEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CalendarLayoutChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CalendarLayoutChangeEvent:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示触发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newDate</apiItemName><apiType value="Date"/><apiData>null</apiData><apiDesc>在控件中选择的日期。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>触发此 change 事件的事件；通常是 <codeph>change</codeph> 事件。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CalendarLayoutChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  CalendarLayoutChangeEvent.CHANGE 常量可为 change 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>CalendarLayoutChangeEvent.CHANGE</codeph> 常量可为 <codeph>change</codeph> 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
	  <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>newDate</codeph></entry><entry>在控件中选择的日期。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>触发此 change 事件的事件；通常是 <codeph>change</codeph> 事件。</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:newDate"><apiName>newDate</apiName><shortdesc>
	  控件的所选日期。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Date"/></apiValueDef><apiDesc>
	  控件的所选日期。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  触发日期更改的事件；通常是 change 事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  触发日期更改的事件；通常是 <codeph>change</codeph> 事件。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDirection"><apiName>ScrollEventDirection</apiName><shortdesc>
  表示 ScrollEvent 的 direction 属性的值的常量。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  表示 ScrollEvent 的 <codeph>direction</codeph> 属性的值的常量。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  用户水平滚动。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  用户水平滚动。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  用户垂直滚动。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  用户垂直滚动。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEventClickTarget"><apiName>SliderEventClickTarget</apiName><shortdesc>
  SliderEventClickTarget 类定义代表 SliderEvent 类的 clickTarget 属性的值的常数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  SliderEventClickTarget 类定义代表 SliderEvent 类的 <codeph>clickTarget</codeph> 属性的值的常量。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SliderEvent"><linktext>mx.events.SliderEvent</linktext></link></related-links><apiValue id="mx.events:SliderEventClickTarget:THUMB"><apiName>THUMB</apiName><shortdesc>
	  指定已单击 Slider 的滑块。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumb</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指定已单击 Slider 的滑块。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEventClickTarget:TRACK"><apiName>TRACK</apiName><shortdesc>
	  指定已单击 Slider 的轨道。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>track</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  指定已单击 Slider 的轨道。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
  代表由 ScrollBar 类分派的事件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  代表由 ScrollBar 类分派的事件。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.core.UIComponent.xml"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ScrollEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ScrollEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:ScrollEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ScrollEvent:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>事件类型；指示引发事件的动作。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定该事件是否可以在显示列表层次结构得到冒泡处理。
         
          </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>指定是否可以防止与事件相关联的行为。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>提供有关滚动活动类型的具体信息。表示可能的值的常量在 ScrollEventDetail 类中提供。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>position</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>新的滚动位置。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>滚动方向，<codeph>ScrollEventDirection.HORIZONTAL</codeph> 或 <codeph>ScrollEventDirection.VERTICAL</codeph>。
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>滚动位置的更改（以像素为单位）。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ScrollEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  ScrollEvent.SCROLL 常量可为 scroll 事件定义事件对象的 type 属性值。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>ScrollEvent.SCROLL</codeph> 常量可为 scroll 事件定义事件对象的 <codeph>type</codeph> 属性值。
	 
     <p>事件对象的属性有下列值：</p>
	  <adobetable class="innertable">
	     
         
         
         
 	       
	       
 	       
         
	  <tgroup cols="2"><thead><row><entry>属性</entry><entry>值</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>用于定义处理该事件的事件侦听器的 Object。例如，如果您使用 <codeph>myButton.addEventListener()</codeph> 注册某个事件侦听器，则 myButton 为 <codeph>currentTarget</codeph> 的值。 </entry></row><row><entry><codeph>delta</codeph></entry><entry>包含滚动位置的更改（以像素为单位）。正值指示向下或向右滚动。负值指示向上或向左滚动。</entry></row><row><entry><codeph>direction</codeph></entry><entry>包含滚动方向，<codeph>ScrollEventDirection.HORIZONTAL</codeph> 或 <codeph>ScrollEventDirection.VERTICAL</codeph>。</entry></row><row><entry><codeph>position</codeph></entry><entry>包含新的滚动位置。</entry></row><row><entry><codeph>target</codeph></entry><entry>分派该事件的 Object；它不一定是侦听该事件的 Object。使用 <codeph>currentTarget</codeph> 属性始终可以访问侦听事件的 Object。</entry></row></tbody></tgroup></adobetable>
         
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:delta"><apiName>delta</apiName><shortdesc>
	  滚动导致的滚动位置值的更改。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  滚动导致的滚动位置值的更改。该值以像素为单位。正值指示向下或向右滚动。负值指示向上或向左滚动。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:detail"><apiName>detail</apiName><shortdesc>
	  提供滚动活动的细节。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  提供滚动活动的细节。表示可能的值的常量在 ScrollEventDetail 类中提供。
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDetail"><linktext>mx.events.ScrollEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:direction"><apiName>direction</apiName><shortdesc>
	  运动方向。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  运动方向。可能的值为 <codeph>ScrollEventDirection.VERTICAL</codeph> 或 <codeph>ScrollEventDirection.HORIZONTAL</codeph>。
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDirection"><linktext>mx.events.ScrollEventDirection</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:position"><apiName>position</apiName><shortdesc>
	  新的滚动位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  新的滚动位置。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>