<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.charts.effects.effectClasses"><apiName>mx.charts.effects.effectClasses</apiName><apiDetail/><apiClassifier id="mx.charts.effects.effectClasses:SeriesEffectInstance"><apiName>SeriesEffectInstance</apiName><shortdesc>
  SeriesEffectInstance 类用于实现图表系列效果的基本实例类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.effects.effectClasses:TweenEffectInstance</apiBaseClassifier></apiClassifierDef><apiDesc>
  SeriesEffectInstance 类用于实现图表系列效果的基本实例类。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.effects.xml#SeriesEffect"><linktext>mx.charts.effects.SeriesEffect</linktext></link></related-links><apiConstructor id="mx.charts.effects.effectClasses:SeriesEffectInstance:SeriesEffectInstance"><apiName>SeriesEffectInstance</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>效果的目标。
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  构造函数。
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.effects.effectClasses:SeriesEffectInstance:protected:beginTween"><apiName>beginTween</apiName><shortdesc>
	  初始化补间计算，并建立项目数与 elementCount 属性相等的 interpolationValues Array。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elementCount</apiItemName><apiType value="int"/><apiDesc>需要生成 interpolation 值的元素数。
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  初始化补间计算，并建立项目数与 <codeph>elementCount</codeph> 属性相等的 <codeph>interpolationValues</codeph> Array。派生的类应在其 <codeph>play()</codeph> 方法中调用此函数。
	  </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:elementOffset"><apiName>elementOffset</apiName><shortdesc>
	  指定 Flex 延迟效果开始作用于系列中各元素的时间量（以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>20</apiData><apiType value="Number"/></apiValueDef><apiDesc>
	  指定 Flex 延迟效果开始作用于系列中各元素的时间量（以毫秒为单位）。
	 
	  <p>将 <codeph>elementOffset</codeph> 设置为 <codeph>0</codeph> 可同时作用于系列中的所有元素。效果作用于这些元素的开始时间和结束时间相同。</p>
	 
	  <p>将 <codeph>elementOffset</codeph> 设置为正整数（如 <codeph>30</codeph>）可按该时间量将该效果交错作用于各个元素。例如，对于滑动效果，第一个元素立即滑动，下一个元素在 30 毫秒之后开始滑动，依此类推。每个元素执行效果的时间量都是相同的，但效果的整体持续时间将会延长。</p>
	 
	  <p>将 <codeph>elementOffset</codeph> 设置为负值可使效果从最后一个元素开始起作用，并在列表中逆向移动。</p>
	 
	  <p>默认值为 <codeph>20</codeph>。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:protected:interpolationValues"><apiName>interpolationValues</apiName><shortdesc>
	  受此效果管理的各个图表项目的当前位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
	  受此效果管理的各个图表项目的当前位置。这是一个介于 0 和 1 之间的值的数组，指示此效果应将系列中各个项目显示到该数组的起始值和结束值之间的一个什么程度。这些值是根据持续时间、元素数目、元素偏移量、最小元素持续时间以及缓动函数计算的。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:minimumElementDuration"><apiName>minimumElementDuration</apiName><shortdesc>
	  指定单个元素完成效果所需的时间量（以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
	  指定单个元素完成效果所需的时间量（以毫秒为单位）。
	 
	  <p>系列中数据点数可变的图表仅通过 <codeph>duration</codeph> 属性可能无法创建平滑的效果。例如，如果系列中包含两个元素，则对于将 <codeph>duration</codeph> 设置为 <codeph>1000</codeph>，以及将 <codeph>elementOffset</codeph> 设置为 <codeph>100</codeph> 的效果，每个元素需要 900 毫秒来完成此效果。这是因为每个效果的起始点都偏移了 100，并且都要在 1000 毫秒内完成。</p>
	 
	  <p>如果系列中包含四个元素，则每个元素需要 700 毫秒来完成此效果（最后一个效果将在第一个效果完成 300 毫秒后启动，并且必须在 1000 毫秒内完成）。如果包含 10 个元素，则每个元素只有 100 毫秒的时间</p>
	  来完成效果。
	 
	  <p><codeph>minimumElementDuration</codeph> 值设置了每个元素的最短持续时间。无论系列中包含多少元素以及 <codeph>duration</codeph> 属性的值如何设置，系列中任何元素执行此效果的时间量（以毫秒为单位）都不能少于此值。因此，如果指定了 <codeph>duration</codeph>、<codeph>offset</codeph> 和 <codeph>minimumElementDuration</codeph> 中的任意两个属性，则执行效果所需的时间就可能长于指定的 <codeph>duration</codeph>。</p>
	  
	  <p>默认值为 <codeph>0</codeph>。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:offset"><apiName>offset</apiName><shortdesc>
	  指定 Flex 延迟效果的时间量（以毫秒为单位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
	  指定 Flex 延迟效果的时间量（以毫秒为单位）。
	 
	  <p>使用此属性在多个系列上交错执行多个效果。</p>
	 
	  <p>默认值为 <codeph>0</codeph>。</p>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:protected:targetSeries"><apiName>targetSeries</apiName><shortdesc>
	  此实例的目标系列。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.charts.chartClasses:Series</apiValueClassifier></apiValueDef><apiDesc>
	  此实例的目标系列。  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesEffectInstance:type"><apiName>type</apiName><shortdesc>
	  此效果适用的过渡类型。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>show</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  此效果适用的过渡类型。根据将要应用于图表过渡过程的显示阶段还是隐藏阶段，某些系列效果定义了不同的行为。例如 SeriesSlide 效果，在将类型设置为 <codeph>hide</codeph> 时，该效果将元素从当前位置滑离屏幕；在将类型设置为 <codeph>show</codeph> 时，该效果将元素从当前位置滑向屏幕。此属性由图表根据将效果分配给 ShowDataEffect 还是 HideDataEffect 样式来自动设置。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.effects.effectClasses:SeriesZoomInstance"><apiName>SeriesZoomInstance</apiName><shortdesc>
  SeriesZoomInstance 类用于实现 SeriesZoom 效果的实例类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.effects.effectClasses:SeriesEffectInstance</apiBaseClassifier></apiClassifierDef><apiDesc>
  SeriesZoomInstance 类用于实现 SeriesZoom 效果的实例类。Flex 在播放 SeriesZoom 效果时将创建此类的实例；您无需自己创建。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.effects.xml#SeriesZoom"><linktext>mx.charts.effects.SeriesZoom</linktext></link></related-links><apiConstructor id="mx.charts.effects.effectClasses:SeriesZoomInstance:SeriesZoomInstance"><apiName>SeriesZoomInstance</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>效果的目标。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.effects.effectClasses:SeriesZoomInstance:horizontalFocus"><apiName>horizontalFocus</apiName><shortdesc>
      定义缩放焦点的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      定义缩放焦点的位置。
     
      <p><codeph>horizontalFocus</codeph> 的有效值为 <codeph>"left"</codeph>、<codeph>"center"</codeph>、<codeph>"right"</codeph> 和 <codeph>null</codeph>。</p>
      默认值为 <codeph>"center"</codeph>。
     
      <p>您可以通过组合 <codeph>horizontalFocus</codeph> 和 <codeph>verticalFocus</codeph> 来定义数据系列的缩放焦点位置。例如，将 <codeph>horizontalFocus</codeph> 设置为 <codeph>"left"</codeph>，并将 <codeph>verticalFocus</codeph> 设置为 <codeph>"top"</codeph>，即可在元素或图表（取决于 <codeph>relativeTo</codeph> 属性的设置）的左上角缩放系列数据。</p>
     
      <p>如果仅指定了上述任一属性，则焦点将为一条水平线或垂直线，而不是一个点。例如，如果将 <codeph>horizontalFocus</codeph> 设置为 <codeph>"left"</codeph>，但将 <codeph>verticalFocus</codeph> 设置为 <codeph>null</codeph>，则将沿边框左边缘的垂直线缩放元素。如果将 <codeph>verticalFocus</codeph> 设置为 <codeph>"center"</codeph>，将沿图表边框中部的水平线缩放图表元素。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesZoomInstance:relativeTo"><apiName>relativeTo</apiName><shortdesc>
      控制 Flex 用于计算缩放焦点的边框。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>series</apiData><apiType value="String"/></apiValueDef><apiDesc>
      控制 Flex 用于计算缩放焦点的边框。
     
      <p><codeph>relativeTo</codeph> 的有效值为 <codeph>"series"</codeph> 和 <codeph>"chart"</codeph>。默认值为 <codeph>"series"</codeph>。</p>
     
      <p>如果设置为 <codeph>"series"</codeph>，则相对于元素本身缩放每个元素。例如，ColumnChart 的每列从该列的左上角或中心等位置进行缩放。</p>
     
      <p>如果设置为 <codeph>"chart"</codeph>，则相对于图表区域缩放每个元素。例如，从轴的左上角或中心等位置缩放每一列。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.effects.effectClasses:SeriesZoomInstance:verticalFocus"><apiName>verticalFocus</apiName><shortdesc>
      定义缩放焦点的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      定义缩放焦点的位置。
     
      <p><codeph>verticalFocus</codeph> 的有效值为 <codeph>"top"</codeph>、<codeph>"center"</codeph>、<codeph>"bottom"</codeph> 和 <codeph>null</codeph>。默认值为 <codeph>"center"</codeph>。</p>
     
      <p>有关详细信息，请参阅 <codeph>horizontalFocus</codeph> 属性的说明。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.effects.effectClasses:SeriesSlideInstance"><apiName>SeriesSlideInstance</apiName><shortdesc>
  SeriesSlideInstance 类用于实现 SeriesSlide 效果的实例类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.effects.effectClasses:SeriesEffectInstance</apiBaseClassifier></apiClassifierDef><apiDesc>
  SeriesSlideInstance 类用于实现 SeriesSlide 效果的实例类。Flex 在播放 SeriesSlide 效果时将创建此类的实例；您无需自己创建。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.effects.xml#SeriesSlide"><linktext>mx.charts.effects.SeriesSlide</linktext></link></related-links><apiConstructor id="mx.charts.effects.effectClasses:SeriesSlideInstance:SeriesSlideInstance"><apiName>SeriesSlideInstance</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>效果的目标。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.effects.effectClasses:SeriesSlideInstance:direction"><apiName>direction</apiName><shortdesc>
      定义系列开始滑动的位置。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
      定义系列开始滑动的位置。有效值为 <codeph>"left"</codeph>、<codeph>"right"</codeph>、<codeph>"up"</codeph> 和 <codeph>"down"</codeph>。默认值为 <codeph>"left"</codeph>。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.effects.effectClasses:SeriesInterpolateInstance"><apiName>SeriesInterpolateInstance</apiName><shortdesc>
  SeriesInterpolateInstance 类用于实现 SeriesInterpolate 效果的实例类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.effects.effectClasses:SeriesEffectInstance</apiBaseClassifier></apiClassifierDef><apiDesc>
  SeriesInterpolateInstance 类用于实现 SeriesInterpolate 效果的实例类。Flex 在播放 SeriesInterpolate 效果时将创建此类的实例；您无需自己创建。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.effects.xml#SeriesInterpolate"><linktext>mx.charts.effects.SeriesInterpolate</linktext></link></related-links><apiConstructor id="mx.charts.effects.effectClasses:SeriesInterpolateInstance:SeriesInterpolateInstance"><apiName>SeriesInterpolateInstance</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>效果的目标。  
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      构造函数。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>