<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.charts.chartClasses"><apiName>mx.charts.chartClasses</apiName><apiDetail/><apiClassifier id="mx.charts.chartClasses:CartesianCanvasValue"><apiName>CartesianCanvasValue</apiName><shortdesc>
     Definiert die Position von Objekten auf einer Arbeitsfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
     Definiert die Position von Objekten auf einer Arbeitsfläche. Diese Klasse besitzt eine Datenkoordinate und einen optionalen Offset, die von der Klasse CartesianDataCanvas zum Berechnen der Pixelkoordinaten verwendet werden.
     
     </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.chartClasses.xml#CartesianDataCanvas"><linktext>mx.charts.chartClasses.CartesianDataCanvas</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:CartesianCanvasValue:CartesianCanvasValue"><apiName>CartesianCanvasValue</apiName><shortdesc>
         Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>value</apiItemName><apiType value="any"/><apiDesc>Die Datenkoordinaten eines Punkts.
         </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Offset der in <codeph>value</codeph> angegebenen Datenkoordinate in Pixeln.
          
          </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Konstruktor.
         
         </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.charts.chartClasses:IAxisRenderer"><apiName>IAxisRenderer</apiName><shortdesc>
  Die IAxis-Klasse ist eine abstrakte Schnittstelle zum Definieren der Positionseigenschaften von Beschriftungen, Markierungen und Daten für eine Achse in einem Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IUIComponent</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IAxis-Klasse ist eine abstrakte Schnittstelle zum Definieren der Positionseigenschaften von Beschriftungen, Markierungen und Daten für eine Achse in einem Diagramm.
 
  <p>Klassen implementieren diese Schnittstelle, um eine Bereichsdefinitionsfunktion bereitzustellen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><apiOperation id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:adjustGutters"><apiName>adjustGutters</apiName><shortdesc>
      Passt das Layout so an, dass die übergebenen Abstände Platz haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Rechteck, das die Abmessungen der Abstände einschließlich der Anpassungen definiert.
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>workingGutters</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Definiert die anzupassenden Abstände.
     
      </apiDesc></apiParam><apiParam><apiItemName>adjustable</apiItemName><apiType value="Object"/><apiDesc>Besteht aus vier booleschen Eigenschaften (left=true/false, top=true/false, right=true/false und bottom=true/false), die angeben, ob der Achsenrenderer die Abstände weiter anpassen kann.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt das Layout so an, dass die übergebenen Abstände Platz haben. Diese Methode wird vom umschließenden Diagramm aufgerufen, um die Größe der Abstände und der entsprechenden Datenbereiche zu ermitteln. Diese Methode stellt den AxisRenderer bereit, der die Möglichkeit bietet, das Layout basierend auf den neuen Abständen zu berechnen und diese erforderlichenfalls anzupassen. Wenn ein gegebener Abstand anpassbar ist, kann ein Achsenrenderer optional die Abstände nach innen (Zwischenraum vergrößern), jedoch nicht nach außen (Zwischenraum verkleinern) anpassen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den vorherigen Status repräsentiert.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den neuen Status repräsentiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat. Die Implementierungselemente müssen auf diese Methode reagieren, damit die Änderungen an den durch das Element angezeigten Daten synchronisiert werden können.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:axis:get"><apiName>axis</apiName><shortdesc>
      Das mit diesem Renderer verknüpfte Achsenobjekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Das mit diesem Renderer verknüpfte Achsenobjekt. Diese Eigenschaft wird durch das umschließende Diagramm verwaltet und sollte nicht explizit eingestellt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:gutters:get"><apiName>gutters</apiName><shortdesc>
      Der Abstand zwischen dem axisRenderer und den Seiten des umgebenden Diagramms.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Der Abstand zwischen dem axisRenderer und den Seiten des umgebenden Diagramms. Diese Eigenschaft wird automatisch durch das Diagramm zugewiesen und sollte nicht direkt zugewiesen werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:horizontal:get"><apiName>horizontal</apiName><shortdesc>
      „true“, wenn der Achsenrenderer als horizontale Achse verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      <codeph>true</codeph>, wenn der Achsenrenderer als horizontale Achse verwendet wird. Diese Eigenschaft wird durch das umschließende CartesianChart verwaltet und sollte nicht direkt eingestellt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:minorTicks:get"><apiName>minorTicks</apiName><shortdesc>
      Enthält ein Array, das festlegt, wo Flex die kleineren Markierungen entlang der Achse zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Enthält ein Array, das festlegt, wo Flex die kleineren Markierungen entlang der Achse zeichnet. Jedes Arrayelement enthält einen Wert zwischen 0 und 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:placement:get"><apiName>placement</apiName><shortdesc>
      Die Seite des Diagramms, auf der der axisRenderer angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Seite des Diagramms, auf der der axisRenderer angezeigt wird. Zulässige Werte sind <codeph>"left"</codeph> und <codeph>"right"</codeph> für vertikale Achsenrenderer und <codeph>"top"</codeph> und <codeph>"bottom"</codeph> für horizontale Achsenrenderer. Standardmäßig werden die primären Achsen links und oben und die sekundären Achsen rechts und unten platziert. CartesianCharts stellen automatisch sicher, dass sekundäre Achsen gegenüber von primären Achsen platziert werden. Wenn Sie beispielsweise eine primäre vertikale Achse explizit rechts platzieren, wird die sekundäre vertikale Achse automatisch links platziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:ticks:get"><apiName>ticks</apiName><shortdesc>
      Enthält ein Array, das festlegt, wo Flex die Markierungen entlang der Achse zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Enthält ein Array, das festlegt, wo Flex die Markierungen entlang der Achse zeichnet. Jedes Arrayelement enthält einen Wert zwischen 0 und 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:heightLimit:set"><apiName>heightLimit</apiName><shortdesc>
      Der maximal zulässige Raum in Pixel, den ein Achsenrenderer von einem Diagramm in Anspruch nehmen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der maximal zulässige Raum in Pixel, den ein Achsenrenderer von einem Diagramm in Anspruch nehmen kann. Achsenrenderer nehmen standardmäßig den Raum im Diagramm ein, den sie zum Rendern aller ihrer Beschriftungen bei voller Größe benötigen. Ist heightLimit gesetzt, verringert ein AxisRenderer die Größe der Beschriftungen, sodass die Gesamtgröße der Achse geringer als der Wert in heightLimit ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:otherAxes:set"><apiName>otherAxes</apiName><shortdesc>
      Ein Array bestehend aus Achsen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array bestehend aus Achsen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IChartElement"><apiName>IChartElement</apiName><shortdesc>
  IChartElement definiert den Basissatz an Eigenschaften und Methoden, die für eine UIComponent erforderlich sind, damit sie im Datenbereich eines Diagramms angezeigt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFlexDisplayObject</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IChartElement definiert den Basissatz an Eigenschaften und Methoden, die für eine UIComponent erforderlich sind, damit sie im Datenbereich eines Diagramms angezeigt werden kann. Jede der Serie, dem backgroundElements-Array oder dem annotationElements-Array eines Diagramms zugewiesene Komponente muss diese Schnittstelle implementieren.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den vorherigen Status repräsentiert.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den neuen Status repräsentiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat. Die Implementierungselemente müssen auf diese Methode reagieren, damit die Änderungen an den durch das Element angezeigten Daten synchronisiert werden können.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:claimStyles"><apiName>claimStyles</apiName><shortdesc>
      Aufgerufen durch das Diagramm, damit verknüpfte Elemente Stilselektoren von seinem chartSeriesStyles-Array anfordern können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der neue Wert für <codeph>firstAvailable</codeph> nach dem Anfordern von Stilen (beispielsweise <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Stilen, die angefordert werden können.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Der erste Stilselektor im Array, der eine Anforderung stellt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Aufgerufen durch das Diagramm, damit verknüpfte Elemente Stilselektoren von seinem chartSeriesStyles-Array anfordern können. Jedes Diagramm verfügt über einen ihm zugeordneten Satz von Selektoren, die implizit enthaltenen Elementen zugewiesen sind, die sie benötigen. Die Implementierung dieser Funktion gibt einem Element die Möglichkeit, je nach Bedarf, Elemente aus diesem Satz 'anzufordern'. Ein Element das <i>N</i> Stilselektoren benötigt, fordert die Werte von <codeph>styles[firstAvailable]</codeph> bis <codeph>styles[firstAvailable + <i>N</i> - 1]</codeph> an.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:collectTransitions"><apiName>collectTransitions</apiName><shortdesc>
      Wird vom umgebenden Diagramm aufgerufen, um Übergänge zu erfassen, die ein bestimmtes Element möglicherweise bei Änderung des Status des Diagramms wiedergibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>chartState</apiItemName><apiType value="Number"/><apiDesc>Der Status, in dem das Diagramm die neuen Übergänge wiedergibt.
     
      </apiDesc></apiParam><apiParam><apiItemName>transitions</apiItemName><apiType value="Array"/><apiDesc>Ein Übergangs-Array, das der Liste der wiederzugebenden Übergänge des Diagramms hinzugefügt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom umgebenden Diagramm aufgerufen, um Übergänge zu erfassen, die ein bestimmtes Element möglicherweise bei Änderung des Status des Diagramms wiedergibt. Das Diagramm erfasst Übergänge von allen Elementen und stellt sicher, dass sie parallel wiedergegeben werden. Es wartet, bis alle Übergänge abgeschlossen sind, bevor es zu einem anderen Status wechselt. Implementoren müssen alle notwendigen Übergänge an den Übergangs-Arrayparameter anhängen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:describeData"><apiName>describeData</apiName><shortdesc>
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Bestimmt die Achse, von der Datenbeschreibungen abgerufen werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.chartClasses.xml#DataDescription"><linktext>mx.charts.chartClasses.DataDescription</linktext></link><link href="mx.charts.chartClasses.xml#DataTransform"><linktext>mx.charts.chartClasses.DataTransform</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:findDataPoints"><apiName>findDataPoints</apiName><shortdesc>
      Gibt ein HitData-Objekt zurück, das den Datenpunkt beschreibt, der am nächsten bei den an die Methode übergebenen Koordinaten liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein den nächsten Datenpunkt innerhalb von <codeph>sensitivity2</codeph> Pixel beschreibendes HitData-Objekt.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die x-Koordinate bezogen auf das ChartBase-Objekt.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die y-Koordinate bezogen auf das ChartBase-Objekt.
      
      </apiDesc></apiParam><apiParam><apiItemName>sensitivity2</apiItemName><apiType value="Number"/><apiDesc>Der maximale Abstand, den eine X/Y-Koordinatenposition vom Datenpunkt entfernt sein darf.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein HitData-Objekt zurück, das den Datenpunkt beschreibt, der am nächsten bei den an die Methode übergebenen Koordinaten liegt. Die Elemente <codeph>x</codeph> und <codeph>y</codeph> müssen Werte im Koordinatensystem des Elements sein. Diese Methode berücksichtigt bei der Suche nach nahe liegenden Datenpunkten die durch den Parameter <codeph>sensitivity2</codeph> festgelegten Grenzen.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
      Erteilt einen Hinweis an das Element, dass sich die Datenzuordnung der verknüpften Achsen geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Gibt einen Hinweis an das Element, dass sich die Datenzuordnung der verknüpften Achsen geändert hat. Implementoren müssen über zwischengespeicherte Daten verfügen und entsprechend erneut rendern. Diese Funktion wird, falls erforderlich, automatisch durch das verknüpfte DataTransform aufgerufen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:labelContainer:get"><apiName>labelContainer</apiName><shortdesc>
      Das DisplayObject, das die durch dieses Element gerenderten Beschriftungen anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Das DisplayObject, das die durch dieses Element gerenderten Beschriftungen anzeigt. In den meisten Fällen werden im Datenbereich angezeigte Beschriftungen über allen Elementen, und nicht zwischen den Daten angezeigt. Wenn ein implementierendes Element anzuzeigende Beschriftungen hat, kann es sie in einem Sprite-Objekt platzieren und als Wert der Eigenschaft <codeph>labelContainer</codeph> zurückgeben. Umschließende Diagramme rendern labelContainers von allen umschlossenen Elementen und platzieren Sie im Datenbereich über allen anderen Elementen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider. Elementtypen können wahlweise den Datenprovider vom umschließenden Diagramm erben, falls erforderlich, oder die spezifische Zuweisung von Datenprovidern zum Element durch die Entwickler zulassen. Nicht alle Elemente werden notwendigerweise durch einen Datenprovider gesteuert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      Das DataTransform-Objekt, das das Element für die Zuordnung zwischen Daten und Bildschirmkoordinaten verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      Das DataTransform-Objekt, das das Element für die Zuordnung zwischen Daten und Bildschirmkoordinaten verwendet. Diese Eigenschaft wird durch das umschließende Diagramm zugewiesen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:LegendData"><apiName>LegendData</apiName><shortdesc>
  Die LegendData-Struktur wird von Diagrammen zur Beschreibung der Elemente, die in einer automatisch generierten Legende angezeigt werden müssen, verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die LegendData-Struktur wird von Diagrammen zur Beschreibung der Elemente, die in einer automatisch generierten Legende angezeigt werden müssen, verwendet. Die Eigenschaft <codeph>legendData</codeph> eines Diagramms enthält ein Array von LegendData-Objekten, einem für jedes Element in der Legende. 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:LegendData:LegendData"><apiName>LegendData</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:LegendData:aspectRatio"><apiName>aspectRatio</apiName><shortdesc>
	  Bestimmt die Größe und die Position der Legendenmarkierung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Bestimmt die Größe und die Position der Legendenmarkierung. Sofern konfiguriert, stellt das LegendItem sicher, dass Breite und Höhe der Legende mit diesem Wert übereinstimmen. Wenn nicht konfiguriert (<codeph>NaN</codeph>), wählt das Legendenelement eine geeignete Standardbreite und -höhe.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:element"><apiName>element</apiName><shortdesc>
	  Das Diagrammelement, das dieses Legendenelement generiert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.charts.chartClasses:IChartElement</apiValueClassifier></apiValueDef><apiDesc>
	  Das Diagrammelement, das dieses Legendenelement generiert hat.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:label"><apiName>label</apiName><shortdesc>
	  Der Text, der die im Legendenelement angezeigte Serie oder das dort angezeigte Element identifiziert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der Text, der die im Legendenelement angezeigte Serie oder das dort angezeigte Element identifiziert.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:marker"><apiName>marker</apiName><shortdesc>
	  Ein sichtbarer Indikator, der das Legendenelement mit der dargestellten Serie oder dem dargestellten Element verknüpft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IFlexDisplayObject"/></apiValueDef><apiDesc>
	  Ein sichtbarer Indikator, der das Legendenelement mit der dargestellten Serie oder dem dargestellten Element verknüpft. Dieses DisplayObject wird als ein dem LegendItem untergeordnetes Element hinzugefügt. 
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:InstanceCache"><apiName>InstanceCache</apiName><shortdesc>
  InstanceCache ist ein Dienstprogramm, das die Aufgabe der Erstellung und Verwaltung eines Satzes von n Objektinstanzen steuert, wobei sich n häufig ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  InstanceCache ist ein Dienstprogramm, das die Aufgabe der Erstellung und Verwaltung eines Satzes von <i>n</i> Objektinstanzen steuert, wobei sich <i>n</i> häufig ändert.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:InstanceCache:InstanceCache"><apiName>InstanceCache</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="Object"/><apiDesc>Der Typ des zu erstellenden Objekts. Dies kann entweder eine Klasse oder eine „IFactory“ sein.
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ein optionales DisplayObject zum Hinzufügen neuer Instanzen.
     
      </apiDesc></apiParam><apiParam><apiItemName>insertPosition</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Position, an der die Instanzen in der Liste der untergeordneten Elemente des übergeordneten Elements eingefügt werden sollen. Setzen Sie diesen Wert auf -1, um die untergeordneten Elemente am Ende der Liste der untergeordneten Elemente einzufügen.
     
      </apiDesc></apiParam><apiParam><apiItemName>moduleFactory</apiItemName><apiType value="mx.core:IFlexModuleFactory"/><apiData>null</apiData><apiDesc>Der Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:InstanceCache:creationCallback"><apiName>creationCallback</apiName><shortdesc>
      Ein Rückruf, der bei der Erstellung neuer Instanzen ausgelöst wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      Ein Rückruf, der bei der Erstellung neuer Instanzen ausgelöst wird. Dieser Rückruf hat folgende Signatur:
      <pre>
      function creationCallback(<i>newInstance</i>:Object, <i>cache</i>:InstanceCache):void;
      </pre>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:discard"><apiName>discard</apiName><shortdesc> 
      Bestimmt, ob nicht benötigte Instanzen verworfen werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> 
      Bestimmt, ob nicht benötigte Instanzen verworfen werden. Ist <codeph>true</codeph> eingestellt, werden zusätzliche Elemente verworfen, wenn die Cache-Zählung verringert wird. Anderenfalls werden zusätzliche Elemente in einem getrennten Cache aufbewahrt und wiederverwendet, wenn die Zählung erhöht wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:hide"><apiName>hide</apiName><shortdesc>
      Bestimmt, ob nicht benötigte Instanzen ausgeblendet werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Bestimmt, ob nicht benötigte Instanzen ausgeblendet werden sollen. Ist <codeph>true</codeph> eingestellt, wird die Eigenschaft <codeph>visible</codeph> für jedes zusätzliche Element auf <codeph>false</codeph> gesetzt, wenn die Cache-Zählung verringert wird, und auf <codeph>true</codeph> gesetzt, wenn die Zählung erhöht wird.
      
      <p>Diese Eigenschaft ist nur dann von Bedeutung, wenn die Factory DisplayObjects generiert. Wird diese Eigenschaft für andere Factory-Typen auf <codeph>true</codeph> gesetzt, kommt es zu einem Laufzeitfehler.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:remove"><apiName>remove</apiName><shortdesc>
      Bestimmt, ob nicht benötigte Instanzen aus ihrem übergeordneten Element entfernt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Bestimmt, ob nicht benötigte Instanzen aus ihrem übergeordneten Element entfernt werden sollen. Ist <codeph>true</codeph> eingestellt, wird für jedes zusätzliche Element für das übergeordnete Element die <codeph>removeChild()</codeph>-Methode aufgerufen, wenn die Cache-Zählung verringert wird.
      
      <p>Diese Eigenschaft ist nur dann von Bedeutung, wenn die Factory DisplayObjects generiert. Wird diese Eigenschaft für andere Factory-Typen auf <codeph>true</codeph> gesetzt, kommt es zu einem Laufzeitfehler.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:count:get"><apiName>count</apiName><shortdesc>
      Die Anzahl der derzeit im Cache erforderlichen Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Anzahl der derzeit im Cache erforderlichen Elemente.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:factory:get"><apiName>factory</apiName><shortdesc>
      Eine Factory, die den Objekttyp generiert, der zwischengespeichert werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc>
      Eine Factory, die den Objekttyp generiert, der zwischengespeichert werden soll. Eine Zuweisung hierzu führt dazu, dass alle aktuellen Instanzen verworfen werden und neue Instanzen des korrekten Typs erstellt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:format:get"><apiName>format</apiName><shortdesc>
      Ein auf alle erstellten Instanzen anzuwendendes TextFormat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:TextFormat"/></apiValueDef><apiDesc>
      Ein auf alle erstellten Instanzen anzuwendendes TextFormat. Sofern eingestellt, wird dieses Format als aktuelles und Standardformat für die Inhalte aller erstellten Instanzen angewendet. Diese Eigenschaft ist nur dann von Bedeutung, wenn die Factory TextField-Instanzen generiert.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:instances:get"><apiName>instances</apiName><shortdesc>
      Das Array von zwischengespeicherten Instanzen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Das Array von zwischengespeicherten Instanzen. Es sind möglicherweise mehr Instanzen in diesem Array als die aktuell angeforderten. Sie sollten die Eigenschaft <codeph>count</codeph> des Instanzen-Cache, und nicht die Länge dieses Array als Grundlage verwenden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:properties:get"><apiName>properties</apiName><shortdesc>
      Eine Hashzuordnung von Eigenschaften, die neuen Instanzen zugewiesen werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hashzuordnung von Eigenschaften, die neuen Instanzen zugewiesen werden. Jedes Schlüssel-Werte-Paar in dieser Hashzuordnung wird jeder erstellten neuen Instanz zugewiesen. Die Eigenschaft „hashmap“ wird bei entsprechender Konfiguration allen vorhandenen Instanzen zugewiesen.
      
      <p>Die Werte in der Hashzuordnung sind nicht geklont. Objektwerte werden von allen Instanzen gemeinsam verwendet.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:insertPosition:set"><apiName>insertPosition</apiName><shortdesc> 
      Die Position der Instanz in der Liste der untergeordneten Elemente des übergeordneten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="int"/></apiValueDef><apiDesc> 
      Die Position der Instanz in der Liste der untergeordneten Elemente des übergeordneten Elements. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianTransform"><apiName>CartesianTransform</apiName><shortdesc>
  Das Objekt CartesianTransform repräsentiert einen Satz von Achsen, der Datenwerte kartesischen x/y-Bildschirmkoordinaten zuordnet, und umgekehrt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:DataTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Objekt CartesianTransform repräsentiert einen Satz von Achsen, der Datenwerte kartesischen x/y-Bildschirmkoordinaten zuordnet, und umgekehrt.
 
  <p>Bei der Verwendung von Diagrammen in Ihren Anwendungen brauchen Sie normalerweise nicht mit dem Objekt CartesianTransform zu interagieren. Transformationen werden automatisch durch die integrierten Diagrammtypen erstellt und durch die darin enthaltenen Serien verwendet, sodass sie Daten in Renderkoordinaten transformieren können.</p> 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:CartesianTransform:CartesianTransform"><apiName>CartesianTransform</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianTransform:invertTransform"><apiName>invertTransform</apiName><shortdesc> 
      Transformiert x- und y-Koordinaten relativ zum DataTransform-Koordinatensystem in einen 2-dimensionalen Wert im Datenraum.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ein Array, das die transformierten Werte enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiType value="restParam"/><apiDesc>Die x- und die y-Position (in dieser Reihenfolge).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Transformiert x- und y-Koordinaten relativ zum DataTransform-Koordinatensystem in einen 2-dimensionalen Wert im Datenraum. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten, das die Datenwerte in ihren Feldern enthält. Hier speichert diese Funktion auch die konvertierten numerischen Werte.
     
      </apiDesc></apiParam><apiParam><apiItemName>xField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die x-Achse gespeichert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>xConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete x-Bildschirmkoordinate gespeichert wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>yField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die y-Achse gespeichert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>yConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete y-Bildschirmkoordinate gespeichert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu. Bei dieser Methode wird davon ausgegangen, dass die Werte alle numerisch sind. Alle nicht numerischen Werte müssen demzufolge zuvor mit der <codeph>mapCache()</codeph>-Methode konvertiert worden sein.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:CartesianTransform:HORIZONTAL_AXIS"><apiName>HORIZONTAL_AXIS</apiName><shortdesc>
      Ein String, der die horizontale Achse repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>h</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Ein String, der die horizontale Achse repräsentiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:VERTICAL_AXIS"><apiName>VERTICAL_AXIS</apiName><shortdesc>
      Ein String, der die vertikale Achse repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>v</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Ein String, der die vertikale Achse repräsentiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:pixelHeight:set"><apiName>pixelHeight</apiName><shortdesc>
      Die Höhe des durch CartesianTransform dargestellten Datenbereichs, in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe des durch CartesianTransform dargestellten Datenbereichs, in Pixeln. Das enthaltende Diagramm legt diese Eigenschaft während des Layoutvorgangs explizit fest. CartesianTransform verwendet diese Eigenschaft, um Datenwerte Bildschirmkoordinaten zuzuordnen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:pixelWidth:set"><apiName>pixelWidth</apiName><shortdesc>
      Die Breite des durch CartesianTransform dargestellten Datenbereichs, in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Breite des durch CartesianTransform dargestellten Datenbereichs, in Pixeln. Das enthaltende Diagramm legt diese Eigenschaft während des Layoutvorgangs explizit fest. CartesianTransform verwendet diese Eigenschaft, um Datenwerte Bildschirmkoordinaten zuzuordnen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartState"><apiName>ChartState</apiName><shortdesc>
  Beschreibt den aktuellen Status eines Diagramms.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Beschreibt den aktuellen Status eines Diagramms. Serienimplementierungen können den Chart.state-Wert überprüfen, um festzustellen, ob das Diagramm Daten anzeigt oder nicht, und wie dann gerendert werden soll.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:ChartState:HIDING_DATA"><apiName>HIDING_DATA</apiName><shortdesc>
	  Im Diagramm werden derzeit Übergänge zum Ausblenden der alten Diagrammdaten ausgeführt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Im Diagramm werden derzeit Übergänge zum Ausblenden der alten Diagrammdaten ausgeführt.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:NONE"><apiName>NONE</apiName><shortdesc>
	  Kein Status.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Kein Status. Das Diagramm zeigt einfach seine Daten an.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:PREPARING_TO_HIDE_DATA"><apiName>PREPARING_TO_HIDE_DATA</apiName><shortdesc>
	  Im Diagramm hat sich die Anzeige der Daten geändert. In Kürze erfolgt ein Übergang zum Ausblenden der aktuellen Daten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Im Diagramm hat sich die Anzeige der Daten geändert. In Kürze erfolgt ein Übergang zum Ausblenden der aktuellen Daten.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:PREPARING_TO_SHOW_DATA"><apiName>PREPARING_TO_SHOW_DATA</apiName><shortdesc>
	  Alle Übergänge im Diagramm zum Ausblenden der alten Daten sind abgeschlossen. Die Ausführung der Übergänge zur Anzeige der neuen Daten ist in Vorbereitung.
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Alle Übergänge im Diagramm zum Ausblenden der alten Daten sind abgeschlossen. Die Ausführung der Übergänge zur Anzeige der neuen Daten ist in Vorbereitung.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:SHOWING_DATA"><apiName>SHOWING_DATA</apiName><shortdesc>
	  Im Diagramm werden derzeit Übergänge zum Anzeigen der neuen Diagrammdaten ausgeführt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Im Diagramm werden derzeit Übergänge zum Anzeigen der neuen Diagrammdaten ausgeführt.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:HLOCSeriesBase"><apiName>HLOCSeriesBase</apiName><shortdesc>
  „HLOCSeriesBase“ ist die Basisklasse für die zwei Finanzserientypen, „HLOCSeries“ und „CandlestickSeries“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="legendMarkerRenderer" owner="mx.charts.chartClasses:HLOCSeriesBase" playerVersion="Flash9" type="mx.core.IFactory">
<description>
  Die Klasse, die die Serie zum Rendern der Markierungen der Serie in verknüpften Legenden verwendet (falls zutreffend). Hat dieser Stil den Wert <codeph>null</codeph>, verwenden die meisten Serien stattdessen standardmäßig ihren itemRenderer als Legendenmarkierungs-Skin. Als Legendenmarkierungen verwendete Klassen müssen die Schnittstelle IFlexDisplayObject implementieren. Optional können Sie die ISimpleStyleClient- und IDataRenderer-Schnittstellen implementieren. Wenn die als Legendenmarkierung verwendete Klasse die IDataRenderer-Schnittstelle implementiert, wird die Dateneigenschaft einer LegendData-Instanz zugewiesen.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemRenderer" owner="mx.charts.chartClasses:HLOCSeriesBase" playerVersion="Flash9" type="mx.core.IFactory">
<description>
  Eine Factory, die die Klasse darstellt, die von der Serie zur Darstellung der einzelnen Elemente in einem Diagramm verwendet wird. Diese Klasse wird für jedes Element im Diagramm einmal instanziiert. Als itemRenderer verwendete Klassen müssen die IFlexDisplayObject-, ISimpleStyleClient- und IDataRenderer-Schnittstellen implementieren. Der Eigenschaft <codeph>data</codeph> wird das von der Skininstanz gerenderte ChartItem zugewiesen.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IColumn</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:Series</apiBaseClassifier></apiClassifierDef><apiDesc>
  „HLOCSeriesBase“ ist die Basisklasse für die zwei Finanzserientypen, „HLOCSeries“ und „CandlestickSeries“. Der Großteil des Verhaltens, das in Relation mit den Diagrammwerten „open“, „close“, „high“ und „low“ steht, befindet sich in dieser Klasse.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:HLOCSeriesBase:HLOCSeriesBase"><apiName>HLOCSeriesBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:beginInterpolation"><apiName>beginInterpolation</apiName><shortdesc>
      
      Wird vom SeriesInterpolate-Effekt zum Initiieren eines Interpolationseffekts aufgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Die von der Serie für die Durchführung der Interpolation benötigten Daten.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>sourceRenderData</apiItemName><apiType value="Object"/><apiDesc>Die Quelldaten für die Serie, zwischen deren Gliedern interpoliert werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>destRenderData</apiItemName><apiType value="Object"/><apiDesc>Die Zieldaten für die Serie, zwischen deren Gliedern interpoliert werden soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird vom SeriesInterpolate-Effekt zum Initiieren eines Interpolationseffekts aufgerufen. Der Effekt übergibt die Quell- und Zieldaten für die Serie, zwischen deren Gliedern interpoliert werden soll. Der Effekt übergibt den Rückgabewert dieser Methode immer wieder an die <codeph>interpolate()</codeph>-Methode, um die Animation für die Dauer des Effekts fortzusetzen. Die Serie berechnet die Daten, die sie für die Durchführung der Interpolation benötigt, und gibt sie in dieser Methode zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:describeData"><apiName>describeData</apiName><shortdesc>
      
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ein Array, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Bestimmt die Achse, von der Datenbeschreibungen abgerufen werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:formatDataTip"><apiName>formatDataTip</apiName><shortdesc> 
      Generiert eine für die Anzeige als DataTip geeignete Textbeschreibung eines ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der DataTip des Elements.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>hd</apiItemName><apiOperationClassifier>mx.charts:HitData</apiOperationClassifier><apiDesc>Die HitData für das ChartItem.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Generiert eine für die Anzeige als DataTip geeignete Textbeschreibung eines ChartItem.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:getElementBounds"><apiName>getElementBounds</apiName><shortdesc>
      
      Füllt die Eigenschaften „elementBounds“, „bounds“ und „visibleBounds“ einer renderData-Struktur aus, die durch diese Serie generiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>renderData</apiItemName><apiType value="Object"/><apiDesc>Die Struktur, die durch diese Serie generiert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Füllt die Eigenschaften <codeph>elementBounds</codeph>, <codeph>bounds</codeph> und <codeph>visibleBounds</codeph> einer renderData-Struktur aus, die durch diese Serie generiert wird. Effektklassen rufen diese Methode auf, um diese Felder zur Verwendung bei der Implementierung verschiedener Effekttypen auszufüllen. Abgeleitete Klassen sollten diese Methode zum Generieren der Grenzen der Elemente der Serie nur auf Anforderung implementieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      
      Ruft alle Elemente in einem rechteckigen Bereich für die Serie ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ein Array von ChartItem-Objekten, die sich innerhalb des angegebenen rechteckigen Bereichs befinden.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>r</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Ein Rechteckobjekt, das den Bereich definiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft alle Elemente in einem rechteckigen Bereich für die Serie ab. Rufen Sie diese Funktion auf, um festzustellen, welche Elemente in dieser Serie sich in einem bestimmten rechteckigen Bereich befinden.
      <p>Einzelne Serien bestimmen, ob ihr Diagrammelement sich unter diesem Bereich befindet. Der Punkt muss sich im globalen Koordinatenraum befinden.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:getMissingInterpolationValues"><apiName>getMissingInterpolationValues</apiName><shortdesc>
      
      Füllt fehlende Werte in einer Interpolationsstruktur aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>sourceProps</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt, das die Quellwerte enthält, die für ein bestimmtes Element interpoliert werden. Ist diese Methode vorhanden, sollten alle Eigenschaften in diesem Objekt einen anderen Wert als <codeph>NaN</codeph> haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Das Array von Quelldiagrammelementen, die interpoliert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>destProps</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt, das die Zielwerte enthält, die für ein bestimmtes Element interpoliert werden. Ist diese Methode vorhanden, sollten alle Eigenschaften in diesem Objekt einen anderen Wert als <codeph>NaN</codeph> haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>destCache</apiItemName><apiType value="Array"/><apiDesc>Das Array von Zieldiagrammelementen, die interpoliert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Die Indexposition des Elements, das im Cache gefüllt wird.  
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die von der Serie an die <codeph>initializeInterpolationData()</codeph>-Methode übergeben wurden.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Füllt fehlende Werte in einer Interpolationsstruktur aus. Wenn eine Serie die <codeph>initializeInterpolationData()</codeph>-Methode aufruft, übergibt sie Arrays von Quell- und Zielwerten für die Interpolation. Ist einer der beiden Arrays unvollständig, muss die Serie „geeignete“ Platzhalterwerte für die Interpolation bereitstellen. Die Art und Weise, wie diese Platzhalterwerte bestimmt werden, hängt vom jeweiligen Serientyp ab. Serienerweiterungen müssen diese Methode zur Bereitstellung dieser Platzhalterwerte überschreiben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateData"><apiName>updateData</apiName><shortdesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten geändert wurden und erneut aus dem Datenprovider geladen werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten geändert wurden und erneut aus dem Datenprovider geladen werden müssen. Wenn Sie die angepassten Serientypen implementieren, müssen Sie diese Methode überschreiben und alle zum Anzeigen der Serie erforderlichen Daten aus dem zugrunde liegenden Datenprovider laden. Sie müssen auch sicherstellen, dass die <codeph>super.updateData()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt aktualisiert wurden, rufen Sie stattdessen die <codeph>validateData()</codeph>-Methode der Series-Klasse auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden. Dazu kann es kommen, wenn die zugrunde liegenden Daten geändert wurden oder der Bereich der zugehörigen Achsen geändert wurde. Wenn Sie einen angepassten Serientyp implementieren, müssen Sie diese Methode überschreiben und alle außerhalb liegenden Daten filtern, indem Sie die <codeph>filterCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation gesteuert werden. Die <codeph>filterCache()</codeph>-Methode wandelt alle Werte, die außerhalb des Bereichs liegen, in <codeph>NaN</codeph> um. Sie müssen sicherstellen, dass die <codeph>super.updateFilter()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>validateTransform()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>- und Ihre <codeph>updateMapping()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateMapping"><apiName>updateMapping</apiName><shortdesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten numerischen Entsprechungen zugeordnet werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Wird aufgerufen, wenn die von der Serie dargestellten Daten numerischen Entsprechungen zugeordnet werden müssen. Dazu kann es kommen, wenn die zugrunde liegenden Daten oder die zur Darstellung der Serie verwendeten Achsen geändert wurden. Wenn Sie eine angepasste Serie implementieren, müssen Sie diese Methode überschreiben und alle dargestellten Daten in numerische Werte konvertieren, indem Sie die <codeph>mapCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation verwaltet werden. Sie müssen außerdem sicherstellen, dass die <codeph>super.updateMapping()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt zugeordnet wurden, rufen Sie stattdessen die <codeph>validateData()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>-Methode vor dieser Methode aufgerufen wurde, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateTransform"><apiName>updateTransform</apiName><shortdesc>
      
      Wird aufgerufen, wenn die von der zugrunde liegenden Serie dargestellten Daten von den Achsen der zugehörigen Datentransformation in Bildschirmwerte umgewandelt werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Wird aufgerufen, wenn die von der zugrunde liegenden Serie dargestellten Daten von den Achsen der zugehörigen Datentransformation in Bildschirmwerte umgewandelt werden müssen. Dazu kann es kommen, wenn die zugrunde liegenden Daten, der Bereich der zugehörigen Achsen oder die Größe des Bereichs auf dem Bildschirm geändert wurde. Wenn Sie einen angepassten Serientyp implementieren, müssen Sie diese Methode überschreiben und die Daten transformieren, indem Sie die <codeph>transformCache()</codeph>-Methode der verknüpften Datentransformation verwenden. Sie müssen sicherstellen, dass die <codeph>super.updateTransform()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>valiateTransform()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>-, Ihre <codeph>updateMapping()</codeph> und Ihre <codeph>updateFilter()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:closeField:get"><apiName>closeField</apiName><shortdesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des Abschlusswerts des Elements bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des Abschlusswerts des Elements bestimmt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:columnWidthRatio:get"><apiName>columnWidthRatio</apiName><shortdesc>
      Gibt die Breite der Elemente im Verhältnis zur Kategoriebreite an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.65.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt die Breite der Elemente im Verhältnis zur Kategoriebreite an. Beim Wert <codeph>1</codeph> wird der gesamte Raum verwendet, beim Wert <codeph>0,6</codeph> dagegen 60 % des verfügbaren Raums des Elements. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Als eigentliche Elementbreite wird entweder der Wert der Eigenschaft <codeph>columnWidthRatio</codeph> oder der Eigenschaft <codeph>maxColumnWidth</codeph> verwendet, abhängig davon, welcher Wert kleiner ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:highField:get"><apiName>highField</apiName><shortdesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des oberen Werts des Elements bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des oberen Werts des Elements bestimmt. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:itemType:get"><apiName>itemType</apiName><shortdesc>
      Der untergeordnete ChartItem-Typ, der von dieser Serie zur Darstellung einzelner Elemente verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc>
      Der untergeordnete ChartItem-Typ, der von dieser Serie zur Darstellung einzelner Elemente verwendet wird. Unterklassen können eine spezialisiertere Klasse überschreiben und zurückgeben, wenn zusätzliche Informationen in den Elementen gespeichert werden müssen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:items:get"><apiName>items</apiName><shortdesc>
      
      Ruft alle Elemente ab, die in der Serie nach dem Filtern vorhanden sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Ruft alle Elemente ab, die in der Serie nach dem Filtern vorhanden sind.
      <p>Einzelne Serien bestimmen die Liste der Elemente, die zurückgegeben werden sollen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:legendData:get"><apiName>legendData</apiName><shortdesc>
      
      Ein Array von LegendData-Instanzen, die die Elemente beschreiben, die in einer Legende für diese Serie angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Ein Array von LegendData-Instanzen, die die Elemente beschreiben, die in einer Legende für diese Serie angezeigt werden. Abgeleitete Serienklassen überschreiben diese Abruffunktion und geben die Legendendaten zurück, die sich auf die Stile und die Datendarstellungsmethode beziehen. Die meisten Serientypen geben nur eine einzelne LegendData-Instanz zurück, einige (wie die PieSeries und StackedSeries) jedoch mehrere Instanzen, die einzelne Elemente im Array oder mehrere Möglichkeiten zum Rendern von Daten darstellen.   
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:lowField:get"><apiName>lowField</apiName><shortdesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des unteren Werts des Elements bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des unteren Werts des Elements bestimmt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:maxColumnWidth:get"><apiName>maxColumnWidth</apiName><shortdesc>
      Gibt die Breite der Elemente in Pixeln an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Gibt die Breite der Elemente in Pixeln an. Als eigentliche Elementbreite wird entweder dieser Stil oder die Eigenschaft <codeph>columnWidthRatio</codeph> verwendet, abhängig davon, welcher Wert kleiner ist. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Sie wird durch das umschließende Diagramm zugewiesen. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:offset:get"><apiName>offset</apiName><shortdesc>
      Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriebreite entfernt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriebreite entfernt ist. Mit der Standardeinstellung <codeph>0</codeph> werden die Elemente im Raum zentriert. Bei der Einstellung <codeph>-50</codeph> werden die Elemente am Anfang des verfügbaren Raums zentriert. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Das umschließende Diagramm verwaltet und steuert diesen Wert basierend auf dem Wert seiner <codeph>columnWidthRatio</codeph>-Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:openField:get"><apiName>openField</apiName><shortdesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des Startwerts des Elements bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Feld des Datenproviders an, das die y-Achsenposition des Startwerts des Elements bestimmt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:renderDataType:get"><apiName>renderDataType</apiName><shortdesc>
      Der untergeordnete ChartRenderData-Typ, der von dieser Serie zum Speichern der zum Rendern benötigten Daten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc>
      Der untergeordnete ChartRenderData-Typ, der von dieser Serie zum Speichern der zum Rendern benötigten Daten verwendet wird. Unterklassen können eine spezialisiertere Klasse überschreiben und zurückgeben, wenn zusätzliche Informationen zum Rendern gespeichert werden müssen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:renderData:get"><apiName>renderData</apiName><shortdesc>
      
      Speichert die Informationen, die zum Rendern dieser Serie erforderlich sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      
      Speichert die Informationen, die zum Rendern dieser Serie erforderlich sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:xField:get"><apiName>xField</apiName><shortdesc>
      Gibt das Feld des Datenproviders an, das die x-Achsenposition des Elements bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Feld des Datenproviders an, das die x-Achsenposition des Elements bestimmt. Ist <codeph>""</codeph> (leerer String) eingestellt, rendert Flex die Säulen in der Reihenfolge, in der sie im dataProvider auftreten.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataDescription"><apiName>DataDescription</apiName><shortdesc>
  Die DataDescription-Struktur wird von den von den ChartElements verwendet, um die Eigenschaften der Daten, die sie für Axis-Objekte darstellen, die automatisch Werte aus den im Diagramm dargestellten Daten generieren, zu beschreiben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DataDescription-Struktur wird von den von den ChartElements verwendet, um die Eigenschaften der Daten, die sie für Axis-Objekte darstellen, die automatisch Werte aus den im Diagramm dargestellten Daten generieren, zu beschreiben. ChartElements, die Daten anzeigen, sollten bei entsprechendem Aufruf DataDescriptions von ihrer <codeph>describeData()</codeph>-Methode erstellen und zurückgeben.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:DataDescription:DataDescription"><apiName>DataDescription</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_BOUNDED_VALUES"><apiName>REQUIRED_BOUNDED_VALUES</apiName><shortdesc>
	  Ein Bit-Flag, das von der Achse an die describeData()-Methode eines Elements übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Ein Bit-Flag, das von der Achse an die <codeph>describeData()</codeph>-Methode eines Elements übergeben wird. Ist dieses Flag gesetzt, legt das Element die <codeph>boundedValues</codeph>-Eigenschaft fest.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_MIN_INTERVAL"><apiName>REQUIRED_MIN_INTERVAL</apiName><shortdesc>
	  Ein Bit-Flag, das von der Achse an die describeData()-Methode eines Elements übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Ein Bit-Flag, das von der Achse an die <codeph>describeData()</codeph>-Methode eines Elements übergeben wird. Ist dieses Flag gesetzt, legt das Element die <codeph>minInterval</codeph>-Eigenschaft fest.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_MIN_MAX"><apiName>REQUIRED_MIN_MAX</apiName><shortdesc>
	  Ein Bit-Flag, das von der Achse an die describeData()-Methode eines Elements übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Ein Bit-Flag, das von der Achse an die <codeph>describeData()</codeph>-Methode eines Elements übergeben wird. Ist dieses Flag gesetzt, legt das Element die Eigenschaften <codeph>DescribeData.min</codeph> und <codeph>DescribeData.max</codeph> fest
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_PADDING"><apiName>REQUIRED_PADDING</apiName><shortdesc>
	  Ein Bit-Flag, das von der Achse an die describeData()-Methode eines Elements übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x8</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Ein Bit-Flag, das von der Achse an die <codeph>describeData()</codeph>-Methode eines Elements übergeben wird. Ist dieses Flag gesetzt, legt das Element die <codeph>DescribeData.padding</codeph>-Eigenschaft fest.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:boundedValues"><apiName>boundedValues</apiName><shortdesc> 
	  Ein Array von BoundedValue-Objekten, das die Daten im Element beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc> 
	  Ein Array von BoundedValue-Objekten, das die Daten im Element beschreibt. BoundedValues sind Datenpunkte, die im Datenbereich des Diagramms zusätzlichen Platz um den Datenpunkt herum reserviert haben. Sofern angefordert, füllt ein Diagrammelement diese Eigenschaft mit den BoundedValues, die erforderlich sind, damit im Datenbereich des Diagramms genügend Platz sichtbar ist. Ein Beispiel hierfür ist eine ColumnSeries, die 20 Pixel über jeder Säule benötigt, um eine Datenbeschriftung anzeigen zu können.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:max"><apiName>max</apiName><shortdesc>
	  Der vom Element angezeigte höchste Datenwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der vom Element angezeigte höchste Datenwert.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:minInterval"><apiName>minInterval</apiName><shortdesc>
	  Der Mindestabstand, ausgedrückt in Dateneinheiten, zwischen zwei vom Element angezeigten Werten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der Mindestabstand, ausgedrückt in Dateneinheiten, zwischen zwei vom Element angezeigten Werten.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:min"><apiName>min</apiName><shortdesc>
	  Der vom Element angezeigte geringste Datenwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der vom Element angezeigte geringste Datenwert.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:padding"><apiName>padding</apiName><shortdesc>
	  Die Zellauffüllung, ausgedrückt in Dateneinheiten, die das Element über den Mindest- und Höchstwert hinaus benötigt, um seine vollständigen Werte korrekt anzeigen zu können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die Zellauffüllung, ausgedrückt in Dateneinheiten, die das Element über den Mindest- und Höchstwert hinaus benötigt, um seine vollständigen Werte korrekt anzeigen zu können.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartBase"><apiName>ChartBase</apiName><shortdesc>
  Die ChartBase-Klasse ist der Verknüpfungspunkt zwischen der Flex-Komponentenarchitektur und der DualStyleObject-Architektur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style inherit="no" name="showDataTipTargets" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Boolean">
<description>
  Gibt an, ob Ziele über den Datenpunkten angezeigt werden, wenn <codeph>showDataTips</codeph> auf „true“ gesetzt ist.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Legt die Anzahl der Pixel zwischen der oberen Rahmenlinie des Diagramms und seinem Inhaltsbereich fest.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Legt die Anzahl der Pixel zwischen der unteren Rahmenlinie des Diagramms und seinem Inhaltsbereich fest.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="maximumDataTipCount" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="int">
<description>
  Legt die Höchstzahl an DataTips fest, die in einem Diagramm angezeigt werden. Wenn sich mehr Datenpunkte im Bereich des Diagramms befinden, als durch diesen Stil zugelassen, wird ihnen entsprechend des Abstands eine Priorität zugewiesen, wobei der am nächsten gelegene Datenpunkt zuerst angezeigt wird.
  
  <p>Der Standardwert ist „NaN“, womit alle DataTips innerhalb des Bereichs angezeigt werden.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemSelectionColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Farbe ausgewählter ChartItems im Diagramm.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemRollOverColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Farbe von ChartItems mit Rollover im Diagramm.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemDisabledColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Farbe deaktivierter ChartItems im Diagramm.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="fill" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Legt den für den Diagrammhintergrund verwendeten Füllstil fest. Die Füllung kann entweder aus einem einfachen Farbwert oder aus einem Objekt bestehen, das die mx.graphics.IFill-Schnittstelle implementiert.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dataTipRenderer" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Class">
<description>
  Legt die für das Rendern von Datentipps zu verwendende Klasse fest. Diese Klasse muss die IFlexDisplayObject- und die IDataRenderer-Schnittstelle implementieren. Das Diagramm weist der <codeph>data</codeph>-Eigenschaft des benutzerdefinierten Datentipp die HitData-Struktur zu, die den beschriebenen Datenpunkt beschreibt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dataTipCalloutStroke" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Der Strich, der für das Rendern der Legendenlinie vom Datentippziel zum Tipp verwendet wird. Ist der Wert hierfür <codeph>null</codeph>, wird kein Strich gezeichnet.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="String" inherit="no" name="chartSeriesStyles" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Array">
<description>
  Enthält eine Liste von Strings, von denen jeder einem CSS-Typselektor entspricht, der als Standard-CSS-Stil für eine Serie verwendet werden soll. Jede Serie im Diagramm zeichnet einen CSS-Typselektor aus der im <codeph>chartSeriesStyles</codeph>-Stil enthaltenen Liste. Die erste Serie verwendet den ersten Selektor, die zweite den zweiten usw. Stileigenschaften in diesem Typselektor können durch Festlegen einer <codeph>styleName</codeph>-Eigenschaft für die Serie überschrieben werden.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile links vom Container in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente lautet <codeph>left</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten lautet der Standardwert <codeph>"center"</codeph>. Für diese Komponenten wird diese Eigenschaft nur erkannt, wenn die Eigenschaft <codeph>labelPlacement</codeph> auf <codeph>"left"</codeph> oder <codeph>"right"</codeph> gesetzt wurde. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl der zusätzlichen Pixel, die zwischen den Zeichen angezeigt werden. Durch einen positiven Wert wird der Zeichenabstand über den normalen Abstand hinaus vergrößert und durch einen negativen Wert verkleinert.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Der Begriff „Kerning“ bezeichnet die Anpassung des Zwischenraums zwischen bestimmten Zeichenpaaren zur Verbesserung der Lesbarkeit. Diese Funktion sollte nur verwendet werden, wenn sie unbedingt erforderlich ist, beispielsweise bei Überschriften in großen Schriftarten. Kerning wird nur für eingebettete FlashType-Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"bold"</codeph>. Für LegendItem lautet der Standardwert <codeph>"bold"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>thickness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelemente darstellen. Diese Eigenschaft gibt die Stärke der Glyphenkanten an. Mögliche Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln. Der Standardwert ist 10 für alle Steuerelemente mit Ausnahme des ColorPicker-Steuerelements. Für das ColorPicker-Steuerelement lautet der Standardwert 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft gibt die Schärfe der Glyphenkanten an. Mögliche Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Mögliche Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Der Name der zu verwendenden Schriftart. Anders als in einer vollständigen CSS-Implementierung werden durch Kommas getrennte Listen nicht unterstützt. Sie können den Namen einer beliebigen Schriftartfamilie verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in die entsprechende Geräteschriftart konvertiert.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>antiAliasType</codeph> von internen Textfeldern fest. Mögliche Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert lautet <codeph>"advanced"</codeph>, wodurch der FlashType-Renderer aktiviert wird, wenn Sie eine eingebettete FlashType-Schriftart verwenden. Wählen Sie <codeph>"normal"</codeph>, um den FlashType-Renderer zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente einschließlich der Komponentenbeschriftung.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie des Steuerelements und der rechten Kante des Inhaltsbereichs.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie des Steuerelements und der linken Kante des Inhaltsbereichs.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>Flex components inherit the following properties
  from the ChartBase class:</p>
   <pre>
  &lt;mx:<i>tagname</i>
    <strong>Properties</strong>
    allElements="<i>Array; No default</i>"
    annotationElements="<i>Array; No default</i>"
    backgroundElements="<i>Array; No default</i>"
    chartState="<i></i>"
    clipContent="false|true"
    dataProvider="<i>No default</i>"
    dataRegion"<i>No default</i>"
    dataTipFunction="<i>No default</i>"
    dataTipLayerIndex"<i>No default</i>"
    dataTipMode"<i>No default</i>"
    description"<i>No default</i>"
    dragEnabled="false|true"
    dragMoveEnabled="false|true"
    dropEnabled="false|true"
    labelElements"<i>No default</i>"
    legendData"<i>No default</i>"
    mouseSensitivity="5"
    selectedChartItem=<i>ChartItem; No default</i>"
    selectedChartItems=<i>Array; No default</i>"
    selectionMode="none|single|multiple"
    series="<i>No default</i>"
    seriesFilters"<i>No default</i>"
    showAllDataTips="true|false"
    showDataTips="true|false"
    transforms="<i>No default</i>"
    
    <strong>Styles</strong>
    chartSeriesStyles="<i>Style; No default</i>"
    dataTipCalloutStroke="<i>Stroke; No default</i>"
    dataTipRenderer="<i>Renderer; No default</i>"
    fill="<i>IFill; No default</i>"
    fontFamily="<i>Verdana</i>"
    fontSize="<i>10</i>"
    itemDisabledColor="<i>uint; No default</i>"
    itemRollOverColor="<i>uint; No default</i>"
    itemSelectionColor="<i>uint; No default</i>"
    maximumDataTipCount="NaN"
    paddingBottom="<i>No default</i>"
    paddingTop="<i>No default</i>"
    paddingLeft="<i>0</i>"
    paddingRight="<i>0</i>"
    showDataTipTargets="true|false"  
    
   <strong>Events</strong>
    change="<i>Event; No default</i>"
    itemClick="<i>Event; No default</i>"
    itemDoubleClick="<i>Event; No default</i>"
    itemMouseDown="<i>Event; No default</i>"
    itemMouseMove="<i>Event; No default</i>"
    itemMouseUp="<i>Event; No default</i>"
    itemRollOut="<i>Event; No default</i>"
    itemRollOver="<i>Event; No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ChartBase-Klasse ist der Verknüpfungspunkt zwischen der Flex-Komponentenarchitektur und der DualStyleObject-Architektur. Sie erweitert die Flex UIComponent-Basisklasse, enthält jedoch die DualStyleObject-Klassen.
   <p>Im Allgemeinen verwenden Sie die ChartBase-Klasse nicht direkt. Stattdessen verwenden Sie eine ihrer Unterklassen, wie etwa „PlotChart“ oder „BubbleChart“. Sie agiert als die Basisklasse für die im mx.charts-Paket bereitgestellten allgemeinen Diagrammtypen.</p>
  
  <p>Diese Klasse definiert eine Reihe von CSS-Stilen und -Eigenschaften, die einen einfachen Zugriff auf die allgemeineren Funktionen des Frameworks bieten.</p>
  
  <p>Die Mindestgröße eines Diagramms beträgt 20 x 20 Pixel. Die maximale Größe eines Diagramms ist unbegrenzt. Die bevorzugte Größe eines Diagramms beträgt 400 x 400 Pixel.</p>
  
  <p>ChartBase-Objekte und ihre Unterklassen bereichern die normalen Mausereignisobjekte um zusätzliche Daten, die den nächsten Datenpunkt unter der Maus beschreiben. Das Ereignisobjekt für Mausereignisse enthält eine zusätzliche Eigenschaft, <codeph>hitData</codeph>, welche ein den nächsten Datenpunkt beschreibendes HitData-Objekt enthält. Weitere Informationen zu den Inhalten des HitData-Objekts finden Sie unter „mx.charts.HitData“.</p>
  
  <p>ChartBase-Objekte berücksichtigen Datenpunkte nur innerhalb eines bestimmten Radius des Mauszeigers. Sie können diesen Radius mithilfe der Eigenschaft <codeph>mouseSensitivity</codeph> festlegen. Befindet sich kein Datenpunkt innerhalb des <codeph>mouseSensitivity</codeph>-Radius, ist der Wert für „event.hitData“ <codeph>null</codeph>.</p>
   </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird ausgelöst, wenn ein neuer Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein neuer Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird ausgelöst, wenn der nächste Datenpunkt unter dem Mauszeiger sich ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der nächste Datenpunkt unter dem Mauszeiger sich ändert. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_UP_itemMouseUp"><apiName>itemMouseUp</apiName><shortdesc>
  Wird ausgelöst, wenn beim Loslassen der Maus ein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_UP</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn beim Loslassen der Maus ein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_MOVE_itemMouseMove"><apiName>itemMouseMove</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Mauszeiger bewegt, während er sich über einem Datenpunkt befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_MOVE</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Mauszeiger bewegt, während er sich über einem Datenpunkt befindet. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_DOWN_itemMouseDown"><apiName>itemMouseDown</apiName><shortdesc>
  Wird ausgelöst, wenn bei gedrückter Maustaste ein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn bei gedrückter Maustaste ein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><shortdesc>
  Wird ausgelöst, wenn bei einem Doppelklick ein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn bei einem Doppelklick ein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.MOUSE_CLICK_DATA_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn bei einem Klick ein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.MOUSE_CLICK_DATA</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn bei einem Klick ein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartEvent.CHART_DOUBLE_CLICK_chartDoubleClick"><apiName>chartDoubleClick</apiName><shortdesc>
  Wird ausgelöst, wenn bei einem Doppelklick im Diagramm kein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartEvent.CHART_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn bei einem Doppelklick im Diagramm kein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartEvent.CHART_CLICK_chartClick"><apiName>chartClick</apiName><shortdesc>
  Wird ausgelöst, wenn bei einem Klick im Diagramm kein Datenpunkt unter dem Mauszeiger gefunden wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartEvent.CHART_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn bei einem Klick im Diagramm kein Datenpunkt unter dem Mauszeiger gefunden wird. Flex berücksichtigt nur Datenpunkte innerhalb des durch die Eigenschaft <codeph>mouseSensitivity</codeph> bestimmten Radius.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn die Auswahl sich im Diagramm ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Auswahl sich im Diagramm ändert.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:ChartBase:ChartBase"><apiName>ChartBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartBase:protected:addDragData"><apiName>addDragData</apiName><shortdesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag &amp; Drop-Vorgangs hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ds</apiItemName><apiType value="Object"/><apiDesc>Das DragSource-Objekt, dem die Daten hinzugefügt werden.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag &amp; Drop-Vorgangs hinzu. Sie können diese Methode überschreiben, um der Ziehquelle andere Daten hinzuzufügen.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:applySeriesSet"><apiName>applySeriesSet</apiName><shortdesc>
      Führt eine Vorverarbeitung der Serie und der Transformation für die Anzeige durch.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Array von Serien mit angewendetem Seriensatz.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>seriesSet</apiItemName><apiType value="Array"/><apiDesc>Ein Array von vorzuverarbeitenden Serien.
      </apiDesc></apiParam><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Die von der Serie verwendete Transformation.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Führt eine Vorverarbeitung der Serie und der Transformation für die Anzeige durch. Normalerweise rufen Sie diese Methode nicht direkt auf. Stattdessen wird diese Methode während des <codeph>commitProperties()</codeph>-Zyklus des Diagrammsteuerelements automatisch aufgerufen, wenn die Serie durch einen Aufruf der <codeph>invalidateSeries()</codeph>-Methode ungültig gemacht wurde.
      <p>Standardmäßig ruft diese Methode für jede Serie im Satz die <codeph>customizeSeries()</codeph>-Methode einmal auf. Unterklassen der Chart-Klasse können diese Methode überschreiben, um für den ganzen Seriensatz geltende Anpassungslogik hinzuzufügen.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:clearSelection"><apiName>clearSelection</apiName><shortdesc>
      Hebt die Auswahl aller im Diagrammsteuerelement ausgewählten Diagrammelemente auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Hebt die Auswahl aller im Diagrammsteuerelement ausgewählten Diagrammelemente auf. Setzt die <codeph>currentState</codeph>-Eigenschaft aller Elemente im Diagramm auf <codeph>none</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:customizeSeries"><apiName>customizeSeries</apiName><shortdesc>
      Wendet Anpassung und Formatierung auf die Serien des Diagramms pro Serie an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>seriesGlyph</apiItemName><apiOperationClassifier>mx.charts.chartClasses:Series</apiOperationClassifier><apiDesc>Die anzupassenden Serien.
      </apiDesc></apiParam><apiParam><apiItemName>i</apiItemName><apiType value="uint"/><apiDesc>Die Indexposition der Serien im Serien-Array.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wendet Anpassung und Formatierung auf die Serien des Diagramms pro Serie an. Diese Methode wird einmal für jede Serie aufgerufen, wenn die Serie durch einen Aufruf der <codeph>invalidateSeries()</codeph>-Methode geändert wurde.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Verarbeitet Ereignisse des Typs „DragEvent.DRAG_COMPLETE“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet Ereignisse des Typs <codeph>DragEvent.DRAG_COMPLETE</codeph>. Diese Methode entfernt das Element aus dem Datenprovider.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Verarbeitet Ereignisse des Typs „DragEvent.DRAG_DROP“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet Ereignisse des Typs <codeph>DragEvent.DRAG_DROP</codeph>. Diese Methode blendet das UI-Feedback aus, indem sie die <codeph>hideDropFeedback()</codeph>-Methode aufruft.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragEnterHandler"><apiName>dragEnterHandler</apiName><shortdesc>
      Verarbeitet Ereignisse des Typs „DragEvent.DRAG_ENTER“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet Ereignisse des Typs <codeph>DragEvent.DRAG_ENTER</codeph>. Diese Methode bestimmt, ob das DragSource-Objekt gültige Elemente enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode zum Konfigurieren des UI-Feedbacks.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragExitHandler"><apiName>dragExitHandler</apiName><shortdesc>
      Verarbeitet Ereignisse des Typs „DragEvent.DRAG_EXIT“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet Ereignisse des Typs <codeph>DragEvent.DRAG_EXIT</codeph>. Diese Methode blendet das UI-Feedback aus, indem sie die <codeph>hideDropFeedback()</codeph>-Methode aufruft.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragOverHandler"><apiName>dragOverHandler</apiName><shortdesc>
      Verarbeitet Ereignisse des Typs „DragEvent.DRAG_OVER“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet Ereignisse des Typs <codeph>DragEvent.DRAG_OVER</codeph>. Diese Methode bestimmt, ob das DragSource-Objekt gültige Elemente enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode zum Konfigurieren des UI-Feedbacks.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Die Standardprozedur für das dragStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>dragStart</codeph>-Ereignis.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:findDataPoints"><apiName>findDataPoints</apiName><shortdesc>
      Gibt ein Array von HitData-Objekten zurück, die den nächsten Datenpunkt an den an die Methode übergebenen Koordinaten beschreiben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von HitData-Objekten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die x-Koordinate bezogen auf das ChartBase-Objekt.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die y-Koordinate bezogen auf das ChartBase-Objekt.
           </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein Array von HitData-Objekten zurück, die den nächsten Datenpunkt an den an die Methode übergebenen Koordinaten beschreiben. Die Argumente <codeph>x</codeph> und <codeph>y</codeph> sollten Werte im Koordinatensystem des ChartBase-Objekts sein.
      <p>Diese Methode hält bei der Suche nach nahe gelegenen Datenpunkten die in der Eigenschaft <codeph>mouseSensitivity</codeph> des ChartBase-Objekts angegebenen Grenzen ein.</p>
           </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Gibt ein Array von HitData-Objekten zurück, die die Diagrammelemente in den zugrunde liegenden, die IChartElement2-Schnittstelle implementierenden Objekten repräsentieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von HitData-Objekten, die die Datenpunkte repräsentieren.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Gibt ein Array von HitData-Objekten zurück, die die Diagrammelemente in den zugrunde liegenden, die IChartElement2-Schnittstelle implementierenden Objekten repräsentieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das erste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      Ruft alle Diagrammelemente ab, die sich innerhalb des definierten rechteckigen Bereichs befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von ChartItem-Objekten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Der rechteckige Bereich.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft alle Diagrammelemente ab, die sich innerhalb des definierten rechteckigen Bereichs befinden. Sie können diese Methode aufrufen, um festzustellen, welche Diagrammelemente sich unter einem bestimmten rechteckigen Bereich befinden.
      <p>Einzelne Diagrammtypen bestimmen, ob ihr Diagrammelement sich unter diesem Bereich befindet. Der Punkt muss sich im globalen Koordinatenraum befinden.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das letzte Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das nächste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das vorherige Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:hideData"><apiName>hideData</apiName><shortdesc>
      Informiert das Diagramm darüber, dass sich die im Diagramm angezeigten zugrunde liegenden Daten geändert haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Informiert das Diagramm darüber, dass sich die im Diagramm angezeigten zugrunde liegenden Daten geändert haben. Diagrammserien und -elemente rufen diese Funktion auf, wenn ihr Rendering sich geändert hat, um ein koordiniertes Ausführen von Dateneffekten zum Ein- und Ausblenden auszulösen. Normalerweise rufen Sie diese Methode des Diagramms nicht direkt auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:hideDropFeedback"><apiName>hideDropFeedback</apiName><shortdesc>
      Blendet den Dropindikator aus, der anzeigt, dass ein Drag &amp; Drop-Vorgang zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Ein DragEvent-Objekt, das Informationen zur Mausposition enthält.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Blendet den Dropindikator aus, der anzeigt, dass ein Drag &amp; Drop-Vorgang zulässig ist.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateChildOrder"><apiName>invalidateChildOrder</apiName><shortdesc>
      Informiert das Diagramm darüber, dass seine Child-Liste geändert wurde und neu geordnet werden sollte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Informiert das Diagramm darüber, dass seine Child-Liste geändert wurde und neu geordnet werden sollte. Abgeleitete Diagrammklassen können diese Methode aufrufen, um beim nächsten <codeph>commitProperties()</codeph>-Zyklus einen Aufruf der diagramminternen <codeph>updateChildOrder()</codeph>-Methode auszulösen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Löst ein erneutes Zeichnen des Diagramms aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Löst ein erneutes Zeichnen des Diagramms aus. Rufen Sie diese Methode auf, wenn Sie die Serie(n) oder die Datenprovider des Diagramms ändern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:invalidateSeriesStyles"><apiName>invalidateSeriesStyles</apiName><shortdesc>
      Löst ein erneutes Zeichnen des Diagramms aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Löst ein erneutes Zeichnen des Diagramms aus. Rufen Sie diese Methode auf, wenn Sie die Stileigenschaften der Serie(n) des Diagramms ändern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateSeries"><apiName>invalidateSeries</apiName><shortdesc>
      Informiert das Diagramm darüber, dass sein Serien-Array geändert wurde und erneut verarbeitet werden sollte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Informiert das Diagramm darüber, dass sein Serien-Array geändert wurde und erneut verarbeitet werden sollte. Abgeleitete Diagrammklassen können diese Methode aufrufen, um beim nächsten <codeph>commitProperties()</codeph>-Zyklus einen Aufruf der diagramminternen <codeph>updateSeries()</codeph>-Methode auszulösen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:legendDataChanged"><apiName>legendDataChanged</apiName><shortdesc>
      Löst ein neues LegendDataChanged-Ereignis aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Löst ein neues LegendDataChanged-Ereignis aus.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:positionAllDataTips"><apiName>positionAllDataTips</apiName><shortdesc>
      Definiert die Positionen von DataTip-Objekten im Diagramm, wenn die Eigenschaft „showAllDataTips“ auf „true“ gesetzt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>hitSet</apiItemName><apiType value="Array"/><apiDesc>Ein Array von HitData-Objekten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Definiert die Positionen von DataTip-Objekten im Diagramm, wenn die Eigenschaft <codeph>showAllDataTips</codeph> auf <codeph>true</codeph> gesetzt ist. Diese Methode stellt sicher, dass DataTips sich nicht gegenseitig (wenn mehrere DataTips zu sehen sind) oder mit ihren Zieldatenelementen überschneiden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:positionDataTips"><apiName>positionDataTips</apiName><shortdesc>
      Definiert die Positionen von DataTip-Objekten im Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Definiert die Positionen von DataTip-Objekten im Diagramm. Diese Methode stellt sicher, dass DataTip-Objekte sich nicht gegenseitig (wenn mehrere DataTip-Objekte zu sehen sind) oder mit ihren Zieldatenelementen überschneiden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:showDropFeedback"><apiName>showDropFeedback</apiName><shortdesc>
      Zeigt einen Dropindikator unter dem Mauszeiger an, der darauf hinweist, dass ein Drag &amp; Drop-Vorgang zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Ein DragEvent-Objekt, das Informationen zur Mauszeigerposition enthält.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeigt einen Dropindikator unter dem Mauszeiger an, der darauf hinweist, dass ein Drag &amp; Drop-Vorgang zulässig ist. Der Dropindikator zeigt auch an, wo die Elemente abgelegt werden.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:updateAllDataTips"><apiName>updateAllDataTips</apiName><shortdesc>
      Zeigt alle nicht interaktiven Datentipps an, wenn „showAllDataTips“ eingestellt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeigt alle nicht interaktiven Datentipps an, wenn <codeph>showAllDataTips</codeph> eingestellt ist.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:ChartBase:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
      Der Wert dieser Konstanten wird an Methoden wie die getNextItem()- und die getPrevItem()-Methode übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert dieser Konstanten wird an Methoden wie die <codeph>getNextItem()</codeph>- und die <codeph>getPrevItem()</codeph>-Methode übergeben. Diese Methoden verwenden diese Konstante, um zu bestimmen, welches Element oder welche Serie ausgewählt werden soll, wenn der Benutzer eine Taste, wie die Pfeiltaste nach links, drückt. Wenn beispielsweise die Pfeiltaste nach links oder nach rechts gedrückt wurde, wird die Richtung auf „horizontal“ (<codeph>ChartBase.HORIZONTAL</codeph>) eingestellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
      Der Wert dieser Konstanten wird an Methoden wie die getNextItem()- und die getPrevItem()-Methode übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Wert dieser Konstanten wird an Methoden wie die <codeph>getNextItem()</codeph>- und die <codeph>getPrevItem()</codeph>-Methode übergeben. Diese Methoden verwenden diese Konstante, um zu bestimmen, welches Element oder welche Serie ausgewählt werden soll, wenn der Benutzer eine Taste, wie die Pfeiltaste nach links, drückt. Wenn beispielsweise die Pfeiltaste nach oben oder unten gedrückt wurde, wird die Richtung auf „vertikal“ (<codeph>ChartBase.VERTICAL</codeph>) eingestellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:allElements"><apiName>allElements</apiName><shortdesc>
      Der Satz aller im Diagramm angezeigten Diagrammelemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Der Satz aller im Diagramm angezeigten Diagrammelemente. Dieser Satz umfasst Serie, zweite Serie, Hintergrundelemente und Anmerkungselemente.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataTipFunction"><apiName>dataTipFunction</apiName><shortdesc>
      Gibt eine Rückrufmethode an, die zum Generieren von Datentipps aus Werten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      Gibt eine Rückrufmethode an, die zum Generieren von Datentipps aus Werten verwendet wird. Diese Methode sollte die folgende Signatur verwenden:
      <pre>
      function dataTipFunction(<i>hitData</i>:HitData):String
      </pre>
      <p>Diese Methode gibt einen String zurück, der für jeden Datenpunkt angezeigt wird. Der Text kann HTML-Formatierung enthalten. Der Parameter ist ein HitData-Objekt, das den Datenpunkt beschreibt.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:labelElements"><apiName>labelElements</apiName><shortdesc>
      Der Satz von Anzeigeobjekten, die die Beschriftungen für die Diagrammelemente darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Der Satz von Anzeigeobjekten, die die Beschriftungen für die Diagrammelemente darstellen. Manche Serien-, Anmerkungs- und Hintergrundtypen umfassen Überlagerungen solcher Elemente und Beschriftungen. Elemente können ein Anzeigeobjekt an das Diagramm übergeben, das die auf allen anderen Diagrammelementen zu platzierenden Überlagerungen enthält. Diagrammimplementoren können auf diese Überlagerungsobjekte im <codeph>labelElements</codeph>-Array zugreifen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:mouseSensitivity"><apiName>mouseSensitivity</apiName><shortdesc>
      Gibt den Abstand in Pixeln an, bei dem Flex davon ausgeht, dass sich ein Datenpunkt unter dem Mauszeiger befindet, wenn der Mauszeiger in einem Diagramm bewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/><apiDefaultValue>5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Abstand in Pixeln an, bei dem Flex davon ausgeht, dass sich ein Datenpunkt unter dem Mauszeiger befindet, wenn der Mauszeiger in einem Diagramm bewegt wird. Flex betrachtet einen Datenpunkt, der einen geringeren Abstand vom Mauszeiger als die in <codeph>mouseSensitivity</codeph> angegebenen Pixel aufweist, als unter dem Mauszeiger. Dieser Wert wird auch von der <codeph>findDataPoints</codeph>-Methode verwendet.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:annotationElements:get"><apiName>annotationElements</apiName><shortdesc>
      Legt ein Array von ChartElement-Objekten fest, das oberhalb der vom Diagramm gerenderten Datenserien angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Legt ein Array von ChartElement-Objekten fest, das oberhalb der vom Diagramm gerenderten Datenserien angezeigt wird. Jedes Element im Array muss die mx.charts.DualStyleObject-Klasse erweitern und die IChartElement2-Schnittstelle implementieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:backgroundElements:get"><apiName>backgroundElements</apiName><shortdesc>
      Legt ein Array von ChartElement-Hintergrundobjekten fest, die unterhalb der vom Diagramm gerenderten Datenserien angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Legt ein Array von ChartElement-Hintergrundobjekten fest, die unterhalb der vom Diagramm gerenderten Datenserien angezeigt werden. Jedes Element im Array muss die mx.charts.DualStyleObject-Klasse erweitern und die IChartElement2-Schnittstelle implementieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:chartState:get"><apiName>chartState</apiName><shortdesc>
      Der aktuelle Übergangsstatus des Diagramms.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Der aktuelle Übergangsstatus des Diagramms. Bestimmen Sie mithilfe dieser Eigenschaft, ob das Diagramm derzeit einen Übergang zum Ausblenden der alten Daten sowie einen Übergang zum Anzeigen der neuen Daten durchführt, oder ob alle Übergänge abgeschlossen sind und der aktuelle Datensatz des Diagramms angezeigt wird. Mögliche Werte finden Sie in der mx.charts.chartClasses.ChartState-Aufzählung.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:clipContent:get"><apiName>clipContent</apiName><shortdesc>
      Bestimmt, ob Flex das Diagramm auf den von den Achsen begrenzten Bereich zuschneidet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Bestimmt, ob Flex das Diagramm auf den von den Achsen begrenzten Bereich zuschneidet. Der Wert muss auf <codeph>false</codeph> gesetzt sein, damit das Diagramm zugeschnitten wird. Der Wert muss auf <codeph>true</codeph> gesetzt sein, um ein Zuschneiden zu vermeiden, wenn die Daten gerendert werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Legt den Datenprovider für das Diagramm fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Legt den Datenprovider für das Diagramm fest. Vom Diagramm gerenderte Datenserien wird dieser Datenprovider zugewiesen. Verwenden Sie zum Rendern ungleicher Datenserien im selben Diagramm die Eigenschaft <codeph>dataProvider</codeph> für die einzelnen Serien.
      
      <p>Diese Eigenschaft akzeptiert ein Array oder ein beliebiges anderes Objekt, das die IList- oder die ICollectionView-Schnittstelle implementiert.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich. Dieses Rechteck schließt den Bereich für Abstände, Achsenlinien und -beschriftungen sowie für Auffüllung nicht ein.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dataTipLayerIndex:get"><apiName>dataTipLayerIndex</apiName><shortdesc>
      Die Indexposition des untergeordneten Elements, das für das Rendern von Datentipps zuständig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition des untergeordneten Elements, das für das Rendern von Datentipps zuständig ist. Abgeleitete Klassen, die dem Diagramm grafische Elemente hinzufügen, sollten diese unter diesem Layer hinzufügen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataTipMode:get"><apiName>dataTipMode</apiName><shortdesc>
      Legt fest, wie Flex DataTip-Steuerelemente für das Diagramm anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Legt fest, wie Flex DataTip-Steuerelemente für das Diagramm anzeigt. DataTip-Steuerelemente ähneln ToolTip-Steuerelementen, außer dass sie einen geeigneten Wert anzeigen, der den nächsten Diagrammdatenpunkt unter dem Mauszeiger repräsentiert.
     
      <p>Die zulässigen Werte für <codeph>dataTipMode</codeph> sind:
       <ul>
        <li><codeph>"single"</codeph> - Datentipps werden für den nächsten Datenpunkt am Mauszeiger angezeigt.</li>
      
        <li><codeph>"multiple"</codeph> - Datentipps werden für jedes DataTip-Steuerelement innerhalb des Mauszeigerbereichs angezeigt. Sie können die Empfindlichkeit mit der Eigenschaft <codeph>mouseSensitivity</codeph> steuern.</li>
       </ul>
      </p>
     
      <p>Sie können DataTip-Steuerelemente mit der Eigenschaft <codeph>dataTipFunction</codeph> anpassen.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:description:get"><apiName>description</apiName><shortdesc>
      Eine kurze Beschreibung der Daten im Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Eine kurze Beschreibung der Daten im Diagramm. Bei aktivierten Eingabehilfen zur Barrierefreiheit verwenden Bildschirmlesehilfen diese Eigenschaft zum Beschreiben des Diagramms.
      <p>Der String ist standardmäßig ein leerer String und muss explizit vom Entwickler zugewiesen werden, damit er eine Bedeutung erhält.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dragEnabled:get"><apiName>dragEnabled</apiName><shortdesc>
      Gibt an, ob Sie Elemente aus diesem Diagramm ziehen und auf anderen Steuerelementen ablegen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob Sie Elemente aus diesem Diagramm ziehen und auf anderen Steuerelementen ablegen können. Ist <codeph>true</codeph> eingestellt, ist Ziehen für das Diagramm zulässig. Ist die Eigenschaft <codeph>dropEnabled</codeph> ebenfalls auf <codeph>true</codeph> eingestellt, können Sie Elemente ziehen und im Diagramm ablegen, um die Elemente neu zu ordnen.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dragImage:get"><apiName>dragImage</apiName><shortdesc>
      Bezieht eine Instanz einer Klasse, die die Grafik während eines Drag &amp; Drop-Vorgangs anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:IUIComponent"/><apiDefaultValue>mx.controls.chartClasses.ChartItemDragProxy
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bezieht eine Instanz einer Klasse, die die Grafik während eines Drag &amp; Drop-Vorgangs anzeigt.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Gibt an, welcher Anzeigecursor als Feedback des Ziehens angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, welcher Anzeigecursor als Feedback des Ziehens angezeigt werden soll. Ist der Wert hierfür <codeph>true</codeph> und die Eigenschaft <codeph>dragEnabled</codeph> ebenfalls <codeph>true</codeph> und die Strg-Taste nicht gedrückt, wird <codeph>moveCursor</codeph> als Feedback angezeigt. Ist die Strg-Taste gedrückt, wird <codeph>copyCursor</codeph> angezeigt. Ist der Wert hierfür <codeph>false</codeph> und die Eigenschaft <codeph>dragEnabled</codeph> ist <codeph>true</codeph>, wird <codeph>copyCursor</codeph> angezeigt, unabhängig davon, ob die Strg-Taste gedrückt ist.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dropEnabled:get"><apiName>dropEnabled</apiName><shortdesc>
      Ein Flag, das angibt, ob gezogene Elemente auf dem Diagramm abgelegt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob gezogene Elemente auf dem Diagramm abgelegt werden können.
           <p>Wenn Sie diese Eigenschaft auf <codeph>true</codeph> setzen, akzeptiert das Diagramm alle Datenformate und geht davon aus, dass die gezogenen Daten hinsichtlich des Formats mit den Daten im Datenprovider übereinstimmen. Um das Datenformat der gezogenen Daten explizit zu prüfen, müssen Sie mindestens eines der Drag-Ereignisse, wie etwa <codeph>dragOver</codeph>, verarbeiten und die <codeph>preventDefault()</codeph>-Methode des DragEvent aufrufen, um die Art und Weise, wie die Listenklasse abgelegte Daten akzeptiert, anzupassen.</p>
           <p>Wenn <codeph>dropEnabled</codeph> auf <codeph>true</codeph> eingestellt ist, ruft Flex automatisch die <codeph>showDropFeedback()</codeph>- und <codeph>hideDropFeedback()</codeph>-Methode auf, um den Dropindikator anzuzeigen.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:legendData:get"><apiName>legendData</apiName><shortdesc>
      Ein Array von Legendenelementen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="legendDataChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Legendenelementen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectedChartItem:get"><apiName>selectedChartItem</apiName><shortdesc>
      Gibt das ausgewählte ChartItem im Diagramm an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts:ChartItem</apiValueClassifier></apiValueDef><apiDesc>
      Gibt das ausgewählte ChartItem im Diagramm an. Sind mehrere Elemente ausgewählt, gibt diese Eigenschaft das zuletzt ausgewählte Element an.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectedChartItems:get"><apiName>selectedChartItems</apiName><shortdesc>
      Gibt ein Array aller ausgewählten ChartItem-Objekte im Diagramm an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Gibt ein Array aller ausgewählten ChartItem-Objekte im Diagramm an.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectionMode:get"><apiName>selectionMode</apiName><shortdesc>
      Gibt an, ob ChartItem-Objekte ausgewählt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>none
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob ChartItem-Objekte ausgewählt werden können. Mögliche Werte sind <codeph>none</codeph>, <codeph>single</codeph> oder <codeph>multiple</codeph>. Stellen Sie <codeph>none</codeph> ein, um die Auswahl von Diagrammelementen zu verhindern. Stellen Sie <codeph>single</codeph> ein, um die Auswahl von immer nur einem Element zuzulassen. Stellen Sie <codeph>multiple</codeph> ein, um die Auswahl eines oder mehrerer Diagrammelemente gleichzeitig zuzulassen.
      
      <P>Wenn Sie hier <codeph>single</codeph> oder <codeph>multiple</codeph> eingestellt haben, können Sie dies pro Serie durch Einstellen des Werts der Eigenschaft <codeph>selectable</codeph> der Serie auf <codeph>false</codeph> überschreiben. Wenn Sie den Wert der Eigenschaft <codeph>selectionMode</codeph> auf <codeph>none</codeph> eingestellt haben, sind Diagrammelemente nicht auswählbar, und dies unabhängig vom Wert der Eigenschaft <codeph>selectable</codeph> der Serie.</P>
           </apiDesc></apiValueDetail><related-links><link href="mx.charts.xml#ChartItem"><linktext>mx.charts.ChartItem</linktext></link><link href="mx.charts.chartClasses.xml#Series"><linktext>mx.charts.chartClasses.Series</linktext></link></related-links></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:seriesFilters:get"><apiName>seriesFilters</apiName><shortdesc>
      Ein Array von Filtern, die auf alle Serien im Diagramm angewendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Filtern, die auf alle Serien im Diagramm angewendet werden. Weisen Sie dieser Eigenschaft ein Array von Bitmapfiltern zu, um sie auf alle Serien gleichzeitig anzuwenden. Stellen Sie die Eigenschaft <codeph>seriesFilter</codeph> auf ein leeres Array ein, um die Standardfilter der Diagrammserien zu löschen. Wenn Sie Filter der für alle Serien geltenden Eigenschaft <codeph>seriesFilters</codeph> zuweisen, ist dies effizienter als wenn Sie sie den Serien einzeln zuweisen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:series:get"><apiName>series</apiName><shortdesc>
      Ein Array von Series-Objekten, die die Diagrammdaten definieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Series-Objekten, die die Diagrammdaten definieren. Jedes Diagramm definiert den Typ von Series-Objekten, die Sie zum Füllen dieses Arrays verwenden. Ein ColumnChart-Steuerelement erwartet beispielsweise ColumnSeries-Objekte als Teil dieses Arrays. Manche Diagramme akzeptieren beliebige Objekte des Typs „IChartElement2“ als Teil des Arrays. Im Allgemeinen erwartet jedoch jedes Diagramm einen bestimmten Typ.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:showAllDataTips:get"><apiName>showAllDataTips</apiName><shortdesc>
      Gibt an, ob Flex alle DataTip-Steuerelemente für das Diagramm anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt an, ob Flex alle DataTip-Steuerelemente für das Diagramm anzeigt. DataTip-Steuerelemente ähneln QuickInfos, außer dass sie einen geeigneten Wert anzeigen, der den Diagrammdatenpunkt repräsentiert.
      
      <p>Verschiedene Diagrammelemente zeigen möglicherweise verschiedene Stile von DataTip-Steuerelementen an. Beispielsweise zeigt ein gestapeltes Diagrammelement möglicherweise sowohl die Werte der Säule, als auch den Prozentsatz im Verhältnis zum Gesamtwert an.</p>
           <p>Sie können DataTip-Steuerelemente mit der Eigenschaft <codeph>dataTipFunction</codeph> anpassen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:showDataTips:get"><apiName>showDataTips</apiName><shortdesc>
      Gibt an, ob Flex DataTip-Steuerelemente für das Diagramm anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt an, ob Flex DataTip-Steuerelemente für das Diagramm anzeigt. DataTip-Steuerelemente ähneln QuickInfos, außer dass sie einen geeigneten Wert anzeigen, der den nächstgelegenen Diagrammdatenpunkt unter dem Mauszeiger repräsentiert.
      
      <p>Verschiedene Diagrammelemente zeigen möglicherweise verschiedene Stile von DataTip-Steuerelementen an. Beispielsweise zeigt ein gestapeltes Diagrammelement möglicherweise sowohl die Werte der Säule, als auch den Prozentsatz im Verhältnis zum Gesamtwert an.</p>
           <p>Sie können DataTip-Steuerelemente mit der Eigenschaft <codeph>dataTipFunction</codeph> anpassen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IChartElement2"><apiName>IChartElement2</apiName><shortdesc>
  IChartElement2 definiert den Basissatz an Eigenschaften und Methoden, die für eine UIComponent erforderlich sind, damit sie im Datenbereich eines Diagramms angezeigt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IChartElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IChartElement2 definiert den Basissatz an Eigenschaften und Methoden, die für eine UIComponent erforderlich sind, damit sie im Datenbereich eines Diagramms angezeigt werden kann. Jede der Serie, dem backgroundElements-Array oder dem annotationElements-Array eines Diagramms zugewiesene Komponente muss diese Schnittstelle implementieren.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Koordinaten relativ zum Diagramm.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Die in Koordinaten zu konvertierenden Datenwerte.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm. Rufen Sie diese Funktion auf, um Daten zu transformieren und auf den Bildschirm zu bringen, indem Sie die Transformation verwenden, die die einzelnen Elemente durchlaufen. Um beispielsweise eine benutzerdefinierte Hervorhebung für einen Datenbereich eines Diagramms zu erstellen, können Sie diese Funktion verwenden, um die Bildschirmkoordinaten des relevanten Bereichs zu bestimmen.
      
      <p>Bei kartesischen Diagrammelementen werden normalerweise zwei Werte übergeben. Der erste Wert wird der horizontalen und der zweite Wert der vertikalen Achse zugeordnet.</p>
      
      <p>Bei Polardiagrammen wird der erste Wert der Winkelachse und der zweite Wert der Radialachse zugeordnet.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Gibt ein Array von HitData der Elemente aller zugrunde liegenden Objekte zurück, die „IChartElement2“ implementieren, deren DataTips angezeigt werden sollen, wenn „showAllDataTips“ für das Diagramm auf „true“ eingestellt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die die Datenpunkte beschreibenden HitData-Objekte
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Gibt ein Array von HitData der Elemente aller zugrunde liegenden Objekte zurück, die <codeph>IChartElement2</codeph> implementieren, deren DataTips angezeigt werden sollen, wenn <codeph>showAllDataTips</codeph> für das Diagramm auf <codeph>true</codeph> eingestellt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:localToData"><apiName>localToData</apiName><shortdesc>
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Tupel von Datenwerten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>pt</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Der zu konvertierende Punkt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten. Rufen Sie diese Funktion auf, um festzustellen, welche Datenwerte ein bestimmter Punkt auf dem Bildschirm repräsentiert.
      <p>Einzelne Diagrammtypen bestimmen, wie diese Transformation stattfindet. Der Punkt sollte relativ zum Koordinatenraum des Diagramms sein.</p>
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarTransform"><apiName>PolarTransform</apiName><shortdesc>
  Das PolarTransform-Objekt repräsentiert einen Satz von Achsen zum Zuordnen von Datenwerten zu Winkel-/Abstandspolarkoordinaten (und umgekehrt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:DataTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das PolarTransform-Objekt repräsentiert einen Satz von Achsen zum Zuordnen von Datenwerten zu Winkel-/Abstandspolarkoordinaten (und umgekehrt).  
 
  <p>Normalerweise ist eine Interaktion mit dem PolarTransform-Objekt nicht erforderlich. Transformationen werden automatisch durch die integrierten Diagrammtypen erstellt und durch die darin enthaltenen Serien verwendet, um Daten in Renderkoordinaten zu transformieren.</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:PolarTransform:PolarTransform"><apiName>PolarTransform</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarTransform:setSize"><apiName>setSize</apiName><shortdesc>
      Legt die vom PolarTransform bei der Berechnung von Ursprung und Radius verwendete Breite und Höhe fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die Breite des PolarTransform in Pixeln.
      
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Höhe des PolarTransform in Pixeln. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die vom PolarTransform bei der Berechnung von Ursprung und Radius verwendete Breite und Höhe fest. Das enthaltende Diagramm ruft diese Methode auf. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten, das die Datenwerte in ihren Feldern enthält. Hier speichert diese Funktion auch die konvertierten numerischen Werte.
     
      </apiDesc></apiParam><apiParam><apiItemName>aField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die x-Achse zu finden sind.
     
      </apiDesc></apiParam><apiParam><apiItemName>aConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete x-Bildschirmkoordinate gespeichert wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>rField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die y-Achse zu finden sind.
     
      </apiDesc></apiParam><apiParam><apiItemName>rConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete y-Bildschirmkoordinate gespeichert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu. Bei dieser Methode wird davon ausgegangen, dass die Werte alle numerisch sind. Alle nicht numerischen Werte müssen demzufolge zuvor mit der <codeph>mapCache()</codeph>-Methode konvertiert worden sein.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:PolarTransform:ANGULAR_AXIS"><apiName>ANGULAR_AXIS</apiName><shortdesc>
      Ein String, der die Winkelachse repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>a</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Ein String, der die Winkelachse repräsentiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:RADIAL_AXIS"><apiName>RADIAL_AXIS</apiName><shortdesc>
      Ein String, der die Radialachse repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>r</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Ein String, der die Radialachse repräsentiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:origin:get"><apiName>origin</apiName><shortdesc>
      Der Ursprung der Polartransformation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Point"/></apiValueDef><apiDesc>
      Der Ursprung der Polartransformation. Dieser Punkt wird von zugeordneten Serien zum Konvertieren von Dateneinheiten zu Bildschirmkoordinaten verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:radius:get"><apiName>radius</apiName><shortdesc>
      Der von der Transformation zum Konvertieren von Dateneinheiten in Polarkoordinaten verwendete Radius.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der von der Transformation zum Konvertieren von Dateneinheiten in Polarkoordinaten verwendete Radius.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataTip"><apiName>DataTip</apiName><shortdesc>
  Das DataTip-Steuerelement stellt Diagrammbenutzern Informationen über einen Datenpunkt bereit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="yes" name="shadowColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Farbe unten innen der Skin einer Schaltfläche. Ein Bereich des dreidimensionalen Rahmens. Der Standardwert ist <codeph>0xEEEEEE</codeph> (hellgrau).
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie des Datentipps und seinem Inhaltsbereich. Der Standardwert ist 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie des Datentipps und seinem Inhaltsbereich. Der Standardwert ist 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Begrenzungsrahmenstil. Mögliche Werte sind <codeph>"none"</codeph>, <codeph>"solid"</codeph>, <codeph>"inset"</codeph> und <codeph>"outset"</codeph>. Der Standardwert ist <codeph>"inset"</codeph>.
 
  <p>Hinweis: Der <codeph>borderStyle</codeph>-Stil wird von der Schaltfläche oder dem Panel-Container nicht unterstützt. Um Bedienfelder mit durchgehenden Rahmen zu erstellen, legen Sie die Eigenschaft <codeph>borderThickness</codeph> fest und setzen die Eigenschaft <codeph>dropShadow</codeph> bei Bedarf auf <codeph>false</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Schwarzer Bereich eines dreidimensionalen Rahmens oder der farbige Bereich eines zweidimensionalen Rahmens. Die folgenden Komponenten unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. Der Standardwert hängt von der Komponentenklasse ab. Sofern nicht für die Klasse überschrieben, lautet er <codeph>0xAAB3B3</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Hintergrundfarbe der Komponente. Sie können eine <codeph>backgroundColor</codeph> oder ein <codeph>backgroundImage</codeph> definieren, jedoch nicht beides. Beachten Sie, dass einige Komponenten, wie Schaltflächen, keinen Hintergrund besitzen, da sie vollständig durch die Schaltflächenoberfläche oder anderen Grafiken ausgefüllt werden. Das DataGrid-Steuerelement ignoriert diesen Stil ebenfalls. Der Standardwert ist <codeph>undefined</codeph>. Wenn dieser Stil und der backgroundImage-Stil nicht definiert sind, weist das Steuerelement einen transparenten Hintergrund auf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile links vom Container in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente lautet <codeph>left</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten lautet der Standardwert <codeph>"center"</codeph>. Für diese Komponenten wird diese Eigenschaft nur erkannt, wenn die Eigenschaft <codeph>labelPlacement</codeph> auf <codeph>"left"</codeph> oder <codeph>"right"</codeph> gesetzt wurde. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl der zusätzlichen Pixel, die zwischen den Zeichen angezeigt werden. Durch einen positiven Wert wird der Zeichenabstand über den normalen Abstand hinaus vergrößert und durch einen negativen Wert verkleinert.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Der Begriff „Kerning“ bezeichnet die Anpassung des Zwischenraums zwischen bestimmten Zeichenpaaren zur Verbesserung der Lesbarkeit. Diese Funktion sollte nur verwendet werden, wenn sie unbedingt erforderlich ist, beispielsweise in Überschriften mit großen Schriften. Kerning wird nur für eingebettete erweiterte Anti-Aliasing-Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"bold"</codeph>. Für Schaltflächensteuerelemente ist die Standardeinstellung <codeph>"bold"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>thickness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft gibt die Stärke der Glyphenkanten an. Mögliche Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft wird nur auf erweiterte Anti-Aliasing-Schriftarten angewendet, wenn die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln. Der Standardwert ist 10 für alle Steuerelemente mit Ausnahme des ColorPicker-Steuerelements. Für das ColorPicker-Steuerelement lautet der Standardwert 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft gibt die Schärfe der Glyphenkanten an. Mögliche Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft wird nur auf erweiterte Anti-Aliasing-Schriftarten angewendet, wenn die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Mögliche Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft wird nur auf erweiterte Anti-Aliasing-Schriftarten angewendet, wenn die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Der Name der zu verwendenden Schriftart. Anders als in einer vollständigen CSS-Implementierung werden durch Kommas getrennte Listen nicht unterstützt. Sie können den Namen einer beliebigen Schriftartfamilie verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in die entsprechende Geräteschriftart konvertiert.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>antiAliasType</codeph> von internen Textfeldern fest. Mögliche Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>"advanced"</codeph>. Dies aktiviert das erweiterte Anti-Aliasing, wenn Sie eine eingebettete erweiterte Anti-Aliasing-Schriftart verwenden. Stellen Sie den Wert <codeph>"normal"</codeph> ein, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente einschließlich der Komponentenbeschriftung.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie des Steuerelements und der rechten Kante des Inhaltsbereichs.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie des Steuerelements und der linken Kante des Inhaltsbereichs.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Raum zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement beträgt 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das DataTip-Steuerelement stellt Diagrammbenutzern Informationen über einen Datenpunkt bereit. Bewegt ein Benutzer den Mauszeiger auf ein Grafikelement, zeigt das DataTip-Steuerelement einen Text mit Informationen zu diesem Element an. Sie können DataTip-Steuerelemente verwenden, um Benutzer bei ihrer Arbeit mit Ihrer Anwendung zu unterstützen, oder Sie können die DataTips anpassen, um zusätzliche Funktionen bereitzustellen.
 
  <p>Setzen Sie zum Aktivieren von DataTips in einem Diagramm die Eigenschaft <codeph>showDataTips</codeph> auf <codeph>true</codeph>.</p>
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.charts.chartClasses:DataTip_mx.events.FlexEvent.SHOW_show"><apiName>show</apiName><shortdesc>
  Wird ausgelöst, wenn die Komponente sichtbar wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Komponente sichtbar wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:DataTip_mx.events.FlexEvent.HIDE_hide"><apiName>hide</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Status eines Objekts von sichtbar in unsichtbar ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.HIDE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Status eines Objekts von sichtbar in unsichtbar ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:DataTip:DataTip"><apiName>DataTip</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:DataTip:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:DataTip:protected:measure"><apiName>measure</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:DataTip:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:DataTip:maxTipWidth"><apiName>maxTipWidth</apiName><shortdesc>
      Gibt die maximale Breite des Begrenzungsrahmens für neue DataTip-Steuerelemente in Pixeln an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>300</apiData><apiType value="Number"/><apiDefaultValue>300
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt die maximale Breite des Begrenzungsrahmens für neue DataTip-Steuerelemente in Pixeln an. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTip:data:get"><apiName>data</apiName><shortdesc>
      Die HitData-Struktur, die den vom DataTip gerenderten Datenpunkt beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die HitData-Struktur, die den vom DataTip gerenderten Datenpunkt beschreibt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTip:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
	  </apiDesc></apiValueDetail><apiInheritDoc/></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartItemDragProxy"><apiName>ChartItemDragProxy</apiName><shortdesc>
  Das standardmäßige Ziehproxy, das beim Ziehen von Elementen von einem Diagrammsteuerelement verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das standardmäßige Ziehproxy, das beim Ziehen von Elementen von einem Diagrammsteuerelement verwendet wird.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartItemDragProxy:ChartItemDragProxy"><apiName>ChartItemDragProxy</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.charts.chartClasses:IColumn"><apiName>IColumn</apiName><shortdesc>
  ChartElements, die entlang der vertikalen Achse in einem Cluster angeordnet werden können, sollten diese Schnittstelle implementieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  ChartElements, die entlang der vertikalen Achse in einem Cluster angeordnet werden können, sollten diese Schnittstelle implementieren. Jedes diese Schnittstelle implementierende Element kann als untergeordnete Serie eines ColumnSet-Elements verwendet werden, dessen <codeph>type</codeph>-Eigenschaft auf „clustered“ eingestellt ist. Die Klassen „ColumnSeries“, „HLOCSeries“, „CandleStickSeries“ und „ColumnSet“ implementieren alle diese Schnittstelle.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:columnWidthRatio:set"><apiName>columnWidthRatio</apiName><shortdesc>
	  Gibt die Breite der Elemente im Verhältnis zur Kategoriegröße an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Gibt die Breite der Elemente im Verhältnis zur Kategoriegröße an. Beim Wert <codeph>1</codeph> wird der gesamte Raum verwendet, beim Wert <codeph>0,6</codeph> dagegen 60 % des verfügbaren Raums des Elements. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Ein steuerndes ColumSet oder ColumnChart weist diesen Wert implizit zu. Als eigentliche Elementbreite wird entweder der Wert der Eigenschaft <codeph>columnWidthRatio</codeph> oder der Eigenschaft <codeph>maxColumnWidth</codeph> verwendet, abhängig davon, welcher Wert kleiner ist.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:maxColumnWidth:set"><apiName>maxColumnWidth</apiName><shortdesc>
	  Gibt die Breite der Elemente in Pixeln an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Gibt die Breite der Elemente in Pixeln an. Als eigentliche Elementbreite wird entweder der Wert dieser Eigenschaft oder der Eigenschaft <codeph>columnWidthRatio</codeph> verwendet, abhängig davon, welcher Wert kleiner ist. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Das ColumSet- oder das ColumnChart-Objekt weisen diesen Wert zu. Als eigentliche Elementbreite wird entweder der Wert der Eigenschaft <codeph>columnWidthRatio</codeph> oder der Eigenschaft <codeph>maxColumnWidth</codeph> verwendet, abhängig davon, welcher Wert kleiner ist.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:offset:set"><apiName>offset</apiName><shortdesc>
	  Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriegröße entfernt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriegröße entfernt ist. Der Wertebereich ist ein Prozentsatz zwischen <codeph>-100</codeph> und <codeph>100</codeph>. Bei der Einstellung <codeph>0</codeph> werden die Elemente im Raum zentriert. Bei der Einstellung <codeph>-50</codeph> werden die Elemente am Anfang des verfügbaren Raums zentriert. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Das ColumSet- oder das ColumnChart-Objekt weisen diesen Wert zu. 
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:StackedSeries"><apiName>StackedSeries</apiName><shortdesc>
  „StackedSeries“ dient als die gemeinsame Basisklasse für alle Stapelsatzserien („BarSet“, „ColumnSet“ und „AreaSet“).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:Series</apiBaseClassifier></apiClassifierDef><apiDesc>
  „StackedSeries“ dient als die gemeinsame Basisklasse für alle Stapelsatzserien („BarSet“, „ColumnSet“ und „AreaSet“). Eine StackedSeries akzeptiert ein Array von Subserienelementen und nimmt die erforderlichen Berechnungen vor, um sie vertikal zu stapeln, sodass jede Serie die Summe der Daten der vorhergehenden Serien plus den eigenen Wert rendert. Diese Klasse sollte nicht direkt verwendet werden.  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:StackedSeries:StackedSeries"><apiName>StackedSeries</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:buildSubSeries"><apiName>buildSubSeries</apiName><shortdesc>
      Verarbeitet ggf. das Array der untergeordneten Serie zur Anzeige.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Verarbeitet ggf. das Array der untergeordneten Serie zur Anzeige. Diese Methode stellt sicher, dass alle untergeordneten Serien als untergeordnete Objekte dieses Stapelsatzes hinzugefügt werden, und wendet alle erforderlichen Serienanpassungen an (beispielsweise Zuweisen vererbter Datenprovider oder Gruppierungseigenschaften).
      <p>Diese Methode informiert das Diagramm auch, wenn Serien geändert wurden und daher implizite Serienstile neu zugewiesen werden müssen. Diese Methode wird ggf. automatisch vom Stapelsatz aufgerufen. Statt diese Methode direkt aufzurufen, sollten Sie einen Aufruf der <codeph>invalidateSeries()</codeph>-Methode in Betracht ziehen.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:customizeSeries"><apiName>customizeSeries</apiName><shortdesc> 
      Wendet Anpassungen auf eine untergeordnete Serie an, um das Stapelverhalten zu bestimmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IChartElement</apiOperationClassifier><apiDesc>Das anzupassende Diagrammelement.
      
      </apiDesc></apiParam><apiParam><apiItemName>i</apiItemName><apiType value="uint"/><apiDesc>Die Position der untergeordneten Serie im Serien-Array.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Wendet Anpassungen auf eine untergeordnete Serie an, um das Stapelverhalten zu bestimmen. Standardmäßig weist diese Methode die vererbten Datenprovider den untergeordneten Serien zu. Abgeleitete Klassen können diese Methode überschreiben, um sie weiter anzupassen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:formatDataTip"><apiName>formatDataTip</apiName><shortdesc>
      Stellt den angepassten Text für DataTip-Objekte bereit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der angepasste Text für den DataTip. Die Standardeinstellung ist "" (leerer String). Sie müssen diese Methode überschreiben, um einen angepassten DataTip bereitzustellen.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>hitData</apiItemName><apiOperationClassifier>mx.charts:HitData</apiOperationClassifier><apiDesc>Das hitData-Objekt im Stapel.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Stellt den angepassten Text für DataTip-Objekte bereit. Stapelsätze überschreiben den DataTip-Text der untergeordneten Serien, die sie enthalten, um zusätzliche Informationen zum Stapelverhalten anzuzeigen. Abgeleitete Klassen müssen diese Methode überschreiben, um angepassten DataTip-Text zu definieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:invalidateSeries"><apiName>invalidateSeries</apiName><shortdesc>
      Rufen Sie diese Methode auf, um beim nächsten Aufruf der commitProperties()-Methode einen Aufruf der buildSubSeries()-Methode auszulösen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Rufen Sie diese Methode auf, um beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode einen Aufruf der <codeph>buildSubSeries()</codeph>-Methode auszulösen.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:invalidateStacking"><apiName>invalidateStacking</apiName><shortdesc>
      Rufen Sie diese Methode auf, um beim nächsten Aufruf der commitProperties()-Methode eine Neuerstellung der gestapelten Werte auszulösen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Rufen Sie diese Methode auf, um beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode eine Neuerstellung der gestapelten Werte auszulösen.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:stack"><apiName>stack</apiName><shortdesc>
      Aktualisiert die Seriendaten und verwendet beim Stapeln die Werte aus den jeweils darunter liegenden Stapeln. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert die Seriendaten und verwendet beim Stapeln die Werte aus den jeweils darunter liegenden Stapeln. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:updateStacking"><apiName>updateStacking</apiName><shortdesc>
      Durchläuft die einzelnen untergeordneten Serien, um die gestapelten Werte zu erstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Durchläuft die einzelnen untergeordneten Serien, um die gestapelten Werte zu erstellen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:StackedSeries:protected:negTotalsByPrimaryAxis"><apiName>negTotalsByPrimaryAxis</apiName><shortdesc>
      Die Summe der gestapelten negativen Werte insgesamt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Die Summe der gestapelten negativen Werte insgesamt. Diese Eigenschaft enthält ein Wörterbuch, dessen Schlüssel die durch die untergeordnete Serie entlang der primären Achse (z. B. x-Achsenwerte für eine ColumnSeries oder y-Achsenwerte für eine BarSeries) repräsentierten Werte sind, und dessen Werte die Gesamtsumme aller negativen Werte der untergeordneten Serien bei diesem Schlüssels sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:posTotalsByPrimaryAxis"><apiName>posTotalsByPrimaryAxis</apiName><shortdesc>
      Die Summe der gestapelten positiven Werte insgesamt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Die Summe der gestapelten positiven Werte insgesamt. Diese Eigenschaft enthält ein Wörterbuch, dessen Schlüssel die durch die untergeordnete Serie entlang der primären Achse (z. B. x-Achsenwerte für eine ColumnSeries oder y-Achsenwerte für eine BarSeries) repräsentierten Werte sind, und dessen Werte die Gesamtsumme aller positiven Werte der untergeordneten Serien bei diesem Schlüssels sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:stackedMaximum"><apiName>stackedMaximum</apiName><shortdesc>
      Die durch diese gestapelte Serie repräsentierte Höchstsumme.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch diese gestapelte Serie repräsentierte Höchstsumme.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:stackedMinimum"><apiName>stackedMinimum</apiName><shortdesc>
      Die durch diese gestapelte Serie repräsentierte Mindestsumme.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch diese gestapelte Serie repräsentierte Mindestsumme.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:allowNegativeForStacked:get"><apiName>allowNegativeForStacked</apiName><shortdesc>
      Durch Einstellen dieser Eigenschaft auf „true“ werden positive und negative Werte separat gestapelt.
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Durch Einstellen dieser Eigenschaft auf „true“ werden positive und negative Werte separat gestapelt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:series:get"><apiName>series</apiName><shortdesc>
      Ein Array von durch diesen Stapelsatz verwalteten untergeordneten Serien.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von durch diesen Stapelsatz verwalteten untergeordneten Serien. Diese Serien werden entsprechend des Stapelverhaltens dieses Stapelsatzes gerendert, wie durch den Wert der Eigenschaft <codeph>type</codeph> definiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:type:get"><apiName>type</apiName><shortdesc>
      Das Gruppierungsverhalten dieser Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Das Gruppierungsverhalten dieser Serie. Alle Stapelserien unterstützen <codeph>"overlaid"</codeph>, <codeph>"stacked"</codeph> und <codeph>"100%"</codeph>. Wenn die Eigenschaft <codeph>type</codeph> den Wert <codeph>"overlaid"</codeph> hat, werden alle untergeordneten Serien normal gerendert und kein spezielles Verhalten angewendet. Hat die Eigenschaft <codeph>type</codeph> den Wert <codeph>"stacked"</codeph>, wird jede untergeordnete Serie als die Summe ihrer Daten plus die Werte aller vorhergehenden Serien gerendert. Hat die Eigenschaft <codeph>type</codeph> den Wert <codeph>"100%"</codeph>, wird jede untergeordnete Serie als Anteil der Gesamtsumme aller Serien gerendert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:BoundedValue"><apiName>BoundedValue</apiName><shortdesc>
  Ein gebundener Wert wird verwendet, um den Datenpunkt zu repräsentieren, der von einem Diagrammelement auf dem Bildschirm gerendert werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein gebundener Wert wird verwendet, um den Datenpunkt zu repräsentieren, der von einem Diagrammelement auf dem Bildschirm gerendert werden soll. ChartElements melden BoundedValues, die ihre Daten beschreiben, an ein Achsenobjekt. Die Achse berechnet automatisch generierte Bereiche. Ein BoundedValue enthält sowohl den Wert des Datenpunkts in einer bestimmten Dimension, als auch einen Rand (in Pixel), den ein ChartElement über oder unter dem Wert benötigt, damit dieser ordnungsgemäß gerendert wird. Plots, beispielsweise auf einem Plotdiagramm, melden ihre Daten mit Rändern zur Anpassung an die Größe der Plots. Ein Säulendiagramm meldet möglicherweise einen Rand in der Y-Achse, sodass eine Beschriftung über dem Diagramm gerendert werden kann.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:BoundedValue:BoundedValue"><apiName>BoundedValue</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Der Wert, der gerendert werden soll.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>lowerMargin</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Der untere Rand.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>upperMargin</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Der obere Rand.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:BoundedValue:lowerMargin"><apiName>lowerMargin</apiName><shortdesc>
	  Der Rand in Pixel, der unter dem Wert erforderlich ist, damit dieser ordnungsgemäß gerendert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der Rand in Pixel, der unter dem Wert erforderlich ist, damit dieser ordnungsgemäß gerendert wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:BoundedValue:upperMargin"><apiName>upperMargin</apiName><shortdesc> 
	  Der Rand in Pixel, der über dem Wert erforderlich ist, damit dieser ordnungsgemäß gerendert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
	  Der Rand in Pixel, der über dem Wert erforderlich ist, damit dieser ordnungsgemäß gerendert wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:BoundedValue:value"><apiName>value</apiName><shortdesc>
	  Der Wert, der gerendert werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der Wert, der gerendert werden soll.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartLabel"><apiName>ChartLabel</apiName><shortdesc>
  Zeichnet Datenbeschriftungen auf Diagrammsteuerelementen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Zeichnet Datenbeschriftungen auf Diagrammsteuerelementen.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartLabel:ChartLabel"><apiName>ChartLabel</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:invalidateSize"><apiName>invalidateSize</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:measure"><apiName>measure</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:ChartLabel:data:get"><apiName>data</apiName><shortdesc>
	  Definiert die Inhalte der Beschriftung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
	  Definiert die Inhalte der Beschriftung.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarDataCanvas"><apiName>PolarDataCanvas</apiName><shortdesc>
 Die PolarDataCanvas-Klasse ermöglicht es dem Benutzer, in Verbindung mit Datenkoordinaten Grafik-API statt Bildschirmkoordinaten zu verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IDataCanvas</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
 Die PolarDataCanvas-Klasse ermöglicht es dem Benutzer, in Verbindung mit Datenkoordinaten Grafik-API statt Bildschirmkoordinaten zu verwenden.
 
 <p>Der Zeichenbereich für die Arbeitsfläche wird von <codeph>radialAxis</codeph> und <codeph>angularAxis</codeph> bestimmt, falls angegeben. Andernfalls werden zur Berechnung des Zeichenbereichs auf der Arbeitsfläche die Standardachsen des Diagramms herangezogen.</p>
 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:PolarDataCanvas:PolarDataCanvas"><apiName>PolarDataCanvas</apiName><shortdesc>
     Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Die DisplayObject-Instanz, die Sie im Parameter <codeph>child</codeph> übergeben.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Die DisplayObject-Instanz, die der DisplayObjectContainer-Instanz untergeordnet werden soll.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition, an der die untergeordnete Instanz hinzugefügt wird. Wenn Sie eine gerade besetzte Indexposition angeben, werden das untergeordnete Objekt an dieser Stelle sowie alle darüber liegenden Positionen innerhalb der Child-Liste um eine Position nach oben verschoben. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. Das untergeordnete Objekt wird an der angegebenen Indexposition eingefügt. Die Indexposition 0 bezeichnet das hintere (untere) Ende der Anzeigeliste für dieses DisplayObjectContainer-Objekt.
     
     <p>Wenn Sie ein Child-Objekt hinzufügen, das bereits einem anderen Anzeigeobjektcontainer untergeordnet worden ist, wird es aus dessen Child-Liste entfernt. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addChild"><apiName>addChild</apiName><shortdesc>
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addDataChild"><apiName>addDataChild</apiName><shortdesc>
     Dies fügt der aktuellen Arbeitsfläche ein beliebiges DisplayObject als untergeordnetes Objekt hinzu.
     
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>        Eine DisplayObject-Instanz, die der aktuellen Arbeitsfläche als untergeordnete Instanz hinzugefügt werden soll.
     </apiDesc></apiParam><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Linke Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Obere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Rechte Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Untere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>angleCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Mittlere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Dies fügt der aktuellen Arbeitsfläche ein beliebiges <codeph>DisplayObject</codeph> als untergeordnetes Objekt hinzu.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:beginBitmapFill"><apiName>beginBitmapFill</apiName><shortdesc>
     Füllt einen Zeichenbereich mit einer Bitmap.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bitmap</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>Eine transparente oder undurchsichtige Bitmap, die die anzuzeigenden Bits enthält. 
     
     </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Winkel, der die Position der Füllung angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur Füllung.
     
     </apiDesc></apiParam><apiParam><apiItemName>matrix</apiItemName><apiType value="flash.geom:Matrix"/><apiData>null</apiData><apiDesc>Ein Matrix-Objekt (der flash.geom.Matrix-Klasse), mit dem Sie Transformationen an der Bitmap definieren können. 
     
     </apiDesc></apiParam><apiParam><apiItemName>repeat</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Wenn <codeph>true</codeph> eingestellt ist, wird die Bitmap in einem Kachelmuster wiederholt. Bei <codeph>false</codeph> wird die Bitmap nicht wiederholt, und die Kanten der Bitmap werden für alle Füllbereiche verwendet, die über die Bitmap hinausgehen.
     
     </apiDesc></apiParam><apiParam><apiItemName>smooth</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Wenn <codeph>false</codeph> eingestellt ist, werden aufwärts skalierte Bilder mithilfe des „Nächster-Nachbar-Algorithmus“ wiedergegeben. Meist sind dann die einzelnen Pixelpunkte zu sehen. Wenn <codeph>true</codeph> eingestellt ist, werden aufwärts skalierte Bilder anhand eines bilinearen Algorithmus wiedergegeben. Eine Wiedergabe mithilfe des „Nächster-Nachbar-Algorithmus“ ist schneller. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Füllt einen Zeichenbereich mit einer Bitmap. Koordinaten sind in Bezug auf <codeph>angularAxis</codeph> oder <codeph>radialAxis</codeph> Eigenschaften der Arbeitsfläche.
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>beginBitmapFill()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/beginBitmapFill()"><linktext>flash.display.Graphics.beginBitmapFill()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:beginFill"><apiName>beginFill</apiName><shortdesc conref="flash.display.Graphics#beginFill()">
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>color</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1</apiData></apiParam></apiOperationDef><apiDesc conref="flash.display.Graphics#beginFill()">
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:clear"><apiName>clear</apiName><shortdesc>
     Löscht die Arbeitsfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Löscht die Arbeitsfläche.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:curveTo"><apiName>curveTo</apiName><shortdesc>
     Zeichnet eine Kurve im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (anchorX, anchorY) unter Verwendung des durch (controlX, controlY) angegebenen Steuerpunkts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controlAngle</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position des Steuerpunkts angibt. 
     
     </apiDesc></apiParam><apiParam><apiItemName>controlRadial</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zum Steuerpunkt. 
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorAngle</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position des Ankerpunkts angibt.  
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorRadial</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zum Ankerpunkt.  
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Kurve im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (anchorX, anchorY) unter Verwendung des durch (controlX, controlY) angegebenen Steuerpunkts. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>curveTo()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/curveTo()"><linktext>flash.display.Graphics.curveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:describeData"><apiName>describeData</apiName><shortdesc>
     
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ein Array, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Bestimmt die Achse, von der Datenbeschreibungen abgerufen werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawCircle"><apiName>drawCircle</apiName><shortdesc>
     Zeichnet einen Kreis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position des Kreismittelpunkts angibt. 
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zum Kreismittelpunkt. 
     
     </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc>Der Radius des Kreises (in Pixel). 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet einen Kreis. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawCircle()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawCircle()"><linktext>flash.display.Graphics.drawCircle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawEllipse"><apiName>drawEllipse</apiName><shortdesc>
     Zeichnet eine Ellipse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der oberen linken Ecke der Begrenzungsbox der Ellipse angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur oberen linken Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der unteren rechten Ecke der Begrenzungsbox der Ellipse angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur unteren rechten Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Ellipse. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawEllipse()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawEllipse()"><linktext>flash.display.Graphics.drawEllipse()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawRect"><apiName>drawRect</apiName><shortdesc>
     Zeichnet ein Rechteck.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der oberen linken Ecke des Rechtecks angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der unteren rechten Ecke des Rechtecks angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet ein Rechteck. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawRect()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRect()"><linktext>flash.display.Graphics.drawRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawRoundedRect"><apiName>drawRoundedRect</apiName><shortdesc>
     Zeichnet ein abgerundetes Rechteck.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der oberen linken Ecke des Rechtecks angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Der Winkel, der die Position der unteren rechten Ecke des Rechtecks angibt.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>cornerRadius</apiItemName><apiType value="Number"/><apiDesc>Der Radius der Ecken (in Pixel).
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet ein abgerundetes Rechteck. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawRoundRect()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRoundedRect()"><linktext>flash.display.Graphics.drawRoundedRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:endFill"><apiName>endFill</apiName><shortdesc conref="flash.display.Graphics#endFill()"> 
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#endFill()"> 
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Informiert die Arbeitsfläche, dass die zugrunde liegenden Daten im Datenprovider geändert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn sich die Daten geändert haben.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Arbeitsfläche, dass die zugrunde liegenden Daten im Datenprovider geändert wurden. Diese Funktion löst beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode Aufrufe der <codeph>updateMapping()</codeph>- und der <codeph>updateTransform()</codeph>-Methode aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:lineStyle"><apiName>lineStyle</apiName><shortdesc>
     Legt einen Linienstil fest, den Flash Player für nachfolgende Aufrufe von anderen Graphics-Methoden für das Objekt verwendet (z. B. lineTo() oder drawCircle()).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiDesc>Eine Ganzzahl, die die Stärke der Linie in Punkt angibt. Gültig sind Werte von 0 bis 255. Wenn keine Zahl angegeben ist oder wenn der Parameter den Wert „undefined“ aufweist, wird keine Linie gezeichnet. Wenn ein kleinerer Wert als 0 übergeben wird, ist der Standardwert 0. Der Wert 0 steht für die geringste Linienstärke. Der Höchstwert beträgt 255. Wenn ein größerer Wert als 255 übergeben wird, ist der Standardwert 255. 
     
     </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Der hexadezimale Farbwert der Linie (Rot ist beispielsweise 0xFF0000, Blau 0x0000FF usw.). Wird kein Wert angegeben, ist der Standardwert 0x000000 (Schwarz). 
     
     </apiDesc></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1.0</apiData><apiDesc>Eine Ganzzahl, die den Alphawert der Linienfarbe angibt. Gültig sind Werte von 0 bis 1. Wird kein Wert angegeben, ist der Standardwert 1 (einfarbige vollständige Füllung). Ist der Wert kleiner als 0, ist der Standardwert 0. Ist der Wert größer als 1, ist der Standardwert 1.
     
     </apiDesc></apiParam><apiParam><apiItemName>pixelHinting</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Ein boolescher Wert, der angibt, ob Striche als ganze Pixel angezeigt werden sollen. Dies wirkt sich sowohl auf die Positionen der Anker einer Kurve als auch auf die Linienstärke des Strichs selbst aus. Wenn <codeph>pixelHinting</codeph> auf true gesetzt ist, werden die Linienstärken auf volle Pixel eingestellt. Ist <codeph>pixelHinting</codeph> auf false gesetzt, können Kurven und gerade Linien unterbrochen sein.
     
     </apiDesc></apiParam><apiParam><apiItemName>scaleMode</apiItemName><apiType value="String"/><apiData>normal</apiData><apiDesc>Ein Wert aus der flash.display.LineScaleMode-Klasse, mit dem angegeben wird, welcher Skalierungsmodus verwendet werden soll:
     
     <ul>
       <li><codeph>LineScaleMode.NORMAL</codeph>: Die Linienstärke wird immer skaliert, wenn das Objekt skaliert wird (Standard).</li>
       <li><codeph>LineScaleMode.NONE</codeph>: Die Linienstärke wird nie skaliert.</li>
       <li><codeph>LineScaleMode.VERTICAL</codeph>: Die Linienstärke wird nicht skaliert, wenn das Objekt nur vertikal skaliert wird. </li>
       <li><codeph>LineScaleMode.HORIZONTAL</codeph>: Die Linienstärke wird nicht skaliert, wenn das Objekt nur horizontal skaliert wird. </li>
     </ul>
     
     </apiDesc></apiParam><apiParam><apiItemName>caps</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Ein Wert der flash.display.CapsStyle-Klasse, der den Stil der Linienenden definiert. Folgende Werte sind zulässig: <codeph>CapsStyle.NONE</codeph>, <codeph>CapsStyle.ROUND</codeph> und <codeph>CapsStyle.SQUARE</codeph>. Wenn kein Wert angegeben wird, verwenden Sie runde Enden. 
     
     </apiDesc></apiParam><apiParam><apiItemName>joints</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Ein Wert der flash.display.JointStyle-Klasse, der den Verbindungsstil für Winkel festlegt. Folgende Werte sind zulässig: <codeph>JointStyle.BEVEL</codeph>, <codeph>JointStyle.MITER</codeph> und <codeph>JointStyle.ROUND</codeph>. Wenn kein Wert angegeben wird, verwenden Sie runde Verbindungen. 
     
     </apiDesc></apiParam><apiParam><apiItemName>miterLimit</apiItemName><apiType value="Number"/><apiData>3</apiData><apiDesc>Eine Zahl, die die Grenze festlegt, an der ein Winkel abgeschnitten wird. Gültige Werte liegen im Bereich von 1 bis 255 (Werte außerhalb dieses Bereichs werden auf 1 oder 255 gerundet). Dieser Wert wird nur dann verwendet, wenn jointStyle auf „miter“ gesetzt wird. Der Wert <codeph>miterLimit</codeph> steht für die Länge, die ein Winkel über jenen Punkt hinausgehen kann, an dem zwei Linien eine Verbindung bilden. Der Wert drückt einen Faktor der Linieneigenschaft thickness aus. Bei einem <codeph>miterLimit</codeph>-Faktor von 2,5 und einer thickness von 10 Pixeln, wird der Winkel bei 25 Pixeln abgeschnitten. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Legt einen Linienstil fest, den Flash für nachfolgende Aufrufe von anderen Graphics-Methoden für das Objekt verwendet (z. B. <codeph>lineTo()</codeph> oder <codeph>drawCircle()</codeph>). 
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>lineStyle()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineStyle()"><linktext>flash.display.Graphics.lineStyle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:lineTo"><apiName>lineTo</apiName><shortdesc>
     Zeichnet eine Linie im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (Winkel, radial). Die aktuelle Zeichnungsposition wird dann auf (Winkel, radial) gesetzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Der Winkel der Zeichnungsposition.
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur Zeichnungsposition. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Linie im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (Winkel, radial). Die aktuelle Zeichnungsposition wird dann auf (Winkel, radial) gesetzt. Wenn das Anzeigeobjekt, in dem Sie zeichnen, mit den Flash-Zeichenwerkzeugen erstellte Objekte enthält, werden die Ergebnisse von Aufrufen der <codeph>lineTo()</codeph>-Methode unter diesen Objekten gezeichnet. Wenn Sie <codeph>lineTo()</codeph> vor der moveTo()-Methode aufrufen, wird die aktuelle Zeichnungsposition standardmäßig auf (0, 0) gesetzt. Wenn ein Parameter fehlt, schlägt die Ausführung dieser Methode fehl, und die aktuelle Zeichnungsposition wird beibehalten. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineTo()"><linktext>flash.display.Graphics.lineTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
     
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert. Das diesem ChartElement zugewiesene DataTransform ruft diese Methode auf, wenn eine der Achsen, die es repräsentiert in irgendeiner Weise geändert wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:moveTo"><apiName>moveTo</apiName><shortdesc>
     Verschiebt die aktuelle Zeichnungsposition auf (Winkel, radial).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Der Winkel der Zeichnungsposition.
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Der Abstand (in Pixel) von der Mitte des Diagramms zur Zeichnungsposition. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Verschiebt die aktuelle Zeichnungsposition auf (Winkel, radial). Wenn ein Parameter fehlt, schlägt die Ausführung dieser Methode fehl, und die aktuelle Zeichnungsposition wird beibehalten. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/moveTo()"><linktext>flash.display.Graphics.moveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeAllChildren"><apiName>removeAllChildren</apiName><shortdesc>
     Entfernt alle untergeordneten Datenobjekte (DisplayObject-Instanzen) von der Arbeitsfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Entfernt alle untergeordneten Datenobjekte (DisplayObject-Instanzen) von der Arbeitsfläche.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeChildAt"><apiName>removeChildAt</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeChild"><apiName>removeChild</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft „field“ den Wert „NaN“ hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Der Daten-Cache für das PolarDataCanvas-Objekt.
      
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Der Wert der Eigenschaft <codeph>field</codeph> des Elements. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft <codeph>field</codeph> den Wert <codeph>NaN</codeph> hat. Abgeleitete Klassen können diese Methode von ihrer <codeph>updateFilter()</codeph>-Implementierung aufrufen, um alle ChartItem-Objekte zu entfernen, die von den Achsen ausgefiltert wurden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:updateDataChild"><apiName>updateDataChild</apiName><shortdesc>
     Aktualisiert die Position aller der aktuellen Arbeitsfläche untergeordneten Objekte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>        Eine DisplayObject-Instanz, die der aktuellen Arbeitsfläche als untergeordnete Instanz hinzugefügt werden soll.
     </apiDesc></apiParam><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Linke Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Obere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Rechte Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Untere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>angleCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere Winkelkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>radialCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Mittlere Radialkoordinate des untergeordneten Objekts, in Datenkoordinaten.
     
     <p>Beispiel:
     <pre>
          var lbl:Label = new Label();
          lbl.text = "Last Month";
          canvas.addChild(lbl);
          canvas.updateDataChild(lbl,200,20);
     </pre>
     </p>
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Aktualisiert die Position aller der aktuellen Arbeitsfläche untergeordneten Objekte.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Wird aufgerufen, wenn die von der Arbeitsfläche dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der Arbeitsfläche dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden. Dazu kann es kommen, wenn die zugrunde liegenden Daten geändert wurden oder der Bereich der zugehörigen Achsen geändert wurde.
      
      <p>Wenn Sie einen angepassten Arbeitsflächentyp implementieren, müssen Sie diese Methode überschreiben und alle außerhalb liegenden Daten filtern, indem Sie die <codeph>filterCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation gesteuert werden. Die <codeph>filterCache()</codeph>-Methode wandelt alle Werte, die außerhalb des Bereichs liegen, in <codeph>NaN</codeph> um. Sie müssen sicherstellen, dass die <codeph>super.updateFilter()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird.</p>
      
      <p>Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>validateTransform()</codeph>-Methode der PolarDataCanvas-Klasse auf. </p>
      
      <p>Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>- und Ihre <codeph>updateMapping()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:validateData"><apiName>validateData</apiName><shortdesc>
      Ruft bei Bedarf die updateMapping()- und die updateFilter()-Methode der Arbeitsfläche auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei Bedarf die <codeph>updateMapping()</codeph>- und die <codeph>updateFilter()</codeph>-Methode der Arbeitsfläche auf. Diese Methode wird je nach Bedarf automatisch von der Arbeitsfläche von der <codeph>commitProperties()</codeph>-Methode aufgerufen. Eine abgeleitete Arbeitsfläche kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. 
      
      <p>Das Laden und Zuordnen der Daten zu den Achsen wurde so entwickelt, dass es für die Achsen jederzeit akzeptierbar ist. Diese Methode kann unbedenklich zu jedem Zeitpunkt aufgerufen werden.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      Ruft bei Bedarf die updateTransform()-Methode der Arbeitsfläche auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn sich die zugrunde liegenden Daten des Datenproviders geändert haben; andernfalls <codeph>false</codeph>.
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei Bedarf die <codeph>updateTransform()</codeph>-Methode der Arbeitsfläche auf. Diese Methode wird je nach Bedarf automatisch von der Arbeitsfläche während der <codeph>commitProperties()</codeph>-Methode aufgerufen. Eine abgeleitete Arbeitsfläche kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. Das Filtern und Transformieren von Daten beruht auf bestimmten Werten, die anhand der Achsen berechnet werden, welche ihrerseits von den im Diagramm angezeigten Daten abhängig sind. Wird diese Funktion zur falschen Zeit aufgerufen, kann dies zu zusätzlicher Arbeit führen, wenn diese Werte aktualisiert werden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:PolarDataCanvas:angularAxis:get"><apiName>angularAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der angularAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:includeInRanges:get"><apiName>includeInRanges</apiName><shortdesc>
     Wenn „true“, wirkt sich diese Arbeitsfläche auf den berechneten Bereich des Diagramms aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Wenn <codeph>true</codeph>, wirkt sich diese Arbeitsfläche auf den berechneten Bereich des Diagramms aus.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:radialAxis:get"><apiName>radialAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der Winkelachse als untergeordnetes Tag in MXML festzulegen oder ein LinearAxis- oder CategoryAxis-Objekt in ActionScript zu erstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist. Ein DataTransform-Objekt repräsentiert eine Verknüpfung zwischen einem Satz von Elementen und einem Satz von Achsenobjekten, die zum Transformieren dieser Elemente von Datenraumwerten zu Bildschirmkoordinaten (und umgekehrt) verwendet werden. Ein Diagrammelement verwendet sein verknüpftes DataTransform-Objekt zur Berechnung, wie seine Daten gerendert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IDataCanvas"><apiName>IDataCanvas</apiName><shortdesc>
  Diese Schnittstelle dient nur zur internen Verwendung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Diese Schnittstelle dient nur zur internen Verwendung. 
  
  </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="mx.charts.chartClasses:AxisBase"><apiName>AxisBase</apiName><shortdesc>
  Die AxisBase-Klasse dient als Basisklasse für die verschiedenen, von Flex unterstützten Achsentypen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>Flex components inherit the following properties
  from the AxisBase class:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    displayName="<i>No default</i>"
    title="<i>No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die AxisBase-Klasse dient als Basisklasse für die verschiedenen, von Flex unterstützten Achsentypen. 
 
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:AxisBase:AxisBase"><apiName>AxisBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:AxisBase:dataChanged"><apiName>dataChanged</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#dataChanged()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#dataChanged()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:protected:describeData"><apiName>describeData</apiName><shortdesc>
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Array von BoundedValue-Objekten, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.chartClasses.xml#BoundedValue"><linktext>mx.charts.chartClasses.BoundedValue</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:registerDataTransform"><apiName>registerDataTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#registerDataTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Das zu registrierende DataTransform.
     
      </apiDesc></apiParam><apiParam><apiItemName>dimensionName</apiItemName><apiType value="String"/><apiDesc>Der Name der Dimension.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#registerDataTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:unregisterDataTransform"><apiName>unregisterDataTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#unregisterDataTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Das DataTransform, für das die Registrierung aufzuheben ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#unregisterDataTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:AxisBase:displayName:get"><apiName>displayName</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#displayName">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#displayName">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:title:get"><apiName>title</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#title">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#title">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:unitSize:get"><apiName>unitSize</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#unitSize">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#unitSize">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#chartDataProvider">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#chartDataProvider">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:RenderData"><apiName>RenderData</apiName><shortdesc>
  RenderData-Strukturen werden von Diagrammelementen zum Speichern aller für das vollständige Rendern des Diagramms erforderlichen relevanten Werte und Daten verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  RenderData-Strukturen werden von Diagrammelementen zum Speichern aller für das vollständige Rendern des Diagramms erforderlichen relevanten Werte und Daten verwendet. Das Speichern dieser Werte in einer getrennten Struktur führt dazu, dass Diagramme nach Bedarf ihren Rendervorgang von den ihnen zugewiesenen Eigenschaften und Daten entkoppeln. Diese Funktion wird durch die Diagrammeffekte verwendet. Effekte wie „SeriesInterpolate“ ersetzen temporäre Werte, die aus vorhergehenden und zukünftigen renderData-Strukturen berechnet wurden. Effekte wie „SeriesSlide“ und „SeriesZoom“ ersetzen temporäre RenderData-Strukturen mit Werten, die für das korrekte Rendern des Effekts berechnet wurden.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:RenderData:RenderData"><apiName>RenderData</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Die Liste von ChartItems, die die Elemente im <codeph>dataProvider</codeph> der Serie darstellen.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredCache</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Die Liste der ChartItems, die die Elemente im <codeph>dataProvider</codeph> des Elements darstellen, die nach dem Filtern erhalten bleiben.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:RenderData:clone"><apiName>clone</apiName><shortdesc>
      Erstellt eine Kopie der Renderdaten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die neue Kopie des RenderData-Objekts.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:RenderData</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
      Erstellt eine Kopie der Renderdaten. In der neuen Kopie verweisen Eigenschaften, die auf andere Objekte verweisen, weiterhin auf dieselben Objekte wie im Original.
      
      <p>Wenn Sie diese Klasse zu einer Unterklasse machen, müssen Sie diese Methode überschreiben.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:RenderData:bounds"><apiName>bounds</apiName><shortdesc>
      Die Begrenzungen aller von einer Serie auf dem Bildschirm angezeigten Elemente relativ zum Koordinatensystem der Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Die Begrenzungen aller von einer Serie auf dem Bildschirm angezeigten Elemente relativ zum Koordinatensystem der Serie. Dieser Wert wird von den verschiedenen Effekten während des Renderns verwendet. Eine Serie füllt diesen Wert aus, wenn der Effekt die <codeph>getElementBounds()</codeph>-Methode aufruft. Eine Serie braucht dieses Feld nicht auszufüllen, es sei denn, es liegt eine explizite Anforderung vor.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:cache"><apiName>cache</apiName><shortdesc>
      Die Liste von ChartItems, die die Elemente im „dataProvider“ der Serie darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Die Liste von ChartItems, die die Elemente im <codeph>dataProvider</codeph> der Serie darstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:elementBounds"><apiName>elementBounds</apiName><shortdesc>
      Ein Array von Rechtecken, die die Begrenzungen der ChartItems der Serie relativ zum Koordinatensystem der Serie beschreiben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Rechtecken, die die Begrenzungen der ChartItems der Serie relativ zum Koordinatensystem der Serie beschreiben. Effekte verwenden dieses Array zum Generieren des Effektrendering. Ein Effekt ruft die <codeph>getElementBounds()</codeph>-Methode auf, wodurch die Serie diesen Wert ausfüllt. Eine Serie braucht dieses Feld nicht auszufüllen, es sei denn, es liegt eine explizite Anforderung vor. Effekte ändern dieses Array entsprechend den aktuellen Elementpositionen während der Dauer des Effekts. Ist dieser Wert für die <codeph>renderData</codeph> der Serie ausgefüllt, rendert die Serie sich selbst anhand dieser Rechtecke und nicht anhand der Seriendaten.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:filteredCache"><apiName>filteredCache</apiName><shortdesc>
      Die Liste der ChartItems, die die Elemente im „dataProvider“ des Elements darstellen, die nach dem Filtern erhalten bleiben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Die Liste der ChartItems, die die Elemente im <codeph>dataProvider</codeph> des Elements darstellen, die nach dem Filtern erhalten bleiben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:visibleRegion"><apiName>visibleRegion</apiName><shortdesc>
      Das Rechteck, das den möglichen, von einer Serie auf dem Bildschirm darstellbaren Koordinatenbereich beschreibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Das Rechteck, das den möglichen, von einer Serie auf dem Bildschirm darstellbaren Koordinatenbereich beschreibt. Dieser Wert wird von den verschiedenen Effekten während des Renderns verwendet. Ein Effekt ruft zum Ausfüllen dieses Werts die <codeph>getElementBounds()</codeph>-Methode auf. Eine Serie braucht dieses Feld nicht auszufüllen, es sei denn, es liegt eine explizite Anforderung vor. Wird der Wert bei <codeph>null</codeph> belassen, gehen Effekte davon aus, dass der sichtbare Bereich eines Elements die Begrenzungsbox des Elements selbst (0, 0, Breite, Höhe), ausgedrückt relativ zum Element, ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:length:get"><apiName>length</apiName><shortdesc>
      Die Anzahl der in diesen Renderdaten repräsentierten Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Die Anzahl der in diesen Renderdaten repräsentierten Elemente. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:NumericAxis"><apiName>NumericAxis</apiName><shortdesc>
  Die NumericAxis-Klasse agiert als gemeinsame Basisklasse für Achsentypen, die einen kontinuierlichen Wertebereich zwischen einem definierten Mindest- und Höchstwert darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IAxis</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:AxisBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die NumericAxis-Klasse agiert als gemeinsame Basisklasse für Achsentypen, die einen kontinuierlichen Wertebereich zwischen einem definierten Mindest- und Höchstwert darstellen. Die integrierten Klassen „LinearAxis“, „LogAxis“ und „DateTimeAxis“ erweitern alle diese Basisklasse.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#DateTimeAxis"><linktext>mx.charts.DateTimeAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.xml#LogAxis"><linktext>mx.charts.LogAxis</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:NumericAxis:NumericAxis"><apiName>NumericAxis</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:adjustMinMax"><apiName>adjustMinMax</apiName><shortdesc>
      Passt den generierten oder zugewiesenen Bereich der Achsenbeschriftungen an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>minValue</apiItemName><apiType value="Number"/><apiDesc>Der berechnete Mindestwert.
      </apiDesc></apiParam><apiParam><apiItemName>maxValue</apiItemName><apiType value="Number"/><apiDesc>Der berechnete Höchstwert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt den generierten oder zugewiesenen Bereich der Achsenbeschriftungen an. Diese Methode wird während des Aktualisierungszyklus der Achse aufgerufen. Unterklassen können diese Methode überschreiben, um spezielle Verarbeitungen der Werte vorzunehmen. Standardmäßig werden am Bereich keine Anpassungen vorgenommen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:buildLabelCache"><apiName>buildLabelCache</apiName><shortdesc>
      Füllt die Eigenschaft „labelCache“ mit Beschriftungen, die die aktuellen Werte der Achse darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>„true“, wenn die Beschriftungen neu erstellt wurden.
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      Füllt die Eigenschaft <codeph>labelCache</codeph> mit Beschriftungen, die die aktuellen Werte der Achse darstellen. Unterklassen müssen diese Funktion implementieren. Diese Funktion wird viele Male aufgerufen. Sie sollten deshalb prüfen, ob die Eigenschaft <codeph>labelCache</codeph> den Wert <codeph>null</codeph> hat, bevor Sie Berechnungen durchführen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:buildMinorTickCache"><apiName>buildMinorTickCache</apiName><shortdesc>
      Erstellt ein Array von Positionen für die kleineren Markierungen. Das Array wird durch diese Achse generiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Array der Positionen von 0 bis 1, die die Punkte zwischen den Mindest- und Höchstwerten der Achse darstellen, an denen kleinere Markierungen angezeigt werden.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Erstellt ein Array von Positionen für die kleineren Markierungen. Das Array wird durch diese Achse generiert. Unterklassen müssen diese Funktion implementieren. Diese Funktion wird automatisch von NumericAxis aufgerufen. Sie sollten auf die Eigenschaft <codeph>minorTicks</codeph> zugreifen, statt diese Funktion direkt aufzurufen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:filterCache"><apiName>filterCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von konvertierten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorgefilterten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredField</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die gefilterten Werte gespeichert werden sollten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:formatForScreen"><apiName>formatForScreen</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>Der Text des DataTip.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Der in eine Zeichenfolge zu konvertierende Wert. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:getLabelEstimate"><apiName>getLabelEstimate</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Ein Array von AxisLabel-Objekten.
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:getLabels"><apiName>getLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Ein Array von AxisLabel-Objekten.
      
      </apiDesc></apiReturn><apiParam><apiItemName>minimumAxisLength</apiItemName><apiType value="Number"/><apiDesc>Die Mindestlänge der Achse in Pixeln. Die Achse kann länger als dieser Wert sein, jedoch nicht kürzer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:guardMinMax"><apiName>guardMinMax</apiName><shortdesc>
      Schützt den Bereich gegen ungültige Werte für diesen Achsentyp.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>„null“, wenn keine Anpassung erforderlich ist oder ein Array die angepassten Werte in der Form <codeph>[min,max]</codeph> enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>min</apiItemName><apiType value="Number"/><apiDesc>Der berechnete Mindestwert.
      </apiDesc></apiParam><apiParam><apiItemName>max</apiItemName><apiType value="Number"/><apiDesc>Der berechnete Höchstwert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Schützt den Bereich gegen ungültige Werte für diesen Achsentyp. Diese Funktion wird während des Aktualisierungszyklus der Achse aufgerufen, um sicherzustellen, dass ungültige Bereiche nicht generiert werden. Unterklassen können diese Klasse überschreiben und eine diesem Achsentyp entsprechende Logik definieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:invalidateCache"><apiName>invalidateCache</apiName><shortdesc>
      Macht die Beschriftungen und Markierungen im Cache, die die Werte dieser Achse darstellen, ungültig.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Macht die Beschriftungen und Markierungen im Cache, die die Werte dieser Achse darstellen, ungültig. Abgeleitete Klassen sollten diese Funktion immer dann aufrufen, wenn bei der Berechnung von Beschriftungen und Markierungen verwendete Werte sich ändern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:invertTransform"><apiName>invertTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Ein Objekt mit dem umgewandelten Wert.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Die Grenze der Achse. Dieser Parameter sollte zwischen 0 und 1 liegen, wobei 0 die Mindestgrenze der Achse und 1 die Höchstgrenze der Achse ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:mapCache"><apiName>mapCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von konvertierten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorkonvertierten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die konvertierten Werte gespeichert werden sollten.
     
      </apiDesc></apiParam><apiParam><apiItemName>indexValues</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Dieser Parameter ist <codeph>true</codeph>, wenn die zugeordneten Werte Indexpositionswerte sind, und <codeph>false</codeph>, wenn sie natürliche Datenwerte sind.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:preferDropLabels"><apiName>preferDropLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn Beschriftungen ohne Datenverlust ausgelassen werden können, andernfalls <codeph>false</codeph>. 
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Eine neuer Beschriftungssatz, durch den das Problem der Überschneidung behoben wird, indem die Anzahl der Beschriftungen reduziert wird.
      
      </apiDesc></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Der Anfang des Intervalls, in dem sich Beschriftungen überschneiden.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Das Ende des Intervalls, in dem sich Beschriftungen überschneiden.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:transformCache"><apiName>transformCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von zugeordneten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorzugeordneten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die zugeordneten Werte gespeichert werden sollten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:update"><apiName>update</apiName><shortdesc>
      
      Aktualisiert das Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Aktualisiert das Diagramm. Diese Methode kann mehrmals pro Frame aufgerufen werden. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:NumericAxis:protected:assignedMaximum"><apiName>assignedMaximum</apiName><shortdesc>
      Der explizit zugewiesene Höchstwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der explizit zugewiesene Höchstwert. Wurde kein anderer Wert zugewiesen, lautet der Wert <codeph>NaN</codeph>. Normalerweise sollten Berechnungen mithilfe des Felds <codeph>computedMaximum</codeph> durchgeführt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:assignedMinimum"><apiName>assignedMinimum</apiName><shortdesc>
      Der explizit zugewiesene Mindestwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der explizit zugewiesene Mindestwert. Wurde kein anderer Wert zugewiesen, lautet der Wert <codeph>NaN</codeph>. Normalerweise sollten Berechnungen mithilfe des Felds <codeph>computedMinimum</codeph> durchgeführt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:computedInterval"><apiName>computedInterval</apiName><shortdesc>
      Das durch diese Achse dargestellte berechnete Intervall.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Das durch diese Achse dargestellte berechnete Intervall. Das <codeph>computedInterval</codeph> wird von der AxisRenderer- und der Gridlines-Klasse verwendet, um zu bestimmen, wo Markierungen und Gitterlinien gerendert werden sollen. Die NumericAxis-Basisklasse überwacht dieses Feld auf Änderungen, um zu bestimmen, ob das Diagramm erneut gerendert werden muss. Abgeleitete Klassen sind für die Berechnung des Werts für dieses Feld zuständig.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:computedMaximum"><apiName>computedMaximum</apiName><shortdesc>
      Der durch diese Achse dargestellte berechnete Höchstwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der durch diese Achse dargestellte berechnete Höchstwert. Hat der Benutzer explizit einen Höchstwert zugewiesen, sind die Eigenschaften <codeph>computedMaximum</codeph> und <codeph>assignedMaximum</codeph> normalerweise identisch. Andernfalls wird <codeph>computedMaximum</codeph> aus den im Diagramm dargestellten Werten generiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:computedMinimum"><apiName>computedMinimum</apiName><shortdesc>
      Der durch diese Achse dargestellte berechnete Mindestwert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der durch diese Achse dargestellte berechnete Mindestwert. Hat der Benutzer explizit einen Mindestwert zugewiesen, sind die Eigenschaften <codeph>computedMinimum</codeph> und <codeph>assignedMinimum</codeph> normalerweise identisch. Andernfalls wird <codeph>computedMinimum</codeph> aus den im Diagramm dargestellten Werten generiert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelCache"><apiName>labelCache</apiName><shortdesc>
      Der neueste Satz von AxisLabel-Objekten, die zur Darstellung dieser Achse generiert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Der neueste Satz von AxisLabel-Objekten, die zur Darstellung dieser Achse generiert wurden. Diese Eigenschaft ist <codeph>null</codeph>, wenn die Achse geändert wurde und neue Beschriftungen erfordert. Um die Korrektheit des Werts der Eigenschaft <codeph>labelCache</codeph> sicherzustellen, rufen Sie die <codeph>buildLabelCache()</codeph>-Methode auf, bevor Sie auf die Eigenschaft <codeph>labelCache</codeph> zugreifen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelMaximum"><apiName>labelMaximum</apiName><shortdesc>
      Der Höchstwert für die Position von Beschriftungen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der Höchstwert für die Position von Beschriftungen. Nach Berechnung eines angepassten Mindestwerts erweitern viele Achsentypen den Bereich der Achse weiter, um für zusätzliche, außertextliche Renderelemente im Diagramm, wie etwa Beschriftungen und Rahmen, Platz zu schaffen. Dieser Wert steht für den Höchstwert im Diagramm, <i>bevor</i> er für diese außertextlichen Elemente angepasst wird. Normalerweise generieren Achsen Beschriftungen, um sicherzustellen, dass dieser Wert, und nicht der angepasste Höchstwert der Achse, beschriftet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelMinimum"><apiName>labelMinimum</apiName><shortdesc>
      Der Mindestwert für die Position von Beschriftungen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Der Mindestwert für die Position von Beschriftungen. Nach Berechnung eines angepassten Mindestwerts erweitern viele Achsentypen den Bereich der Achse weiter, um für zusätzliche, außertextliche Renderelemente im Diagramm, wie etwa Beschriftungen und Rahmen, Platz zu schaffen. Dieser Wert steht für den Mindestwert im Diagramm, <i>bevor</i> er für diese außertextlichen Elemente angepasst wird. Normalerweise generieren Achsen Beschriftungen, um sicherzustellen, dass dieser Wert, und nicht der angepasste Mindestwert der Achse, beschriftet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:minorTickCache"><apiName>minorTickCache</apiName><shortdesc>
      Der neueste Satz von kleineren Markierungen, die zur Darstellung dieser Achse generiert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Der neueste Satz von kleineren Markierungen, die zur Darstellung dieser Achse generiert wurden. Diese Eigenschaft kann <codeph>null</codeph> sein, wenn die Achse geändert wurde und neue Beschriftungen und Markierungen erfordert. Verwenden Sie den öffentlichen Accessor <codeph>minorTicks</codeph> zum Erstellen der kleineren Markierungen bei Bedarf.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:autoAdjust:get"><apiName>autoAdjust</apiName><shortdesc>
      Gibt an, ob Flex Werte rundet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob Flex Werte rundet. Wenn <codeph>false</codeph>, rundet Flex die durch die Eigenschaften <codeph>minimum</codeph> und <codeph>maximum</codeph> gesetzten Werte nicht und ändert die Standardwerte für <codeph>minimum</codeph> und <codeph>maximum</codeph> nicht.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:baseAtZero:get"><apiName>baseAtZero</apiName><shortdesc>
      Gibt an, ob Flex versucht, die Verankerung der Werte „minimum“ und „maximum“ bei null beizubehalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob Flex versucht, die Verankerung der Werte <codeph>minimum</codeph> und <codeph>maximum</codeph> bei null beizubehalten. Sind alle Achsenwerte positiv, ist der Mindestwert für die Achse null. Sind alle Achsenwerte negativ, ist der Höchstwert für die Achse null.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:baseline:get"><apiName>baseline</apiName><shortdesc>
      Der berechnete Mindestwert für die Achse, wobei dieser Wert größer als 0 sein muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der berechnete Mindestwert für die Achse, wobei dieser Wert größer als 0 sein muss. Ist der Höchstwert kleiner gleich 0, ist der Wert der Eigenschaft <codeph>baseline</codeph> der berechnete Höchstwert. Wenn keiner der Werte größer als 0 ist, ist der Wert der Eigenschaft <codeph>baseline</codeph> 0.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:dataDescriptions:get"><apiName>dataDescriptions</apiName><shortdesc>
      Ein Array von DataDescription-Strukturen, die die durch das Diagramm dargestellten Daten beschreiben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von DataDescription-Strukturen, die die durch das Diagramm dargestellten Daten beschreiben. Eine Achse kann diese Eigenschaft zum Generieren von Werten, wie etwa ihrem Bereich, verwenden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:direction:get"><apiName>direction</apiName><shortdesc>
 	  Bestimmt die Richtung, in die die Achse gerendert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"normal"
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
 	  Bestimmt die Richtung, in die die Achse gerendert wird. Mögliche Werte sind <codeph>normal</codeph> und <codeph>inverted</codeph>. Bei allen abgeleiteten Klassen sollte berücksichtigt werden, wie „min“ und „max“ festgelegt sind, je nach <codeph>direction</codeph>. Bei allen Serien sollte die Art der Renderung berücksichtigt werden, je nach <codeph>direction</codeph> der zugrunde liegenden Achse. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Wird zum Formatieren von Achsenwerten zur Anzeige als Beschriftungen aufgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Wird zum Formatieren von Achsenwerten zur Anzeige als Beschriftungen aufgerufen. Eine <codeph>labelFunction</codeph> weist folgende Signatur auf:
      <pre>
      function <i>function_name</i>(<i>labelValue</i>:Object, <i>previousValue</i>:Object, <i>axis</i>:IAxis):String { ... }
      </pre>
      
      <p>Wenn Sie die Typen der Daten kennen, die von Ihrer Funktion formatiert werden, können Sie für die Parameter <codeph>labelValue</codeph> und <codeph>previousValue</codeph> einen expliziten Typ angeben.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:minorTicks:get"><apiName>minorTicks</apiName><shortdesc>
      Ein Array von kleineren Markierungen, der zur Darstellung dieser Achse generiert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von kleineren Markierungen, der zur Darstellung dieser Achse generiert wurde.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:padding:get"><apiName>padding</apiName><shortdesc>
      Legt die Zellauffüllung fest, die Flex dem berechneten Mindest- und Höchstwert für die Achse beim Rendern der Werte auf dem Bildschirm hinzufügt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Legt die Zellauffüllung fest, die Flex dem berechneten Mindest- und Höchstwert für die Achse beim Rendern der Werte auf dem Bildschirm hinzufügt.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:parseFunction:get"><apiName>parseFunction</apiName><shortdesc> 
      Geben Sie eine parseFunction an, um die Art und Weise anzupassen, in der die durch Ihr Diagramm gerenderten Werte in numerische Werte konvertiert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
      Geben Sie eine <codeph>parseFunction</codeph> an, um die Art und Weise anzupassen, in der die durch Ihr Diagramm gerenderten Werte in numerische Werte konvertiert werden. Die benutzerdefinierte <codeph>parseFunction</codeph> erhält einen Datenwert und sollte eine entsprechende Ganzzahl, die denselben Wert repräsentiert, zurückgeben. Standardmäßig verwenden diese Achsen die ECMA-Funktion <codeph>parseFloat()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:requiredDescribedFields:get"><apiName>requiredDescribedFields</apiName><shortdesc>
      Die Felder der DescribeData-Struktur, an denen diese Achse interessiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Die Felder der DescribeData-Struktur, an denen diese Achse interessiert ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:ticks:get"><apiName>ticks</apiName><shortdesc>
      Ein Array von Markierungen für diese Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Markierungen für diese Achse.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IStackable"><apiName>IStackable</apiName><shortdesc>
  Die IStackable-Schnittstelle wird durch jede stapelbare Serie implementiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IStackable-Schnittstelle wird durch jede stapelbare Serie implementiert. Stapelsätze („ColumnSet“, „BarSet“, „AreaSet“) erfordern, dass ihnen beim Stapeln zugewiesene untergeordnete Serien diese Schnittstelle implementieren.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stack"><apiName>stack</apiName><shortdesc>
	  Stapelt die Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Höchstwert in der neu gestapelten Serie.	 
	  
	  </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>stackedXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Enthält die Basiswerte, auf denen gestapelt wird. Die Schlüssel im Wörterbuch sind die y-Werte und die Werte entsprechen den x-Werten.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>previousElement</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IStackable</apiOperationClassifier><apiDesc>Das vorherige Element im Stapel. Wenn das Element beispielsweise den gleichen Typ aufweist, können Sie mit dieser Eigenschaft Arbeit beim Rendern sparen.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Stapelt die Serie. Normalerweise implementiert eine Serie die <codeph>updateData()</codeph>-Methode, um die Daten aus dem Datenprovider zu laden. Eine Stapelserie führt jedoch spezielle Vorgänge durch, da ihre Werte nicht unbedingt im Datenprovider gespeichert sind. Ihre Werte entsprechen den im Datenprovider gespeicherten Werten, zu denen die Werte addiert werden, die von dem darunter befindlichen Stapelobjekt geladen wurden.
	  <p>Eine angepasste Stapelserie muss die <codeph>stack()</codeph>-Methode implementieren, indem sie die Daten aus dem Datenprovider lädt und zu den Basisdaten im Wörterbuch addiert, um die tatsächlich gerenderten Werte abzurufen und die Werte im Wörterbuch durch die neuen, addierten Werte zu ersetzen.</p>
	  
	  </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stacker:get"><apiName>stacker</apiName><shortdesc>
	  Die StackedSeries, die mit dieser Serie verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:StackedSeries</apiValueClassifier></apiValueDef><apiDesc>
	  Die StackedSeries, die mit dieser Serie verknüpft ist. Der Stacker verwaltet das Stapelverhalten der Serie.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stackTotals:set"><apiName>stackTotals</apiName><shortdesc>
	  Die Gesamtsummen des Stapels für die Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
	  Die Gesamtsummen des Stapels für die Serie.
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IBar"><apiName>IBar</apiName><shortdesc>
  Die IBar-Schnittstelle wird von jeder vertikal stapelbaren Serie implementiert, wie z. B. eine BarSeries.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IBar-Schnittstelle wird von jeder vertikal stapelbaren Serie implementiert, wie z. B. eine BarSeries. Der BarSet-Serientyp erfordert, dass ihm zugewiesene untergeordnete Serien diese Schnittstelle implementieren.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:barWidthRatio:set"><apiName>barWidthRatio</apiName><shortdesc>
	  Gibt an, wie breit die Elemente im Verhältnis zur Kategorie gerendert werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Gibt an, wie breit die Elemente im Verhältnis zur Kategorie gerendert werden sollen. Beim Wert <codeph>1</codeph> wird der gesamte Raum verwendet, beim Wert <codeph>0,6</codeph> dagegen 60 % des verfügbaren Raums der Kategorie. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Ein steuerndes BarSet oder BarChart weist diesen Wert implizit zu. Als eigentliche Größe wird entweder die Eigenschaft <codeph>barWidthRatio</codeph> oder die Eigenschaft <codeph>maxbarWidth</codeph> verwendet, abhängig davon, welcher Wert kleiner ist.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:maxBarWidth:set"><apiName>maxBarWidth</apiName><shortdesc>
	  Gibt die Breite der Elemente in Pixeln an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Gibt die Breite der Elemente in Pixeln an. Als eigentliche Elementbreite wird entweder dieser Stil oder die Eigenschaft <codeph>barWidthRatio</codeph> verwendet, abhängig davon, welcher Wert kleiner ist. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Das BarSet- oder das BarChart-Objekt weisen diesen Wert zu.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:offset:set"><apiName>offset</apiName><shortdesc>
	  Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriegröße entfernt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Gibt an, wie weit die Mitte der Elemente von der Mitte des verfügbaren Raums im Bezug zur Kategoriegröße entfernt ist. Der Wertebereich ist ein Prozentsatz zwischen <codeph>-100</codeph> und <codeph>100</codeph>. Bei der Einstellung <codeph>0</codeph> werden die Elemente im Raum zentriert. Bei der Einstellung <codeph>-50</codeph> werden die Elemente am Anfang des verfügbaren Raums zentriert. Normalerweise legen Sie diese Eigenschaft nicht direkt fest. Das BarSet- oder das BarChart-Objekt weisen diesen Wert zu.
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:AxisLabelSet"><apiName>AxisLabelSet</apiName><shortdesc>
  Ein AxisLabelSet stellt die durch eine Implementierung von IAxis generierten Beschriftungs- und Markierungsdaten dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein AxisLabelSet stellt die durch eine Implementierung von IAxis generierten Beschriftungs- und Markierungsdaten dar.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:AxisLabelSet:AxisLabelSet"><apiName>AxisLabelSet</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:AxisLabelSet:accurate"><apiName>accurate</apiName><shortdesc>
      Ist bei Rückgabe durch die getLabelEstimate()-Methode auf „true“ eingestellt, wenn die Schätzung die endgültig zu rendernden Beschriftungen exakt repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ist bei Rückgabe durch die <codeph>getLabelEstimate()</codeph>-Methode auf <codeph>true</codeph> eingestellt, wenn die Schätzung die endgültig zu rendernden Beschriftungen exakt repräsentiert. Diese Eigenschaft ist in anderen Kontexten irrelevant.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:labels"><apiName>labels</apiName><shortdesc>
      Ein Array von AxisLabel-Objekten, die die Werte der generierenden Achse darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von AxisLabel-Objekten, die die Werte der generierenden Achse darstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:minorTicks"><apiName>minorTicks</apiName><shortdesc>
      Ein Array von Werten von 0 bis 1, die darauf hinweisen, wo kleinere Markierungen entlang der Achse platziert werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Werten von 0 bis 1, die darauf hinweisen, wo kleinere Markierungen entlang der Achse platziert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:ticks"><apiName>ticks</apiName><shortdesc>
      Ein Array von Werten von 0 bis 1, die darauf hinweisen, wo Markierungen entlang der Achse platziert werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Werten von 0 bis 1, die darauf hinweisen, wo Markierungen entlang der Achse platziert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianDataCanvas"><apiName>CartesianDataCanvas</apiName><shortdesc>
 Mit dieser Klasse können Sie grafische Elemente wie Linien Ellipsen und andere Formen hinzufügen, indem Sie eine Grafik-API verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataChildren"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:CartesianDataCanvas&gt;</code> tag inherits all the
  properties of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CartesianDataCanvas
    <strong>Properties</strong>
    dataChildren="<i>No default</i>"
    horizontalAxis="<i>No default</i>"
    includeInRanges="<i>false</i>"
    verticalAxis="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IDataCanvas</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
 Mit dieser Klasse können Sie grafische Elemente wie Linien Ellipsen und andere Formen hinzufügen, indem Sie eine Grafik-API verwenden. Die Werte die an die Grafik-API übergeben werden, sind in Datenkoordinaten, und nicht in Bildschirmkoordinaten ausgedrückt. Sie können der Arbeitsfläche auch ein beliebiges DisplayObject hinzufügen. Sie können dies auf dieselbe Weise tun, wie Sie einem Container untergeordnete Elemente hinzufügen.
 
 <p>Der Zeichenbereich für die Arbeitsfläche wird durch die <codeph>verticalAxis</codeph> und die <codeph>horizontalAxis</codeph> bestimmt, wenn diese angegeben wurden. Anderenfalls verwendet die Arbeitsfläche die Standardachsen des Diagramms zum Berechnen des Zeichenbereichs.</p>
 
 <p>Die als Parameter an die Zeichnungs-APIs übergebenen Datenkoordinaten können tatsächliche Werte der Datenkoordinate oder ein Objekt des Typs <codeph>CartesianCanvasValue</codeph> sein, welches eine Datenkoordinate und einen Offset in Pixeln enthalten kann.</p>
 
 </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:CartesianDataCanvas:CartesianDataCanvas"><apiName>CartesianDataCanvas</apiName><shortdesc>
     Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Die DisplayObject-Instanz, die Sie im Parameter <codeph>child</codeph> übergeben.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Die DisplayObject-Instanz, die der DisplayObjectContainer-Instanz untergeordnet werden soll.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition, an der die untergeordnete Instanz hinzugefügt wird. Wenn Sie eine gerade besetzte Indexposition angeben, werden das untergeordnete Objekt an dieser Stelle sowie alle darüber liegenden Positionen innerhalb der Child-Liste um eine Position nach oben verschoben. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. Das untergeordnete Objekt wird an der angegebenen Indexposition eingefügt. Die Indexposition 0 bezeichnet das hintere (untere) Ende der Anzeigeliste für dieses DisplayObjectContainer-Objekt.
     
     <p>Wenn Sie ein Child-Objekt hinzufügen, das bereits einem anderen Anzeigeobjektcontainer untergeordnet worden ist, wird es aus dessen Child-Liste entfernt. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addChild"><apiName>addChild</apiName><shortdesc>
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addDataChild"><apiName>addDataChild</apiName><shortdesc>
     Fügt der aktuellen Arbeitsfläche das angegebene Anzeigeobjekt als untergeordnetes Objekt hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>    Das Anzeigeobjekt, das der aktuellen Arbeitsfläche als untergeordnetes Objekt hinzugefügt werden soll.
     </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>     Linke x-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>      Obere y-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Rechte x-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Untere y-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>hCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere x-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>vCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere y-Koordinate des <codeph>child</codeph> in Datenkoordinaten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Fügt der aktuellen Arbeitsfläche das angegebene Anzeigeobjekt als untergeordnetes Objekt hinzu.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:beginBitmapFill"><apiName>beginBitmapFill</apiName><shortdesc>
     Füllt einen Zeichenbereich mit einer Bitmap.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bitmap</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>Eine transparente oder undurchsichtige Bitmap, die die anzuzeigenden Bits enthält. 
     
     </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Die x-Koordinate der Füllung.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Die y-Koordinate der Füllung.
     
     </apiDesc></apiParam><apiParam><apiItemName>matrix</apiItemName><apiType value="flash.geom:Matrix"/><apiData>null</apiData><apiDesc>Ein Matrix-Objekt (der flash.geom.Matrix-Klasse), mit dem Sie Transformationen an der Bitmap definieren können. 
     
     </apiDesc></apiParam><apiParam><apiItemName>repeat</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Wenn <codeph>true</codeph> eingestellt ist, wird die Bitmap in einem Kachelmuster wiederholt. Bei <codeph>false</codeph> wird die Bitmap nicht wiederholt, und die Kanten der Bitmap werden für alle Füllbereiche verwendet, die über die Bitmap hinausgehen.
     
     </apiDesc></apiParam><apiParam><apiItemName>smooth</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Wenn <codeph>false</codeph> eingestellt ist, werden aufwärts skalierte Bilder mithilfe des „Nächster-Nachbar-Algorithmus“ wiedergegeben. Meist sind dann die einzelnen Pixelpunkte zu sehen. Wenn <codeph>true</codeph> eingestellt ist, werden aufwärts skalierte Bilder anhand eines bilinearen Algorithmus wiedergegeben. Eine Wiedergabe mithilfe des „Nächster-Nachbar-Algorithmus“ ist schneller. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Füllt einen Zeichenbereich mit einer Bitmap. Die Koordinaten, die Sie an diese Methode übergeben, sind relativ zur horizontalen und vertikalen Achse der Arbeitsfläche.
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>beginBitmapFill()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/beginBitmapFill()"><linktext>flash.display.Graphics.beginBitmapFill()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:beginFill"><apiName>beginFill</apiName><shortdesc conref="flash.display.Graphics#beginFill()">
     Hinweis: Mit Ausnahme der Methoden beginGradientFill() und beginShaderFill() gelten die folgenden Informationen der beginFill()-Methode der flash.display.Graphics-Klasse für diese Methode:
      
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>color</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1</apiData></apiParam></apiOperationDef><apiDesc conref="flash.display.Graphics#beginFill()">
     <i>Hinweis: Mit Ausnahme der Methoden <codeph>beginGradientFill()</codeph> und <codeph>beginShaderFill()</codeph> gelten die folgenden Informationen der <codeph>beginFill()</codeph>-Methode der <codeph>flash.display.Graphics</codeph>-Klasse für diese Methode:</i>
      
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:clear"><apiName>clear</apiName><shortdesc conref="flash.display.Graphics#clear()">
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#clear()">
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:curveTo"><apiName>curveTo</apiName><shortdesc>
     Zeichnet eine Kurve im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (anchorX, anchorY) unter Verwendung des durch (controlX, controlY) angegebenen Steuerpunkts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controlX</apiItemName><apiType value="any"/><apiDesc>Die x-Koordinate des Steuerpunkts. 
     
     </apiDesc></apiParam><apiParam><apiItemName>controlY</apiItemName><apiType value="any"/><apiDesc>Die y-Koordinate des Steuerpunkts.
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorX</apiItemName><apiType value="any"/><apiDesc>Die x-Koordinate des Ankerpunkts. 
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorY</apiItemName><apiType value="any"/><apiDesc>Die y-Koordinate des Ankerpunkts.  
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Kurve im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (anchorX, anchorY) unter Verwendung des durch (controlX, controlY) angegebenen Steuerpunkts. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>curveTo()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/curveTo()"><linktext>flash.display.Graphics.curveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      
      
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Koordinaten relativ zum Diagramm.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Die in Koordinaten zu konvertierenden Datenwerte.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm. Rufen Sie diese Funktion auf, um Daten zu transformieren und auf den Bildschirm zu bringen, indem Sie die Transformation verwenden, die die einzelnen Elemente durchlaufen. Um beispielsweise eine benutzerdefinierte Hervorhebung für einen Datenbereich eines Diagramms zu erstellen, können Sie diese Funktion verwenden, um die Bildschirmkoordinaten des relevanten Bereichs zu bestimmen.
      
      <p>Bei kartesischen Diagrammelementen werden normalerweise zwei Werte übergeben. Der erste Wert wird der horizontalen und der zweite Wert der vertikalen Achse zugeordnet.</p>
      
      <p>Bei Polardiagrammen wird der erste Wert der Winkelachse und der zweite Wert der Radialachse zugeordnet.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:describeData"><apiName>describeData</apiName><shortdesc>
     
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ein Array, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Bestimmt die Achse, von der Datenbeschreibungen abgerufen werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawCircle"><apiName>drawCircle</apiName><shortdesc>
     Zeichnet einen Kreis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Die x-Position des Kreismittelpunkts (in Pixel). 
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Die y-Position des Kreismittelpunkts (in Pixel). 
     
     </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc>Der Radius des Kreises (in Pixel). 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet einen Kreis. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawCircle()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawEllipse"><apiName>drawEllipse</apiName><shortdesc>
     Zeichnet eine Ellipse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Die x-Position der oberen linken Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Die y-Position der oberen linken Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Die x-Position der unteren rechten Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Die y-Position der unteren rechten Ecke der Begrenzungsbox der Ellipse.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Ellipse. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawEllipse()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawEllipse()"><linktext>flash.display.Graphics.drawEllipse()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawRect"><apiName>drawRect</apiName><shortdesc>
     Zeichnet ein Rechteck.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Die x-Position der oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Die y-Position der oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Die x-Position der unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Die y-Position der unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet ein Rechteck. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawRect()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRect()"><linktext>flash.display.Graphics.drawRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawRoundedRect"><apiName>drawRoundedRect</apiName><shortdesc>
     Zeichnet ein abgerundetes Rechteck.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Die x-Position der oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Die y-Position der oberen linken Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Die x-Position der unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Die y-Position der unteren rechten Ecke des Rechtecks.
     
     </apiDesc></apiParam><apiParam><apiItemName>cornerRadius</apiItemName><apiType value="Number"/><apiDesc>Der Radius der Ecken (in Pixel).
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet ein abgerundetes Rechteck. Definieren Sie den Linienstil oder die Füllung oder beides, bevor Sie die <codeph>drawRoundRect()</codeph>-Methode aufrufen. Dazu rufen Sie die Methode <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> oder <codeph>beginBitmapFill()</codeph> auf. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRoundRect()"><linktext>flash.display.Graphics.drawRoundRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:endFill"><apiName>endFill</apiName><shortdesc conref="flash.display.Graphics#endFill()"> 
     Hinweis: Mit Ausnahme der beginGradientFill()-Methode gelten die folgenden Informationen der endFill()-Methode der flash.display.Graphics-Klasse für diese Methode:
     
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#endFill()"> 
     <i>Hinweis: Mit Ausnahme der <codeph>beginGradientFill()</codeph>-Methode gelten die folgenden Informationen der <codeph>endFill()</codeph>-Methode der <codeph>flash.display.Graphics</codeph>-Klasse für diese Methode:</i>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Informiert die Arbeitsfläche, dass die zugrunde liegenden Daten im Datenprovider geändert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn sich die Daten des Datenprovider geändert haben.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Arbeitsfläche, dass die zugrunde liegenden Daten im Datenprovider geändert wurden. Diese Methode löst beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode Aufrufe der <codeph>updateMapping()</codeph>- und der <codeph>updateTransform()</codeph>-Methode aus.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:lineStyle"><apiName>lineStyle</apiName><shortdesc>
     Legt einen Linienstil fest, den Flash Player für nachfolgende Aufrufe von anderen Graphics-Methoden für das Objekt verwendet (z. B. lineTo() oder drawCircle()).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiDesc>Eine Ganzzahl, die die Stärke der Linie in Punkt angibt. Gültig sind Werte von 0 bis 255. Wenn keine Zahl angegeben ist oder wenn der Parameter den Wert „undefined“ aufweist, wird keine Linie gezeichnet. Wenn ein kleinerer Wert als 0 übergeben wird, ist der Standardwert 0. Der Wert 0 steht für die geringste Linienstärke. Der Höchstwert beträgt 255. Wenn ein größerer Wert als 255 übergeben wird, ist der Standardwert 255. 
     
     </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Der hexadezimale Farbwert der Linie (Rot ist beispielsweise 0xFF0000, Blau 0x0000FF usw.). Wird kein Wert angegeben, ist der Standardwert 0x000000 (Schwarz). 
     
     </apiDesc></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1.0</apiData><apiDesc>Eine Ganzzahl, die den Alphawert der Linienfarbe angibt. Gültig sind Werte von 0 bis 1. Wird kein Wert angegeben, ist der Standardwert 1 (einfarbige vollständige Füllung). Ist der Wert kleiner als 0, ist der Standardwert 0. Ist der Wert größer als 1, ist der Standardwert 1.
     
     </apiDesc></apiParam><apiParam><apiItemName>pixelHinting</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Ein boolescher Wert, der angibt, ob Striche als ganze Pixel angezeigt werden sollen. Dies wirkt sich sowohl auf die Positionen der Anker einer Kurve als auch auf die Linienstärke des Strichs selbst aus. Wenn <codeph>pixelHinting</codeph> auf true gesetzt ist, werden die Linienstärken auf volle Pixel eingestellt. Ist <codeph>pixelHinting</codeph> auf false gesetzt, können Kurven und gerade Linien unterbrochen sein.
     
     </apiDesc></apiParam><apiParam><apiItemName>scaleMode</apiItemName><apiType value="String"/><apiData>normal</apiData><apiDesc>Ein Wert aus der flash.display.LineScaleMode-Klasse, mit dem angegeben wird, welcher Skalierungsmodus verwendet werden soll:
     
     <ul>
       <li><codeph>LineScaleMode.NORMAL</codeph>: Die Linienstärke wird immer skaliert, wenn das Objekt skaliert wird (Standard).</li>
       <li><codeph>LineScaleMode.NONE</codeph>: Die Linienstärke wird nie skaliert.</li>
       <li><codeph>LineScaleMode.VERTICAL</codeph>: Die Linienstärke wird nicht skaliert, wenn das Objekt nur vertikal skaliert wird. </li>
       <li><codeph>LineScaleMode.HORIZONTAL</codeph>: Die Linienstärke wird nicht skaliert, wenn das Objekt nur horizontal skaliert wird. </li>
     </ul>
     
     </apiDesc></apiParam><apiParam><apiItemName>caps</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Ein Wert der flash.display.CapsStyle-Klasse, der den Stil der Linienenden definiert. Folgende Werte sind zulässig: <codeph>CapsStyle.NONE</codeph>, <codeph>CapsStyle.ROUND</codeph> und <codeph>CapsStyle.SQUARE</codeph>. Wenn kein Wert angegeben wird, verwenden Sie runde Enden. 
     
     </apiDesc></apiParam><apiParam><apiItemName>joints</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Ein Wert der flash.display.JointStyle-Klasse, der den Verbindungsstil für Winkel festlegt. Folgende Werte sind zulässig: <codeph>JointStyle.BEVEL</codeph>, <codeph>JointStyle.MITER</codeph> und <codeph>JointStyle.ROUND</codeph>. Wenn kein Wert angegeben wird, verwenden Sie runde Verbindungen. 
     
     </apiDesc></apiParam><apiParam><apiItemName>miterLimit</apiItemName><apiType value="Number"/><apiData>3</apiData><apiDesc>Eine Zahl, die die Grenze festlegt, an der ein Winkel abgeschnitten wird. Gültige Werte liegen im Bereich von 1 bis 255 (Werte außerhalb dieses Bereichs werden auf 1 oder 255 gerundet). Dieser Wert wird nur dann verwendet, wenn jointStyle auf „miter“ gesetzt wird. Der Wert <codeph>miterLimit</codeph> steht für die Länge, die ein Winkel über jenen Punkt hinausgehen kann, an dem zwei Linien eine Verbindung bilden. Der Wert drückt einen Faktor der Linieneigenschaft thickness aus. Bei einem <codeph>miterLimit</codeph>-Faktor von 2,5 und einer thickness von 10 Pixeln, wird der Winkel bei 25 Pixeln abgeschnitten. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Legt einen Linienstil fest, den Flash für nachfolgende Aufrufe von anderen Graphics-Methoden für das Objekt verwendet (z. B. <codeph>lineTo()</codeph> oder <codeph>drawCircle()</codeph>). 
     
     <p>Verwendung und Parameter dieser Methode sind identisch mit denjenigen der <codeph>lineStyle()</codeph>-Methode der flash.display.Graphics-Klasse.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineStyle()"><linktext>flash.display.Graphics.lineStyle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:lineTo"><apiName>lineTo</apiName><shortdesc>
     Zeichnet eine Linie im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (x, y). Die aktuelle Zeichnungsposition wird dann auf (x, y) gesetzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Die x-Koordinate der Zeichnungsposition.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Die y-Koordinate der Zeichnungsposition. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Zeichnet eine Linie im aktuellen Linienstil von der aktuellen Zeichnungsposition zu (x, y). Die aktuelle Zeichnungsposition wird dann auf (x, y) gesetzt. Wenn das Anzeigeobjekt, in dem Sie zeichnen, mit den Flash-Zeichenwerkzeugen erstellte Objekte enthält, werden die Ergebnisse von Aufrufen der <codeph>lineTo()</codeph>-Methode unter diesen Objekten gezeichnet. Wenn Sie <codeph>lineTo()</codeph> vor der moveTo()-Methode aufrufen, wird die aktuelle Zeichnungsposition standardmäßig auf (0, 0) gesetzt. Wenn ein Parameter fehlt, schlägt die Ausführung dieser Methode fehl, und die aktuelle Zeichnungsposition wird beibehalten. Koordinaten beziehen sich auf Daten- statt auf Bildschirmkoordinaten. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineTo()"><linktext>flash.display.Graphics.lineTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:localToData"><apiName>localToData</apiName><shortdesc>
      
      
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das Tupel von Datenwerten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Der zu konvertierende Punkt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten. Rufen Sie diese Funktion auf, um festzustellen, welche Datenwerte ein bestimmter Punkt auf dem Bildschirm repräsentiert.
      <p>Einzelne Diagrammtypen bestimmen, wie diese Transformation stattfindet. Der Punkt sollte relativ zum Koordinatenraum des Diagramms sein.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
     
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert. Das diesem ChartElement zugewiesene DataTransform ruft diese Methode auf, wenn eine der Achsen, die es repräsentiert in irgendeiner Weise geändert wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:moveTo"><apiName>moveTo</apiName><shortdesc>
     Verschiebt die aktuelle Zeichnungsposition auf (x, y).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Die x-Koordinate der Zeichnungsposition.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Die y-Koordinate der Zeichnungsposition. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Verschiebt die aktuelle Zeichnungsposition auf (x, y). Wenn ein Parameter fehlt, schlägt die Ausführung dieser Methode fehl, und die aktuelle Zeichnungsposition wird beibehalten. Die Koordinaten, die Sie an diese Methode übergeben beziehen sich auf Diagrammdaten statt auf Bildschirmkoordinaten.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/moveTo()"><linktext>flash.display.Graphics.moveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeAllChildren"><apiName>removeAllChildren</apiName><shortdesc>
     Entfernt alle untergeordneten Datenobjekte (DisplayObject-Instanzen) von der Arbeitsfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Entfernt alle untergeordneten Datenobjekte (DisplayObject-Instanzen) von der Arbeitsfläche.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeChildAt"><apiName>removeChildAt</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeChild"><apiName>removeChild</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft „field“ den Wert „NaN“ hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Die zu vergleichende <codeph>field</codeph>-Eigenschaft.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft <codeph>field</codeph> den Wert <codeph>NaN</codeph> hat. Abgeleitete Klassen können diese Methode von ihrer updateFilter()-Implementierung aufrufen, um alle von den Achsen ausgefilterten ChartItems zu entfernen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:updateDataChild"><apiName>updateDataChild</apiName><shortdesc>
     Aktualisiert die Position aller der aktuellen Arbeitsfläche untergeordneten Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>    Das zu aktualisierende Anzeigeobjekt.
     </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>     Linke x-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>      Obere y-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Rechte x-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Untere y-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>hCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere x-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     </apiDesc></apiParam><apiParam><apiItemName>vCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Mittlere y-Koordinate des untergeordneten Objekts, in Datenkoordinaten.
     
     <p>Beispiel:
     <pre>
          var lbl:Label = new Label();
          lbl.text = "Last Month";
          canvas.addChild(lbl);
          canvas.updateDataChild(lbl,"Feb",200);
     </pre>
     </p>
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Aktualisiert die Position aller der aktuellen Arbeitsfläche untergeordneten Elemente.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Wird aufgerufen, wenn die von der Arbeitsfläche dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der Arbeitsfläche dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden. Dazu kann es kommen, wenn die zugrunde liegenden Daten geändert wurden oder der Bereich der zugehörigen Achsen geändert wurde. Wenn Sie einen angepassten Arbeitsflächentyp implementieren, müssen Sie diese Methode überschreiben und alle außerhalb liegenden Daten filtern, indem Sie die <codeph>filterCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation gesteuert werden. Die <codeph>filterCache()</codeph>-Methode wandelt alle Werte, die außerhalb des Bereichs liegen, in <codeph>NaN</codeph> um. Sie müssen sicherstellen, dass die <codeph>super.updateFilter()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>validateTransform()</codeph>-Methode der CartesianDataCanvas-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>- und Ihre <codeph>updateMapping()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:validateData"><apiName>validateData</apiName><shortdesc>
      Ruft bei Bedarf die updateMapping()- und die updateFilter()-Methode der Arbeitsfläche auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei Bedarf die <codeph>updateMapping()</codeph>- und die <codeph>updateFilter()</codeph>-Methode der Arbeitsfläche auf. Diese Methode wird je nach Bedarf automatisch von der Arbeitsfläche von der <codeph>commitProperties()</codeph>-Methode aufgerufen. Eine abgeleitete Arbeitsfläche kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. Das Laden und Zuordnen der Daten zu den Achsen wurde so entwickelt, dass es für die Achsen jederzeit akzeptierbar ist. Diese Methode kann unbedenklich zu jedem Zeitpunkt aufgerufen werden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      Ruft bei Bedarf die updateTransform()-Methode der Arbeitsfläche auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Gibt <codeph>true</codeph> zurück, wenn <codeph>updateTransform()</codeph> aufgerufen wurde. Andernfalls wird <codeph>false</codeph> zurückgegeben.
     
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei Bedarf die <codeph>updateTransform()</codeph>-Methode der Arbeitsfläche auf. Diese Methode wird je nach Bedarf automatisch von der Arbeitsfläche während der <codeph>commitProperties()</codeph>-Methode aufgerufen. Eine abgeleitete Arbeitsfläche kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. Das Filtern und Transformieren von Daten beruht auf bestimmten Werten, die anhand der Achsen berechnet werden, welche ihrerseits von den im Diagramm angezeigten Daten abhängig sind. Wird diese Funktion zur falschen Zeit aufgerufen, kann dies zu zusätzlicher Arbeit führen, wenn diese Werte aktualisiert werden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:dataChildren:get"><apiName>dataChildren</apiName><shortdesc>
     Ein Array von untergeordneten Objekten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
     Ein Array von untergeordneten Objekten.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalen Achse als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:includeInRanges:get"><apiName>includeInRanges</apiName><shortdesc>
     Wenn „true“, wirkt sich diese Arbeitsfläche auf den berechneten Bereich des Diagramms aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Wenn <codeph>true</codeph>, wirkt sich diese Arbeitsfläche auf den berechneten Bereich des Diagramms aus.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der vertikalen Achse als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist. Ein DataTransform-Objekt repräsentiert eine Verknüpfung zwischen einem Satz von Elementen und einem Satz von Achsenobjekten, die zum Transformieren dieser Elemente von Datenraumwerten zu Bildschirmkoordinaten (und umgekehrt) verwendet werden. Ein Diagrammelement verwendet sein verknüpftes DataTransform-Objekt zur Berechnung, wie seine Daten gerendert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IAxis"><apiName>IAxis</apiName><shortdesc>
  Die IAxis-Klasse ist eine abstrakte Schnittstelle zum Definieren der Positionseigenschaften von Beschriftungen, Markierungen und Daten für eine Achse in einem Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IAxis-Klasse ist eine abstrakte Schnittstelle zum Definieren der Positionseigenschaften von Beschriftungen, Markierungen und Daten für eine Achse in einem Diagramm.
 
  <p>Klassen implementieren diese Schnittstelle, um eine Bereichsdefinitionsfunktion bereitzustellen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:dataChanged"><apiName>dataChanged</apiName><shortdesc> 
      Löst Ereignisse aus, die das Bereichsobjekt informieren, wenn sich die Diagrammdaten geändert haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
      Löst Ereignisse aus, die das Bereichsobjekt informieren, wenn sich die Diagrammdaten geändert haben.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:filterCache"><apiName>filterCache</apiName><shortdesc>
      Filtert aus einem Satz von Werten beliebigen Typs einen Satz von Zahlen heraus, die zugeordnet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von konvertierten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorgefilterten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredString</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die gefilterten Werte gespeichert werden sollten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Filtert aus einem Satz von Werten beliebigen Typs einen Satz von Zahlen heraus, die zugeordnet werden können.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:formatForScreen"><apiName>formatForScreen</apiName><shortdesc>
      Formatiert Werte für die Anzeige in DataTips.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Text des DataTip.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Der in eine Zeichenfolge zu konvertierende Wert. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Formatiert Werte für die Anzeige in DataTips. Gibt einen vom Benutzer lesbaren String zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:getLabelEstimate"><apiName>getLabelEstimate</apiName><shortdesc>
      Bestimmt den Bereich, um die Achsenbeschriftungen zu schätzen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von AxisLabel-Objekten.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
      Bestimmt den Bereich, um die Achsenbeschriftungen zu schätzen. Die Achse ruft direkt im Anschluss daran die <codeph>getLabels()</codeph>-Methode auf, um die tatsächlichen Werte abzurufen. Die Achse verwendet die geschätzten Werte zum Anpassen der Ränder des Diagramms, sodass gegebenenfalls auftretende Unterschiede zwischen den geschätzten Beschriftungen und den tatsächlichen Beschriftungen (zurückgegeben von der <codeph>getLabels()</codeph>-Methode) dazu führen, dass die Beschriftungen passend skaliert werden.
     
      <p>Die Achse braucht für die Schätzung nur den Mindest- und den Höchstwert für die Beschriftung zurückzugeben. Ist der Beschriftungssatz relativ statisch und hängt nicht von der Größe der auf dem Bildschirm wiedergegebenen Achse ab, kann die Achse aus dieser Funktion heraus den gesamten Beschriftungssatz zurückgeben und die Schätzung als exakt zutreffend markieren.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:getLabels"><apiName>getLabels</apiName><shortdesc>
      Ruft den gerenderten Beschriftungstext ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von AxisLabel-Objekten.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>minimumAxisLength</apiItemName><apiType value="Number"/><apiDesc>Die Mindestlänge der Achse in Pixeln. Die Achse kann länger als dieser Wert sein, jedoch nicht kürzer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft den gerenderten Beschriftungstext ab. Wenn Flex diese Methode abruft, hat die Achse bereits die Mindestlänge der Beschriftung bestimmt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:invertTransform"><apiName>invertTransform</apiName><shortdesc>
      Ordnet eine Position entlang der Achse wieder einem numerischen Datenwert zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Objekt mit dem umgewandelten Wert.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Die Grenze der Achse. Dieser Parameter sollte zwischen 0 und 1 liegen, wobei 0 die Mindestgrenze der Achse und 1 die Höchstgrenze der Achse ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ordnet eine Position entlang der Achse wieder einem numerischen Datenwert zu.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:mapCache"><apiName>mapCache</apiName><shortdesc>
      Konvertiert einen Satz von Werten beliebigen Typs in einen Satz von Zahlen, die in Bildschirmkoordinaten transformiert werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von konvertierten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorkonvertierten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die konvertierten Werte gespeichert werden sollten.
     
      </apiDesc></apiParam><apiParam><apiItemName>indexValues</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Dieser Parameter ist <codeph>true</codeph>, wenn die zugeordneten Werte Indexpositionswerte sind, und <codeph>false</codeph>, wenn sie natürliche Datenwerte sind.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Konvertiert einen Satz von Werten beliebigen Typs in einen Satz von Zahlen, die in Bildschirmkoordinaten transformiert werden können.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:preferDropLabels"><apiName>preferDropLabels</apiName><shortdesc> 
      Bestimmt, wie die Achse sich überschneidende Beschriftungen verarbeitet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn Beschriftungen ohne Datenverlust ausgelassen werden können, andernfalls <codeph>false</codeph>. 
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
      Bestimmt, wie die Achse sich überschneidende Beschriftungen verarbeitet. Normalerweise geben numerische Bereiche den Wert <codeph>true</codeph> zurück, während diskrete wertbasierte Bereiche dies nicht tun. Sie können diese Eigenschaft überschreiben, indem Sie sie direkt an der Achse einstellen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc>
      Aufgerufen, wenn ein AxisRenderer die Beschriftungen ohne Überschneidungen nicht sauber rendern kann und eine Reduzierung des Beschriftungssatzes durch das Achsenobjekt benötigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Eine neuer Beschriftungssatz, durch den das Problem der Überschneidung behoben wird, indem die Anzahl der Beschriftungen reduziert wird.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Der Anfang des Intervalls, in dem sich Beschriftungen überschneiden.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Das Ende des Intervalls, in dem sich Beschriftungen überschneiden.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Aufgerufen, wenn ein AxisRenderer die Beschriftungen ohne Überschneidungen nicht sauber rendern kann und eine Reduzierung des Beschriftungssatzes durch das Achsenobjekt benötigt. An die Methode werden zwei sich überschneidende Beschriftungen übergeben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:registerDataTransform"><apiName>registerDataTransform</apiName><shortdesc>
      Jedes DataTransform, das eine Achse nutzt, registriert sich bei dieser Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Das zu registrierende DataTransform.
     
      </apiDesc></apiParam><apiParam><apiItemName>dimensionName</apiItemName><apiType value="String"/><apiDesc>Der Name der Dimension.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Jedes DataTransform, das eine Achse nutzt, registriert sich bei dieser Achse. Die Achse ist zuständig dafür, die Transformation zu informieren, wenn sich relevante Werte der Achse geändert haben. Die Achse muss auch Werte von der Transformation abfragen, wenn sie den Mindest- und den Höchstwert automatisch generieren möchte.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:transformCache"><apiName>transformCache</apiName><shortdesc>
      Ordnet einen Satz von Werten aus dem Datenraum Werten aus dem Bildschirmraum zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten zum Auslesen und Speichern von zugeordneten Werten.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, das die vorzugeordneten Werte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld der Objekte im Cache-Array, in dem die zugeordneten Werte gespeichert werden sollten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ordnet einen Satz von Werten aus dem Datenraum Werten aus dem Bildschirmraum zu.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:unregisterDataTransform"><apiName>unregisterDataTransform</apiName><shortdesc>
      Jedes DataTransform, das eine Achse nutzt, registriert sich bei dieser Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Das DataTransform, für das die Registrierung aufzuheben ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Jedes DataTransform, das eine Achse nutzt, registriert sich bei dieser Achse. Die Achse ist zuständig dafür, die Transformation zu informieren, wenn sich relevante Werte der Achse geändert haben. Die Achse muss auch Werte von der Transformation abfragen, wenn sie den Mindest- und den Höchstwert automatisch generieren möchte.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:update"><apiName>update</apiName><shortdesc>
      Aktualisiert das Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert das Diagramm. Diese Methode kann mehrmals pro Frame aufgerufen werden. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:baseline:get"><apiName>baseline</apiName><shortdesc>
      Die Grundlinienposition der Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Grundlinienposition der Achse. Einige Serien wie ColumnSeries oder AreaSeries verwenden diesen Wert zum Definieren der Basis eines ausgefüllten Bereichs, wenn kein Mindestwert angegeben ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:displayName:get"><apiName>displayName</apiName><shortdesc> 
      Der Name der Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> 
      Der Name der Achse. Ist dieser Name festgelegt, verwendet Flex ihn zum Formatieren der DataTip-Steuerelemente.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:title:get"><apiName>title</apiName><shortdesc>
      Der Text für den entlang der Achse angezeigten Titel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Der Text für den entlang der Achse angezeigten Titel.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:unitSize:get"><apiName>unitSize</apiName><shortdesc>
      Die Größe einer Einheit von Daten, wie sie durch diese Achse dargestellt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Größe einer Einheit von Daten, wie sie durch diese Achse dargestellt wird. Dieser Wert wird von verschiedenen Serientypen zur Unterstützung des Rendervorgangs verwendet. Die ColumnSeries-Klasse verwendet diesen Wert beispielsweise, um zu bestimmen, in welcher Breite die Säulen gerendert werden sollen. Verschiedene Achsentypen geben verschiedene Werte zurück. Dies hängt manchmal von den dargestellten Daten ab. Die DateTimeAxis-Klasse gibt z. B. möglicherweise die Anzahl der Millisekunden eines Tages oder eines Jahres zurück, abhängig von den im Diagramm gerenderten Daten. Da dieser Wert vom Erfassen der dargestellten Daten abhängt, können benutzerdefinierte Serien in ihrer <codeph>updateData()</codeph>- oder <codeph>updateMapping()</codeph>-Methode nicht davon ausgehen, dass dieser Wert exakt ist. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider. Datenproviderbasierte Achsentypen können wahlweise den mit dem umschließenden Diagramm verknüpften Datenprovider erben. Wird eine Achse von mehreren Diagrammen gemeinsam verwendet, ist der Wert dieser Eigenschaft <codeph>undefined</codeph> (höchstwahrscheinlich der einem der verknüpften Diagramme zuletzt zugewiesene Datenprovider).
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarChart"><apiName>PolarChart</apiName><shortdesc>
  Das PolarChart-Steuerelement dient als Basisklasse für Kreisdiagramme, die auf Polarkoordinaten basieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das PolarChart-Steuerelement dient als Basisklasse für Kreisdiagramme, die auf Polarkoordinaten basieren.
  
  <p>Die Mindestgröße eines Diagramms beträgt 20 x 20 Pixel. </p>
  <p>Die maximale Größe eines Diagramms ist unbegrenzt.  </p>
  <p>Die bevorzugte Größe eines Diagramms beträgt 400 x 400 Pixel. </p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.chartClasses.xml#ChartBase"><linktext>mx.charts.chartClasses.ChartBase</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:PolarChart:PolarChart"><apiName>PolarChart</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarChart:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das erste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das letzte Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das nächste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das vorherige Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:PolarChart:angularAxis:get"><apiName>angularAxis</apiName><shortdesc>
      Das Achsenobjekt, das verwendet wird, um Datenwerte einem Winkel zwischen 0 und 2 PI zuzuordnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Das Achsenobjekt, das verwendet wird, um Datenwerte einem Winkel zwischen 0 und 2 PI zuzuordnen. Standardmäßig ist dies eine lineare Achse, für die die Eigenschaft <codeph>autoAdjust</codeph> auf <codeph>false</codeph> gesetzt ist. Auf diese Art werden Datenwerte dem Diagramm einheitlich zugeordnet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich. Dieses Rechteck schließt den Bereich für Abstände, Achsenlinien und -beschriftungen sowie für Auffüllung nicht ein.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:radialAxis:get"><apiName>radialAxis</apiName><shortdesc>
      Das Achsenobjekt, das zum Zuordnen von Datenwerten zu einem radialen Abstand zwischen dem Mittelpunkt und dem äußeren Rand des Diagramms verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Das Achsenobjekt, das zum Zuordnen von Datenwerten zu einem radialen Abstand zwischen dem Mittelpunkt und dem äußeren Rand des Diagramms verwendet wird. Standardmäßig ist dies eine lineare Achse, für die die Eigenschaft <codeph>autoAdjust</codeph> auf <codeph>false</codeph> gesetzt ist. So werden Datenwerte im Diagramm einheitlich von innen nach außen zugeordnet. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianChart"><apiName>CartesianChart</apiName><shortdesc>
  Die CartesianChart-Klasse ist eine Basisklasse für die gebräuchlichen Diagrammtypen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style arrayType="String" inherit="no" name="verticalAxisStyleNames" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Array">
<description>
  Ein Array von Klassenselektoren, die die Stileigenschaften für vertikale Achsen definieren.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="String" inherit="no" name="horizontalAxisStyleNames" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Array">
<description>
  Ein Array von Klassenselektoren, die die Stileigenschaften für horizontale Achsen definieren.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterTop" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Größe des Bereichs zwischen dem oberen Rand des Diagrammdatenbereichs und dem oberen Rand des Diagrammsteuerelements in Pixeln.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterRight" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Größe des Bereichs zwischen dem rechten Rand des Diagrammdatenbereichs und dem äußeren Rand des Diagrammsteuerelements in Pixeln.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterLeft" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Größe des Bereichs zwischen dem linken Rand des Diagrammdatenbereichs und dem linken Rand des Diagrammsteuerelements in Pixeln.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterBottom" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Größe des Bereichs zwischen dem unteren Rand des Diagrammdatenbereichs und dem unteren Rand des Diagrammsteuerelements in Pixeln.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="gridLinesStyleName" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Der Klassenselektor, der die Stileigenschaften für die Standardgitterlinien definiert. Wenn Sie die Eigenschaft <codeph>backgroundElements</codeph> explizit in Ihrem Diagramm einstellen, wird dieser Wert ignoriert.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="axisTitleStyleName" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Der Name des CSS-Klassenselektors, der beim Formatieren von Achsentiteln verwendet wird.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile links vom Container in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente lautet <codeph>left</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten lautet der Standardwert <codeph>"center"</codeph>. Für diese Komponenten wird diese Eigenschaft nur erkannt, wenn die Eigenschaft <codeph>labelPlacement</codeph> auf <codeph>"left"</codeph> oder <codeph>"right"</codeph> gesetzt wurde. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl der zusätzlichen Pixel, die zwischen den Zeichen angezeigt werden. Durch einen positiven Wert wird der Zeichenabstand über den normalen Abstand hinaus vergrößert und durch einen negativen Wert verkleinert.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Der Begriff „Kerning“ bezeichnet die Anpassung des Zwischenraums zwischen bestimmten Zeichenpaaren zur Verbesserung der Lesbarkeit. Diese Funktion sollte nur verwendet werden, wenn sie unbedingt erforderlich ist, beispielsweise bei Überschriften in großen Schriftarten. Kerning wird nur für eingebettete FlashType-Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"bold"</codeph>. Für LegendItem lautet der Standardwert <codeph>"bold"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>thickness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelemente darstellen. Diese Eigenschaft gibt die Stärke der Glyphenkanten an. Mögliche Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln. Der Standardwert ist 10 für alle Steuerelemente mit Ausnahme des ColorPicker-Steuerelements. Für das ColorPicker-Steuerelement lautet der Standardwert 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft gibt die Schärfe der Glyphenkanten an. Mögliche Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Mögliche Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft wird nur angewendet, wenn Sie eine eingebettete FlashType-Schriftart verwenden und die Eigenschaft <codeph>fontAntiAliasType</codeph> auf <codeph>"advanced"</codeph> gesetzt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Der Name der zu verwendenden Schriftart. Anders als in einer vollständigen CSS-Implementierung werden durch Kommas getrennte Listen nicht unterstützt. Sie können den Namen einer beliebigen Schriftartfamilie verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in die entsprechende Geräteschriftart konvertiert.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>antiAliasType</codeph> von internen Textfeldern fest. Mögliche Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert lautet <codeph>"advanced"</codeph>, wodurch der FlashType-Renderer aktiviert wird, wenn Sie eine eingebettete FlashType-Schriftart verwenden. Wählen Sie <codeph>"normal"</codeph>, um den FlashType-Renderer zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente einschließlich Komponentenbeschriftung.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:CartesianChart&gt;</code> tag inherits all the
  properties of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CartesianChart
    <strong>Properties</strong>
    computedGutters="<i>No default</i>"
    dataRegion="<i>Rectangle; no default</i>"
    horizontalAxis="<i>Axis; no default</i>"
    horizontalAxisRatio=".33"
    horizontalAxisRenderers="<i>Array; no default</i>"
    selectedChartItems="<i>Array; no default</i>"
    verticalAxis="<i>Axis; no default</i>"
    verticalAxisRatio=".33"
    verticalAxisRenderers="<i>Array; no default</i>"
   
    <strong>Styles</strong>  
    axisTitleStyleName="<i>Style; no default</i>"
    gridLinesStyleName="<i>Style; no default</i>"
    gutterBottom="<i>No default</i>"
    gutterLeft="<i>No default</i>"
    gutterRight="<i>No default</i>"
    gutterTop="<i>No default</i>"
    horizontalAxisStyleNames=<i>Array; no default</i>"
    verticalAxisStyleNames = <i>Array; no default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die CartesianChart-Klasse ist eine Basisklasse für die gebräuchlichen Diagrammtypen. CartesianChart definiert das grundlegende Layoutverhalten der standardmäßigen rechteckigen, zweidimensionalen Diagramme.
   </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.chartClasses.xml#ChartBase"><linktext>mx.charts.chartClasses.ChartBase</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:CartesianChart:CartesianChart"><apiName>CartesianChart</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianChart:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das erste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das erste Element im Diagramm, in Bezug auf die Achsen, ab.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das letzte Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das letzte Element im Diagramm, in Bezug auf die Achsen, ab.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das nächste Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das dem Diagrammelement, das gerade den Fokus hat, am nächsten gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Das entsprechende ChartItem-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Die Richtung, in der das vorherige Element zurückgegeben werden soll. Mögliche Werte sind <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> und <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft das vor dem Diagrammelement, das gerade den Fokus hat, gelegene Element im Diagramm, in Bezug auf die Achsen, ab. Sind derzeit keine Diagrammelemente ausgewählt, gibt diese Methode das erste Element in der ersten Serie zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxisRatio"><apiName>horizontalAxisRatio</apiName><shortdesc>
      Bestimmt den Grenzwert für die Höhe der horizontalen Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0.33</apiData><apiType value="Number"/><apiDefaultValue>0.33.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt den Grenzwert für die Höhe der horizontalen Achse. Der Grenzwert ist die Breite der Achse multipliziert mit diesem Verhältnis.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxisRatio"><apiName>verticalAxisRatio</apiName><shortdesc>
      Bestimmt den Grenzwert für die Breite der vertikalen Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0.33</apiData><apiType value="Number"/><apiDefaultValue>0.33.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt den Grenzwert für die Breite der vertikalen Achse. Der Grenzwert ist die Breite der Achse multipliziert mit diesem Verhältnis.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:computedGutters:get"><apiName>computedGutters</apiName><shortdesc>
      Die aktuelle berechnete Größe der Abstände des CartesianChart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Die aktuelle berechnete Größe der Abstände des CartesianChart. Die Abstände sind der Bereich zwischen der Zellfüllung und dem Datenbereich des Diagramms, in dem Titel und Achsen gerendert werden. Standardmäßig werden die Abstände dynamisch berechnet. Sie können über die Abstandstile explizite Werte einstellen. Die Abstände werden berechnet, um Änderungen am Diagramm bei der Überprüfung durch den LayoutManager Rechnung zu tragen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      Der vom Diagramm für die Anzeige von Daten verwendete Bereich. Dieses Rechteck schließt den Bereich für Abstände, Achsenlinien und -beschriftungen sowie für Auffüllung nicht ein.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxisRenderers:get"><apiName>horizontalAxisRenderers</apiName><shortdesc>
      Gibt an, wie Daten entlang der x-Achse eines Diagramms angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Gibt an, wie Daten entlang der x-Achse eines Diagramms angezeigt werden. Mit der AxisRenderer-Klasse können Sie die Eigenschaften für „horizontalAxisRenderer“ als untergeordnetes Tag in MXML definieren oder ein AxisRenderer-Objekt in ActionScript erstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der x-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalAxis als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:selectedChartItems:get"><apiName>selectedChartItems</apiName><shortdesc>
      Ein Array der ausgewählten ChartItem-Objekte im Diagramm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array der ausgewählten ChartItem-Objekte im Diagramm. Dazu gehören ausgewählte ChartItem-Objekte in allen Serien des Diagramms.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxisRenderers:get"><apiName>verticalAxisRenderers</apiName><shortdesc>
      Gibt an, wie Daten entlang der y-Achse eines Diagramms angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Gibt an, wie Daten entlang der y-Achse eines Diagramms angezeigt werden. Mit der AxisRenderer-Klasse können Sie die Eigenschaften für „verticalAxisRenderer“ als untergeordnetes Tag in MXML konfigurieren oder ein AxisRenderer-Objekt in ActionScript erstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Definiert die Beschriftungen, Markierungen und Datenpositionen für Elemente auf der y-Achse. Verwenden Sie die LinearAxis- oder CategoryAxis-Klasse, um die Eigenschaften der horizontalen Achse als untergeordnetes Tag in MXML festzulegen, oder erstellen Sie ein LinearAxis- oder CategoryAxis-Objekt in ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:Series"><apiName>Series</apiName><shortdesc>
  Die Series-Klasse ist die Basisklasse für die Klassen, mit denen Sie eine Datenserie für ein Diagrammsteuerelement festlegen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><effects><effect event="showData" name="showDataEffect" owner="mx.charts.chartClasses:Series">
<description>
  Definiert den Effekt, den Flex beim Verschieben der aktuellen Daten an ihre endgültige Position auf dem Bildschirm verwendet.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect><effect event="hideData" name="hideDataEffect" owner="mx.charts.chartClasses:Series">
<description>
  Definiert den Effekt, den Flex beim Ausblenden der aktuellen Daten aus der Ansicht verwendet.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Series-Klasse ist die Basisklasse für die Klassen, mit denen Sie eine Datenserie für ein Diagrammsteuerelement festlegen können. Sie verwenden die Unterklassen der Series-Klasse mit dem verknüpften Diagrammsteuerelement. Sie können eine Series-Klasse zur Angabe des Füllungsmusters und der Stricheigenschaften für die mit der Datenserie verknüpften Diagrammelemente verwenden. 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:Series:Series"><apiName>Series</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:Series:beginInterpolation"><apiName>beginInterpolation</apiName><shortdesc>
      Wird vom SeriesInterpolate-Effekt zum Initiieren eines Interpolationseffekts aufgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die von der Serie für die Durchführung der Interpolation benötigten Daten.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>sourceRenderData</apiItemName><apiType value="Object"/><apiDesc>Die Quelldaten für die Serie, zwischen deren Gliedern interpoliert werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>destRenderData</apiItemName><apiType value="Object"/><apiDesc>Die Zieldaten für die Serie, zwischen deren Gliedern interpoliert werden soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom SeriesInterpolate-Effekt zum Initiieren eines Interpolationseffekts aufgerufen. Der Effekt übergibt die Quell- und Zieldaten für die Serie, zwischen deren Gliedern interpoliert werden soll. Der Effekt übergibt den Rückgabewert dieser Methode immer wieder an die <codeph>interpolate()</codeph>-Methode, um die Animation für die Dauer des Effekts fortzusetzen. Die Serie berechnet die Daten, die sie für die Durchführung der Interpolation benötigt, und gibt sie in dieser Methode zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheDefaultValues"><apiName>cacheDefaultValues</apiName><shortdesc>
      Legt die in der Eigenschaft „measureName“ von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft „fieldName“ des Diagrammelements ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, wenn der Wert der Eigenschaft <codeph>measureName</codeph> ein leerer String oder „null“ ist, andernfalls <codeph>true</codeph>.     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Name der Eigenschaft eines Diagrammelements, dessen Wert durch einen Wert vom dataProvider, basierend auf der Eigenschaft <codeph>fieldName</codeph> festgelegt werden sollte. Beispielsweise kann <codeph>measureName</codeph> aus xValue, yValue, xNumber, yNumber usw. bestehen, vorausgesetzt diese sind Eigenschaften des Diagrammelements.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Die Beschriftung (im Element des Datenproviders), deren Wert beim Einstellen der Eigenschaft <codeph>measureName</codeph> des Diagrammelements verwendet werden sollte. Wenn beispielsweise der Datenprovider ein Element der Art <codeph>{Country:"US", medals:10}</codeph> hat, kann der Wert von <codeph>fieldName</codeph> „Country“ oder „medals“ sein.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die in der Eigenschaft <codeph>measureName</codeph> von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft <codeph>fieldName</codeph> des Diagrammelements ab. Hat die Eigenschaft <codeph>measureName</codeph> den Wert <codeph>null</codeph> oder weist einen leeren String auf, geht diese Methode davon aus, dass die ursprünglichen Datenproviderelemente Rohwerte sind und legt sie stattdessen im Zwischenspeicher ab. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheIndexValues"><apiName>cacheIndexValues</apiName><shortdesc>
      Legt die in der Eigenschaft „measureName“ von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft „fieldName“ des Diagrammelements ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, wenn der Wert der Eigenschaft <codeph>measureName</codeph> ein leerer String oder „null“ ist, andernfalls <codeph>true</codeph>.     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Name der Eigenschaft eines Diagrammelements, dessen Wert durch einen Wert vom dataProvider, basierend auf der Eigenschaft <codeph>fieldName</codeph> festgelegt werden sollte. Beispielsweise kann <codeph>measureName</codeph> aus xValue, yValue, xNumber, yNumber usw. bestehen, vorausgesetzt diese sind Eigenschaften des Diagrammelements.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Die Beschriftung (im Element des Datenproviders), deren Wert beim Einstellen der Eigenschaft <codeph>measureName</codeph> des Diagrammelements verwendet werden sollte. Wenn beispielsweise der Datenprovider ein Element der Art <codeph>{Country:"US", medals:10}</codeph> hat, kann der Wert von <codeph>fieldName</codeph> „Country“ oder „medals“ sein.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die in der Eigenschaft <codeph>measureName</codeph> von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft <codeph>fieldName</codeph> des Diagrammelements ab. Hat die Eigenschaft <codeph>measureName</codeph> den Wert <codeph>null</codeph> oder weist einen leeren String auf, speichert diese Methode die Indexposition der Elemente stattdessen in der Eigenschaft <codeph>fieldName</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheNamedValues"><apiName>cacheNamedValues</apiName><shortdesc>
      Legt die in der Eigenschaft „measureName“ von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft „fieldName“ des Diagrammelements ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, wenn der Wert der Eigenschaft <codeph>measureName</codeph> ein leerer String oder „null“ ist, andernfalls <codeph>true</codeph>.     
     
     </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Name der Eigenschaft eines Diagrammelements, dessen Wert durch einen Wert vom dataProvider, basierend auf der Eigenschaft <codeph>fieldName</codeph> festgelegt werden sollte. Beispielsweise kann <codeph>measureName</codeph> aus xValue, yValue, xNumber, yNumber usw. bestehen, vorausgesetzt diese sind Eigenschaften des Diagrammelements.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Die Beschriftung (im Element des Datenproviders), deren Wert beim Einstellen der Eigenschaft <codeph>measureName</codeph> des Diagrammelements verwendet werden sollte. Wenn beispielsweise der Datenprovider ein Element der Art <codeph>{Country:"US", medals:10}</codeph> hat, kann der Wert von <codeph>fieldName</codeph> „Country“ oder „medals“ sein.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die in der Eigenschaft <codeph>measureName</codeph> von den ursprünglichen dataProvider-Elementen gespeicherten Werte temporär in der Eigenschaft <codeph>fieldName</codeph> des Diagrammelements ab.   
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:claimStyles"><apiName>claimStyles</apiName><shortdesc conref="mx.charts.chartClasses.IChartElement#claimStyles()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="uint"/><apiDesc>Der neue Wert für <codeph>firstAvailable</codeph> nach dem Anfordern von Stilen (beispielsweise <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Stilen, die angefordert werden können.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Der erste Stilselektor im Array, der eine Anforderung stellt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IChartElement#claimStyles()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:defaultFilterFunction"><apiName>defaultFilterFunction</apiName><shortdesc>
      Dies wird verwendet, wenn Sie keine benutzerdefinierte Funktion als filterFunction für die Serie festlegen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Array von Objekten.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Dies wird verwendet, wenn Sie keine benutzerdefinierte Funktion als filterFunction für die Serie festlegen. Einzelne Serien sollte das überschreiben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Die Standardprozedur für das dragStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>dragStart</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:endInterpolation"><apiName>endInterpolation</apiName><shortdesc>
      Wird vom SeriesInterpolate-Effekt zum Beenden eines Interpolationseffekts aufgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>interpolationData</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt das die Quelldaten (für den <codeph>show</codeph>-Effekt) definiert, die den „Vorher“-Zustand der Serie repräsentieren, und die Zieldaten (für den <codeph>hide</codeph>-Effekt) die den „Nachher“-Zustand der Serie repräsentieren, definiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom SeriesInterpolate-Effekt zum Beenden eines Interpolationseffekts aufgerufen. Der Effekt verwendet diese Methode zum Abschließen der Interpolation und Bereinigen von ggf. mit diesem Effekt verknüpften temporären Zuständen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:extractMinInterval"><apiName>extractMinInterval</apiName><shortdesc>
      Extrahiert den Mindestwert, den Höchstwert und (optional) das Mindestintervall von einem Array von ChartItem-Objekten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Name der Eigenschaft eines Diagrammelements, dessen Wert durch einen Wert vom dataProvider, basierend auf der Eigenschaft <codeph>fieldName</codeph> festgelegt werden sollte. Beispielsweise kann <codeph>measureName</codeph> aus xValue, yValue, xNumber, yNumber usw. bestehen, vorausgesetzt diese sind Eigenschaften des Diagrammelements.
      
      </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataDescription</apiOperationClassifier><apiDesc>DataDescription-Objekt der Serie. Diese Eigenschaft beinhaltet gebundene Werte der Serie, wie etwa <codeph>min</codeph>, <codeph>max</codeph> und <codeph>minInterval</codeph>.    
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Extrahiert den Mindestwert, den Höchstwert und (optional) das Mindestintervall von einem Array von ChartItem-Objekten. Abgeleitete Klassen können diese Methode von ihren Implementierungen der <codeph>describeData()</codeph>-Methode aufrufen, um die Details der DataDescription-Struktur auszufüllen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:extractMinMax"><apiName>extractMinMax</apiName><shortdesc>
      Extrahiert den Mindestwert, den Höchstwert und (optional) das Mindestintervall von einem Array von ChartItem-Objekten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Name der Eigenschaft eines Diagrammelements, dessen Wert durch einen Wert vom dataProvider, basierend auf der Eigenschaft <codeph>fieldName</codeph> festgelegt werden sollte. Beispielsweise kann <codeph>measureName</codeph> aus xValue, yValue, xNumber, yNumber usw. bestehen, vorausgesetzt diese sind Eigenschaften des Diagrammelements.
      
      </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataDescription</apiOperationClassifier><apiDesc>DataDescription-Objekt der Serie. Diese Eigenschaft beinhaltet gebundene Werte der Serie, wie etwa <codeph>min</codeph>, <codeph>max</codeph> und <codeph>minInterval</codeph>.
      
      </apiDesc></apiParam><apiParam><apiItemName>calculateInterval</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das <codeph>minInterval</codeph> für die DataDescription <codeph>desc</codeph> extrahiert werden soll, indem die ChartItem-Objekte in der Eigenschaft <codeph>cache</codeph> verwendet werden.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Extrahiert den Mindestwert, den Höchstwert und (optional) das Mindestintervall von einem Array von ChartItem-Objekten. Abgeleitete Klassen können diese Methode von ihren Implementierungen der <codeph>describeData()</codeph>-Methode aufrufen, um die Details der DataDescription-Struktur auszufüllen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getAxis"><apiName>getAxis</apiName><shortdesc>
      Normalerweise wird die Axis-Instanz direkt über eine benannte Eigenschaft, wie etwa „horizontalAxis“, „verticalAxis“ oder „radiusAxis“ für eine kartesische Serie, abgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Axis-Instanz für eine bestimmte Dimension des Diagramms.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Die Dimension, für die die Achse benötigt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Normalerweise wird die Axis-Instanz direkt über eine benannte Eigenschaft, wie etwa <codeph>horizontalAxis</codeph>,<codeph> verticalAxis</codeph> oder <codeph>radiusAxis</codeph> für eine kartesische Serie, abgerufen.
      
      <p>Dies ist ein Low-level-Accessor.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getElementBounds"><apiName>getElementBounds</apiName><shortdesc>
      Füllt die Eigenschaften „elementBounds“, „bounds“ und „visibleBounds“ einer renderData-Struktur aus, die durch diese Serie generiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>renderData</apiItemName><apiType value="Object"/><apiDesc>Die Struktur, die durch diese Serie generiert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Füllt die Eigenschaften <codeph>elementBounds</codeph>, <codeph>bounds</codeph> und <codeph>visibleBounds</codeph> einer renderData-Struktur aus, die durch diese Serie generiert wird. Effektklassen rufen diese Methode auf, um diese Felder zur Verwendung bei der Implementierung verschiedener Effekttypen auszufüllen. Abgeleitete Klassen sollten diese Methode zum Generieren der Grenzen der Elemente der Serie nur auf Anforderung implementieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      Ruft alle Elemente in einem rechteckigen Bereich für die Serie ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von ChartItem-Objekten, die sich innerhalb des angegebenen rechteckigen Bereichs befinden.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>r</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Ein Rechteckobjekt, das den Bereich definiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft alle Elemente in einem rechteckigen Bereich für die Serie ab. Rufen Sie diese Funktion auf, um festzustellen, welche Elemente in dieser Serie sich in einem bestimmten rechteckigen Bereich befinden.
      <p>Einzelne Serien bestimmen, ob ihr Diagrammelement sich unter diesem Bereich befindet. Der Punkt muss sich im globalen Koordinatenraum befinden.</p>
      
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.geom.Rectangle.xml"><linktext>flash.geom.Rectangle</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:getMissingInterpolationValues"><apiName>getMissingInterpolationValues</apiName><shortdesc>
      Füllt fehlende Werte in einer Interpolationsstruktur aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>sourceProps</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt, das die Quellwerte enthält, die für ein bestimmtes Element interpoliert werden. Ist diese Methode vorhanden, sollten alle Eigenschaften in diesem Objekt einen anderen Wert als <codeph>NaN</codeph> haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Das Array von Quelldiagrammelementen, die interpoliert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>destProps</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt, das die Zielwerte enthält, die für ein bestimmtes Element interpoliert werden. Ist diese Methode vorhanden, sollten alle Eigenschaften in diesem Objekt einen anderen Wert als <codeph>NaN</codeph> haben.
     
      </apiDesc></apiParam><apiParam><apiItemName>destCache</apiItemName><apiType value="Array"/><apiDesc>Das Array von Zieldiagrammelementen, die interpoliert werden.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Die Indexposition des Elements, das im Cache gefüllt wird.  
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die von der Serie an die <codeph>initializeInterpolationData()</codeph>-Methode übergeben wurden.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Füllt fehlende Werte in einer Interpolationsstruktur aus. Wenn eine Serie die <codeph>initializeInterpolationData()</codeph>-Methode aufruft, übergibt sie Arrays von Quell- und Zielwerten für die Interpolation. Ist einer der beiden Arrays unvollständig, muss die Serie „geeignete“ Platzhalterwerte für die Interpolation bereitstellen. Die Art und Weise, wie diese Platzhalterwerte bestimmt werden, hängt vom jeweiligen Serientyp ab. Serienerweiterungen müssen diese Methode zur Bereitstellung dieser Platzhalterwerte überschreiben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getRenderDataForTransition"><apiName>getRenderDataForTransition</apiName><shortdesc>
      Erfasst die Zustände „Vorher“ und „Nachher“ der Serie für die Animation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Eine Kopie der für die Darstellung der Seriendaten erforderlichen Daten.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Gibt an, ob der Effekt eine Beschreibung der Daten, die ausgeblendet werden, oder der neuen Daten, die angezeigt werden, anfordert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erfasst die Zustände „Vorher“ und „Nachher“ der Serie für die Animation. Diese Methode wird normalerweise von den Effektklassen aufgerufen.
     
      <p>Wenn Sie einen benutzerdefinierten Serientyp implementieren, überschreiben Sie diese Methode normalerweise nicht. Stattdessen sollten Sie den <codeph>renderData()</codeph>-Accessor überschreiben.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:initializeInterpolationData"><apiName>initializeInterpolationData</apiName><shortdesc>
      Helper-Methode zum Implementieren des Interpolationseffekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Eine Datenstruktur, die an die <codeph>applyInterpolation()</codeph>-Methode übergeben werden kann.
     
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten, deren Felder die Startwerte für die Interpolation enthalten.
     
      </apiDesc></apiParam><apiParam><apiItemName>dstCache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten, deren Felder die Endwerte für die Interpolation enthalten.
     
      </apiDesc></apiParam><apiParam><apiItemName>iProps</apiItemName><apiType value="Object"/><apiDesc>Eine Hashtabelle, deren Schlüssel die Namen der Eigenschaften vom zu interpolierenden Cache identifizieren.
     
      </apiDesc></apiParam><apiParam><apiItemName>cacheType</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Die zu instanziierende Klasse, die die für die Interpolation berechneten Deltawerte enthält. Normalerweise ist dies <codeph>null</codeph>. In diesem Fall wird ein generisches Objekt verwendet.
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Ein Objekt mit serienspezifischen Daten. Wenn der Initialisierungsprozess auf einen fehlenden Wert stößt, ruft er die <codeph>getMissingInterpolationValues()</codeph>-Methode der betroffenen Serie auf, um den fehlenden Wert abzurufen. Diese benutzerdefinierten Daten werden an diese Methode übergeben und können zum Übergeben beliebiger Parameter verwendet werden.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Helper-Methode zum Implementieren des Interpolationseffekts. Eine benutzerdefinierte Serie kann diese Methode von ihrer <codeph>beginInterpolation()</codeph>-Methode aus aufrufen, um eine Datenstruktur zum Interpolieren eines beliebigen Satzes numerischer Eigenschaften über die Dauer des Effekts hinweg zu initialisieren. Sie können diese Datenstruktur an die <codeph>applyInterpolation()</codeph>-Dienstprogrammmethode übergeben, um die Werte tatsächlich zu ändern, wenn die <codeph>interpolate()</codeph> -Methode aufgerufen wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:interpolate"><apiName>interpolate</apiName><shortdesc>
      Wird vom SeriesInterpolate-Effekt zum Fortschreiten in einer Interpolation aufgerufen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>interpolationValues</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Zahlen, die im Bereich zwischen 0 und 1 liegen, wobei die <i>n</i>-te Nummer den Prozentsatz der Art und Weise anzeigt, in der der <i>n</i>-te Wert in der Datenserie zwischen dem Start- und dem Endwert interpoliert werden sollte.
     
      </apiDesc></apiParam><apiParam><apiItemName>interpolationData</apiItemName><apiType value="Object"/><apiDesc>Die von der <codeph>beginInterpolation()</codeph>-Methode zurückgegebenen Daten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird vom SeriesInterpolate-Effekt zum Fortschreiten in einer Interpolation aufgerufen. Der Effekt ruft diese Methode bis zum Abschluss der Interpolation einmal pro Frame auf. Die Serie ist zuständig für die Verwendung der Parameter zum Rendern der interpolierten Werte. Standardmäßig geht diese Serie davon aus, dass es sich bei den <codeph>interpolationData</codeph> um eine von der <codeph>initializeInterpolationData()</codeph>-Methode zurückgegebene Datenstruktur handelt, und übergibt sie an die <codeph>applyInterpolation()</codeph>-Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Informiert die Serie, dass die zugrunde liegenden Daten im Datenprovider geändert wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Bei <codeph>true</codeph> löst diese Methode Aufrufe der Aktualisierungsmethoden aus.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Serie, dass die zugrunde liegenden Daten im Datenprovider geändert wurden. Diese Funktion ruft die <codeph>updateData()</codeph>-, <codeph>updateMapping()</codeph>-, <codeph>updateFilter()</codeph>- und <codeph>updateTransform()</codeph>-Methode beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode auf. Wenn Elementen im Diagramm Dateneffekte zugewiesen sind, löst diese Methode auch die Effekte zum Anzeigen und Ausblenden auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateFilter"><apiName>invalidateFilter</apiName><shortdesc>
      Informiert die Serie, dass sich die Filterung der Daten anhand der Achsen geändert hat und neu berechnet werden muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Bei <codeph>true</codeph> löst diese Methode Aufrufe der Aktualisierungsmethoden aus.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Serie, dass sich die Filterung der Daten anhand der Achsen geändert hat und neu berechnet werden muss. Der Aufruf dieser Methode führt dazu, dass beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode Aufrufe der <codeph>updateMapping()</codeph>- und der <codeph>updateTransform()</codeph>-Methode ausgelöst werden. Wenn Elementen im Diagramm Dateneffekte zugewiesen sind, löst diese Methode auch die Effekte zum Anzeigen und Ausblenden auf.
           
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateMapping"><apiName>invalidateMapping</apiName><shortdesc>
      Informiert die Serie, dass sich die Zuordnung von Daten zu numerischen Werten geändert hat und neu berechnet werden muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Bei <codeph>true</codeph> löst diese Methode Aufrufe der Aktualisierungsmethoden aus.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Serie, dass sich die Zuordnung von Daten zu numerischen Werten geändert hat und neu berechnet werden muss. Diese Funktion ruft die <codeph>updateMapping()</codeph>-, <codeph>updateFilter()</codeph>- und <codeph>updateTransform()</codeph>-Methode beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode auf. Wenn Elementen im Diagramm Dateneffekte zugewiesen sind, löst diese Methode auch die Effekte zum Anzeigen und Ausblenden auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateTransform"><apiName>invalidateTransform</apiName><shortdesc>
      Informiert die Serie, dass sich die Transformation der Daten in Bildschirmkoordinaten geändert hat und neu berechnet werden muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Bei <codeph>true</codeph> löst diese Methode Aufrufe der Aktualisierungsmethoden aus.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Informiert die Serie, dass sich die Transformation der Daten in Bildschirmkoordinaten geändert hat und neu berechnet werden muss. Der Aufruf dieser Methode löst beim nächsten Aufruf der <codeph>commitProperties()</codeph>-Methode einen Aufruf der <codeph>updateTransform()</codeph>-Methode aus.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateTransitions"><apiName>invalidateTransitions</apiName><shortdesc>
      Informiert die Serie, dass bei der Datenanzeige eine bedeutende Änderung aufgetreten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Informiert die Serie, dass bei der Datenanzeige eine bedeutende Änderung aufgetreten ist. Diese Methode löst ShowData- und HideData-Effekte aus.  
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:legendDataChanged"><apiName>legendDataChanged</apiName><shortdesc>
      Aktualisiert bei Änderung des Anzeigenamens der Serie die Legend-Elemente, indem ein neues LegendDataChanged-Ereignis ausgelöst wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert bei Änderung des Anzeigenamens der Serie die Legend-Elemente, indem ein neues LegendDataChanged-Ereignis ausgelöst wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:setAxis"><apiName>setAxis</apiName><shortdesc>
      Weist einer bestimmten Dimension des Diagramms eine Axis-Instanz zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Die Dimension des Diagramms, dem Sie die Achse zuweisen möchten.
      
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier><apiDesc>Die Achse, die der Dimension des Diagramms zugewiesen werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Weist einer bestimmten Dimension des Diagramms eine Axis-Instanz zu. Normalerweise wird die Axis-Instanz direkt über eine benannte Eigenschaft, wie etwa <codeph>horizontalAxis</codeph>,<codeph> verticalAxis</codeph> oder <codeph>radiusAxis</codeph> für eine kartesische Serie, konfiguriert.
      
      <p>Dies ist ein Low-level-Accessor.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft „field“ den Wert „NaN“ hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Diagrammelementen.
      
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Die Feldeigenschaft, aus der ein Element entfernt werden soll.
      
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt jedes Element des angegebenen Cache, dessen Eigenschaft <codeph>field</codeph> den Wert <codeph>NaN</codeph> hat. Abgeleitete Klassen können diese Methode von ihrer Implementierung der <codeph>updateFilter()</codeph>-Methode aufrufen, um alle ChartItem-Objekte zu entfernen, die von den Achsen ausgefiltert wurden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:stylesInitialized"><apiName>stylesInitialized</apiName><shortdesc>
      Ruft die legendDataChanged()-Methode auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft die <codeph>legendDataChanged()</codeph>-Methode auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateData"><apiName>updateData</apiName><shortdesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten geändert wurden und erneut aus dem Datenprovider geladen werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten geändert wurden und erneut aus dem Datenprovider geladen werden müssen. Wenn Sie die angepassten Serientypen implementieren, müssen Sie diese Methode überschreiben und alle zum Anzeigen der Serie erforderlichen Daten aus dem zugrunde liegenden Datenprovider laden. Sie müssen auch sicherstellen, dass die <codeph>super.updateData()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt aktualisiert wurden, rufen Sie stattdessen die <codeph>validateData()</codeph>-Methode der Series-Klasse auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten anhand der Bereiche gefiltert werden müssen, die auf den Achsen der zugehörigen Datentransformation dargestellt werden. Dazu kann es kommen, wenn die zugrunde liegenden Daten geändert wurden oder der Bereich der zugehörigen Achsen geändert wurde. Wenn Sie einen angepassten Serientyp implementieren, müssen Sie diese Methode überschreiben und alle außerhalb liegenden Daten filtern, indem Sie die <codeph>filterCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation gesteuert werden. Die <codeph>filterCache()</codeph>-Methode wandelt alle Werte, die außerhalb des Bereichs liegen, in <codeph>NaN</codeph> um. Sie müssen sicherstellen, dass die <codeph>super.updateFilter()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>validateTransform()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>- und Ihre <codeph>updateMapping()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateMapping"><apiName>updateMapping</apiName><shortdesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten numerischen Entsprechungen zugeordnet werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der Serie dargestellten Daten numerischen Entsprechungen zugeordnet werden müssen. Dazu kann es kommen, wenn die zugrunde liegenden Daten oder die zur Darstellung der Serie verwendeten Achsen geändert wurden. Wenn Sie eine angepasste Serie implementieren, müssen Sie diese Methode überschreiben und alle dargestellten Daten in numerische Werte konvertieren, indem Sie die <codeph>mapCache()</codeph>-Methode der Achsen verwenden, die von der verknüpften Datentransformation verwaltet werden. Sie müssen außerdem sicherstellen, dass die <codeph>super.updateMapping()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt zugeordnet wurden, rufen Sie stattdessen die <codeph>validateData()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>-Methode vor dieser Methode aufgerufen wurde, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateTransform"><apiName>updateTransform</apiName><shortdesc>
      Wird aufgerufen, wenn die von der zugrunde liegenden Serie dargestellten Daten von den Achsen der zugehörigen Datentransformation in Bildschirmwerte umgewandelt werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn die von der zugrunde liegenden Serie dargestellten Daten von den Achsen der zugehörigen Datentransformation in Bildschirmwerte umgewandelt werden müssen. Dazu kann es kommen, wenn die zugrunde liegenden Daten, der Bereich der zugehörigen Achsen oder die Größe des Bereichs auf dem Bildschirm geändert wurde. Wenn Sie einen angepassten Serientyp implementieren, müssen Sie diese Methode überschreiben und die Daten transformieren, indem Sie die <codeph>transformCache()</codeph>-Methode der verknüpften Datentransformation verwenden. Sie müssen sicherstellen, dass die <codeph>super.updateTransform()</codeph>-Methode in Ihrer Unterklasse aufgerufen wird. Im Allgemeinen rufen Sie diese Methode nicht direkt auf. Um sicherzustellen, dass Ihre Daten an einem bestimmten Punkt gefiltert wurden, rufen Sie stattdessen die <codeph>valiateTransform()</codeph>-Methode der Series-Klasse auf. Sie können im Allgemeinen davon ausgehen, dass Ihre <codeph>updateData()</codeph>-, Ihre <codeph>updateMapping()</codeph> und Ihre <codeph>updateFilter()</codeph>-Methode vor dieser Methode aufgerufen wurden, falls dies erforderlich war.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:validateData"><apiName>validateData</apiName><shortdesc>
      Ruft erforderlichenfalls die updateData()- und die updateMapping()-Methode auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft erforderlichenfalls die <codeph>updateData()</codeph>- und die <codeph>updateMapping()</codeph>-Methode auf. Diese Methode wird je nach Bedarf automatisch von der Serie von der <codeph>commitProperties()</codeph>-Methode aus aufgerufen. Eine abgeleitete Serie kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. Das Laden und Zuordnen der Daten zu den Achsen wurde so entwickelt, dass es für die Achsen jederzeit akzeptierbar ist. Diese Methode kann unbedenklich zu jedem Zeitpunkt aufgerufen werden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      Ruft erforderlichenfalls die updateFilter()- und die updateTransform()-Methode auf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft erforderlichenfalls die <codeph>updateFilter()</codeph>- und die <codeph>updateTransform()</codeph>-Methode auf. Diese Methode wird je nach Bedarf automatisch von der Serie während der <codeph>commitProperties()</codeph>-Methode aufgerufen. Eine abgeleitete Serie kann sie jedoch explizit aufrufen, wenn die generierten Werte zu einem bestimmten Zeitpunkt benötigt werden. Das Filtern und Transformieren von Daten beruht auf bestimmten Werten, die anhand der Achsen berechnet werden, welche ihrerseits von den im Diagramm angezeigten Daten abhängig sind. Wird diese Funktion zur falschen Zeit aufgerufen, kann dies zu zusätzlicher Arbeit führen, wenn diese Werte aktualisiert werden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:Series:dataFunction:get"><apiName>dataFunction</apiName><shortdesc>
     Gibt eine Methode an, welche den Wert zurückgibt, der für die Platzierung des aktuellen Diagrammelements in der Serie verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     Gibt eine Methode an, welche den Wert zurückgibt, der für die Platzierung des aktuellen Diagrammelements in der Serie verwendet werden soll. Ist die Eigenschaft konfiguriert, hat der Rückgabewert der benutzerdefinierten Datenfunktion Vorrang vor den anderen zugehörigen Eigenschaften, wie etwa <codeph>xField</codeph> und <codeph>yField</codeph> für „AreaSeries“, „BarSeries“, „BubbleSeries“, „ColumnSeries“, „LineSeries“ und „PlotSeries“. Bei „BubbleSeries“ hat der Rückgabewert Vorrang vor der Eigenschaft <codeph>radiusField</codeph>. Bei „PieSeries“ hat der Rückgabewert Vorrang vor der Eigenschaft <codeph>field</codeph>.     
     
     <p>Die benutzerdefinierte <codeph>dataFunction</codeph> für eine Serie hat folgende Signatur:
      
     <pre>
     <i>function_name</i> (series:Series, item:Object, fieldName:String):Object { ... }
     </pre>
     
     <codeph>series</codeph> ist die aktuelle Serie, die diese <codeph>dataFunction</codeph> verwendet. <codeph>item</codeph> ist das Element im Datenprovider. <codeph>fieldName</codeph> ist das Feld im aktuellen Diagrammelement, das mit Daten gefüllt werden soll. Diese Funktion gibt ein Objekt zurück.
     </p>
     
     <p>Normalerweise wird die Eigenschaft <codeph>dataFunction</codeph> für den Zugriff auf Felder in einem Datenprovider verwendet, die keine Skalarwerte aufweisen, sondern stattdessen verschachtelt im Datenprovider vorliegen. Beispielsweise erfordern die folgenden Daten eine Datenfunktion für den Zugriff auf die Felder für den Datenprovider eines Diagramms:</p>
      
      <pre>
      {month: "Aug", close: {High:45.87,Low:12.2}, open:25.19}
      </pre>
      
     <p>Im folgenden Beispiel wird ein Wert von diesem Datenprovider zurückgegeben:</p>
       
     <pre>
     public function myDataFunction(series:Series, item:Object, fieldName:String):Object {
          if (fieldName == 'yValue')
              return(item.close.High);
          else if (fieldName == "xValue")
              return(item.month);
          else
              return null;
     }     
     </pre>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:dataTipItems:get"><apiName>dataTipItems</apiName><shortdesc>
      Array von Diagrammelementen, für die Datentipps nicht interaktiv im Diagramm angezeigt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Array von Diagrammelementen, für die Datentipps nicht interaktiv im Diagramm angezeigt werden sollen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:displayName:get"><apiName>displayName</apiName><shortdesc>
      Der Name der Serie zur Anzeige für den Benutzer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Der Name der Serie zur Anzeige für den Benutzer. Diese Eigenschaft wird zur Darstellung der Serie in für den Benutzer sichtbaren Beschriftungen verwendet, z. B. Datentipps.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterDataValues:get"><apiName>filterDataValues</apiName><shortdesc>
      Wenn filterFunction festgelegt ist, werden filterDataValues und filterData ignoriert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Wenn <codeph>filterFunction</codeph> festgelegt ist, werden <codeph>filterDataValues</codeph> und <codeph>filterData</codeph> ignoriert. Wenn für die <codeph>filterDataValues</codeph>-Eigenschaft der Wert <codeph>none</codeph> festgelegt ist, filtert die Serie die zugehörigen Daten nicht vor der Anzeige. Wenn <codeph>filterDataValues</codeph> auf <codeph>nulls</codeph> gesetzt ist, filtert die Serie die Daten wie <codeph>null</codeph>, <codeph>undefined</codeph> oder <codeph>NaN</codeph> vor der Anzeige. Wenn für diese Eigenschaft der Wert <codeph>outsideRange</codeph> festgelegt ist, filtert die Serie die zugehörigen Daten wie <codeph>null</codeph>, <codeph>undefined</codeph> oder <codeph>NaN</codeph> sowie die Werte, die außerhalb des Bereichs der Diagrammachsen liegen. Wenn Sie wissen, dass alle Daten in der Serie gültig sind, können Sie diesen Wert zur Verbesserung der Leistung auf <codeph>none</codeph> einstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterData:get"><apiName>filterData</apiName><shortdesc>
      Wenn filterFunction oder filterDataValues festgelegt ist, wird filterData ignoriert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Wenn <codeph>filterFunction</codeph> oder <codeph>filterDataValues</codeph> festgelegt ist, wird <codeph>filterData</codeph> ignoriert. <codeph>true</codeph>, wenn die Serie ihre Daten vor der Anzeige filtert. Wenn eine Serie Daten rendert, die fehlende Werte aufweist (wie etwa <codeph>null</codeph>, <codeph>undefined</codeph>, oder <codeph>NaN</codeph>), oder Werte rendert, die sich außerhalb des Bereichs der Diagrammachsen befinden, sollte diese Eigenschaft auf <codeph>true</codeph> (entspricht dem Standard) eingestellt werden. Wenn Sie wissen, dass alle Daten in der Serie gültig sind, können Sie diesen Wert zur Verbesserung der Leistung auf <codeph>false</codeph> einstellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterFunction:get"><apiName>filterFunction</apiName><shortdesc>
     Gibt eine Methode an, die den Array der anzuzeigenden Diagrammelemente der Serie zurückgibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     Gibt eine Methode an, die den Array der anzuzeigenden Diagrammelemente der Serie zurückgibt. Wenn diese Eigenschaft festgelegt ist, hat der Rückgabewert der angepassten Filterfunktion Vorrang vor den Eigenschaften <codeph>filterDataValues</codeph> und <codeph>filterData</codeph>. Wenn allerdings „null“ zurückgegeben wird, werden <codeph>filterDataValues</codeph> und <codeph>filterData</codeph> in dieser Reihenfolge bevorzugt.  
     
     <p>Die angepasste <codeph>filterFunction</codeph> hat die folgende Signatur:
      
     <pre>
     <i>function_name</i> (cache:Array):Array { ... }
     </pre>
     
     <codeph>cache</codeph> bezieht sich auf ein Array von Diagrammelementen, die gefiltert werden sollen. Durch diese Funktion wird ein Array von Diagrammelementen zurückgegeben, die angezeigt werden sollen. 
     </p>
      
     </apiDesc><example>
     <pre>
     public function myFilterFunction(cache:Array):Array {
          var filteredCache:Array=[];
          var n:int = cache.length;  
          for(var i:int = 0; i &lt; n; i++)
          {
              var item:ColumnSeriesItem = ColumnSeriesItem(cache[i]);
              if(item.yNumber > 0 &amp;&amp; item.yNumber &lt; 700)
              {
                  filteredCache.push(item);
              }
          }
          return filteredCache;
     }
     </pre>
     
     <p>
      Wenn Sie eine angepasste Filterfunktion für die Diagrammserie angeben und Null-Werte oder Werte außerhalb des Achsenbereichs filtern möchten, müssen Sie sie manuell mithilfe der angepassten Filterfunktion filtern. <codeph>filterDataValues</codeph> oder <codeph>filterData</codeph> können nicht verwendet werden.
      </p>
      
      </example></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:interactive:get"><apiName>interactive</apiName><shortdesc>
      Bestimmt, ob bei der Interaktion von Benutzern mit den Diagrammdaten auf dem Bildschirm Datentipps angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt, ob bei der Interaktion von Benutzern mit den Diagrammdaten auf dem Bildschirm Datentipps angezeigt werden. Stellen Sie diesen Wert auf <codeph>false</codeph>, um zu verhindern, dass die Serie Datentipps anzeigt oder Hitdaten generiert.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:items:get"><apiName>items</apiName><shortdesc>
      Ruft alle Elemente ab, die in der Serie nach dem Filtern vorhanden sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ruft alle Elemente ab, die in der Serie nach dem Filtern vorhanden sind.
      <p>Einzelne Serien bestimmen die Liste der Elemente, die zurückgegeben werden sollen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:legendData:get"><apiName>legendData</apiName><shortdesc>
      Ein Array von LegendData-Instanzen, die die Elemente beschreiben, die in einer Legende für diese Serie angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von LegendData-Instanzen, die die Elemente beschreiben, die in einer Legende für diese Serie angezeigt werden. Abgeleitete Serienklassen überschreiben diese Abruffunktion und geben die Legendendaten zurück, die sich auf die Stile und die Datendarstellungsmethode beziehen. Die meisten Serientypen geben nur eine einzelne LegendData-Instanz zurück, einige (wie die PieSeries und StackedSeries) jedoch mehrere Instanzen, die einzelne Elemente im Array oder mehrere Möglichkeiten zum Rendern von Daten darstellen.   
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:protected:renderData:get"><apiName>renderData</apiName><shortdesc>
      Speichert die Informationen, die zum Rendern dieser Serie erforderlich sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Speichert die Informationen, die zum Rendern dieser Serie erforderlich sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectable:get"><apiName>selectable</apiName><shortdesc>
      Gibt an, ob eine Serie auswählbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob eine Serie auswählbar ist.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Indexposition des ausgewählten Elements im Datenprovider der Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Indexposition des ausgewählten Elements im Datenprovider der Serie. Sind mehrere Elemente ausgewählt, bezieht sich diese Eigenschaft auf das zuletzt ausgewählte Element. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedIndices:get"><apiName>selectedIndices</apiName><shortdesc>
      Ein Array von Indexpositionen der ausgewählten Elemente im Datenprovider der Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Indexpositionen der ausgewählten Elemente im Datenprovider der Serie.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Das in der Serie ausgewählte Diagrammelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts:ChartItem</apiValueClassifier></apiValueDef><apiDesc>
      Das in der Serie ausgewählte Diagrammelement. Sind mehrere Elemente ausgewählt, bezieht sich diese Eigenschaft auf das zuletzt ausgewählte Element. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedItems:get"><apiName>selectedItems</apiName><shortdesc>
      Ein Array von in der Serie ausgewählten Diagrammelementen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von in der Serie ausgewählten Diagrammelementen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:transitionRenderData:get"><apiName>transitionRenderData</apiName><shortdesc>
      Eine durch einen gerade ausgeführten Übergang übergebene Renderdatenstruktur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Eine durch einen gerade ausgeführten Übergang übergebene Renderdatenstruktur. Wenn ein Serieneffekt so eingestellt ist, dass er bei einer Serie wiedergegeben wird, erfasst er zunächst den aktuellen Zustand der Serie, indem er ihre Renderdaten abfragt. Der Übergang ändert die Renderdaten zum Erstellen des gewünschten Effekts und übergibt die Struktur wieder zur Anzeige an die Serie. Weist die Eigenschaft <codeph>transitionRenderData</codeph> einen anderen Wert als <codeph>null</codeph> auf, verwenden Serien ihre Inhalte zum Aktualisieren ihrer Anzeige.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Das DataTransform-Objekt, mit dem das Element verknüpft ist. Ein DataTransform-Objekt repräsentiert eine Verknüpfung zwischen einem Satz von Elementen und einem Satz von Achsenobjekten, die zum Transformieren dieser Elemente von Datenraumwerten zu Bildschirmkoordinaten (und umgekehrt) verwendet werden. Ein Diagrammelement verwendet sein verknüpftes DataTransform-Objekt zur Berechnung, wie seine Daten gerendert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:GraphicsUtilities"><apiName>GraphicsUtilities</apiName><shortdesc>
  Ein Satz interner Dienstprogramme zum Grafikrendering, die von verschiedenen Diagrammklassen verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein Satz interner Dienstprogramme zum Grafikrendering, die von verschiedenen Diagrammklassen verwendet werden.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:colorFromFill"><apiName>colorFromFill</apiName><shortdesc>
	  Konvertiert einen Füllwert in eine Einzelfarbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ein die Füllung darstellender Farbwert.
	  
	  </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>f</apiItemName><apiType value="Object"/><apiDesc>Das Füllobjekt, aus dem eine Farbe extrahiert werden soll.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Konvertiert einen Füllwert in eine Einzelfarbe. Diese praktische Methode extrahiert den Farbwert aus einer Füllung, der der Füllung auf dem Bildschirm am ehesten entspricht.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:drawArc"><apiName>drawArc</apiName><shortdesc>
	  Zeichnet einen Bogen im Ziel-Graphics-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Das Graphics-Objekt, in dem gezeichnet werden soll.
	 </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Der horizontale Ursprung des Bogens.
	 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Der vertikale Ursprung des Bogens.
	 </apiDesc></apiParam><apiParam><apiItemName>startAngle</apiItemName><apiType value="Number"/><apiDesc>Der Startwinkel des Bogens im Bogenmaß.
	 </apiDesc></apiParam><apiParam><apiItemName>arc</apiItemName><apiType value="Number"/><apiDesc>Der Sweep des Bogens im Bogenmaß.
	 </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc> Der horizontale Radius des Bogens in Pixeln.
	 </apiDesc></apiParam><apiParam><apiItemName>yRadius</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Der vertikale Radius des Bogens in Pixeln. Ist dieser Wert nicht angegeben, wird davon ausgegangen, dass er mit dem des Radius identisch ist.
	 </apiDesc></apiParam><apiParam><apiItemName>continueFlag</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Zeigt an, ob die Routine den Grafikstift vor dem Zeichnen an den Beginn des Bogens verschiebt. Stellen Sie diesen Wert auf <codeph>true</codeph> ein, um eine bereits begonnene Linie fortzusetzen.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Zeichnet einen Bogen im Ziel-Graphics-Objekt.  
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:drawPolyLine"><apiName>drawPolyLine</apiName><shortdesc>
	  Zeichnet eine Verbindungslinie zwischen den Datenpunkten mithilfe einer der verschiedenen Formen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>    Das Graphics-Objekt, in dem gezeichnet werden soll.
	 </apiDesc></apiParam><apiParam><apiItemName>pts</apiItemName><apiType value="Array"/><apiDesc>  Ein Array von Datenpunkten, die die Linie definieren.
	 </apiDesc></apiParam><apiParam><apiItemName>start</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des ersten Punkts im <codeph>pts</codeph>-Array, der zum Zeichnen der Linie verwendet werden soll.
	 </apiDesc></apiParam><apiParam><apiItemName>end</apiItemName><apiType value="int"/><apiDesc>  Die Indexposition des letzten Punkts (ausschließlich), der zum Zeichnen der Linie verwendet werden soll.
	 </apiDesc></apiParam><apiParam><apiItemName>hProp</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft in den im <codeph>pts</codeph>-Array enthaltenen Objekten, die die horizontale Position der Punkte auf der Linie definiert.
	 </apiDesc></apiParam><apiParam><apiItemName>vProp</apiItemName><apiType value="String"/><apiDesc>Der Name der Eigenschaft in den im <codeph>pts</codeph>-Array enthaltenen Objekten, die die vertikale Position der Punkte auf der Linie definiert.
	 </apiDesc></apiParam><apiParam><apiItemName>stroke</apiItemName><apiType value="mx.graphics:IStroke"/><apiDesc>Der zum Rendern der Linie verwendete Strich.
	 </apiDesc></apiParam><apiParam><apiItemName>form</apiItemName><apiType value="Object"/><apiDesc> Die Form, mit der die Linie gerendert werden soll. Gültige Werte sind „segment“, „horizontal“, „vertical“, „step“, „reverseStep“ und „curve“. Diese Formen ähneln der Eigenschaft <codeph>form</codeph> der LineSeries-Klasse.
	 </apiDesc></apiParam><apiParam><apiItemName>moveToStart</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Zeigt an, ob der Stift vor dem Zeichnen zum Anfang der Linie verschoben werden soll. Übergeben Sie den Wert <codeph>false</codeph>, um diese Funktion zum Fortsetzen einer begonnenen Linie zu verwenden.
 	  
 	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Zeichnet eine Verbindungslinie zwischen den Datenpunkten mithilfe einer der verschiedenen Formen.  
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:fillFromStyle"><apiName>fillFromStyle</apiName><shortdesc>
	  Konvertiert einen Stilwert in ein Fill-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Das entsprechende IFill-Objekt.
	  
	  </apiDesc><apiType value="mx.graphics:IFill"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="Object"/><apiDesc>Der in eine Füllung zu konvertierende Wert.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Konvertiert einen Stilwert in ein Fill-Objekt. Diese praktische Methode konvertiert einen über Stile zugewiesenen Wert in ein Fill-Objekt, das zum Füllen eines Bereichs auf dem Bildschirm verwendet werden kann. Ist der Wert numerisch, konvertiert diese Funktion den Wert in eine entsprechende SolidColor.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:fillRect"><apiName>fillRect</apiName><shortdesc>
	  Füllt ein Rechteck mithilfe dem bereitgestellten IFill- und IStroke-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Das Graphics-Objekt, in dem gezeichnet werden soll.
	 </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="Number"/><apiDesc>Der linke Rand des zu füllenden Rechtecks.
	 </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="Number"/><apiDesc>Der obere Rand des zu füllenden Rechtecks.
	 </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="Number"/><apiDesc>Der rechte Rand des zu füllenden Rechtecks.
	 </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="Number"/><apiDesc>Der untere Rand des zu füllenden Rechtecks.
	 </apiDesc></apiParam><apiParam><apiItemName>fill</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das IFill-Objekt, mit dem das Rechteck gefüllt werden soll. Setzen Sie diesen Parameter auf „null“, um ein Rechteck ohne Füllung zu zeichnen.
	 </apiDesc></apiParam><apiParam><apiItemName>ls</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das Strichobjekt, mit dem das Rechteck gezeichnet werden soll. Setzen Sie diesen Parameter auf „null“, um ein Rechteck ohne Kontur zu zeichnen.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Füllt ein Rechteck mithilfe dem bereitgestellten IFill- und IStroke-Objekt. Diese Dienstprogrammfunktion zeichnet das angegebene Rechteck im Graphics-Objekt mit der angegebenen Füllung und dem angegebenen Strich. Ist kein Strich angegeben, wird das Rechteck ohne Rahmen ausgefüllt. Ist keine Füllung angegeben, wird das Rechteck ohne Füllung gezeichnet.
	 
	 	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:setLineStyle"><apiName>setLineStyle</apiName><shortdesc>
	  Wendet die Werte eines Strichs auf das bereitgestellte Graphics-Objekt an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Das zu ändernde Graphics-Objekt.
	 </apiDesc></apiParam><apiParam><apiItemName>ls</apiItemName><apiType value="mx.graphics:IStroke"/><apiDesc>Die anzuwendende IStroke-Instanz. Setzen Sie sie für die Wiedergabe ohne Kontur auf <codeph>null</codeph>.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Wendet die Werte eines Strichs auf das bereitgestellte Graphics-Objekt an. Diese Dienstprogrammfunktion wendet den an sie übergebenen Strich an oder löscht den Linienstil des bereitgestellten Graphics-Objekts, wenn der Parameter <codeph>ls</codeph> auf <codeph>null</codeph> eingestellt ist.
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:DateRangeUtilities"><apiName>DateRangeUtilities</apiName><shortdesc>
 Ein Satz deaktivierter Datenbereichs-Dienstprogramme, die von „DateTimeAxis“ verwendet werden.
  
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Ein Satz deaktivierter Datenbereichs-Dienstprogramme, die von „DateTimeAxis“ verwendet werden.
  
  </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="mx.charts.chartClasses:IStackable2"><apiName>IStackable2</apiName><shortdesc>
  Die IStackable2-Schnittstelle wird durch jede stapelbare Serie implementiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IStackable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IStackable2-Schnittstelle wird durch jede stapelbare Serie implementiert. Stapelsätze („ColumnSet“, „BarSet“, „AreaSet“) erfordern, dass jegliche, ihnen beim Stapeln zugewiesene Subserien diese Schnittstelle implementieren, wenn sie auch beim Stapeln negative Werte aufweisen sollten.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IStackable2:mx.charts.chartClasses:IStackable2:stackAll"><apiName>stackAll</apiName><shortdesc>
  Stapelt die Serie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Objekt, das die Höchst- und Mindestwerte in der neu gestapelten Serie darstellt.	 
  
  </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stackedPosXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Enthält die Basiswerte, auf denen gestapelt wird. Die Schlüssel im Wörterbuch sind die x-Werte und die Werte entsprechen positiven x-Werten.
 
  </apiDesc></apiParam><apiParam><apiItemName>stackedNegXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Enthält die Basiswerte, auf denen gestapelt wird. Die Schlüssel im Wörterbuch sind die x-Werte und die Werte entsprechen den negativen y-Werten.
  
  </apiDesc></apiParam><apiParam><apiItemName>previousElement</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IStackable2</apiOperationClassifier><apiDesc>Das vorherige Element im Stapel. Wenn das Element beispielsweise den gleichen Typ aufweist, können Sie mit dieser Eigenschaft Arbeit beim Rendern sparen.
  
  </apiDesc></apiParam></apiOperationDef><apiDesc>
  Stapelt die Serie. Normalerweise implementiert eine Serie die <codeph>updateData()</codeph>-Methode, um die Daten aus dem Datenprovider zu laden. Eine Stapelserie führt jedoch spezielle Vorgänge durch, da ihre Werte nicht unbedingt im Datenprovider gespeichert sind. Ihre Werte entsprechen den im Datenprovider gespeicherten Werten, zu denen die Werte addiert werden, die von dem darunter befindlichen Stapelobjekt geladen wurden.
  <p>Eine angepasste Stapelserie muss die <codeph>stack()</codeph>-Methode implementieren, indem sie die Daten aus dem Datenprovider lädt und zu den Basisdaten im Wörterbuch addiert, um die tatsächlich gerenderten Werte abzurufen und die Werte im Wörterbuch durch die neuen, addierten Werte zu ersetzen.</p>
  
  </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartElement"><apiName>ChartElement</apiName><shortdesc>
  Die ChartElement-Klasse ist die Basisklasse für grafische Diagrammelemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IChartElement2</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:DualStyleObject</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ChartElement-Klasse ist die Basisklasse für grafische Diagrammelemente.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartElement:ChartElement"><apiName>ChartElement</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartElement:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Die DisplayObject-Instanz, die Sie im Parameter <codeph>child</codeph> übergeben.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Die DisplayObject-Instanz, die der DisplayObjectContainer-Instanz untergeordnet werden soll.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition, an der die untergeordnete Instanz hinzugefügt wird. Wenn Sie eine gerade besetzte Indexposition angeben, werden das untergeordnete Objekt an dieser Stelle sowie alle darüber liegenden Positionen innerhalb der Child-Liste um eine Position nach oben verschoben. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Fügt dieser DisplayObjectContainer-Instanz eine untergeordnete DisplayObject-Instanz hinzu. Das untergeordnete Objekt wird an der angegebenen Indexposition eingefügt. Die Indexposition 0 bezeichnet das hintere (untere) Ende der Anzeigeliste für dieses DisplayObjectContainer-Objekt.
     
     <p>Wenn Sie ein Child-Objekt hinzufügen, das bereits einem anderen Anzeigeobjektcontainer untergeordnet worden ist, wird es aus dessen Child-Liste entfernt. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:addChild"><apiName>addChild</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den vorherigen Status repräsentiert.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Eine Ganzzahl, die den neuen Status repräsentiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird vom umschließenden Diagramm aufgerufen und zeigt an, dass sich der aktuelle Status des Diagramms geändert hat. Die Implementierungselemente müssen auf diese Methode reagieren, damit die Änderungen an den durch das Element angezeigten Daten synchronisiert werden können.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:claimStyles"><apiName>claimStyles</apiName><shortdesc>
      
      Aufgerufen durch das Diagramm, damit verknüpfte Elemente Stilselektoren von seinem chartSeriesStyles-Array anfordern können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der neue Wert für <codeph>firstAvailable</codeph> nach dem Anfordern von Stilen (beispielsweise <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Stilen, die angefordert werden können.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Der erste Stilselektor im Array, der eine Anforderung stellt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Aufgerufen durch das Diagramm, damit verknüpfte Elemente Stilselektoren von seinem chartSeriesStyles-Array anfordern können. Jedes Diagramm verfügt über einen ihm zugeordneten Satz von Selektoren, die implizit enthaltenen Elementen zugewiesen sind, die sie benötigen. Die Implementierung dieser Funktion gibt einem Element die Möglichkeit, je nach Bedarf, Elemente aus diesem Satz 'anzufordern'. Ein Element das <i>N</i> Stilselektoren benötigt, fordert die Werte von <codeph>styles[firstAvailable]</codeph> bis <codeph>styles[firstAvailable + <i>N</i> - 1]</codeph> an.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:collectTransitions"><apiName>collectTransitions</apiName><shortdesc>
      
      Wird vom umgebenden Diagramm aufgerufen, um Übergänge zu erfassen, die ein bestimmtes Element möglicherweise bei Änderung des Status des Diagramms wiedergibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>chartState</apiItemName><apiType value="Number"/><apiDesc>Der Status, in dem das Diagramm die neuen Übergänge wiedergibt.
     
      </apiDesc></apiParam><apiParam><apiItemName>transitions</apiItemName><apiType value="Array"/><apiDesc>Ein Übergangs-Array, das der Liste der wiederzugebenden Übergänge des Diagramms hinzugefügt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird vom umgebenden Diagramm aufgerufen, um Übergänge zu erfassen, die ein bestimmtes Element möglicherweise bei Änderung des Status des Diagramms wiedergibt. Das Diagramm erfasst Übergänge von allen Elementen und stellt sicher, dass sie parallel wiedergegeben werden. Es wartet, bis alle Übergänge abgeschlossen sind, bevor es zu einem anderen Status wechselt. Implementoren müssen alle notwendigen Übergänge an den Übergangs-Arrayparameter anhängen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:createDataID"><apiName>createDataID</apiName><shortdesc>
      Erstellt eine eindeutige ID, die den dataPoint für Vergleichszwecke repräsentiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Eine ID für den dataPoint, die in der gesamten Anwendung eindeutig ist.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>dataPointID</apiItemName><apiType value="Number"/><apiDesc>Die aktuelle ID des dataPoint.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine eindeutige ID, die den dataPoint für Vergleichszwecke repräsentiert. Abgeleitete Klassen können diese Funktion mit einer lokal eindeutigen Datenpunkt-ID aufrufen, um eine in der gesamten Anwendung eindeutige ID zu generieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:dataChanged"><apiName>dataChanged</apiName><shortdesc>
      Zeigt an, dass sich die von diesem Element dargestellten zugrunde liegenden Daten geändert haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeigt an, dass sich die von diesem Element dargestellten zugrunde liegenden Daten geändert haben. Sie sollten diese Methode immer dann aufrufen, wenn sich die von Ihrer Serie oder Ihrem Element angezeigten Daten ändern. So können verknüpfte Achsen ihre Bereiche gegebenenfalls aktualisieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Koordinaten relativ zum Diagramm.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Die in Koordinaten zu konvertierenden Datenwerte.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Konvertiert ein Tupel von Datenwerten in eine x-y-Koordinate auf dem Bildschirm. Rufen Sie diese Funktion auf, um Daten zu transformieren und auf den Bildschirm zu bringen, indem Sie die Transformation verwenden, die die einzelnen Elemente durchlaufen. Um beispielsweise eine benutzerdefinierte Hervorhebung für einen Datenbereich eines Diagramms zu erstellen, können Sie diese Funktion verwenden, um die Bildschirmkoordinaten des relevanten Bereichs zu bestimmen.
      
      <p>Bei kartesischen Diagrammelementen werden normalerweise zwei Werte übergeben. Der erste Wert wird der horizontalen und der zweite Wert der vertikalen Achse zugeordnet.</p>
      
      <p>Bei Polardiagrammen wird der erste Wert der Winkelachse und der zweite Wert der Radialachse zugeordnet.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:describeData"><apiName>describeData</apiName><shortdesc>
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array, das die die angezeigten Daten beschreibenden DataDescription-Instanzen enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Bestimmt die Achse, von der Datenbeschreibungen abgerufen werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Ein Bitfeld, das anzeigt, welche Werte des DataDescription-Objekts von der spezifischen Achse berücksichtigt werden. Implementoren können optimiert werden, indem sie nur die erforderlichen Felder berechnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird durch das steuernde DataTransform aufgerufen, um eine Beschreibung der durch dieses IChartElement dargestellten Daten zu erhalten. Implementoren füllen ein Array von mx.charts.chartClasses.DataDescription-Objekten aus und geben es zurück, um sicherzustellen, dass ihre Daten von Achsen, die Werte aus den angezeigten Daten (wie „minimum“, „maximum“, „interval“ und „unitSize“) automatisch generieren, korrekt abgerufen werden. Die meisten Elementtypen geben ein Array zurück, das nur eine DataDescription enthält. Kombinierte Elemente, wie BarSet und ColumnSet geben möglicherweise mehrere DataDescription-Instanzen zurück, die die von ihren Unterelementen angezeigten Daten beschreiben. Bei entsprechendem Aufruf beschreibt der Implementor die Daten entlang der durch das Argument <codeph>dimension</codeph> angegebenen Achse. Diese Funktion wird möglicherweise für jede von dem enthaltenden Diagramm unterstützte Achse aufgerufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:findDataPoints"><apiName>findDataPoints</apiName><shortdesc> 
      Sucht den nächsten Datenpunkt, der von dem Element unter den angegebenen Koordinaten dargestellt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von HitData.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die x-Koordinate.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die y-Koordinate.
     
      </apiDesc></apiParam><apiParam><apiItemName>sensitivity2</apiItemName><apiType value="Number"/><apiDesc>Wie nahe der Mauszeiger den genauen Koordinaten sein muss, damit der Punkt als „unter“ dem Mauszeiger betrachtet wird. Diese Eigenschaft ist der Eigenschaft „mouseSensitivity“ des Diagrammsteuerelements ähnlich.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Sucht den nächsten Datenpunkt, der von dem Element unter den angegebenen Koordinaten dargestellt wird.
     
      <p>Diese Methode gibt ein Array von HitData-Strukturen zurück, die die Datenpunkte innerhalb des Bereichs beschreiben. Einzelne ChartElements geben möglicherweise nur einen einzigen dataPoint wieder, wenn sichergestellt ist, dass sich die dataPoints nicht überschneiden.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Gibt ein Array von HitData der Elemente aller zugrunde liegenden ChartElements implementieren, deren DataTips angezeigt werden sollen, wenn „showAllDataTips“ für das Diagramm auf „true“ eingestellt ist.
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die die Datenpunkte beschreibenden HitData-Objekte.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Gibt ein Array von HitData der Elemente aller zugrunde liegenden ChartElements implementieren, deren DataTips angezeigt werden sollen, wenn <codeph>showAllDataTips</codeph> für das Diagramm auf <codeph>true</codeph> eingestellt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:localToData"><apiName>localToData</apiName><shortdesc>
      
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Tupel von Datenwerten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>pt</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Der zu konvertierende Punkt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Konvertiert eine Koordinate auf dem Bildschirm in ein Tupel von Datenwerten. Rufen Sie diese Funktion auf, um festzustellen, welche Datenwerte ein bestimmter Punkt auf dem Bildschirm repräsentiert.
      <p>Einzelne Diagrammtypen bestimmen, wie diese Transformation stattfindet. Der Punkt sollte relativ zum Koordinatenraum des Diagramms sein.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird aufgerufen, wenn sich die Zuordnung einer oder mehrerer verknüpfter Achsen ändert. Das diesem ChartElement zugewiesene DataTransform ruft diese Methode auf, wenn eine der Achsen, die es repräsentiert in irgendeiner Weise geändert wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:processNewDataProvider"><apiName>processNewDataProvider</apiName><shortdesc> 
      Wird aufgerufen, wenn dem Element ein neuer dataProvider zugewiesen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Der Datenprovider. Dies ist normalerweise eine Array-, eine ArrayCollection-, eine XMLList-, eine XMLListCollection- oder eine ähnliche Klasse.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Wird aufgerufen, wenn dem Element ein neuer dataProvider zugewiesen wird. Unterklassen können benutzerdefiniertes Verhalten überschreiben und definieren, wenn ein neuer dataProvider zugewiesen wird. Diese Methode wird aufgerufen, wenn entweder die Eigenschaft <codeph>dataProvider</codeph> oder die Eigenschaft <codeph>chartDataProvider</codeph> eingestellt ist, sofern kein spezifischer dataProvider direkt zugewiesen worden ist.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:ChartElement:protected:cursor"><apiName>cursor</apiName><shortdesc>
      Jedes ChartElement verfügt über einen mit ihrem dataProvider verknüpften Cursor für ihre eigene, interne Verwendung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:IViewCursor"/></apiValueDef><apiDesc>
      Jedes ChartElement verfügt über einen mit ihrem dataProvider verknüpften Cursor für ihre eigene, interne Verwendung. Dieser Cursor ist im alleinigen Besitz der jeweiligen ChartElements. Sie gehen davon aus, dass die Cursorposition durch keinen anderen Code verändert werden kann.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:protected:chart:get"><apiName>chart</apiName><shortdesc>
      Bezieht sich auf die Diagrammkomponente, die dieses Element enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts.chartClasses:ChartBase</apiValueClassifier></apiValueDef><apiDesc>
      Bezieht sich auf die Diagrammkomponente, die dieses Element enthält.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Ein diesem spezifischen Element zugewiesener Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Ein diesem spezifischen Element zugewiesener Datenprovider. Im Allgemeinen erben Elemente den dataProvider vom umschließenden Diagramm. Einzelne Elemente können diesen jedoch mit einem eigenen dataProvider überschreiben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:dataTransform:get"><apiName>dataTransform</apiName><shortdesc>
      Das DataTransform-Objekt, mit dem das Element verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      Das DataTransform-Objekt, mit dem das Element verknüpft ist. Ein DataTransform-Objekt repräsentiert eine Verknüpfung zwischen einem Satz von Elementen und einem Satz von Achsenobjekten, die zum Transformieren dieser Elemente von Datenraumwerten zu Bildschirmkoordinaten (und umgekehrt) verwendet werden. Ein Diagrammelement verwendet sein verknüpftes DataTransform-Objekt zur Berechnung, wie seine Daten gerendert werden sollen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:labelContainer:get"><apiName>labelContainer</apiName><shortdesc>
      
      Das DisplayObject, das die durch dieses Element gerenderten Beschriftungen anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      
      Das DisplayObject, das die durch dieses Element gerenderten Beschriftungen anzeigt. In den meisten Fällen werden im Datenbereich angezeigte Beschriftungen über allen Elementen, und nicht zwischen den Daten angezeigt. Wenn ein implementierendes Element anzuzeigende Beschriftungen hat, kann es sie in einem Sprite-Objekt platzieren und als Wert der Eigenschaft <codeph>labelContainer</codeph> zurückgeben. Umschließende Diagramme rendern labelContainers von allen umschlossenen Elementen und platzieren Sie im Datenbereich über allen anderen Elementen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der dem umschließenden Diagramm zugewiesene Datenprovider. Elementtypen können wahlweise den Datenprovider vom umschließenden Diagramm erben, falls erforderlich, oder die spezifische Zuweisung von Datenprovidern zum Element durch die Entwickler zulassen. Nicht alle Elemente werden notwendigerweise durch einen Datenprovider gesteuert.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataTransform"><apiName>DataTransform</apiName><shortdesc>
  Das DataTransform-Objekt stellt einen Teil eines Diagramms dar, das Glyphen enthält, und kann Werte in Bildschirmkoordinaten transformieren (und umgekehrt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das DataTransform-Objekt stellt einen Teil eines Diagramms dar, das Glyphen enthält, und kann Werte in Bildschirmkoordinaten transformieren (und umgekehrt). Jedes DataTransform-Objekt hat eine horizontale Achse, eine vertikale Achse und einen Satz von zu rendernden Glyphen (Hintergrund, Daten und Überlagerung).  
  
  <p>Theoretisch kann ein Diagramm mehrere überlagerte DataTransform-Objekte enthalten. Dies gibt Ihnen die Möglichkeit, ein Diagramm mit mehreren auf derselben Fläche, aber mit unterschiedlichen Bereichen gerenderten Datensätzen anzuzeigen. Es kann beispielsweise wünschenswert sein, die monatlichen Erträge im Vergleich zur Anzahl der verkauften Einheiten anzeigen zu können. Wenn die Erträge normalerweise in Millionen, die Einheiten jedoch normalerweise in Tausend angezeigt werden, wäre es schwierig, diese beiden Werte entlang desselben Bereichs anzuzeigen. Überlagern Sie sie in verschiedenen DataTransform-Objekten, kann der Endbenutzer die Tendenzen dieser Werte vergleichen, wenn sie in verschiedenen Bereichen gerendert werden.</p>
 
  <p>Diagramme können nur einen DataTransform-Satz enthalten.</p>
  
  <p>Meistens wird das ChartBase-Objekt verwendet, welches das Vorhandensein des DataTransform-Objekts zwischen dem Diagramm und den darin enthaltenen Glyphen und Achsenobjekten verbirgt. Wenn Sie Ihre eigenen ChartElement-Objekte erstellen, müssen Sie die Methoden der DataTransform-Klasse beherrschen, um ihr Element korrekt zu implementieren.</p>
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.charts.chartClasses:DataTransform_mx.events.FlexEvent.TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Transformation von Datenraum zu Bildschirmraum geändert hat, normalerweise kann dies zwei Gründe haben: Die Achsen, die die Transformation bilden, haben sich in irgendeiner Weise geändert oder die Größe der Datentransformation selbst hat sich geändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Transformation von Datenraum zu Bildschirmraum geändert hat, normalerweise kann dies zwei Gründe haben: Die Achsen, die die Transformation bilden, haben sich in irgendeiner Weise geändert oder die Größe der Datentransformation selbst hat sich geändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:DataTransform:DataTransform"><apiName>DataTransform</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:DataTransform:dataChanged"><apiName>dataChanged</apiName><shortdesc>
      Informiert das DataTransform, dass sich manche der im Diagramm dargestellten zugrunde liegenden Daten geändert haben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Informiert das DataTransform, dass sich manche der im Diagramm dargestellten zugrunde liegenden Daten geändert haben. Das DataTransform hat im Allgemeinen keine Kenntnis von der Quelle der durch das Diagramm dargestellten zugrunde liegenden Daten. Glyphen sollten deshalb diese Methode aufrufen, wenn sich ihre Daten ändern, sodass das DataTransform die Bereichsskalen basierend auf ihren Daten erneut berechnen kann. Dies führt <b>nicht</b> dazu, dass das DataTransform ungültig gemacht wird, da nicht sicher ist, dass sich die Daten geändert haben. Die Achsenobjekte (oder Bereichsobjekte) müssen ein Ereignis zum Ungültigmachen auslösen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:describeData"><apiName>describeData</apiName><shortdesc>
      Erfasst wichtige angezeigte Werte für alle mit dieser Datentransformation verknüpften Werte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array von BoundedValue-Objekten.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Die Dimension, für die Werte erfasst werden sollen.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Definiert die von dieser Transformation benötigten Daten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erfasst wichtige angezeigte Werte für alle mit dieser Datentransformation verknüpften Werte. Achseninstanzen rufen diese Methode auf, um die beim automatischen Generieren der korrekten Bereiche von ihnen zu berücksichtigenden Werte zu erfassen. Diese Methode gibt ein Array von BoundedValue-Objekten zurück.
      
      <p>Übergeben Sie zum Erfassen wichtiger Werte für die horizontale Achse eines CartesianTransform den Wert „0“. Übergeben Sie zum Erfassen von Werten für die vertikale Achse den Wert „1“.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:getAxis"><apiName>getAxis</apiName><shortdesc>
      Ruft die für die Transformation der durch den Parameter „dimension“ festgelegten Datendimension zuständige Achseninstanz ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Achseninstanz.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Die Dimension, deren Achse für die Transformation der Daten zuständig ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft die für die Transformation der durch den Parameter <codeph>dimension</codeph> festgelegten Datendimension zuständige Achseninstanz ab. Wurde zuvor keine Achse zugewiesen, wird eine Standardachse erstellt. Die Standardachse für alle Dimensionen ist eine LinearAxis, wobei die Eigenschaft <codeph>autoAdjust</codeph> auf <codeph>false</codeph> eingestellt ist. 
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:invertTransform"><apiName>invertTransform</apiName><shortdesc>
      Transformiert x- und y-Koordinaten relativ zum DataTransform-Koordinatensystem in einen zweidimensionalen Wert im Datenraum.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Array, das die transformierten Werte enthält.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiType value="restParam"/><apiDesc>Die x- und die y-Position (in dieser Reihenfolge).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Transformiert x- und y-Koordinaten relativ zum DataTransform-Koordinatensystem in einen zweidimensionalen Wert im Datenraum.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:setAxis"><apiName>setAxis</apiName><shortdesc>
      Weist einer bestimmten Dimension der Transformation eine Achseninstanz zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Die Dimension der Transformation.
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier><apiDesc>Die Zielachseninstanz.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Weist einer bestimmten Dimension der Transformation eine Achseninstanz zu. Achsenobjekte werden durch das umschließende Diagrammobjekt zugewiesen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Ein Array von Objekten, das die Datenwerte in ihren Feldern enthält. Hier speichert diese Funktion auch die konvertierten numerischen Werte.
     
      </apiDesc></apiParam><apiParam><apiItemName>xField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die x-Achse zu finden sind.
     
      </apiDesc></apiParam><apiParam><apiItemName>xConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete x-Bildschirmkoordinate gespeichert wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>yField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die Datenwerte für die y-Achse zu finden sind.
     
      </apiDesc></apiParam><apiParam><apiItemName>yConvertedField</apiItemName><apiType value="String"/><apiDesc>Das Feld, in dem die zugeordnete y-Bildschirmkoordinate gespeichert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ordnet einen Satz von numerischen Werten, die Daten repräsentieren, Bildschirmkoordinaten zu. Bei dieser Methode wird davon ausgegangen, dass die Werte alle numerisch sind. Alle nicht numerischen Werte müssen demzufolge zuvor mit der <codeph>mapCache()</codeph>-Methode konvertiert worden sein.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:DataTransform:axes:get"><apiName>axes</apiName><shortdesc>
      Der Satz der mit dieser Transformation verknüpften Achsen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz der mit dieser Transformation verknüpften Achsen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTransform:elements:get"><apiName>elements</apiName><shortdesc>
      Die mit dieser Transformation verknüpften Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Die mit dieser Transformation verknüpften Elemente. Dieses Array umfasst mit der Transformation verknüpfte Hintergrund-, Serien- und Überlagerungselemente. Dieser Wert wird durch das umschließende Diagrammobjekt zugewiesen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DualStyleObject"><apiName>DualStyleObject</apiName><shortdesc>
  Die DualStyleObject-Klasse dient als Basisklasse für Komponenten, die Klassenselektoren außerhalb der Kontrolle des Cliententwicklers zuweisen müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p><b>Common MXML Syntax Inherited from DualStyleObject</b></p>
  
  <p>Flex components inherit the following properties
  from the DualStyleObject class:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    internalStyleName="<i>Style; No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DualStyleObject-Klasse dient als Basisklasse für Komponenten, die Klassenselektoren außerhalb der Kontrolle des Cliententwicklers zuweisen müssen. DualStyleObject-Instanzen haben zwei styleName-Eigenschaften: die Standardeigenschaft „styleName“ und die zusätzliche Eigenschaft „internalStyleName“. Eine Komponente kann die Eigenschaft „internalStyleName“ nach Bedarf zuweisen und die Zuweisung der Eigenschaft „styleName“ dem Cliententwickler überlassen.
 
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:DualStyleObject:DualStyleObject"><apiName>DualStyleObject</apiName><shortdesc> 
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:DualStyleObject:internalStyleName:get"><apiName>internalStyleName</apiName><shortdesc>
      Der Name eines Klassenselektors, von dem diese Instanz Werte erbt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Name eines Klassenselektors, von dem diese Instanz Werte erbt. Die Eigenschaft <codeph>internalStyleName</codeph> hat eine geringere Priorität als der <codeph>styleName</codeph>-Selektor.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>