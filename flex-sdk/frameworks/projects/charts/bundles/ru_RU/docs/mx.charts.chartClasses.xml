<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.charts.chartClasses"><apiName>mx.charts.chartClasses</apiName><apiDetail/><apiClassifier id="mx.charts.chartClasses:CartesianCanvasValue"><apiName>CartesianCanvasValue</apiName><shortdesc>
     Определяет расположение объектов на холсте данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
     Определяет расположение объектов на холсте данных. В этом классе содержится координата данных и необязательное смещение, которые используются классом CartesianDataCanvas для вычисления координат в пикселях.
     
     </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.chartClasses.xml#CartesianDataCanvas"><linktext>mx.charts.chartClasses.CartesianDataCanvas</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:CartesianCanvasValue:CartesianCanvasValue"><apiName>CartesianCanvasValue</apiName><shortdesc>
         Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>value</apiItemName><apiType value="any"/><apiDesc>Координата данных точки.
         </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Смещение координаты данных, указанной в <codeph>value</codeph> (в пикселях).
          
          </apiDesc></apiParam></apiConstructorDef><apiDesc>
         Конструктор.
         
         </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.charts.chartClasses:IAxisRenderer"><apiName>IAxisRenderer</apiName><shortdesc>
  Класс IAxis является абстрактным интерфейсом для определения свойств метки, делений и позиционирования данных для оси диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IUIComponent</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Класс IAxis является абстрактным интерфейсом для определения свойств метки, делений и позиционирования данных для оси диаграммы.
 
  <p>Классы реализуют данный интерфейс для предоставления функции определения диапазона.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><apiOperation id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:adjustGutters"><apiName>adjustGutters</apiName><shortdesc>
      Корректирует макет в целях размещения передаваемых средников.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Прямоугольник, определяющий размеры средников с учетом корректировок.
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>workingGutters</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Определяет средники, подлежащие корректировке.
     
      </apiDesc></apiParam><apiParam><apiItemName>adjustable</apiItemName><apiType value="Object"/><apiDesc>Состоит из четырех логических свойств (left=true/false, top=true/false, right=true/false и bottom=true/false), определяющих возможность дополнительной корректировки каждого из средников средством визуализации оси.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Корректирует макет в целях размещения передаваемых средников. Этот метод вызывается диаграммой с включением для определения размера средников и соответствующей области данных. Этот метод предоставляет AxisRenderer возможность определения макета с учетом новых средников, а также их корректировки (при необходимости). Если определенный средник допускает корректировку, средство визуализации оси может дополнительно откорректировать средники в сторону увеличения, но не в сторону уменьшения.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее предыдущее состояние.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее новое состояние.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы. Реализующие элементы должны ответить на этот метод для синхронизации изменений данных, отображаемых элементом.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:axis:get"><apiName>axis</apiName><shortdesc>
      Объект оси, связанный с этим средством визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Объект оси, связанный с этим средством визуализации. Управление этим свойством осуществляется диаграммой с вложением и не должно быть установлено явным образом.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:gutters:get"><apiName>gutters</apiName><shortdesc>
      Расстояние между axisRenderer и сторонами окружающей диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Расстояние между axisRenderer и сторонами окружающей диаграммы. Значение этого свойства автоматически присваивается диаграммой, его непосредственное присвоение не требуется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:horizontal:get"><apiName>horizontal</apiName><shortdesc>
      Свойство имеет значение true, если средство визуализации оси используется в качестве горизонтальной оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Свойство имеет значение <codeph>true</codeph>, если средство визуализации оси используется в качестве горизонтальной оси. Этим свойством управляет включающий объект CartesianChart, непосредственная установка значения этого свойства не требуется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:minorTicks:get"><apiName>minorTicks</apiName><shortdesc>
      Содержит массив, указывающий позиции для отображения приложением Flex вспомогательных делений по оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Содержит массив, указывающий позиции для отображения приложением Flex вспомогательных делений по оси. Каждый элемент массива содержит значение от 0 до 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:placement:get"><apiName>placement</apiName><shortdesc>
      Сторона диаграммы, на которой отображается axisRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Сторона диаграммы, на которой отображается axisRenderer. Допустимыми значениями являются <codeph>left</codeph> и <codeph>right</codeph> для средств визуализации вертикальной оси; <codeph>top</codeph> и <codeph>bottom</codeph> для средств визуализации горизонтальной оси. По умолчанию основные оси размещаются в левой верхней части, а вспомогательные оси – в правой нижней части. CartesianCharts автоматически обеспечивает размещение дополнительных осей напротив основных осей; например, если основная вертикальная ось явно размещается справа, то дополнительная вертикальная ось перемещается влево
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:ticks:get"><apiName>ticks</apiName><shortdesc>
      Содержит массив, указывающий позиции для отображения делений по оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Содержит массив, указывающий позиции для отображения делений по оси. Каждый элемент массива содержит значение от 0 до 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:heightLimit:set"><apiName>heightLimit</apiName><shortdesc>
      Максимальный объем пространства в пикселях, занимаемый средством визуализации оси в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Максимальный объем пространства в пикселях, занимаемый средством визуализации оси в диаграмме. Средства визуализации оси по умолчанию будут использовать все необходимое пространство в диаграмме для визуализации всех меток в полном размере. При установке параметра heightLimit AxisRenderer уменьшит размер меток таким образом, что общий размер оси будет меньше heightLimit.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxisRenderer:mx.charts.chartClasses:IAxisRenderer:otherAxes:set"><apiName>otherAxes</apiName><shortdesc>
      Массив осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив осей.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IChartElement"><apiName>IChartElement</apiName><shortdesc>
  IChartElement определяет базовый набор свойств и методов, необходимых элементу UIComponent для представления в области данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFlexDisplayObject</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IChartElement определяет базовый набор свойств и методов, необходимых элементу UIComponent для представления в области данных диаграммы. Данный интерфейс должен реализовываться любым компонентом, присвоенным к серии, элементами backgroundElements или массивами элементов annotationElements для диаграммы.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее предыдущее состояние.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее новое состояние.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы. Реализующие элементы должны ответить на этот метод для синхронизации изменений данных, отображаемых элементом.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:claimStyles"><apiName>claimStyles</apiName><shortdesc>
      Вызывается диаграммой для разрешения запроса селекторов стиля для связанных элементов из массива chartSeriesStyles.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Новое значение для <codeph>firstAvailable</codeph> после запроса любых стилей (например, <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Массив запрашиваемых стилей.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Первый запрашиваемый селектор стиля в массиве.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается диаграммой для разрешения запроса селекторов стиля для связанных элементов из массива chartSeriesStyles. Каждая диаграмма имеет связанный набор селекторов, которые неявным образом присвоены к элементам, содержащимся в диаграмме. Реализация этой функции при необходимости позволяет «запрашивать» элементы из данного набора. Элемент, требующий наличия <i>N</i> селекторов стиля, запрашивает значения с <codeph>styles[firstAvailable]</codeph> по <codeph>styles[firstAvailable + <i>N</i> – 1]</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:collectTransitions"><apiName>collectTransitions</apiName><shortdesc>
      Вызывается диаграммой с вложениями для получения всех эффектов перехода, которые воспроизводятся определенным элементом при изменении состояния диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>chartState</apiItemName><apiType value="Number"/><apiDesc>Состояние, в котором диаграмма воспроизводит новые эффекты перехода.
     
      </apiDesc></apiParam><apiParam><apiItemName>transitions</apiItemName><apiType value="Array"/><apiDesc>Массив перехода для добавления к списку воспроизводимых эффектов перехода диаграммы.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается диаграммой с вложениями для получения всех эффектов перехода, которые воспроизводятся определенным элементом при изменении состояния диаграммы. Диаграмма получает эффекты перехода от всех элементов и обеспечивает их параллельное воспроизведение. Диаграмма ожидает завершения всех переходов перед сменой состояния. Средства реализации должны добавить необходимые переходы в параметр переходов Array.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:describeData"><apiName>describeData</apiName><shortdesc>
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив, содержащий экземпляры DataDescription, описывающий отображаемые данные.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Определяет ось для получения описания данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.chartClasses.xml#DataDescription"><linktext>mx.charts.chartClasses.DataDescription</linktext></link><link href="mx.charts.chartClasses.xml#DataTransform"><linktext>mx.charts.chartClasses.DataTransform</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:findDataPoints"><apiName>findDataPoints</apiName><shortdesc>
      Возвращает объект HitData, описывающий самую близкую к переданным в метод координатам точку данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект HitData, описывающий самую близкую точку данных в пределах<codeph>sensitivity2</codeph> пикселей.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Координата X относительно объекта ChartBase.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Координата Y относительно объекта ChartBase.
      
      </apiDesc></apiParam><apiParam><apiItemName>sensitivity2</apiItemName><apiType value="Number"/><apiDesc>Максимальное расстояние от точки данных относительно координат X/Y.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает объект HitData, описывающий самую близкую к переданным в метод координатам точку данных. Аргументы <codeph>x</codeph> и <codeph>y</codeph> должны быть значениями в системе координат элемента. При поиске ближайших точек данных этот метод использует значения предела, указанные при помощи параметра <codeph>sensitivity2</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
      Сообщает элементу об изменении отображения данных связанных осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Сообщает элементу об изменении отображения данных связанных осей. Средства реализации должны удалить кэшируемые данные и корректно выполнить их повторную визуализацию. При необходимости эта функция вызывается автоматически с помощью связанного свойства DataTransform.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:labelContainer:get"><apiName>labelContainer</apiName><shortdesc>
      Объект DisplayObject, который отображает метки, визуализированные этим элементом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Объект DisplayObject, который отображает метки, визуализированные этим элементом. В большинстве случаев метки, отображаемые в области данных диаграммы, отображаются над всеми элементами, а не перемежаются данными. При существовании отображаемых меток в реализующем элементе он может расположить их в объекте Sprite и возвратить как значение свойства <codeph>labelContainer</codeph>. Диаграммы с вложениями выполнят визуализацию элементов labelContainers для всех включенных элементов и расположат их в области данных над прочими элементами.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Поставщик данных, присвоенный диаграмме с вложениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Поставщик данных, присвоенный диаграмме с вложениями. При необходимости для типов элементов существует возможность выбора наследования поставщика данных из диаграммы с вложениями или разрешения разработчикам присваивать поставщиков данных конкретному элементу. Управление элементами не всегда выполняется поставщиком данных.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IChartElement:mx.charts.chartClasses:IChartElement:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      Объект DataTransform, используемый элементом для сопоставления данных и координат экрана.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      Объект DataTransform, используемый элементом для сопоставления данных и координат экрана. Это свойство назначено диаграммой с вложениями.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:LegendData"><apiName>LegendData</apiName><shortdesc>
  Структура LegendData используется диаграммами для описания элементов, отображаемых в автоматически генерируемой легенде.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Структура LegendData используется диаграммами для описания элементов, отображаемых в автоматически генерируемой легенде. Свойство диаграммы <codeph>legendData</codeph> содержит массив объектов LegendData, по одному объекту для каждого элемента легенды. 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:LegendData:LegendData"><apiName>LegendData</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:LegendData:aspectRatio"><apiName>aspectRatio</apiName><shortdesc>
	  Определяет размер и расположение маркера легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Определяет размер и расположение маркера легенды. Настроенный элемент LegendItem обеспечивает соответствие ширины и высоты маркера данному значению. Если элемент легенды не установлен (<codeph>NaN</codeph>), то выбирается подходящая ширина и высота по умолчанию.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:element"><apiName>element</apiName><shortdesc>
	  Элемент диаграммы, сгенерировавший данный элемент легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.charts.chartClasses:IChartElement</apiValueClassifier></apiValueDef><apiDesc>
	  Элемент диаграммы, сгенерировавший данный элемент легенды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:label"><apiName>label</apiName><shortdesc>
	  Текст, определяющий серию или элемент, отображаемый в элементе легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Текст, определяющий серию или элемент, отображаемый в элементе легенды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:LegendData:marker"><apiName>marker</apiName><shortdesc>
	  Визуальный индикатор, связывающий элемент легенды с серией или элементом для представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IFlexDisplayObject"/></apiValueDef><apiDesc>
	  Визуальный индикатор, связывающий элемент легенды с серией или элементом для представления. DisplayObject добавляется как нижестоящий элемент по отношению к LegendItem. 
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:InstanceCache"><apiName>InstanceCache</apiName><shortdesc>
  InstanceCache является вспомогательной функцией, которая обеспечивает создание и управление набором n экземпляров объекта, где n – часто изменяемое значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  InstanceCache является вспомогательной функцией, которая обеспечивает создание и управление набором <i>n</i> экземпляров объекта, где <i>n</i> – часто изменяемое значение.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:InstanceCache:InstanceCache"><apiName>InstanceCache</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="Object"/><apiDesc>Тип создаваемого объекта. Тип может быть равен Class или IFactory.
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Необязательный объект DisplayObject, к которому добавляются новые экземпляры.
     
      </apiDesc></apiParam><apiParam><apiItemName>insertPosition</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Позиция в списке нижестоящих элементов для вставки экземпляров. Установите «-1» для добавления нижестоящих элементов в конец списка нижестоящих элементов.
     
      </apiDesc></apiParam><apiParam><apiItemName>moduleFactory</apiItemName><apiType value="mx.core:IFlexModuleFactory"/><apiData>null</apiData><apiDesc>Контекст для использования встроенных шрифтов и поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:InstanceCache:creationCallback"><apiName>creationCallback</apiName><shortdesc>
      Обратный вызов, выполняемый при создании новых экземпляров.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      Обратный вызов, выполняемый при создании новых экземпляров. Обратный вызов имеет следующую подпись:
      <pre>
      function creationCallback(<i>newInstance</i>:Object, <i>cache</i>:InstanceCache):void;
      </pre>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:discard"><apiName>discard</apiName><shortdesc> 
      Определяет, удалены ли лишние экземпляры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> 
      Определяет, удалены ли лишние экземпляры. При установке значения на <codeph>true</codeph> дополнительные элементы удаляются при уменьшении значения счетчика кэша. В противном случае дополнительные элементы сохраняются в отдельном кэше и повторно используются при увеличении значения счетчика.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:hide"><apiName>hide</apiName><shortdesc>
      Определяет необходимость скрытия лишних экземпляров.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Определяет необходимость скрытия лишних экземпляров. При установке значения на<codeph>true</codeph> свойство<codeph>visible</codeph> устанавливается в значение <codeph>false</codeph> для каждого дополнительного элемента при уменьшении значения счетчика кэша или в значение <codeph>true</codeph> при увеличении значения счетчика.
      
      <p>Это свойство релевантно только при генерации фабрикой DisplayObjects. Установка этого свойства на <codeph>true</codeph> для других типов фабрик генерирует ошибку времени выполнения.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:remove"><apiName>remove</apiName><shortdesc>
      Определяет необходимость удаления лишних экземпляров из вышестоящих элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Определяет необходимость удаления лишних экземпляров из вышестоящих элементов. При установке значения на <codeph>true</codeph> метод <codeph>removeChild()</codeph> вызывается в вышестоящем элементе для каждого дополнительного элемента при уменьшении значения счетчика кэша.
      
      <p>Это свойство релевантно только при генерации фабрикой DisplayObjects. Установка этого свойства на <codeph>true</codeph> для других типов фабрик генерирует ошибку времени выполнения.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:count:get"><apiName>count</apiName><shortdesc>
      Число элементов, требуемых в кэше в настоящее время.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Число элементов, требуемых в кэше в настоящее время.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:factory:get"><apiName>factory</apiName><shortdesc>
      Фабрика, создающая тип объекта для кэширования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc>
      Фабрика, создающая тип объекта для кэширования. Назначение этого свойства приведет к удалению всех текущих экземпляров и созданию новых экземпляров корректного типа.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:format:get"><apiName>format</apiName><shortdesc>
      TextFormat для применения к создаваемым экземплярам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:TextFormat"/></apiValueDef><apiDesc>
      TextFormat для применения к создаваемым экземплярам. При установке данный формат используется как текущий формат и формат по умолчанию для содержимого всех создаваемых экземпляров. Это свойство релевантно только при генерации фабрикой экземпляров TextField.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:instances:get"><apiName>instances</apiName><shortdesc>
      Массив кэшируемых экземпляров.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив кэшируемых экземпляров. В данном массиве возможно существование большего числа экземпляров, чем запрошено в настоящее время. Определяющим является свойство кэша экземпляров <codeph>count</codeph>, а не длина данного массива.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:properties:get"><apiName>properties</apiName><shortdesc>
      Хэш-код свойств для присвоения новым экземплярам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Хэш-код свойств для присвоения новым экземплярам. Пара клавиш/значений в этом хэш-коде присваивается каждому создаваемому экземпляру. При установке хэш-код свойства присваивается всем существующим экземплярам.
      
      <p>Значения в хэш-коде не клонируются; значения объекта распределяются всеми экземплярами.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:InstanceCache:insertPosition:set"><apiName>insertPosition</apiName><shortdesc> 
      Позиция экземпляра в списке нижестоящих элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="int"/></apiValueDef><apiDesc> 
      Позиция экземпляра в списке нижестоящих элементов. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianTransform"><apiName>CartesianTransform</apiName><shortdesc>
  Объект CartesianTransform представляет набор осей, отображающий значения данных относительно прямоугольной системы экранных координат X/Y и, наоборот.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:DataTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Объект CartesianTransform представляет набор осей, отображающий значения данных относительно прямоугольной системы экранных координат X/Y и, наоборот.
 
  <p>При использовании диаграмм в приложениях объект CartesianTransform обычно не требуется. Преобразования создаются автоматически при помощи типов встроенных диаграмм и используются содержащейся в них серией для возможности преобразования данных в координаты визуализации.</p> 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:CartesianTransform:CartesianTransform"><apiName>CartesianTransform</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianTransform:invertTransform"><apiName>invertTransform</apiName><shortdesc> 
      Преобразует координаты X и Y относительно системы координат DataTransform в двухмерное значение в области данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Массив, содержащий преобразованные значения.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiType value="restParam"/><apiDesc>Позиции X и Y (в этом порядке).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Преобразует координаты X и Y относительно системы координат DataTransform в двухмерное значение в области данных. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      Отображает набор числовых значений, представляющих данные экранных координат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, содержащих значения данные в полях. Это также место хранения преобразованных числовых значений функции.
     
      </apiDesc></apiParam><apiParam><apiItemName>xField</apiItemName><apiType value="String"/><apiDesc>Поле для хранения значений данных оси X.
     
      </apiDesc></apiParam><apiParam><apiItemName>xConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для хранения отображаемой экранной координаты относительно оси X.
     
      </apiDesc></apiParam><apiParam><apiItemName>yField</apiItemName><apiType value="String"/><apiDesc>Поле для хранения значений данных оси Y.
     
      </apiDesc></apiParam><apiParam><apiItemName>yConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для хранения отображаемой экранной координаты относительно оси Y.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отображает набор числовых значений, представляющих данные экранных координат. Этот метод предполагает, что все значения являются числами, так что все нечисловые значения должны быть предварительно преобразованы при помощи метода <codeph>mapCache()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:CartesianTransform:HORIZONTAL_AXIS"><apiName>HORIZONTAL_AXIS</apiName><shortdesc>
      Строка, представляющая горизонтальную ось.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>h</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Строка, представляющая горизонтальную ось.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:VERTICAL_AXIS"><apiName>VERTICAL_AXIS</apiName><shortdesc>
      Строка, представляющая вертикальную ось.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>v</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Строка, представляющая вертикальную ось.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:pixelHeight:set"><apiName>pixelHeight</apiName><shortdesc>
      Высота области данных, представляемой CartesianTransform (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота области данных, представляемой CartesianTransform (в пикселях). Диаграмма с данными явным образом устанавливает это свойство во время создания макета. CartesianTransform использует это свойство для отображения значений данных для экранных координат.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianTransform:pixelWidth:set"><apiName>pixelWidth</apiName><shortdesc>
      Ширина области данных, представляемая CartesianTransform (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина области данных, представляемая CartesianTransform (в пикселях). Диаграмма с данными явным образом устанавливает это свойство во время создания макета. CartesianTransform использует это свойство для отображения значений данных для экранных координат.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartState"><apiName>ChartState</apiName><shortdesc>
  Описывает текущее состояние диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Описывает текущее состояние диаграммы. Реализации серии могут проверить значение Chart.state для определения того, показывает ли диаграмма данные или скрывает их, а также для определения ответной визуализации.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:ChartState:HIDING_DATA"><apiName>HIDING_DATA</apiName><shortdesc>
	  Диаграмма в настоящее время выполняет переходы для скрытия старых данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Диаграмма в настоящее время выполняет переходы для скрытия старых данных диаграммы.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:NONE"><apiName>NONE</apiName><shortdesc>
	  Состояние отсутствует.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Состояние отсутствует. Диаграмма показывает только данные.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:PREPARING_TO_HIDE_DATA"><apiName>PREPARING_TO_HIDE_DATA</apiName><shortdesc>
	  Отображение данных в диаграмме изменилось, для скрытия текущих данных будет выполнен переход.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Отображение данных в диаграмме изменилось, для скрытия текущих данных будет выполнен переход.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:PREPARING_TO_SHOW_DATA"><apiName>PREPARING_TO_SHOW_DATA</apiName><shortdesc>
	  Переходы для скрытия старых данных в диаграмме завершены. Выполняется подготовка переходов для отображения новых данных
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Переходы для скрытия старых данных в диаграмме завершены. Выполняется подготовка переходов для отображения новых данных
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartState:SHOWING_DATA"><apiName>SHOWING_DATA</apiName><shortdesc>
	  В настоящее время в диаграмме выполняются переходы для отображения новых данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  В настоящее время в диаграмме выполняются переходы для отображения новых данных диаграммы.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:HLOCSeriesBase"><apiName>HLOCSeriesBase</apiName><shortdesc>
  HLOCSeriesBase является базовым классом для двух типов серии финансовых данных: HLOCSeries и CandlestickSeries.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="legendMarkerRenderer" owner="mx.charts.chartClasses:HLOCSeriesBase" playerVersion="Flash9" type="mx.core.IFactory">
<description>
  Класс, используемый в серии для визуализации маркера серии во всех связанных легендах. Если стиль имеет значение <codeph>null</codeph>, в большинстве серий в качестве темы оформления маркера легенды по умолчанию применяется имеющийся экземпляр itemRenderer. Классы, используемые в качестве маркеров легенды, должны обеспечивать реализацию интерфейса IFlexDisplayObject и интерфейсов IDataRenderer и ISimpleStyleClient дополнительно. Если класс, применяемый в виде маркера легенды, реализует интерфейс IDataRenderer, свойство данных присваивается экземпляру LegendData.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemRenderer" owner="mx.charts.chartClasses:HLOCSeriesBase" playerVersion="Flash9" type="mx.core.IFactory">
<description>
  Фабрика, представляющая класс, который будет использоваться серией для представления отдельных элементов на диаграмме. Этот класс создается один раз для каждого элемента диаграммы. Классы, используемые в качестве элементов itemRenderer, должны обеспечивать реализацию интерфейсов IFlexDisplayObject, ISimpleStyleClient и IDataRenderer. Свойство <codeph>data</codeph> присваивается элементу chartItem, отображаемому с помощью экземпляра темы оформления.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IColumn</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:Series</apiBaseClassifier></apiClassifierDef><apiDesc>
  HLOCSeriesBase является базовым классом для двух типов серии финансовых данных: HLOCSeries и CandlestickSeries. В этом классе содержится большинство типов поведения относительно открывающего, закрывающего, высокого и низкого значений.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:HLOCSeriesBase:HLOCSeriesBase"><apiName>HLOCSeriesBase</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:beginInterpolation"><apiName>beginInterpolation</apiName><shortdesc>
      
      Вызывается эффектом SeriesInterpolate для инициирования эффекта интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Данные, необходимые в серии для осуществления интерполяции.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>sourceRenderData</apiItemName><apiType value="Object"/><apiDesc>Исходные данные серии для проведения интерполяции.
     
      </apiDesc></apiParam><apiParam><apiItemName>destRenderData</apiItemName><apiType value="Object"/><apiDesc>Целевые данные серии для проведения интерполяции.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызывается эффектом SeriesInterpolate для инициирования эффекта интерполяции. Эффект обеспечивает передачу исходных и целевых данных серии для проведения интерполяции. Эффект обеспечивает неоднократную передачу возвращаемого значения этого метода в метод <codeph>interpolate()</codeph> серии для перехода к анимации для длительности эффекта. В серии выполняется расчет данных, необходимых для осуществления интерполяции, которые затем возвращаются в этом методе.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:describeData"><apiName>describeData</apiName><shortdesc>
      
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Массив, содержащий экземпляры DataDescription, описывающий отображаемые данные.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Определяет ось для получения описания данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:formatDataTip"><apiName>formatDataTip</apiName><shortdesc> 
      Генерирует текстовое описание ChartItem, подходящее для отображения в качестве DataTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Объект DataTip элемента.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>hd</apiItemName><apiOperationClassifier>mx.charts:HitData</apiOperationClassifier><apiDesc>Объект HitData для объекта ChartItem.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Генерирует текстовое описание ChartItem, подходящее для отображения в качестве DataTip.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:getElementBounds"><apiName>getElementBounds</apiName><shortdesc>
      
      Обеспечивает заполнение свойств elementBounds, bounds и visibleBounds структуры renderData, создаваемой этими сериями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>renderData</apiItemName><apiType value="Object"/><apiDesc>Структура, созданная с помощью этой серии.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Обеспечивает заполнение свойств <codeph>elementBounds</codeph>, <codeph>bounds</codeph> и <codeph>visibleBounds</codeph> структуры renderData, создаваемой этими сериями. Данный метод вызывается классами эффектов для заполнения этих полей и их использования при реализации различных типов эффектов. Полученные классы должны реализовать этот метод для создания границ элементов серии только при запросе.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      
      Получает все элементы, расположенные в прямоугольной области серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Массив объектов ChartItem, расположенных в указанной прямоугольной области.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>r</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Объект Rectangle, определяющий область.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает все элементы, расположенные в прямоугольной области серии. Вызовите эту функцию для определения элементов, расположенных в указанной прямоугольной области этой серии.
      <p>Отдельные серии определяют, находится ли элемент диаграммы в данной области. Точка должна быть расположена в области глобальных координат.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:getMissingInterpolationValues"><apiName>getMissingInterpolationValues</apiName><shortdesc>
      
      Обеспечивает заполнение отсутствующих значений в структуре интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>sourceProps</apiItemName><apiType value="Object"/><apiDesc>Объект, содержащий исходные значения, интерполированные для определенного элемента. При выходе из этого метода все свойства данного объекта должны иметь значения, отличные от <codeph>NaN</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Массив интерполируемых элементов исходной диаграммы.
     
      </apiDesc></apiParam><apiParam><apiItemName>destProps</apiItemName><apiType value="Object"/><apiDesc>Объект, содержащий целевые значения, которые интерполируются для определенного элемента. При выходе из этого метода все свойства данного объекта должны иметь значения, отличные от значения <codeph>NaN</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>destCache</apiItemName><apiType value="Array"/><apiDesc>Массив интерполируемых элементов целевой диаграммы.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Индекс элемента, заполняемого в кэше.  
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiDesc>Данные, перенесенные серией в метод <codeph>initializeInterpolationData()</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Обеспечивает заполнение отсутствующих значений в структуре интерполяции. При вызове метода <codeph>initializeInterpolationData()</codeph> серией, он передается в массив исходных и целевых значений для интерполяции. Если любой из двух массивов является неполным, «соответствующие» значения заполнителя для интерполяции должны быть обеспечены серией. Способ определения значений заполнителя зависит от типа серии. Для предоставления этих значений заполнителя средства расширения серий должны обеспечить отмену данного метода.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateData"><apiName>updateData</apiName><shortdesc>
      
      Вызывается, если основные данные, представляемые в сериях, были изменены и должны быть заново загружены из поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Вызывается, если основные данные, представляемые в сериях, были изменены и должны быть заново загружены из поставщика данных. При реализации пользовательских типов серий необходимо отменить этот метод и загрузить все данные, необходимые для отображения серий из резервного поставщика данных. Также следует убедиться в том, что в подклассе был вызван метод <codeph>super.updateData()</codeph>. Как правило, непосредственный вызов данного метода не осуществляется. Вместо этого для обеспечения гарантии того, что данные в заданной точке были обновлены, выполните вызов метода <codeph>validateData()</codeph> класса Series.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      
      Вызывается, если основные данные, представляемые в серии, должны быть отфильтрованы в соответствии с диапазонами, представляемыми с помощью осей связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Вызывается, если основные данные, представляемые в серии, должны быть отфильтрованы в соответствии с диапазонами, представляемыми с помощью осей связанного преобразования данных. Это может произойти по причине изменения основных данных или ввиду того, что был изменен диапазон связанных осей. При реализации пользовательского типа серии необходимо отменить этот метод и отфильтровать все внешние данные с использованием метода <codeph>filterCache()</codeph> осей, управляемых с помощью связанного преобразования данных. Метод <codeph>filterCache()</codeph> обеспечивает преобразование всех значений, находящихся вне диапазона, в значения <codeph>NaN</codeph>. Необходимо убедиться в том, что метод <codeph>super.updateFilter()</codeph> был вызван в подклассе. Как правило, непосредственный вызов данного метода не требуется. Вместо этого при необходимости удостовериться в том, что данные были отфильтрованы в заданной точке, вызовите метод <codeph>validateTransform()</codeph> класса Series. Как правило, в случае необходимости можно предположить, что методы <codeph>updateData()</codeph> и <codeph>updateMapping()</codeph> были вызваны перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateMapping"><apiName>updateMapping</apiName><shortdesc>
      
      Вызывается, если основные данные, представляемые в сериях, должны быть сопоставлены с числовыми представлениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Вызывается, если основные данные, представляемые в сериях, должны быть сопоставлены с числовыми представлениями. Это может случиться по причине изменения основных данных или ввиду того, что оси, используемые для отображения серий, были соответствующим образом изменены. При реализации пользовательских серий необходимо отменить этот метод и преобразовать данные, представляемые в виде числовых значений, с использованием метода <codeph>mapCache()</codeph> для осей, управляемых с помощью связанного преобразования данных. Также необходимо убедиться в вызове метода <codeph>super.updateMapping()</codeph> для подкласса. Как правило, непосредственный вызов данного метода не требуется. Вместо этого для гарантии того, что данные в заданной точке были сопоставлены, вызовите метод <codeph>validateData()</codeph> класса Series. Как правило, при необходимости можно предположить, что метод <codeph>updateData()</codeph> был вызван непосредственно перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:HLOCSeriesBase:protected:updateTransform"><apiName>updateTransform</apiName><shortdesc>
      
      Вызывается, если основные данные, представляемые в сериях, должны быть преобразованы из данных в экранные значения с помощью осей связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Вызывается, если основные данные, представляемые в сериях, должны быть преобразованы из данных в экранные значения с помощью осей связанного преобразования данных. Это может произойти по причине изменения основных данных, ввиду изменения диапазона связанных осей или размера области на экране. При реализации пользовательского типа серий необходимо отменить этот метод и выполнить преобразование данных с использованием метода <codeph>transformCache()</codeph> связанного преобразования данных. Следует убедиться в вызове метода <codeph>super.updateTransform()</codeph> в подклассе. Как правило, непосредственный вызов данного метода не требуется. Вместо этого при необходимости убедиться в том, что данные были отфильтрованы в заданной точке, вызовите метод <codeph>valiateTransform()</codeph> класса Series. Как правило, при необходимости можно предположить, что методы <codeph>updateData()</codeph>, <codeph>updateMapping()</codeph> и <codeph>updateFilter()</codeph> были вызваны непосредственно перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:closeField:get"><apiName>closeField</apiName><shortdesc>
      Указывает поле поставщика данных, определяющего расположение закрывающего значения элемента по оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, определяющего расположение закрывающего значения элемента по оси Y.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:columnWidthRatio:get"><apiName>columnWidthRatio</apiName><shortdesc>
      Указывает ширину элементов относительно ширины категории.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.65.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает ширину элементов относительно ширины категории. Значение <codeph>1</codeph> использует все пространство, а значение <codeph>0,6</codeph> – 60 % доступного пространства элемента. Как правило, непосредственная установка именно этого свойства не осуществляется. Фактическая используемая ширина элемента равна меньшему из свойств <codeph>columnWidthRatio</codeph> и <codeph>maxColumnWidth</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:highField:get"><apiName>highField</apiName><shortdesc>
      Указывает поле поставщика данных, определяющего расположение верхнего значения элемента по оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, определяющего расположение верхнего значения элемента по оси Y. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X. Для установки свойств horizontalAxis в качестве нижестоящего тега в MXML или создания объекта LinearAxis или CategoryAxis в ActionScript используется класс LinearAxis или класс CategoryAxis.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:itemType:get"><apiName>itemType</apiName><shortdesc>
      Подтип ChartItem, используемый в этой серии для представления отдельных элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc>
      Подтип ChartItem, используемый в этой серии для представления отдельных элементов. Если подклассы необходимо использовать для хранения дополнительной информации в элементах, они могут обеспечить перезапись и возвращение более специализированного класса.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:items:get"><apiName>items</apiName><shortdesc>
      
      Получает все элементы, находящиеся в серии после фильтрации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Получает все элементы, находящиеся в серии после фильтрации.
      <p>Отдельные серии определяют список элементов, которые должны быть возвращены.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:legendData:get"><apiName>legendData</apiName><shortdesc>
      
      Массив экземпляров LegendData, описывающий элементы, которые должны отображаться в легенде, представляющей эту серию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Массив экземпляров LegendData, описывающий элементы, которые должны отображаться в легенде, представляющей эту серию. Полученные классы серии обеспечивают перезапись этого получателя и возвращают данные легенды, специфичные для их стилей и метода представления данных. Несмотря на то что большинство типов серии возвращают только один экземпляр LegendData, некоторые типы серий, например PieSeries и StackedSeries, позволяют возвращать несколько экземпляров, представляющих отдельные элементы массива или несколько способов отображения данных.   
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:lowField:get"><apiName>lowField</apiName><shortdesc>
      Указывает поле поставщика данных, определяющего расположение нижнего значения элемента по оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, определяющего расположение нижнего значения элемента по оси Y.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:maxColumnWidth:get"><apiName>maxColumnWidth</apiName><shortdesc>
      Указывает ширину элементов в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Указывает ширину элементов в пикселях. Фактически используемая ширина элемента равна наименьшему значению стиля или свойства <codeph>columnWidthRatio</codeph>. Обычно это значение не устанавливается напрямую, а присваивается диаграммой с вложениями. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:offset:get"><apiName>offset</apiName><shortdesc>
      Указывает значение для смещения центра элементов от центра доступной области относительно ширины категории.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Указывает значение для смещения центра элементов от центра доступной области относительно ширины категории. При значении по умолчанию <codeph>0</codeph> элементы выравниваются по центру в данной области. Установите значение <codeph>-50</codeph> для выравнивания элемента по центру в верхней части доступной области. Как правило, непосредственная установка именно этого свойства не осуществляется. Элемент управления диаграммой с вложениями управляет этим значением на основании значения свойства <codeph>columnWidthRatio</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:openField:get"><apiName>openField</apiName><shortdesc>
      Указывает поле поставщика данных, определяющего расположение значения открытия элемента по оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, определяющего расположение значения открытия элемента по оси Y.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:renderDataType:get"><apiName>renderDataType</apiName><shortdesc>
      Подтип ChartRenderData, используется этой серией для хранения всех данных, необходимых для визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef><apiDesc>
      Подтип ChartRenderData, используется этой серией для хранения всех данных, необходимых для визуализации. Если подклассы должны использоваться для хранения дополнительной информации в целях ее отображения, они могут обеспечить замену и возвращение более специализированного класса.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:protected:renderData:get"><apiName>renderData</apiName><shortdesc>
      
      Сохраняет информацию, необходимую для отображения этой серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      
      Сохраняет информацию, необходимую для отображения этой серии.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y. Для установки свойств horizontalAxis в качестве нижестоящего тега в MXML или создания объекта LinearAxis или CategoryAxis в ActionScript используется класс LinearAxis или класс CategoryAxis.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:HLOCSeriesBase:xField:get"><apiName>xField</apiName><shortdesc>
      Указывает поле поставщика данных, определяющего расположение элемента по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, определяющего расположение элемента по оси X. При установке пустой строки (<codeph>«»</codeph>), Flex визуализирует столбцы в порядке их отображения в поставщике dataProvider.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataDescription"><apiName>DataDescription</apiName><shortdesc>
  Структура DataDescription используется объектами ChartElements для описания характеристики данных, представленных для объектов Axis, которые автоматически генерируют значения на основании данных, представленных в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Структура DataDescription используется объектами ChartElements для описания характеристики данных, представленных для объектов Axis, которые автоматически генерируют значения на основании данных, представленных в диаграмме. Объект ChartElements, отображающий данные, должен создать и возвратить элементы DataDescriptions при вызове из метода <codeph>describeData()</codeph>.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:DataDescription:DataDescription"><apiName>DataDescription</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_BOUNDED_VALUES"><apiName>REQUIRED_BOUNDED_VALUES</apiName><shortdesc>
	  Битовый флаг, передаваемый осью методу элемента describeData().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Битовый флаг, передаваемый осью методу элемента <codeph>describeData()</codeph>. При установке этого флага элемент устанавливает свойство <codeph>boundedValues</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_MIN_INTERVAL"><apiName>REQUIRED_MIN_INTERVAL</apiName><shortdesc>
	  Битовый флаг, передаваемый осью методу элемента describeData().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Битовый флаг, передаваемый осью методу элемента <codeph>describeData()</codeph>. При установке этого флага элемент устанавливает свойство <codeph>minInterval</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_MIN_MAX"><apiName>REQUIRED_MIN_MAX</apiName><shortdesc>
	  Битовый флаг, передаваемый осью методу элемента describeData().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x4</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Битовый флаг, передаваемый осью методу элемента <codeph>describeData()</codeph>. При установке этого флага элемент устанавливает свойства <codeph>DescribeData.min</codeph> и <codeph>DescribeData.max</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:REQUIRED_PADDING"><apiName>REQUIRED_PADDING</apiName><shortdesc>
	  Битовый флаг, передаваемый осью методу элемента describeData().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x8</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Битовый флаг, передаваемый осью методу элемента <codeph>describeData()</codeph>. При установке этого флага элемент устанавливает свойство <codeph>DescribeData.padding</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:boundedValues"><apiName>boundedValues</apiName><shortdesc> 
	  Массив объектов BoundedValue, описывающих данные в элементе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc> 
	  Массив объектов BoundedValue, описывающих данные в элементе. Значения BoundedValues являются точками данных, для которых вокруг точки данных в области данных диаграммы зарезервировано дополнительное пространство. При запросе элемент диаграммы заполняет это свойство любыми значениями BoundedValues, которые необходимы для обеспечения достаточного пространства, отображаемого в области данных диаграммы. Например, объект ColumnSeries требует 20 пикселей над каждым столбцом для отображения метки данных.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:max"><apiName>max</apiName><shortdesc>
	  Максимальное значение данных, отображаемое элементом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Максимальное значение данных, отображаемое элементом.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:minInterval"><apiName>minInterval</apiName><shortdesc>
	  Минимальный интервал в блоках данных между любыми двумя значениями, отображаемыми элементом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Минимальный интервал в блоках данных между любыми двумя значениями, отображаемыми элементом.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:min"><apiName>min</apiName><shortdesc>
	  Минимальное значение данных, отображаемое элементом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Минимальное значение данных, отображаемое элементом.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataDescription:padding"><apiName>padding</apiName><shortdesc>
	  Объем заполнения в блоках данных, который требуется элементу за пределами минимального/максимального значения для корректного отображения полных значений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Объем заполнения в блоках данных, который требуется элементу за пределами минимального/максимального значения для корректного отображения полных значений.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartBase"><apiName>ChartBase</apiName><shortdesc>
  Класс ChartBase связывает архитектуру компонента Flex и архитектуру DualStyleObject.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style inherit="no" name="showDataTipTargets" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Boolean">
<description>
  Указывает необходимость отображения цели над точками данных, если <codeph>showDataTips</codeph> имеет значение true.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Указывает число пикселей между верхней границей диаграммы и областью содержимого.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Указывает число пикселей между нижней границей диаграммы и областью содержимого.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="maximumDataTipCount" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="int">
<description>
  Указывает максимальное число всплывающих подсказок, отображаемых диаграммой. Если в диапазоне диаграммы больше точек данных, чем разрешено данным стилем, они будут расположены по приоритету расстояния, т.е. сначала будет отображена ближайшая точка.
  
  <p>Значение по умолчанию равно NaN. При этом отображаются все всплывающие подсказки внутри диапазона.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemSelectionColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Цвет выбранного элемента диаграммы в диаграмме.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemRollOverColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Цвет элемента диаграммы rolledOver в диаграмме.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="itemDisabledColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Цвет отключенного элемента диаграммы в диаграмме.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="fill" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Указывает стиль заполнения, используемый для фона диаграммы. Заполнение может быть простым значением цвета или объектом, реализующим интерфейс mx.graphics.IFill.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dataTipRenderer" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Class">
<description>
  Указывает класс, используемый для визуализации всплывающей подсказки. Этот класс должен реализовывать интерфейсы IDataRenderer и IFlexDisplayObject. Диаграмма назначает свойство пользовательской всплывающей подсказки <codeph>data</codeph> для использования в качестве структуры HitData, описывающей точку данных.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dataTipCalloutStroke" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Линия, используемая для визуализации линии выноски из цели всплывающей подсказки в подсказку. При установке значения <codeph>null</codeph> линия не отображается.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="String" inherit="no" name="chartSeriesStyles" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Array">
<description>
  Содержит список строк, каждая из которых соответствует селектору типа CSS, используемому в качестве стиля CSS по умолчанию для серии. Каждая серия в диаграмме выводит селектор типа CSS из списка, содержащегося в стиле <codeph>chartSeriesStyles</codeph>. Первая серия использует первый селектор, вторая – второй и т. д. Свойства стиля в этом селекторе типа могут быть переопределены при помощи указания свойства серии <codeph>styleName</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов FlashType. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элемента LegendItem по умолчанию используется значение <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>По умолчанию применяется значение <codeph>advanced</codeph>, разрешающее применение средства визуализации FlashType при использовании встроенного шрифта FlashType. Значение <codeph>normal</codeph> используется для отключения средства визуализации FlashType.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между правой границей элемента управления и правым краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts.chartClasses:ChartBase" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей элемента управления и левым краем его области содержимого.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>Flex components inherit the following properties
  from the ChartBase class:</p>
   <pre>
  &lt;mx:<i>tagname</i>
    <strong>Properties</strong>
    allElements="<i>Array; No default</i>"
    annotationElements="<i>Array; No default</i>"
    backgroundElements="<i>Array; No default</i>"
    chartState="<i></i>"
    clipContent="false|true"
    dataProvider="<i>No default</i>"
    dataRegion"<i>No default</i>"
    dataTipFunction="<i>No default</i>"
    dataTipLayerIndex"<i>No default</i>"
    dataTipMode"<i>No default</i>"
    description"<i>No default</i>"
    dragEnabled="false|true"
    dragMoveEnabled="false|true"
    dropEnabled="false|true"
    labelElements"<i>No default</i>"
    legendData"<i>No default</i>"
    mouseSensitivity="5"
    selectedChartItem=<i>ChartItem; No default</i>"
    selectedChartItems=<i>Array; No default</i>"
    selectionMode="none|single|multiple"
    series="<i>No default</i>"
    seriesFilters"<i>No default</i>"
    showAllDataTips="true|false"
    showDataTips="true|false"
    transforms="<i>No default</i>"
    
    <strong>Styles</strong>
    chartSeriesStyles="<i>Style; No default</i>"
    dataTipCalloutStroke="<i>Stroke; No default</i>"
    dataTipRenderer="<i>Renderer; No default</i>"
    fill="<i>IFill; No default</i>"
    fontFamily="<i>Verdana</i>"
    fontSize="<i>10</i>"
    itemDisabledColor="<i>uint; No default</i>"
    itemRollOverColor="<i>uint; No default</i>"
    itemSelectionColor="<i>uint; No default</i>"
    maximumDataTipCount="NaN"
    paddingBottom="<i>No default</i>"
    paddingTop="<i>No default</i>"
    paddingLeft="<i>0</i>"
    paddingRight="<i>0</i>"
    showDataTipTargets="true|false"  
    
   <strong>Events</strong>
    change="<i>Event; No default</i>"
    itemClick="<i>Event; No default</i>"
    itemDoubleClick="<i>Event; No default</i>"
    itemMouseDown="<i>Event; No default</i>"
    itemMouseMove="<i>Event; No default</i>"
    itemMouseUp="<i>Event; No default</i>"
    itemRollOut="<i>Event; No default</i>"
    itemRollOver="<i>Event; No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ChartBase связывает архитектуру компонента Flex и архитектуру DualStyleObject. Этот класс расширяет базовый класс Flex UIComponent, но содержит классы DualStyleObject.
   <p>Как правило, класс ChartBase не используется напрямую. Вместо этого можно использовать один из его подклассов, например PlotChart или BubbleChart. Этот класс является базовым классом для общих типов диаграммы, предоставленных в пакете mx.charts.</p>
  
  <p>Этот класс определяет число стилей CSS и свойства, предоставляющие быстрый доступ к более общим функциям инфраструктуры.</p>
  
  <p>Минимальный размер диаграммы – 20 x 20 пикселей. Максимальный размер диаграммы не ограничен. Предпочтительный размер диаграммы – 400 x 400 пикселей.</p>
  
  <p>Объекты класса ChartBase и его подклассы добавляют к стандартным объектам события мыши дополнительные данные, описывающие ближайшую точку данных диаграммы, на которую наведен указатель мыши. Объект события для событий мыши содержит дополнительное свойство, <codeph>hitData</codeph>, в состав которого входит объект HitData, описывающий ближайшую точку данных. См. описание объекта mx.charts.HitData для получения дополнительной информации о содержимом объекта HitData.</p>
  
  <p>Объекты ChartBase рассматривают точки данных только внутри определенного радиуса указателя мыши. Этот радиус можно задать с использованием свойства <codeph>mouseSensitivity</codeph>. При отсутствии точки данных внутри радиуса <codeph>mouseSensitivity</codeph>, event.hitData имеет значение <codeph>null</codeph>.</p>
   </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Возникает при обнаружении новой точки данных, на которую наведен указатель мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при обнаружении новой точки данных, на которую наведен указатель мыши. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Возникает при изменении ближайшей точки данных, на которую наведен указатель мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении ближайшей точки данных, на которую наведен указатель мыши. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_UP_itemMouseUp"><apiName>itemMouseUp</apiName><shortdesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь отпускает кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_UP</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь отпускает кнопку. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_MOVE_itemMouseMove"><apiName>itemMouseMove</apiName><shortdesc>
  Возникает при перемещении указателя мыши, наведенного на точку данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_MOVE</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при перемещении указателя мыши, наведенного на точку данных. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_MOUSE_DOWN_itemMouseDown"><apiName>itemMouseDown</apiName><shortdesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь нажимает кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь нажимает кнопку. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><shortdesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь дважды нажимает кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь дважды нажимает кнопку. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.MOUSE_CLICK_DATA_itemClick"><apiName>itemClick</apiName><shortdesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь нажимает кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.MOUSE_CLICK_DATA</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает в случае обнаружения точки данных под указателем мыши, когда пользователь нажимает кнопку. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartEvent.CHART_DOUBLE_CLICK_chartDoubleClick"><apiName>chartDoubleClick</apiName><shortdesc>
  Возникает при отсутствии точки данных при наведении указателя и двойном щелчке мыши по диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartEvent.CHART_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при отсутствии точки данных при наведении указателя и двойном щелчке мыши по диаграмме. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartEvent.CHART_CLICK_chartClick"><apiName>chartClick</apiName><shortdesc>
  Возникает при отсутствии точки данных при наведении указателя и нажатии кнопки мыши в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartEvent.CHART_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при отсутствии точки данных при наведении указателя и нажатии кнопки мыши в диаграмме. Flex учитывает только точки данных внутри радиуса, определенного свойством <codeph>mouseSensitivity</codeph>.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:ChartBase_mx.charts.events.ChartItemEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Возникает при изменении выбора в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.ChartItemEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.charts.events.ChartItemEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении выбора в диаграмме.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:ChartBase:ChartBase"><apiName>ChartBase</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartBase:protected:addDragData"><apiName>addDragData</apiName><shortdesc>
      Добавляет выбранные элементы к объекту DragSource в ходе операции перетаскивания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ds</apiItemName><apiType value="Object"/><apiDesc>Объект DragSource, к которому добавляются данные.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Добавляет выбранные элементы к объекту DragSource в ходе операции перетаскивания. Этот метод можно переопределить для добавления других данных к исходной позиции перетаскивания.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:applySeriesSet"><apiName>applySeriesSet</apiName><shortdesc>
      Предварительно обрабатывает серию и результат преобразования для отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Массив серии с примененным набором серий.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>seriesSet</apiItemName><apiType value="Array"/><apiDesc>Массив серии для предварительной обработки.
      </apiDesc></apiParam><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Преобразование, используемое серией.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Предварительно обрабатывает серию и результат преобразования для отображения. Обычно этот метод не вызывается напрямую. Этот метод вызывается автоматически во время цикла элемента управления диаграммы <codeph>commitProperties()</codeph>, если серия стала недействительной при вызове метода <codeph>invalidateSeries()</codeph>.
      <p>По умолчанию этот метод вызывает метод <codeph>customizeSeries()</codeph> для каждой серии в наборе. Посредством подклассов диаграммы можно переопределить этот метод для добавления логики настройки, являющейся глобальной для всего набора серии.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:clearSelection"><apiName>clearSelection</apiName><shortdesc>
      Отменяет выбор всех выбранных элементов диаграммы в элементах управления диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отменяет выбор всех выбранных элементов диаграммы в элементах управления диаграммы. Устанавливает свойство всех элементов диаграммы <codeph>currentState</codeph> в значение <codeph>none</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:customizeSeries"><apiName>customizeSeries</apiName><shortdesc>
      Применяет настройку для каждой серии и форматирование к серии диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>seriesGlyph</apiItemName><apiOperationClassifier>mx.charts.chartClasses:Series</apiOperationClassifier><apiDesc>Настраиваемая серия.
      </apiDesc></apiParam><apiParam><apiItemName>i</apiItemName><apiType value="uint"/><apiDesc>Индекс серии в массиве серии.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Применяет настройку для каждой серии и форматирование к серии диаграммы. Этот метод вызывается для каждой серии при ее изменении посредством вызова метода <codeph>invalidateSeries()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Обрабатывает события типа DragEvent.DRAG_COMPLETE.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события типа <codeph>DragEvent.DRAG_COMPLETE</codeph>. Этот метод удаляет элемент из поставщика данных.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Обрабатывает события типа DragEvent.DRAG_DROP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события типа <codeph>DragEvent.DRAG_DROP</codeph>. Этот метод скрывает обратную связь пользовательского интерфейса путем вызова метода <codeph>hideDropFeedback()</codeph>.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragEnterHandler"><apiName>dragEnterHandler</apiName><shortdesc>
      Обрабатывает события типа DragEvent.DRAG_ENTER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события типа <codeph>DragEvent.DRAG_ENTER</codeph>. Этот метод определяет наличие действительных элементов в объекте DragSource и использование им метода <codeph>showDropFeedback()</codeph> для настройки обратной связи пользовательского интерфейса.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragExitHandler"><apiName>dragExitHandler</apiName><shortdesc>
      Обрабатывает события типа DragEvent.DRAG_EXIT.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события типа <codeph>DragEvent.DRAG_EXIT</codeph>. Этот метод скрывает обратную связь пользовательского интерфейса путем вызова метода <codeph>hideDropFeedback()</codeph>.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:dragOverHandler"><apiName>dragOverHandler</apiName><shortdesc>
      Обрабатывает события типа DragEvent.DRAG_OVER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события типа <codeph>DragEvent.DRAG_OVER</codeph>. Этот метод определяет, содержит ли объект DragSource допустимые элементы, и использует метод<codeph>showDropFeedback()</codeph> для настройки обратной связи пользовательского интерфейса.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Обработчик события dragStart по умолчанию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик события <codeph>dragStart</codeph> по умолчанию.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:findDataPoints"><apiName>findDataPoints</apiName><shortdesc>
      Возвращает массив объектов HitData, описывающих ближайшую точку данных относительно координат, переданных в метод.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов HitData.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Координата X относительно объекта ChartBase.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Координата Y относительно объекта ChartBase.
           </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает массив объектов HitData, описывающих ближайшую точку данных относительно координат, переданных в метод. Аргументы <codeph>x</codeph> и <codeph>y</codeph> должны быть значениями в системе координат объекта ChartBase.
      <p>Этот метод не выходит за пределы границ, указанных в свойстве <codeph>mouseSensitivity</codeph> объекта ChartBase при поиске ближайших точек данных.</p>
           </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#HitData"><linktext>mx.charts.HitData</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Возвращает массив объектов HitData, представляющих элементы диаграммы в основных объектах, которые реализуют интерфейс IChartElement2.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов HitData, представляющих точки данных.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Возвращает массив объектов HitData, представляющих элементы диаграммы в основных объектах, которые реализуют интерфейс IChartElement2.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      Получает первый элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление, в котором необходимо вернуть первый элемент. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает первый элемент диаграммы относительно осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      Получает все элементы диаграммы, расположенные в определенной прямоугольной области.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов ChartItem.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Прямоугольная область.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает все элементы диаграммы, расположенные в определенной прямоугольной области. Этот метод вызывается для определения элементов диаграммы, расположенных в определенной прямоугольной области.
      <p>Некоторые типы диаграмм определяют, находятся ли элементы диаграммы в данной области. Точка должна быть расположена в области глобальных координат.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      Получает последний элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата последнего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает последний элемент диаграммы относительно осей.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата ближайшего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата предыдущего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:hideData"><apiName>hideData</apiName><shortdesc>
      Предоставляет диаграмме информацию об изменениях основных данных, отображаемых в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Предоставляет диаграмме информацию об изменениях основных данных, отображаемых в диаграмме. Серия и элементы диаграммы вызывают эту функцию при изменении визуализации для запуска координированного выполнения эффектов показа и скрытия данных. Этот метод обычно не вызывается в диаграмме напрямую.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:hideDropFeedback"><apiName>hideDropFeedback</apiName><shortdesc>
      Скрывает индикатор перетаскивания, указывающий на то, что функция перетаскивания разрешена.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent, содержащий данные о положении курсора мыши.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Скрывает индикатор перетаскивания, указывающий на то, что функция перетаскивания разрешена.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateChildOrder"><apiName>invalidateChildOrder</apiName><shortdesc>
      Сообщает диаграмме об изменении списка нижестоящих элементов и необходимости изменения порядка следования элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Сообщает диаграмме об изменении списка нижестоящих элементов и необходимости изменения порядка следования элементов. Полученные классы диаграммы могут вызывать этот метод для запуска вызова внутреннего метода диаграммы <codeph>updateChildOrder()</codeph> в следующем цикле <codeph>commitProperties()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Запускает изменение диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Запускает изменение диаграммы. Вызов этого метода необходим при добавлении или изменении серии или поставщиков данных диаграммы.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:invalidateSeriesStyles"><apiName>invalidateSeriesStyles</apiName><shortdesc>
      Запускает изменение диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Запускает изменение диаграммы. Вызов этого метода необходим для изменения свойств стиля серии диаграммы.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:invalidateSeries"><apiName>invalidateSeries</apiName><shortdesc>
      Предоставляет диаграмме информацию об изменении массива серии и необходимости повторной обработки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Предоставляет диаграмме информацию об изменении массива серии и необходимости повторной обработки. Полученные классы диаграммы могут вызвать этот метод для запуска внутреннего метода диаграммы <codeph>updateSeries()</codeph> в следующем цикле <codeph>commitProperties()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:legendDataChanged"><apiName>legendDataChanged</apiName><shortdesc>
      Передает новое событие LegendDataChanged.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Передает новое событие LegendDataChanged.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:positionAllDataTips"><apiName>positionAllDataTips</apiName><shortdesc>
      Определяет местоположения объектов DataTip в диаграмме при установке свойства showAllDataTips в значение true.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>hitSet</apiItemName><apiType value="Array"/><apiDesc>Массив объектов HitData.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет местоположения объектов DataTip в диаграмме при установке свойства <codeph>showAllDataTips</codeph> в значение <codeph>true</codeph>. Этот метод предотвращает наложение объектов DataTip (если отображается несколько объектов DataTip) или наложение целевых элементов данных.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:protected:positionDataTips"><apiName>positionDataTips</apiName><shortdesc>
      Определяет расположение объектов DataTip в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Определяет расположение объектов DataTip в диаграмме. Этот метод предотвращает наложение объектов DataTip (если несколько объектов DataTip являются видимыми) или наложение целевых элементов данных.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:showDropFeedback"><apiName>showDropFeedback</apiName><shortdesc>
      Выводит на экран индикатор перетаскивания при наведении указателя мыши для указания того, что функция перетаскивания разрешена.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent, содержащий информацию о расположении указателя мыши.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выводит на экран индикатор перетаскивания при наведении указателя мыши для указания того, что функция перетаскивания разрешена. Индикатор перетаскивания также указывает расположение для перетаскивания элементов.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartBase:updateAllDataTips"><apiName>updateAllDataTips</apiName><shortdesc>
      Отображает все неинтерактивные всплывающие подсказки текущего значения при установке showAllDataTips.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отображает все неинтерактивные всплывающие подсказки текущего значения при установке <codeph>showAllDataTips</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:ChartBase:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
      Значение этой константы передается методам, например методам getNextItem() и getPrevItem().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение этой константы передается методам, например методам <codeph>getNextItem()</codeph> и <codeph>getPrevItem()</codeph>. Эти методы используют данную константу для определения элемента или серии, которую следует выбрать при нажатии определенной клавиши, например клавиши со стрелкой влево. Так, при нажатии клавиши со стрелкой влево или клавиши со стрелкой вправо направление устанавливается на «горизонтальное» (<codeph>ChartBase.HORIZONTAL</codeph>).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
      Значение этой константы передается методам, например методам getNextItem() и getPrevItem().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение этой константы передается методам, например методам <codeph>getNextItem()</codeph> и <codeph>getPrevItem()</codeph>. Эти методы используют данную константу для определения элемента или серии, которую следует выбрать при нажатии определенной клавиши, например клавиши со стрелкой влево. Так, при нажатии клавиши со стрелкой вниз или клавиши со стрелкой вверх направление устанавливается на «вертикальное» (<codeph>ChartBase.VERTICAL</codeph>).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:allElements"><apiName>allElements</apiName><shortdesc>
      Набор всех отображаемых элементов диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Набор всех отображаемых элементов диаграммы. Этот набор включает в себя серию, дополнительную серию, фоновые элементы и элементы аннотации.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataTipFunction"><apiName>dataTipFunction</apiName><shortdesc>
      Указывает метод обратного вызова, используемый для создания всплывающих подсказок текущего значения из значений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
      Указывает метод обратного вызова, используемый для создания всплывающих подсказок текущего значения из значений. Этот метод должен использовать следующую подпись:
      <pre>
      function dataTipFunction(<i>hitData</i>:HitData):String
      </pre>
      <p>Этот метод возвращает строку, отображаемую для каждой точки данных. Текст может включать в себя HTML-форматирование. Отдельным параметром представлен объект HitData, описывающий точку данных.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:labelElements"><apiName>labelElements</apiName><shortdesc>
      Набор экранных объектов, представляющих метки для элементов диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Набор экранных объектов, представляющих метки для элементов диаграммы. Некоторые типы серий, аннотаций и фона включают в себя наложения для таких элементов и выносок. Элементы могут передавать экранный объект в диаграмму, содержащую наложения, для расположения над другими элементами диаграммы. Средства реализации диаграммы могут обратиться к этим объектам наложения в массиве <codeph>labelElements</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:mouseSensitivity"><apiName>mouseSensitivity</apiName><shortdesc>
      Указывает расстояние в пикселях, на котором при перемещении в области диаграммы должен находиться указатель мыши, чтобы программа Flex рассматривала это как наведение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/><apiDefaultValue>5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает расстояние в пикселях, на котором при перемещении в области диаграммы должен находиться указатель мыши, чтобы программа Flex рассматривала это как наведение. Flex обнаруживает наведение указателя на точку данных, если она удалена меньше чем на <codeph>mouseSensitivity</codeph> пикселей. Это значение также используется методом <codeph>findDataPoints</codeph>.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:annotationElements:get"><apiName>annotationElements</apiName><shortdesc>
      Устанавливает массив объектов ChartElement, отображающийся над серией данных, визуализированных диаграммой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Устанавливает массив объектов ChartElement, отображающийся над серией данных, визуализированных диаграммой. Каждый элемент в массиве должен расширять класс mx.charts.DualStyleObject и реализовать интерфейс IChartElement2.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:backgroundElements:get"><apiName>backgroundElements</apiName><shortdesc>
      Устанавливает массив объектов ChartElement, отображающийся под серией данных, визуализированных диаграммой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Устанавливает массив объектов ChartElement, отображающийся под серией данных, визуализированных диаграммой. Каждый элемент в массиве должен расширять класс mx.charts. DualStyleObject и реализовывать интерфейс IChartElement2.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:chartState:get"><apiName>chartState</apiName><shortdesc>
      Текущее состояние перехода диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Текущее состояние перехода диаграммы. Это свойство необходимо для определения того, выполняет ли диаграмма в настоящее время переход от старых данных, переход к новым данным или все переходы завершены, и диаграмма отображает текущий набор данных. См. возможные значения в перечислении mx.charts.chartClasses.ChartState.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:clipContent:get"><apiName>clipContent</apiName><shortdesc>
      Определяет, следует ли программе Flex обрезать диаграмму до области, ограниченной осями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Определяет, следует ли программе Flex обрезать диаграмму до области, ограниченной осями. Установите значение <codeph>false</codeph> для усечения диаграммы. Установите значение <codeph>true</codeph> для предотвращения усечения при визуализации данных.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Указывает поставщика данных для диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Указывает поставщика данных для диаграммы. Этот поставщик данных присвоен визуализируемой диаграммой серии данных. Для визуализации различных серий данных в одной и той же диаграмме используйте свойство <codeph>dataProvider</codeph> для каждой серии.
      
      <p>Это свойство может принять массив или любой другой объект, реализующий интерфейс ICollectionView или IList.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      Область диаграммы, используемая для отображения данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Область диаграммы, используемая для отображения данных. Этот прямоугольник исключает область, используемую для средников, линий оси и меток заполнения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dataTipLayerIndex:get"><apiName>dataTipLayerIndex</apiName><shortdesc>
      Индекс нижестоящего элемента, отвечающего за визуализацию всплывающих подсказок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс нижестоящего элемента, отвечающего за визуализацию всплывающих подсказок. Полученные классы, добавляющие визуальные элементы к диаграмме, должны добавлять их ниже данного уровня.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dataTipMode:get"><apiName>dataTipMode</apiName><shortdesc>
      Указывает способ отображения программой Flex элементов управления DataTip для диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Указывает способ отображения программой Flex элементов управления DataTip для диаграммы. Элементы управления DataTip соответствуют элементам управления ToolTip, за исключением того, что они выводят на экран соответствующее значение, представляющее ближайшую точку данных диаграммы при наведении указателя мыши.
     
      <p>Возможные значения <codeph>dataTipMode</codeph>:
       <ul>
        <li><codeph>single</codeph> – Всплывающие подсказки текущего значения показывают ближайшую к указателю мыши точку данных.</li>
      
        <li><codeph>multiple</codeph> – Всплывающие подсказки текущего значения отображают значения для всех элементов управления DataTip в диапазоне курсора мыши. Чувствительностью мыши можно управлять при помощи свойства <codeph>mouseSensitivity</codeph>.</li>
       </ul>
      </p>
     
      <p>Элементы управления DataTip можно настроить при помощи свойства <codeph>dataTipFunction</codeph>.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:description:get"><apiName>description</apiName><shortdesc>
      Краткое описание данных в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Краткое описание данных в диаграмме. При активации специальных возможностей программы для чтения с экрана используют это свойство для описания диаграммы.
      <p>Эта строка устанавливает пустую строку по умолчанию и должна быть явно назначена разработчиком для обладания значением.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dragEnabled:get"><apiName>dragEnabled</apiName><shortdesc>
      Указывает, можно ли перетащить элементы, расположенные вне этой диаграммы, к другим элементам управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, можно ли перетащить элементы, расположенные вне этой диаграммы, к другим элементам управления. При установке значения <codeph>true</codeph> активируется перетаскивание для диаграммы. Если свойство <codeph>dropEnabled</codeph> также равно <codeph>true</codeph>, то элементы можно перетащить в диаграмму для изменения порядка.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:protected:dragImage:get"><apiName>dragImage</apiName><shortdesc>
      Получает экземпляр класса, отображающий визуальные компоненты при выполнении операции перетаскивания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:IUIComponent"/><apiDefaultValue>mx.controls.chartClasses.ChartItemDragProxy
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Получает экземпляр класса, отображающий визуальные компоненты при выполнении операции перетаскивания.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Указывает отображаемый курсор для представления обратной связи перетаскивания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает отображаемый курсор для представления обратной связи перетаскивания. Если значение установлено равным <codeph>true</codeph>, свойство <codeph>dragEnabled</codeph> также имеет значение <codeph>true</codeph>, а клавиша Ctrl не удерживается, то <codeph>moveCursor</codeph> отображается как обратная связь. При удержании клавиши Ctrl отображается <codeph>copyCursor</codeph>. При установке значения <codeph>false</codeph>, а свойства <codeph>dragEnabled</codeph> – в значение <codeph>true</codeph> <codeph>copyCursor</codeph> показывает, удерживается ли клавиша Ctrl.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:dropEnabled:get"><apiName>dropEnabled</apiName><shortdesc>
      Флаг, указывающий возможность перетаскивания элементов в диаграмму.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий возможность перетаскивания элементов в диаграмму.
           <p>При установке этого свойства в значение <codeph>true</codeph> диаграмма принимает все форматы данных и предполагает, что перетаскиваемые данные соответствуют формату данных в поставщике данных. Для явной проверки формата перетаскиваемых данных необходимо обработать одно или несколько событий перетаскивания, например <codeph>dragOver</codeph>, и вызвать метод <codeph>preventDefault()</codeph> DragEvent для настройки способа принятия классом списка перетаскиваемых данных.</p>
           <p>Если <codeph>dropEnabled</codeph> имеет значение <codeph>true</codeph>, то программа Flex автоматически вызывает методы<codeph>showDropFeedback()</codeph> и <codeph>hideDropFeedback()</codeph> для отображения индикатора перетаскивания.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:legendData:get"><apiName>legendData</apiName><shortdesc>
      Массив элементов Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="legendDataChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив элементов Legend.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectedChartItem:get"><apiName>selectedChartItem</apiName><shortdesc>
      Указывает выбранный объект ChartItem в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts:ChartItem</apiValueClassifier></apiValueDef><apiDesc>
      Указывает выбранный объект ChartItem в диаграмме. При выборе нескольких элементов это свойство указывает последний выбранный элемент.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectedChartItems:get"><apiName>selectedChartItems</apiName><shortdesc>
      Указывает массив всех выбранных объектов ChartItem в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Указывает массив всех выбранных объектов ChartItem в диаграмме.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:selectionMode:get"><apiName>selectionMode</apiName><shortdesc>
      Указывает возможность выбора объектов ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>none
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает возможность выбора объектов ChartItem. Возможные значения: <codeph>none</codeph>, <codeph>single</codeph> или <codeph>multiple</codeph>. Установите значение <codeph>none</codeph> для запрещения выбора элементов диаграммы. Установите значение <codeph>single</codeph> для разрешения одновременного выбора только одного элемента. Установите значение <codeph>multiple</codeph> для разрешения одновременного выбора одного или нескольких элементов диаграммы.
      
      <P>При установке значения <codeph>single</codeph> или <codeph>multiple</codeph> его можно переопределить отдельно для каждой серии, устанавливая значение свойства серии <codeph>selectable</codeph> <codeph>false</codeph>. При установке значения свойства <codeph>selectionMode</codeph> <codeph>none</codeph> выбор элементов диаграммы будет невозможен, вне зависимости от значения свойства серии <codeph>selectable</codeph>.</P>
           </apiDesc></apiValueDetail><related-links><link href="mx.charts.xml#ChartItem"><linktext>mx.charts.ChartItem</linktext></link><link href="mx.charts.chartClasses.xml#Series"><linktext>mx.charts.chartClasses.Series</linktext></link></related-links></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:seriesFilters:get"><apiName>seriesFilters</apiName><shortdesc>
      Массив фильтров, применяемых ко всем сериям диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив фильтров, применяемых ко всем сериям диаграммы. Присвойте массив растровых фильтров этого свойства для одновременного применения ко всем сериям. Установите свойство <codeph>seriesFilter</codeph> для пустого массива для очистки фильтров серии диаграммы по умолчанию. Присвоение фильтров свойству <codeph>seriesFilters</codeph>, применимому ко всем сериям, более эффективно, чем отдельное присвоение фильтров каждой серии.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:series:get"><apiName>series</apiName><shortdesc>
      Массив объектов серии, определяющей данные диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив объектов серии, определяющей данные диаграммы. Каждая диаграмма определяет тип объектов серии, используемый для заполнения этого массива. Например, элемент управления ColumnChart ожидает объекты ColumnSeries в качестве компонента данного массива. Некоторые диаграммы принимают любой объект типа IChartElement2 как компонент массива, однако, как правило, для каждой диаграммы ожидается определенный тип.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:showAllDataTips:get"><apiName>showAllDataTips</apiName><shortdesc>
      Указывает на то, показывает ли Flex все элементы управления DataTip для диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает на то, показывает ли Flex все элементы управления DataTip для диаграммы. Элементы управления DataTip аналогичны всплывающим подсказкам, за исключением того, что всплывающие подсказки выводят на экран соответствующее значение, представляющее точку данных диаграммы.
      
      <p>Различные элементы диаграммы могут отображать различные стили элементов управления DataTip. Например, помещенный в стек элемент диаграммы может отображать значения столбца и процент от целого значения.</p>
           <p>Элементы управления DataTip можно настроить при помощи свойства <codeph>dataTipFunction</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:showDataTips:get"><apiName>showDataTips</apiName><shortdesc>
      Указывает, отображает ли Flex элементы управления DataTip для диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает, отображает ли Flex элементы управления DataTip для диаграммы. Элементы управления DataTip аналогичны всплывающим подсказкам, за исключением того, что они выводят на экран соответствующее значение, представляющее ближайшую точку данных диаграммы при наведении указателя мыши.
      
      <p>Различные элементы диаграммы могут отображать различные стили элементов управления DataTip. Например, помещенный в стек элемент диаграммы может отображать значения столбца и процент от целого значения.</p>
           <p>Элементы управления DataTip можно настроить при помощи свойства <codeph>dataTipFunction</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartBase:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IChartElement2"><apiName>IChartElement2</apiName><shortdesc>
  IChartElement2 определяет базовый набор свойств и методов, необходимых UIComponent для представления в области данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IChartElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IChartElement2 определяет базовый набор свойств и методов, необходимых UIComponent для представления в области данных диаграммы. Данный интерфейс должен реализовываться любым компонентом, присвоенным к серии, элементами backgroundElements или массивами элементов annotationElements для диаграммы.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Координаты относительно диаграммы.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Значения данных для преобразования в координаты.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране. Вызов этой функции необходим для преобразования данных на экране с применением преобразования, используемого отдельными элементами. Например, при создании пользовательского выделения области данных диаграммы можно использовать эту функцию для определения экранных координат требуемого диапазона.
      
      <p>Для элементов диаграмм в прямоугольной системе координат обычно передаются два значения. Первое значение отображает значение относительно горизонтальной оси, а второе – по отношению к вертикальной оси.</p>
      
      <p>При использовании полярных диаграмм первое значение отображается по отношению к угловой оси, а второе – по отношению к радиальной оси.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Возвращает массив HitData элементов всех основных объектов, реализующих IChartElement2, элементы dataTips которого необходимо отобразить при установке showAllDataTips в диаграмме в значение true.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объекты HitData, описывающие точки данных
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Возвращает массив HitData элементов всех основных объектов, реализующих <codeph>IChartElement2</codeph>, элементы dataTips которого необходимо отобразить при установке <codeph>showAllDataTips</codeph> в диаграмме в значение <codeph>true</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IChartElement2:mx.charts.chartClasses:IChartElement2:localToData"><apiName>localToData</apiName><shortdesc>
      Преобразовывает экранную координату в кортеж значений данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Кортеж значений данных.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>pt</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Преобразуемый объект Point.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Преобразовывает экранную координату в кортеж значений данных. Вызов этой функции необходим для определения значений данных, представляемых определенной точкой на экране.
      <p>Некоторые типы диаграмм определяют способ выполнения преобразования. Точка должна быть относительной для пространства координат диаграммы.</p>
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarTransform"><apiName>PolarTransform</apiName><shortdesc>
  Объект PolarTransform представляет собой набор осей, используемых для отображения значений данных относительно угла/расстояния полярных координат и наоборот.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:DataTransform</apiBaseClassifier></apiClassifierDef><apiDesc>
  Объект PolarTransform представляет собой набор осей, используемых для отображения значений данных относительно угла/расстояния полярных координат и наоборот.  
 
  <p>Как правило, объект PolarTransform не используется. Преобразования создаются автоматически с помощью типов встроенных диаграмм и используются вложенной серией для преобразования данных в визуализируемые координаты.</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:PolarTransform:PolarTransform"><apiName>PolarTransform</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarTransform:setSize"><apiName>setSize</apiName><shortdesc>
      Устанавливает ширину и высоту, используемую PolarTransform для вычисления начала координат и радиуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Ширина PolarTransform в пикселях.
      
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Высота PolarTransform в пикселях. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает ширину и высоту, используемую PolarTransform для вычисления начала координат и радиуса. Вызов этого метода выполняется диаграммой с вложениями. Как правило, непосредственный вызов данного метода не требуется. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      
      Отображает набор числовых значений, представляющих данные экранных координат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, содержащих значения данные в полях. Также здесь хранятся преобразованные числовые значения функции.
     
      </apiDesc></apiParam><apiParam><apiItemName>aField</apiItemName><apiType value="String"/><apiDesc>Поле, в котором возможно обнаружение значений данных оси X.
     
      </apiDesc></apiParam><apiParam><apiItemName>aConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для сохранения отображаемой экранной координаты X.
     
      </apiDesc></apiParam><apiParam><apiItemName>rField</apiItemName><apiType value="String"/><apiDesc>Поле, в котором возможно обнаружение значений данных оси Y.
     
      </apiDesc></apiParam><apiParam><apiItemName>rConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для сохранения отображаемой экранной координаты Y.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Отображает набор числовых значений, представляющих данные экранных координат. Этот метод предполагает, что все значения являются числами, так что все нечисловые значения должны быть предварительно преобразованы при помощи метода <codeph>mapCache()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:PolarTransform:ANGULAR_AXIS"><apiName>ANGULAR_AXIS</apiName><shortdesc>
      Строка, представляющая угловую ось.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>a</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Строка, представляющая угловую ось.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:RADIAL_AXIS"><apiName>RADIAL_AXIS</apiName><shortdesc>
      Строка, представляющая радиальную ось.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>r</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Строка, представляющая радиальную ось.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:origin:get"><apiName>origin</apiName><shortdesc>
      Начало координат полярного преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Point"/></apiValueDef><apiDesc>
      Начало координат полярного преобразования. Эта точка используется связанной серией для преобразования блоков данных в экранные координаты.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarTransform:radius:get"><apiName>radius</apiName><shortdesc>
      Радиус, используемый преобразованием для преобразования блоков данных в полярные координаты.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Радиус, используемый преобразованием для преобразования блоков данных в полярные координаты.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataTip"><apiName>DataTip</apiName><shortdesc>
  Элемент управления DataTip предоставляет информацию о точке данных при использовании диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="yes" name="shadowColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Цвет нижней части темы оформления кнопки. Раздел трехмерной границы. Значение по умолчанию: <codeph>0xEEEEEE</codeph> (светло-серый).
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей всплывающей подсказки текущего значения и областью ее содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей всплывающей подсказки текущего значения и областью ее содержимого. Значением по умолчанию является 0.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Допустимыми значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию: <codeph>insert</codeph>.
 
  <p>Примечание. Элемент управления Button и контейнер панели не поддерживают стиль <codeph>borderStyle</codeph>. В целях использования сплошной границы для панели, при необходимости, установите для свойства <codeph>borderThickness</codeph> и свойства <codeph>dropShadow</codeph> значение <codeph>false</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Черный раздел трехмерной границы или цветной раздел двухмерной границы. Этот стиль поддерживают следующие компоненты: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также все компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса. Значение по умолчанию равно <codeph>0xAAB3B3</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Цвет фона для компонента. Можно использовать либо <codeph>backgroundColor</codeph>, либо <codeph>backgroundImage</codeph>, но не оба свойства. Следует отметить, что некоторые компоненты (например, Button) не имеют фона, поскольку они полностью заполнены рисунком или другой графикой. Этот стиль также игнорируется элементом управления DataGrid. По умолчанию используется значение <codeph>undefined</codeph>. Если этот стиль и стиль backgroundImage имеют значение undefined, для элемента управления устанавливается прозрачный фон.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Функция кернинга поддерживается только для вложенных расширенных шрифтов с возможностью сглаживания. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элементов управления Button значением по умолчанию является <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, что разрешает расширенное сглаживание при использовании вложенного расширенного шрифта с возможностью сглаживания. Для отключения расширенного сглаживания установите значение <codeph>normal</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между правой границей элемента управления и правым краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей элемента управления и левым краем его области содержимого.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.charts.chartClasses:DataTip" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления DataTip предоставляет информацию о точке данных при использовании диаграммы. При наведении указателя мыши на графический элемент с помощью элемента управления DataTip выводится на экран текст, содержащий сведения об элементе. Элементы управления DataTip можно использовать для предоставления пользователям инструкций при работе с приложением или при настройке объектов DataTip для предоставления дополнительных функций.
 
  <p>Для активации объектов DataTips в диаграмме установите свойство <codeph>showDataTips</codeph> в значение <codeph>true</codeph>.</p>
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.charts.chartClasses:DataTip_mx.events.FlexEvent.SHOW_show"><apiName>show</apiName><shortdesc>
  Возникает при изменении состояния компонента на «Видимый».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении состояния компонента на «Видимый».
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts.chartClasses:DataTip_mx.events.FlexEvent.HIDE_hide"><apiName>hide</apiName><shortdesc>
  Возникает при изменении состояния объекта с «Видимый» на «Невидимый».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.HIDE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении состояния объекта с «Видимый» на «Невидимый».
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:DataTip:DataTip"><apiName>DataTip</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:DataTip:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:DataTip:protected:measure"><apiName>measure</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:DataTip:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:DataTip:maxTipWidth"><apiName>maxTipWidth</apiName><shortdesc>
      Указывает максимальную ширину ограничительной рамки для новых элементов управления DataTip в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>300</apiData><apiType value="Number"/><apiDefaultValue>300
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает максимальную ширину ограничительной рамки для новых элементов управления DataTip в пикселях. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTip:data:get"><apiName>data</apiName><shortdesc>
      Структура HitData, описывающая точку данных, которая визуализируется элементом DataTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Структура HitData, описывающая точку данных, которая визуализируется элементом DataTip.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTip:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
	  </apiDesc></apiValueDetail><apiInheritDoc/></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartItemDragProxy"><apiName>ChartItemDragProxy</apiName><shortdesc>
  Прокси перетаскивания по умолчанию, используемый при перетаскивании элементов из элемента управления диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Прокси перетаскивания по умолчанию, используемый при перетаскивании элементов из элемента управления диаграммы.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartItemDragProxy:ChartItemDragProxy"><apiName>ChartItemDragProxy</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.charts.chartClasses:IColumn"><apiName>IColumn</apiName><shortdesc>
  Объекты ChartElement, которые могут быть кластеризованы по вертикальной оси, должны реализовывать данный интерфейс.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Объекты ChartElement, которые могут быть кластеризованы по вертикальной оси, должны реализовывать данный интерфейс. Любой элемент, реализующий этот интерфейс, может быть использован в качестве нижестоящей серии элемента ColumnSet при установке свойства <codeph>type</codeph> в значение clustered. Данный интерфейс реализуются классами ColumnSeries, HLOCSeries, CandleStickSeries и ColumnSet.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:columnWidthRatio:set"><apiName>columnWidthRatio</apiName><shortdesc>
	  Указывает ширину элементов относительно размера категории.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает ширину элементов относительно размера категории. При установке значения <codeph>1</codeph> используется все пространство, а при установке значения <codeph>0.6</codeph> – 60 % доступного пространства элемента. Как правило, непосредственная установка именно этого свойства не осуществляется. Управляющие классы ColumSet или ColumnChart выполнят неявное присвоение этого значения. Фактически используемая ширина элемента равна наименьшему из свойств <codeph>columnWidthRatio</codeph> и <codeph>maxColumnWidth</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:maxColumnWidth:set"><apiName>maxColumnWidth</apiName><shortdesc>
	  Указывает ширину для отображения элементов в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает ширину для отображения элементов в пикселях. Фактически используемая ширина элемента равна наименьшему из значений для данного свойства и свойства <codeph>columnWidthRatio</codeph>. Как правило, непосредственная установка именно этого свойства не осуществляется. Присвоение этого значения выполняется посредством объекта ColumSet или ColumnChart. Фактически используемая ширина элемента равна наименьшему из свойств <codeph>columnWidthRatio</codeph> и <codeph>maxColumnWidth</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IColumn:mx.charts.chartClasses:IColumn:offset:set"><apiName>offset</apiName><shortdesc>
	  Указывает значение относительно размера категории для смещения центра элементов от центра доступного пространства.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Указывает значение относительно размера категории для смещения центра элементов от центра доступного пространства. Значение в процентах находится в диапазоне от <codeph>-100</codeph> до <codeph>100</codeph>. Установите значение <codeph>0</codeph> для выравнивания элементов по центру в пространстве. Установите значение на <codeph>-50</codeph> для выравнивания элемента по центру в верхней части доступного пространства. Как правило, непосредственная установка именно этого свойства не осуществляется. Присвоение этого значения выполняется посредством объекта ColumSet или ColumnChart.
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:StackedSeries"><apiName>StackedSeries</apiName><shortdesc>
  Серия стека является общим базовым классом для всего набора серий стека (BarSet, ColumnSet и AreaSet).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:Series</apiBaseClassifier></apiClassifierDef><apiDesc>
  Серия стека является общим базовым классом для всего набора серий стека (BarSet, ColumnSet и AreaSet). StackedSeries принимает массив элементов подчиненной серии и выполняет соответствующие вычисления для вертикального накопления таким образом, что каждая серия отображает сумму данных предыдущей серии и собственное значение. Этот класс не используется напрямую.  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:StackedSeries:StackedSeries"><apiName>StackedSeries</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:buildSubSeries"><apiName>buildSubSeries</apiName><shortdesc>
      При необходимости обеспечивает обработку массива подсерии для отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      При необходимости обеспечивает обработку массива подсерии для отображения. Этот метод позволяет обеспечить добавление всех подчиненных серий в накопительный набор в качестве нижестоящих элементов и выполнение любой необходимой пользовательской настройки серий (например, присвоения унаследованных поставщиков данных или группировки свойств).
      <p>Этот метод также предназначен для передачи в диаграмму информации о том, что в серии были внесены изменения и в результате требуется повторное присвоение неявных стилей серий. При необходимости этот метод автоматически вызывается накопительным набором. Вместо непосредственного вызова этого метода необходимо рассмотреть возможность вызова метода <codeph>invalidateSeries()</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:customizeSeries"><apiName>customizeSeries</apiName><shortdesc> 
      Обеспечивает применение любой настройки подчиненных серий при формировании поведения накопления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IChartElement</apiOperationClassifier><apiDesc>Элемент диаграммы для настройки.
      
      </apiDesc></apiParam><apiParam><apiItemName>i</apiItemName><apiType value="uint"/><apiDesc>Положение подчиненной серии в массиве серии.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Обеспечивает применение любой настройки подчиненных серий при формировании поведения накопления. По умолчанию этот метод присваивает унаследованные поставщики данных подчиненным сериям. Полученные классы могут отменить этот метод для применения дальнейшей настройки.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:formatDataTip"><apiName>formatDataTip</apiName><shortdesc>
      Обеспечивает пользовательский текст для объектов DataTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Пользовательский текст для объекта DataTip. По умолчанию является пустой строкой. Для предоставления пользовательского текста DataTip необходимо перезаписать этот метод.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>hitData</apiItemName><apiOperationClassifier>mx.charts:HitData</apiOperationClassifier><apiDesc>Объект hitData в стеке.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает пользовательский текст для объектов DataTip. Накопление обеспечивает перезапись текста DataTip содержащихся в них подчиненных серий для отображения дополнительной информации, связанной с поведением накопления. Полученные классы должны обеспечить перезапись этого метода для определения пользовательского текста DataTip.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:invalidateSeries"><apiName>invalidateSeries</apiName><shortdesc>
      Вызов этого метода необходим для вызова метода buildSubSeries() в ходе следующего вызова метода commitProperties().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызов этого метода необходим для вызова метода <codeph>buildSubSeries()</codeph> в ходе следующего вызова метода <codeph>commitProperties()</codeph>.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:invalidateStacking"><apiName>invalidateStacking</apiName><shortdesc>
      Вызов этого метода необходим для запуска восстановления накопленных значений при следующем вызове метода commitProperties().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызов этого метода необходим для запуска восстановления накопленных значений при следующем вызове метода <codeph>commitProperties()</codeph>.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:stack"><apiName>stack</apiName><shortdesc>
      Обновляет данные серии и использует накапливаемые значения данных серии для обеспечения корректного накапливания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обновляет данные серии и использует накапливаемые значения данных серии для обеспечения корректного накапливания.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:StackedSeries:protected:updateStacking"><apiName>updateStacking</apiName><shortdesc>
      Выполняет итерации по отдельным подчиненным сериям для формирования значений стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Выполняет итерации по отдельным подчиненным сериям для формирования значений стека.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:StackedSeries:protected:negTotalsByPrimaryAxis"><apiName>negTotalsByPrimaryAxis</apiName><shortdesc>
      Итоговая сумма отрицательных значений стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Итоговая сумма отрицательных значений стека. Это свойство содержит словарь, ключи которого являются значениями, представляемыми нижестоящей серией по первичной оси (например, значения оси X для ColumnSeries, значения оси Y для BarSeries), и значения которых являются общей суммой всех отрицательных значений подчиненных серий для этого ключа.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:posTotalsByPrimaryAxis"><apiName>posTotalsByPrimaryAxis</apiName><shortdesc>
      Общая сумма положительных значений стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Общая сумма положительных значений стека. Это свойство содержит словарь, ключи которого являются значениями, представляемыми подчиненной серией по первичной оси (например, значения оси X для ColumnSeries, значения оси Y для BarSeries), и значения которых являются итоговой суммой всех положительных значений серий нижестоящих элементов этого ключа.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:stackedMaximum"><apiName>stackedMaximum</apiName><shortdesc>
      Максимальная сумма, представляемая серией стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Максимальная сумма, представляемая серией стека.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:protected:stackedMinimum"><apiName>stackedMinimum</apiName><shortdesc>
      Минимальная сумма, представляемая этой серией стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Минимальная сумма, представляемая этой серией стека.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:allowNegativeForStacked:get"><apiName>allowNegativeForStacked</apiName><shortdesc>
      При установке этого свойства на true положительные и отрицательные значения будут объединяться по отдельности
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      При установке этого свойства на true положительные и отрицательные значения будут объединяться по отдельности
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X. Для установки свойств horizontalAxis в качестве нижестоящего тега в MXML или создания объекта LinearAxis или CategoryAxis в ActionScript используется класс LinearAxis или класс CategoryAxis.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:series:get"><apiName>series</apiName><shortdesc>
      Массив подчиненных серий, управляемых этим набором стека.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив подчиненных серий, управляемых этим набором стека. Эти серии визуализируются в соответствии с поведением данного набора стека, определенного значением свойства <codeph>type</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:type:get"><apiName>type</apiName><shortdesc>
      Поведение группировки этой серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Поведение группировки этой серии. Все серии стека поддерживают <codeph>overlaid</codeph>, <codeph>stacked</codeph> и <codeph>100%</codeph>. При установке свойства <codeph>type</codeph> в значение <codeph>overlaid</codeph> все подчиненные серии визуализируются в стандартном режиме без использования специального поведения. При установке свойства <codeph>type</codeph> в значение <codeph>stacked</codeph> все подчиненные серии визуализируются как сумма данных подчиненной серии и значений всех предыдущих серий. При установке значения свойства <codeph>type</codeph> в значение <codeph>100%</codeph> все подчиненные серии визуализируются как часть итоговой суммы всех серий.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:StackedSeries:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y. Для установки свойств horizontalAxis в качестве нижестоящего тега в MXML или создания объекта LinearAxis или CategoryAxis в ActionScript используется класс LinearAxis или класс CategoryAxis.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:BoundedValue"><apiName>BoundedValue</apiName><shortdesc>
  Ограниченное значение используется для представления точки данных, обычно визуализируемой элементом диаграммы на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ограниченное значение используется для представления точки данных, обычно визуализируемой элементом диаграммы на экране. Объекты ChartElement сообщают значения BoundedValue, описывающие данные для объекта оси. Ось вычисляет автоматически генерируемые диапазоны. Значение BoundedValue инкапсулирует оба значения точки данных в определенном измерении, а также поле в пикселях, необходимое объекту ChartElement выше или ниже значения для визуализации. Например, графики в точечной диаграмме сообщают о данных с полями для корректировки размера графиков. Гистограмма может сообщать о поле на оси Y для расположения метки, отображаемой над диаграммой.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:BoundedValue:BoundedValue"><apiName>BoundedValue</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Визуализируемое значение.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>lowerMargin</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Нижнее поле.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>upperMargin</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Верхнее поле.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:BoundedValue:lowerMargin"><apiName>lowerMargin</apiName><shortdesc>
	  Поле в пикселях, необходимое под значением для корректной визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Поле в пикселях, необходимое под значением для корректной визуализации.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:BoundedValue:upperMargin"><apiName>upperMargin</apiName><shortdesc> 
	  Поле в пикселях, требуемое над значением для корректной визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc> 
	  Поле в пикселях, требуемое над значением для корректной визуализации.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:BoundedValue:value"><apiName>value</apiName><shortdesc>
	  Визуализируемое значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Визуализируемое значение.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartLabel"><apiName>ChartLabel</apiName><shortdesc>
  Отображает метки данных в элементах управления диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Отображает метки данных в элементах управления диаграммы.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartLabel:ChartLabel"><apiName>ChartLabel</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:invalidateSize"><apiName>invalidateSize</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:measure"><apiName>measure</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartLabel:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
	  </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:ChartLabel:data:get"><apiName>data</apiName><shortdesc>
	  Определяет содержимое метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
	  Определяет содержимое метки.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarDataCanvas"><apiName>PolarDataCanvas</apiName><shortdesc>
 Класс PolarDataCanvas разрешает использование интерфейса API для графики относительно координат данных, а не экранных координат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataChildren"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IDataCanvas</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
 Класс PolarDataCanvas разрешает использование интерфейса API для графики относительно координат данных, а не экранных координат.
 
 <p>Область рисунка для холста определена свойствами <codeph>radialAxis</codeph> и <codeph>angularAxis</codeph> (если они указаны). В противном случае для вычисления холста области рисунка будут учитываться оси диаграммы по умолчанию.</p>
 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:PolarDataCanvas:PolarDataCanvas"><apiName>PolarDataCanvas</apiName><shortdesc>
     Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     
     Добавляет экземпляр нижестоящего элемента DisplayObject к экземпляру DisplayObjectContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Экземпляр DisplayObject, передаваемый в параметр <codeph>child</codeph>.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Экземпляр DisplayObject для добавления в качестве нижестоящего элемента экземпляра DisplayObjectContainer.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Позиция индекса для добавления нижестоящего элемента. При указании занятой в настоящее время позиции индекса существующий в данной позиции дочерний объект и все вышестоящие позиции перемещаются по списку на одну позицию вверх. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     Добавляет экземпляр дочернего элемента DisplayObject к экземпляру DisplayObjectContainer. Дочерний элемент добавляется к указанной позиции индекса. Индекс 0 представляет собой заднюю (нижнюю) часть списка отображения для объекта DisplayObjectContainer.
     
     <p>При добавлении дочернего объекта, уже имеющего отличный от других контейнер объекта отображения в качестве родительского элемента, объект удаляется из списка дочерних элементов другого контейнера объекта отображения. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addChild"><apiName>addChild</apiName><shortdesc>
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:addDataChild"><apiName>addDataChild</apiName><shortdesc>
     Это позволит добавить к текущему холсту любой элемент DisplayObject в качестве нижестоящего элемента
     
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>        Экземпляр DisplayObject, добавляемый к текущему холсту в качестве нижестоящего элемента.
     </apiDesc></apiParam><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Левая угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Верхняя радиальная координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Правая угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Нижняя радиальная координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>angleCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Средняя радиальная координата нижестоящего элемента в координатах данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Это позволит добавить к текущему холсту любой элемент <codeph>DisplayObject</codeph> в качестве нижестоящего элемента
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:beginBitmapFill"><apiName>beginBitmapFill</apiName><shortdesc>
     Заполняет область рисунка растровым изображением.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bitmap</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>Прозрачное или матовое растровое изображение, содержащее отображаемые биты. 
     
     </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Угол, указывающий место заливки.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Расстояние от центра диаграммы до заливки в пикселях.
     
     </apiDesc></apiParam><apiParam><apiItemName>matrix</apiItemName><apiType value="flash.geom:Matrix"/><apiData>null</apiData><apiDesc>Объект матрицы (из класса flash.geom.Matrix), который можно использовать для определения преобразований в растровом изображении.
     
     </apiDesc></apiParam><apiParam><apiItemName>repeat</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>При значении <codeph>true</codeph> растровое изображение повторяется по шаблону мозаики. При значении <codeph>false</codeph> растровое изображение не повторяется, а его края используются для заливки всей области, выходящей за его пределы.
     
     </apiDesc></apiParam><apiParam><apiItemName>smooth</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>При выборе значения <codeph>false</codeph> визуализируются растровые изображения, увеличенные при помощи алгоритма ближайшего соседнего пикселя, которые могут выглядеть нечетко. При выборе значения <codeph>true</codeph> увеличенное растровое изображение визуализируется с помощью билинейного алгоритма. Процедура визуализации с помощью алгоритма ближайшего соседнего пикселя требует меньше времени. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Заполняет область рисунка растровым изображением. Координаты в виде свойств холста <codeph>angularAxis</codeph> или <codeph>radialAxis</codeph>.
     
     <p>Использование и параметры этого метода идентичны методу <codeph>beginBitmapFill()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/beginBitmapFill()"><linktext>flash.display.Graphics.beginBitmapFill()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:beginFill"><apiName>beginFill</apiName><shortdesc conref="flash.display.Graphics#beginFill()">
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>color</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1</apiData></apiParam></apiOperationDef><apiDesc conref="flash.display.Graphics#beginFill()">
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:clear"><apiName>clear</apiName><shortdesc>
     Очищает холст.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Очищает холст.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:curveTo"><apiName>curveTo</apiName><shortdesc>
     Рисует кривую с использованием текущего стиля линии от текущего положения до (anchorX, anchorY) и с применением контрольной точки, указанной в координатах (controlX, controlY).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controlAngle</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий позицию контрольной точки. 
     
     </apiDesc></apiParam><apiParam><apiItemName>controlRadial</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до контрольной точки в пикселях. 
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorAngle</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий позицию точки привязки.  
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorRadial</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до точки привязки в пикселях.  
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует кривую с использованием текущего стиля линии от текущего положения до (anchorX, anchorY) и с применением контрольной точки, указанной в координатах (controlX, controlY). Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     <p>Использование и параметры этого метода идентичны методу <codeph>curveTo()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/curveTo()"><linktext>flash.display.Graphics.curveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:describeData"><apiName>describeData</apiName><shortdesc>
     
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Массив, содержащий экземпляры DataDescription, описывающий отображаемые данные.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Определяет ось для получения описания данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawCircle"><apiName>drawCircle</apiName><shortdesc>
     Рисует круг.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий позицию центра круга. 
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до центра круга в пикселях. 
     
     </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc>Радиус окружности (в пикселях). 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует круг. Прежде чем вызывать метод <codeph>drawCircle()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawCircle()"><linktext>flash.display.Graphics.drawCircle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawEllipse"><apiName>drawEllipse</apiName><shortdesc>
     Рисует эллипс.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение верхнего левого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до местоположения верхнего левого угла ограничительной рамки эллипса в пикселях.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение нижнего правого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до местоположения верхнего правого угла ограничительной рамки эллипса в пикселях.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует эллипс. Прежде чем вызывать метод <codeph>drawEllipse()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawEllipse()"><linktext>flash.display.Graphics.drawEllipse()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawRect"><apiName>drawRect</apiName><shortdesc>
     Рисует прямоугольник.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Расстояние по вертикали от центра диаграммы до местоположения верхнего левого угла прямоугольника в пикселях.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение правого нижнего угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до местоположения верхнего правого угла прямоугольника в пикселях.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует прямоугольник. Прежде чем вызывать метод <codeph>drawRect()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRect()"><linktext>flash.display.Graphics.drawRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:drawRoundedRect"><apiName>drawRoundedRect</apiName><shortdesc>
     Рисует прямоугольный примитив со скругленными углами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiDesc>Расстояние по вертикали от центра диаграммы до местоположения верхнего левого угла прямоугольника в пикселях.
     
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiDesc>Угол, указывающий местоположение правого нижнего угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до местоположения верхнего правого угла прямоугольника в пикселях.
     
     </apiDesc></apiParam><apiParam><apiItemName>cornerRadius</apiItemName><apiType value="Number"/><apiDesc>Радиусы углов в пикселях.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует прямоугольный примитив со скругленными углами. Прежде чем вызывать метод <codeph>drawRoundRect()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRoundedRect()"><linktext>flash.display.Graphics.drawRoundedRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:endFill"><apiName>endFill</apiName><shortdesc conref="flash.display.Graphics#endFill()"> 
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#endFill()"> 
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Предоставляет для холста информацию об изменении основных данных в dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, если данные изменились.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Предоставляет для холста информацию об изменении основных данных в dataProvider. Эта функция инициирует вызов методов <codeph>updateMapping()</codeph> и <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:lineStyle"><apiName>lineStyle</apiName><shortdesc>
     Указывает стиль линии, используемый Flash для последующих вызовов других графических методов для объекта (например, lineTo() или drawCircle()).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiDesc>Целое число, определяющее толщину линии в точках; допустимыми являются значения от 0 до 255. Если число не указано или параметр не определен, то линия не будет проведена. Если передается значение меньше 0, по умолчанию задается 0. Значение 0 обозначает толщину одного волоса, максимальная толщина составляет 255. Если передается значение больше 255, по умолчанию задается 255. 
     
     </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Шестнадцатеричное значение цвета линии; например красный — 0xFF0000, синий — 0x0000FF и т.д. Если значение на задано, по умолчанию используется 0x000000 (черный).
     
     </apiDesc></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1.0</apiData><apiDesc>Число, указывающее значение альфа-канала цвета линии, допустимые значения находятся в диапазоне 0-1. Если значение на задано, по умолчанию используется 1(сплошной). Если значение меньше 0, по умолчанию задается 0. Если значение больше 1, по умолчанию задается 1.
     
     </apiDesc></apiParam><apiParam><apiItemName>pixelHinting</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Логическое значение, определяющее, следует ли выполнять хинтинг штрихов до полных пикселей. Оно влияет на позицию привязок кривой и на размер штриха линии как таковой. Если для <codeph>pixelHinting</codeph> задано значение true, выполняется хинтинг ширины линии до полного пикселя. Если для <codeph>pixelHinting</codeph> задано значение false, в кривых и прямых линиях могут возникать разрывы.
     
     </apiDesc></apiParam><apiParam><apiItemName>scaleMode</apiItemName><apiType value="String"/><apiData>normal</apiData><apiDesc>Значение класса flash.display.LineScaleMode, задающее режим масштабирования:
     
     <ul>
       <li><codeph>LineScaleMode.NORMAL</codeph> – всегда масштабировать толщину линии при масштабировании объекта (по умолчанию).</li>
       <li><codeph>LineScaleMode.NONE</codeph>: никогда не масштабировать толщину линии.</li>
       <li><codeph>LineScaleMode.VERTICAL</codeph>: не масштабировать толщину линии, если объект масштабируется только по вертикали. </li>
       <li><codeph>LineScaleMode.HORIZONTAL</codeph>: не масштабировать толщину линии, если объект масштабируется только по горизонтали. </li>
     </ul>
     
     </apiDesc></apiParam><apiParam><apiItemName>caps</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Значение класса flash.display.CapsStyle, задающее тип концов линии. Допустимые значения: <codeph>CapsStyle.NONE</codeph>, <codeph>CapsStyle.ROUND</codeph> и <codeph>CapsStyle.SQUARE</codeph>. Если значение не указано, следует использовать скругленные концы. 
     
     </apiDesc></apiParam><apiParam><apiItemName>joints</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Значение класса flash.display.JointStyle, задающее тип стыка на углах. Допустимые значения: <codeph>JointStyle.BEVEL</codeph>, <codeph>JointStyle.MITER</codeph> и <codeph>JointStyle.ROUND</codeph>. Если значение не указано, следует использовать круглые стыки. 
     
     </apiDesc></apiParam><apiParam><apiItemName>miterLimit</apiItemName><apiType value="Number"/><apiData>3</apiData><apiDesc>Число, указывающее предел усечения уголка. Допустимыми являются значения в диапазоне 1-255 (остальные значения округляются до 1 или 255). Это значение используется, только если для jointStyle выбран тип miter. Значение <codeph>miterLimit</codeph> – это длина, до которой может продлеваться уголок после точки стыка. Значение выражает фактор thickness линии. Например, при факторе <codeph>miterLimit</codeph>, равном 2,5, и thickness в 10 пикселей, длина уголка достигает 25 пикселей. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Указывает стиль линии, используемый Flash для последующих вызовов других графических методов для объекта (например, <codeph>lineTo()</codeph> или <codeph>drawCircle()</codeph>).
     
     <p>Использование и параметры этого метода идентичны методу <codeph>lineStyle()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineStyle()"><linktext>flash.display.Graphics.lineStyle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:lineTo"><apiName>lineTo</apiName><shortdesc>
     Рисует линию с использованием текущего стиля линии от текущей позиции инструмента рисования до точки с координатами (angle, radial); текущей позицией инструмента рисования становится точка с координатами (angle, radial).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Угол позиции рисования.
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до позиции инструмента рисования в пикселях. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует линию с использованием текущего стиля линии от текущей позиции инструмента рисования до точки с координатами (angle, radial); текущей позицией инструмента рисования становится точка с координатами (angle, radial). Если в экранном объекте, в котором выполняется отрисовка, есть содержимое, созданное с помощью инструментов рисования Flash, то вызовы метода <codeph>lineTo()</codeph> осуществляются под содержимым. Если вызвать <codeph>lineTo()</codeph> перед вызовом метода moveTo(), то текущим положением инструмента рисования по умолчанию становится точка с координатами (0, 0). Если отсутствует один из параметров, этот метод использовать не удастся, и текущее положение инструмента рисования остается без изменений. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineTo()"><linktext>flash.display.Graphics.lineTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
     
      Вызывается при отображении изменений одной или нескольких связанных осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     
      Вызывается при отображении изменений одной или нескольких связанных осей. Элемент DataTransform, назначенный этому объекту ChartElement, выполнит вызов данного метода при изменении любой из представляемых им осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:moveTo"><apiName>moveTo</apiName><shortdesc>
     Перемещает текущую позицию рисования в точку с координатами (angle, radial).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>angle</apiItemName><apiType value="any"/><apiDesc>Угол позиции рисования.
     
     </apiDesc></apiParam><apiParam><apiItemName>radial</apiItemName><apiType value="any"/><apiDesc>Расстояние от центра диаграммы до позиции инструмента рисования в пикселях. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Перемещает текущую позицию рисования в точку с координатами (angle, radial). Если отсутствует один из параметров, этот метод использовать не удастся, и текущее положение инструмента рисования остается без изменений. Координаты являются координатами в виде данных, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/moveTo()"><linktext>flash.display.Graphics.moveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeAllChildren"><apiName>removeAllChildren</apiName><shortdesc>
     Удаляет все нижестоящие элементы данных холста (экземпляры DisplayObject).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Удаляет все нижестоящие элементы данных холста (экземпляры DisplayObject).
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeChildAt"><apiName>removeChildAt</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:removeChild"><apiName>removeChild</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого field равно NaN.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Данные кэша для объекта PolarDataCanvas.
      
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Значение свойства элемента <codeph>field</codeph>. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого <codeph>field</codeph> равно <codeph>NaN</codeph>. Полученные классы могут вызвать этот метод из их реализации <codeph>updateFilter()</codeph> для удаления любых объектов ChartItem, которые были отфильтрованы осями.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:updateDataChild"><apiName>updateDataChild</apiName><shortdesc>
     Обновляет позицию любого нижестоящего элемента информацией текущего холста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>        Экземпляр DisplayObject, который следует добавить как нижестоящий элемент текущего холста.
     </apiDesc></apiParam><apiParam><apiItemName>angleLeft</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Левая угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialTop</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Верхняя радиальная координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>angleRight</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Правая угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialBottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Нижняя радиальная координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>angleCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя угловая координата нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>radialCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc> Средняя радиальная координата нижестоящего элемента в координатах данных.
     
     <p>Например:
     <pre>
          var lbl:Label = new Label();
          lbl.text = "Last Month";
          canvas.addChild(lbl);
          canvas.updateDataChild(lbl,200,20);
     </pre>
     </p>
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Обновляет позицию любого нижестоящего элемента информацией текущего холста.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Вызывается, когда представляемые холстом основные данные необходимо отфильтровать согласно диапазонам, представляемым осями связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, когда представляемые холстом основные данные необходимо отфильтровать согласно диапазонам, представляемым осями связанного преобразования данных. Это может произойти по причине изменения основных данных или ввиду того, что был изменен диапазон связанных осей. 
      
      <p>При реализации пользовательского типа холста необходимо переопределить этот метод и отфильтровать все внешние данные с использованием метода <codeph>filterCache()</codeph> осей, управляемых с помощью связанного преобразования данных. Метод <codeph>filterCache()</codeph> обеспечивает преобразование всех значений, находящихся вне диапазона, в значения <codeph>NaN</codeph>. Необходимо убедиться в том, что метод <codeph>super.updateFilter()</codeph> был вызван в подклассе. </p>
      
      <p>Как правило, непосредственный вызов данного метода не требуется. Вместо этого при необходимости удостовериться в том, что данные были отфильтрованы в заданной точке, вызовите метод <codeph>validateTransform()</codeph> класса PolarDataCanvas. </p>
      
      <p>Как правило, в случае необходимости можно предположить, что методы <codeph>updateData()</codeph> и <codeph>updateMapping()</codeph> были вызваны перед этим методом.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:validateData"><apiName>validateData</apiName><shortdesc>
      При необходимости вызывает методы холста updateMapping() и updateFilter().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      При необходимости вызывает методы холста <codeph>updateMapping()</codeph> и <codeph>updateFilter()</codeph>. При необходимости этот метод вызывается холстом автоматически из метода <codeph>commitProperties()</codeph>, но полученный холст может вызвать его явным образом, если генерируемые значения необходимы в определенный период времени. 
      
      <p>Загрузка и отображение данных относительно осей предназначены для принятия данных осями в любое время. Этот метод безопасно вызывать явным образом в любой точке.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarDataCanvas:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      При необходимости вызывает метод холста updateTransform().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, если основные данные поставщика данных изменились; в противном случае <codeph>false</codeph>.
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      При необходимости вызывает метод холста <codeph>updateTransform()</codeph>. При необходимости этот метод автоматически вызывается холстом в ходе метода <codeph>commitProperties()</codeph>, но полученный холст может вызвать его явно, если генерируемые значения необходимы в явное время. Фильтрация и преобразование данных используют определенные значения, вычисляемые осями, которые могут в свою очередь зависеть от данных, отображаемых в диаграмме. Вызов этой функции в неверное время может привести к выполнению дополнительной работы, если значения обновляются.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:PolarDataCanvas:angularAxis:get"><apiName>angularAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X. Используйте класс LinearAxis или класс CategoryAxis для установки свойств angularAxis в качестве нижестоящего тега в MXML или создайте объект LinearAxis или объект CategoryAxis в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:includeInRanges:get"><apiName>includeInRanges</apiName><shortdesc>
     При значении true вычисленный диапазон диаграммы задействован этим холстом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     При значении <codeph>true</codeph> вычисленный диапазон диаграммы задействован этим холстом.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:radialAxis:get"><apiName>radialAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y. Используйте класс LinearAxis или класс CategoryAxis для установки свойств угловой оси в качестве нижестоящего тега в MXML или создайте объект LinearAxis или объект CategoryAxis в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarDataCanvas:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Объект DataTransform, с которым связан элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Объект DataTransform, с которым связан элемент. Объект DataTransform представляет связь между набором элементов и набором объектов оси, используемых для преобразования тех элементов из области данных в координаты экрана и обратно. Элемент диаграммы использует связанный объект DataTransform для вычисления способа визуализации его данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IDataCanvas"><apiName>IDataCanvas</apiName><shortdesc>
  Этот интерфейс только для внутреннего использования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Этот интерфейс только для внутреннего использования. 
  
  </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="mx.charts.chartClasses:AxisBase"><apiName>AxisBase</apiName><shortdesc>
  Класс AxisBase служит базовым классом для различных типов оси, поддерживаемых в Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>Flex components inherit the following properties
  from the AxisBase class:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    displayName="<i>No default</i>"
    title="<i>No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс AxisBase служит базовым классом для различных типов оси, поддерживаемых в Flex. 
 
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:AxisBase:AxisBase"><apiName>AxisBase</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:AxisBase:dataChanged"><apiName>dataChanged</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#dataChanged()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#dataChanged()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:protected:describeData"><apiName>describeData</apiName><shortdesc>
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Массив объектов BoundedValue, содержащий экземпляры DataDescription, описывающие отображаемые данные.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.chartClasses.xml#BoundedValue"><linktext>mx.charts.chartClasses.BoundedValue</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:registerDataTransform"><apiName>registerDataTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#registerDataTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Регистрируемый элемент DataTransform.
     
      </apiDesc></apiParam><apiParam><apiItemName>dimensionName</apiItemName><apiType value="String"/><apiDesc>Имя измерения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#registerDataTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:AxisBase:unregisterDataTransform"><apiName>unregisterDataTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#unregisterDataTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>DataTransform, для которого отменяется регистрация.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#unregisterDataTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:AxisBase:displayName:get"><apiName>displayName</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#displayName">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#displayName">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:title:get"><apiName>title</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#title">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#title">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:unitSize:get"><apiName>unitSize</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#unitSize">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#unitSize">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisBase:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#chartDataProvider">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc conref="mx.charts.chartClasses.IAxis#chartDataProvider">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:RenderData"><apiName>RenderData</apiName><shortdesc>
  Структуры RenderData используются элементами диаграммы для сохранения всех соответствующих значений и данных, необходимых для полной визуализации диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Структуры RenderData используются элементами диаграммы для сохранения всех соответствующих значений и данных, необходимых для полной визуализации диаграммы. Сохранение этих значений в отдельной структуре позволяет элементам диаграммы по мере необходимости отделять их визуализацию от назначенных свойств и данных. Эта способность используется эффектами диаграммы: эффекты, например SeriesInterpolate, заменяют временные значения, вычисленные из предыдущих и будущих структур renderData. Эффекты, например SeriesSlide и SeriesZoom, заменяют временные структуры RenderData со значениями, вычисленными для правильной визуализации эффекта.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:RenderData:RenderData"><apiName>RenderData</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Список ChartItems, представляющий элементы в серии <codeph>dataProvider</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredCache</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Список ChartItems, представляющий элементы в серии <codeph>dataProvider</codeph>, которые остаются после фильтрации.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:RenderData:clone"><apiName>clone</apiName><shortdesc>
      Создает копию данных визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Новая копия объекта RenderData.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:RenderData</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
      Создает копию данных визуализации. Свойства, указывающие на другие объекты, в новой копии продолжают указывать на те же самые объекты, что и оригинал.
      
      <p>При подразделении этого класса следует отменить этот метод.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:RenderData:bounds"><apiName>bounds</apiName><shortdesc>
      Серия отображает пределы всех элементов на экране в системе координат серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Серия отображает пределы всех элементов на экране в системе координат серии. Это значение используется различными эффектами в ходе визуализации. Серия заполняет это значение, когда эффект вызывает метод <codeph>getElementBounds()</codeph>. Серия не должна заполнять это поле без специального запроса.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:cache"><apiName>cache</apiName><shortdesc>
      Список ChartItems, представляющий элементы в серии dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Список ChartItems, представляющий элементы в серии <codeph>dataProvider</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:elementBounds"><apiName>elementBounds</apiName><shortdesc>
      Массив прямоугольников, описывающий пределы серии ChartItems относительно системы координат серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив прямоугольников, описывающий пределы серии ChartItems относительно системы координат серии. Эффекты используют этот массив для создания визуализации эффекта. Эффект вызывает метод <codeph>getElementBounds()</codeph>, который приводит к заполнению серией этого значения. Серия не должна заполнять это поле без специального запроса. Эффекты изменяют этот массив для отображения текущих позиций элементов во время выполнения эффекта. Если это значение заполнено в серии <codeph>renderData</codeph>, то серия визуализирует себя на основе этих прямоугольников, а не из данных серии.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:filteredCache"><apiName>filteredCache</apiName><shortdesc>
      Список ChartItems, представляющий элементы в серии dataProvider, которые остаются после фильтрации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Список ChartItems, представляющий элементы в серии <codeph>dataProvider</codeph>, которые остаются после фильтрации.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:visibleRegion"><apiName>visibleRegion</apiName><shortdesc>
      Прямоугольник, описывающий возможный диапазон координат, который серия способна отобразить на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Прямоугольник, описывающий возможный диапазон координат, который серия способна отобразить на экране. Это значение используется различными эффектами в ходе визуализации. Эффект вызывает метод <codeph>getElementBounds()</codeph> для заполнения этого значения. Серия не должна заполнять это поле без специального запроса. Если оставлено значение <codeph>null</codeph>, эффекты предполагают, что видимая область элемента является ограничительной рамкой самого элемента (0, 0, ширина, высота), выраженной относительно элемента.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:RenderData:length:get"><apiName>length</apiName><shortdesc>
      Число элементов, представляемых в этих данных визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Число элементов, представляемых в этих данных визуализации. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:NumericAxis"><apiName>NumericAxis</apiName><shortdesc>
  Класс NumericAxis действует как общий базовый класс для типов оси, представляющих непрерывный диапазон значений между определенным минимальным и максимальным значением.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IAxis</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:AxisBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс NumericAxis действует как общий базовый класс для типов оси, представляющих непрерывный диапазон значений между определенным минимальным и максимальным значением. Встроенные классы LinearAxis, LogAxis и DateTimeAxis расширяют этот базовый класс.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#DateTimeAxis"><linktext>mx.charts.DateTimeAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.xml#LogAxis"><linktext>mx.charts.LogAxis</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:NumericAxis:NumericAxis"><apiName>NumericAxis</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:adjustMinMax"><apiName>adjustMinMax</apiName><shortdesc>
      Регулирует генерируемый или назначенный диапазон меток оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>minValue</apiItemName><apiType value="Number"/><apiDesc>Вычисленное минимальное значение.
      </apiDesc></apiParam><apiParam><apiItemName>maxValue</apiItemName><apiType value="Number"/><apiDesc>Вычисленное максимальное значение.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Регулирует генерируемый или назначенный диапазон меток оси. Этот метод вызван в ходе цикла обновления оси. Подклассы могут отменить этот метод для специальной обработки значений. По умолчанию корректировки для диапазона не существуют.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:buildLabelCache"><apiName>buildLabelCache</apiName><shortdesc>
      Заполняет свойство labelCache метками, представляющими текущие значения оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Значение true, если метки созданы заново.
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      Заполняет свойство <codeph>labelCache</codeph> метками, представляющими текущие значения оси. Эта функция реализуется подклассами. Эта функция вызывается несколько раз, поэтому следует проверить, не имеет ли свойство <codeph>labelCache</codeph> значение <codeph>nul</codeph> перед выполнением каких-либо вычислений.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:buildMinorTickCache"><apiName>buildMinorTickCache</apiName><shortdesc>
      Формирует массив позиций для массива вспомогательных делений, генерируемых этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Массив позиций со значениями от 0 до 1, представляющими точки между минимальным и максимальным значениями оси, в которых визуализируются вспомогательные деления.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Формирует массив позиций для массива вспомогательных делений, генерируемых этой осью. Эта функция реализуется подклассами. Вызов этой функции выполняется автоматически классом NumericAxis. Вместо непосредственного вызова этой функции следует использовать свойство <codeph>minorTicks</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:filterCache"><apiName>filterCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно отфильтрованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны быть сохранены отфильтрованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:formatForScreen"><apiName>formatForScreen</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>Текст DataTip.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Значение, подлежащее преобразованию в строку. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:getLabelEstimate"><apiName>getLabelEstimate</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:getLabels"><apiName>getLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc></apiReturn><apiParam><apiItemName>minimumAxisLength</apiItemName><apiType value="Number"/><apiDesc>Минимальная длина оси (в пикселях). Длина оси может превосходить это значение, но не может быть меньше него.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:guardMinMax"><apiName>guardMinMax</apiName><shortdesc>
      Защищает диапазон от недопустимых значений для этого типа оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Значение null, если не требуется корректировка или массив, содержащий регулируемые значения формы <codeph>[min,max]</codeph>.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>min</apiItemName><apiType value="Number"/><apiDesc>Вычисленное минимальное значение.
      </apiDesc></apiParam><apiParam><apiItemName>max</apiItemName><apiType value="Number"/><apiDesc>Вычисленное максимальное значение.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Защищает диапазон от недопустимых значений для этого типа оси. Эта функция вызвана в ходе цикла обновления оси. Это гарантирует, что недопустимые диапазоны не генерируются. Подклассы могут отменить этот класс и определить логику, соответствующую их типу оси.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:protected:invalidateCache"><apiName>invalidateCache</apiName><shortdesc>
      Признает недействительными кэшируемые метки и деления, представляющие значения этой оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Признает недействительными кэшируемые метки и деления, представляющие значения этой оси. Полученные классы должны вызывать эту функцию всякий раз, когда изменяются значения, используемые при вычислении меток и делений.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:invertTransform"><apiName>invertTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Объект, содержащий преобразованное значение.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Граница оси. Этот параметр должен иметь значение от 0 до 1, при этом 0 соответствует минимальной границе оси, а 1 – максимальной.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:mapCache"><apiName>mapCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где преобразованные значения должны быть сохранены.
     
      </apiDesc></apiParam><apiParam><apiItemName>indexValues</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Этот параметр имеет значение <codeph>true</codeph>, если отображаемые значения являются индексными значениями, и <codeph>false</codeph>, если они являются естественными значениями данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:preferDropLabels"><apiName>preferDropLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>Значение <codeph>true</codeph>, если метки могут быть пропущены без потери данных; в противном случае задается значение <codeph>false</codeph>. 
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Новый набор меток, используемый для разрешения проблемы наложения путем уменьшения количества меток.
      
      </apiDesc></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Начало интервала, где происходит наложение меток.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Конец интервала, в котором происходит наложение меток.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:transformCache"><apiName>transformCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются отображаемые значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащее предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны сохраняться преобразованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:NumericAxis:update"><apiName>update</apiName><shortdesc>
      
      Обновляет диаграмму.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Обновляет диаграмму. Можно вызвать несколько раз за цикл. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:NumericAxis:protected:assignedMaximum"><apiName>assignedMaximum</apiName><shortdesc>
      Явно назначенное максимальное значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Явно назначенное максимальное значение. Если значение не было назначено, оно будет равно <codeph>NaN</codeph>. Обычно вычисления следует выполнять с полем <codeph>computedMaximum</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:assignedMinimum"><apiName>assignedMinimum</apiName><shortdesc>
      Явно назначенное минимальное значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Явно назначенное минимальное значение. Если значение не было назначено, оно будет равно <codeph>NaN</codeph>. Обычно вычисления следует выполнять с полем <codeph>computedMinimum</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:computedInterval"><apiName>computedInterval</apiName><shortdesc>
      Вычисленный интервал, представляемый этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Вычисленный интервал, представляемый этой осью. <codeph>computedInterval</codeph> используется классами AxisRenderer и Gridlines для определения места визуализации делений и линий сетки. Базовый класс NumericAxis отслеживает изменения в этом поле для определения необходимости выполнения повторной визуализации диаграммы. Полученные классы ответственны за вычисление значения этого поля.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:computedMaximum"><apiName>computedMaximum</apiName><shortdesc>
      Вычисленное максимальное значение, представляемое этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Вычисленное максимальное значение, представляемое этой осью. Если пользователь явно назначил максимальное значение, свойства <codeph>computedMaximum</codeph> и <codeph>assignedMaximum</codeph> обычно идентичны. В противном случае <codeph>computedMaximum</codeph> генерируется из значений, представляемых в диаграмме.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:computedMinimum"><apiName>computedMinimum</apiName><shortdesc>
      Вычисленное минимальное значение, представляемое этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Вычисленное минимальное значение, представляемое этой осью. Если пользователь явно назначил минимальное значение, свойства <codeph>computedMinimum</codeph> и <codeph>assignedMinimum</codeph> обычно идентичны. В противном случае <codeph>computedMinimum</codeph> генерируется из значений, представляемых в диаграмме.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelCache"><apiName>labelCache</apiName><shortdesc>
      Последний набор объектов AxisLabel, генерируемых для представления этой оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Последний набор объектов AxisLabel, генерируемых для представления этой оси. Это свойство имеет значение <codeph>null</codeph>, если ось изменена и требует новых меток. Для обеспечения правильного значения свойства <codeph>labelCache</codeph> вызовите метод <codeph>buildLabelCache()</codeph> перед обращением к свойству <codeph>labelCache</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelMaximum"><apiName>labelMaximum</apiName><shortdesc>
      Максимальное значение для места размещения метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Максимальное значение для места размещения метки. После вычисления регулируемого минимального значения многие типы оси расширяют диапазон оси для создания пространства для дополнительной визуализации родственных объектов в диаграмме, например меток и границ. Это значение представляет максимальное значение в диаграмме <i>до</i> его регулировки по указанным аспектам. Обычно оси генерируют метки, чтобы убедиться в том, что отмечено данное значение, а не регулируемое максимальное значение оси.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:labelMinimum"><apiName>labelMinimum</apiName><shortdesc>
      Минимальное значение места, где должна быть помещена метка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Минимальное значение места, где должна быть помещена метка. После вычисления регулируемого минимального значения многие типы оси расширяют диапазон оси для создания пространства для дополнительной визуализации родственных объектов в диаграмме, например меток и границ. Это значение представляет минимальное значение в диаграмме <i>до</i> его регулировки по указанным аспектам. Обычно оси генерируют метки, чтобы убедиться в том, что отмечено данное значение, а не регулируемое минимальное значение оси.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:minorTickCache"><apiName>minorTickCache</apiName><shortdesc>
      Последний набор вспомогательных делений, генерируемых для представления этой оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Последний набор вспомогательных делений, генерируемых для представления этой оси. Это свойство может быть равно <codeph>null</codeph>, если ось изменена и требует новых меток и делений. Используйте общее средство доступа <codeph>minorTicks</codeph> для формирования вспомогательных делений по запросу.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:autoAdjust:get"><apiName>autoAdjust</apiName><shortdesc>
      Указывает, округляет ли Flex значения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, округляет ли Flex значения. Если задано значение <codeph>false</codeph>, то Flex не округляет значения, установленные свойствами <codeph>minimum</codeph> и <codeph>maximum</codeph>, и не изменяет значения по умолчанию <codeph>minimum</codeph> и <codeph>maximum</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:baseAtZero:get"><apiName>baseAtZero</apiName><shortdesc>
      Указывает, пытается ли Flex сохранить значения minimum и maximum как можно ближе к нулю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, пытается ли Flex сохранить значения <codeph>minimum</codeph> и <codeph>maximum</codeph> как можно ближе к нулю. Если все значения оси положительны, минимальным значением оси будет нуль. Если все значения оси отрицательны, максимальным значением оси будет нуль.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:baseline:get"><apiName>baseline</apiName><shortdesc>
      Вычисленное минимальное значение для оси, пока это значение больше 0.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Вычисленное минимальное значение для оси, пока это значение больше 0. Если максимальное значение меньше или равно 0, то свойство <codeph>baseline</codeph> является вычисленным максимальным значением. Если нет значения больше, чем 0, то свойство <codeph>baseline</codeph> равно 0.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:dataDescriptions:get"><apiName>dataDescriptions</apiName><shortdesc>
      Массив структур DataDescription, описывающих данные, представляемые диаграммой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив структур DataDescription, описывающих данные, представляемые диаграммой. Ось может использовать это свойство для генерации значений свойств, например их диапазона.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:direction:get"><apiName>direction</apiName><shortdesc>
 	  Определяет направление визуализации оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"normal"
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
 	  Определяет направление визуализации оси. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>inverted</codeph>. Все полученные классы должны определять способ min и max, установленный в зависимости от <codeph>direction</codeph>. Все серии должны определять способ визуализации в зависимости от <codeph>direction</codeph> основной оси. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Вызывается при форматировании значений оси для отображения в качестве метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Вызывается при форматировании значений оси для отображения в качестве метки. <codeph>labelFunction</codeph> имеет следующую подпись:
      <pre>
      function <i>function_name</i>(<i>labelValue</i>:Object, <i>previousValue</i>:Object, <i>axis</i>:IAxis):String { ... }
      </pre>
      
      <p>Если известны типы данных, форматируемых функцией, можно указать явный тип для параметров <codeph>labelValue</codeph> и <codeph>previousValue</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:minorTicks:get"><apiName>minorTicks</apiName><shortdesc>
      Массив вспомогательных делений, генерируемых для представления этой оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив вспомогательных делений, генерируемых для представления этой оси.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:padding:get"><apiName>padding</apiName><shortdesc>
      Указывает заполнение, которое Flex добавляет к вычисленным минимальному и максимальному значениям для оси при визуализации значений на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Указывает заполнение, которое Flex добавляет к вычисленным минимальному и максимальному значениям для оси при визуализации значений на экране.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:parseFunction:get"><apiName>parseFunction</apiName><shortdesc> 
      Укажите parseFunction для настройки того, как визуализированные диаграммой значения преобразуются в числовые значения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
      Укажите <codeph>parseFunction</codeph> для настройки того, как визуализированные диаграммой значения преобразуются в числовые значения. Пользовательская функция <codeph>parseFunction</codeph> передает значение данных и должна возвратить соответствующее число, представляющее то же самое значение. По умолчанию эта ось использует функцию ECMA <codeph>parseFloat()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:requiredDescribedFields:get"><apiName>requiredDescribedFields</apiName><shortdesc>
      Поля структуры DescribeData, используемые осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Поля структуры DescribeData, используемые осью.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:NumericAxis:protected:ticks:get"><apiName>ticks</apiName><shortdesc>
      Массив делений для этой оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив делений для этой оси.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IStackable"><apiName>IStackable</apiName><shortdesc>
  Интерфейс IStackable реализован любой серией, которая может быть представлена в стеке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Интерфейс IStackable реализован любой серией, которая может быть представлена в стеке. Наборы стека (ColumnSet, BarSet, AreaSet) требуют назначения им любой подчиненной серии стека, если стек реализует этот интерфейс.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stack"><apiName>stack</apiName><shortdesc>
	  Обеспечивает накопление серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Максимальное значение во вновь накопленной серии.	 
	  
	  </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>stackedXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Содержит базовые значения, которые должны быть помещены серией в верхнюю область стека. Ключи словаря являются значениями по оси Y, а значения – значениями по оси X.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>previousElement</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IStackable</apiOperationClassifier><apiDesc>Предыдущий элемент в накоплении. Если элемент, к примеру, имеет тот же самый тип, можно перейти к этому свойству во избежание дублирования работы при выполнении визуализации.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Обеспечивает накопление серии. Как правило, метод <codeph>updateData()</codeph> реализуется серией для загрузки ее данных из поставщика данных. Однако накопленная серия обеспечивает выполнение специальных операций, поскольку ее значения не обязательно сохраняются в поставщике данных. Значениями является информация, сохраненная в поставщике данных, суммируемая со значениями, загружаемыми объектом в верхнюю часть стека.
	  <p>Пользовательская серия должна обеспечивать реализацию метода <codeph>stack()</codeph> путем загрузки его данных из поставщика данных, их добавления к основным значениям, хранящимся в словаре, для получения реальных значений, которые должны быть отображены, и замены значений словаря на новые, суммируемые значения.</p>
	  
	  </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stacker:get"><apiName>stacker</apiName><shortdesc>
	  Элемент StackedSeries, связанный с этой серией.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:StackedSeries</apiValueClassifier></apiValueDef><apiDesc>
	  Элемент StackedSeries, связанный с этой серией. Накопитель обеспечивает управление поведением серии при накоплении.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IStackable:mx.charts.chartClasses:IStackable:stackTotals:set"><apiName>stackTotals</apiName><shortdesc>
	  Итоговые накопленные значения серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
	  Итоговые накопленные значения серии.
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IBar"><apiName>IBar</apiName><shortdesc>
  Интерфейс IBar реализован любой серией, которая может быть кластеризована вертикально, например BarSeries.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Интерфейс IBar реализован любой серией, которая может быть кластеризована вертикально, например BarSeries. Тип серии BarSet требует реализации этого интерфейса всеми подчиненными сериями, назначенными ему.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:barWidthRatio:set"><apiName>barWidthRatio</apiName><shortdesc>
	  Указывает охват визуализации элементов относительно категории.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает охват визуализации элементов относительно категории. Установка значения <codeph>1</codeph> приводит к использованию всего пространства, а установка значения <codeph>0,6</codeph> приводит к использованию 60% доступного пространства категории. Как правило, непосредственная установка именно этого свойства не осуществляется. Управляющие элементы BarSet или BarChart назначили бы это значение неявным образом. Используемый фактический размер равен меньшему из свойств<codeph>barWidthRatio</codeph> и <codeph>maxbarWidth</codeph>
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:maxBarWidth:set"><apiName>maxBarWidth</apiName><shortdesc>
	  Указывает ширину для отображения элементов в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает ширину для отображения элементов в пикселях. Используемая фактическая ширина элемента равна меньшему значению для этого стиля и свойства <codeph>barWidthRatio</codeph>. Как правило, непосредственная установка именно этого свойства не осуществляется. Объекты BarSet или BarChart назначают это значение.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IBar:mx.charts.chartClasses:IBar:offset:set"><apiName>offset</apiName><shortdesc>
	  Указывает значение относительно размера категории для смещения центра элементов от центра доступного пространства.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/><apiDefaultValue>0
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Указывает значение относительно размера категории для смещения центра элементов от центра доступного пространства. Значение в процентах находится в диапазоне от <codeph>-100</codeph> до <codeph>100</codeph>. Установите значение <codeph>0</codeph> для выравнивания элементов по центру в пространстве. Установите значение на <codeph>-50</codeph> для выравнивания элемента по центру в верхней части доступного пространства. Как правило, непосредственная установка именно этого свойства не осуществляется. Объекты BarSet или BarChart назначают это значение.
	 
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:AxisLabelSet"><apiName>AxisLabelSet</apiName><shortdesc>
  AxisLabelSet представляет метку и данные деления, генерируемые реализацией IAxis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  AxisLabelSet представляет метку и данные деления, генерируемые реализацией IAxis.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:AxisLabelSet:AxisLabelSet"><apiName>AxisLabelSet</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:AxisLabelSet:accurate"><apiName>accurate</apiName><shortdesc>
      При возвращении из метода getLabelEstimate(), установите значение true, если оценка точно представляет последние визуализируемые метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      При возвращении из метода <codeph>getLabelEstimate()</codeph>, установите значение <codeph>true</codeph>, если оценка точно представляет последние визуализируемые метки. Это свойство не учитывается в других контекстах.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:labels"><apiName>labels</apiName><shortdesc>
      Массив объектов AxisLabel, представляющий значения генерирующей оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив объектов AxisLabel, представляющий значения генерирующей оси.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:minorTicks"><apiName>minorTicks</apiName><shortdesc>
      Массив значений от 0 до 1, представляющий место размещения вспомогательных делений на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив значений от 0 до 1, представляющий место размещения вспомогательных делений на оси.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:AxisLabelSet:ticks"><apiName>ticks</apiName><shortdesc>
      Массив значений от 0 до 1, представляющий место размещения делений на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив значений от 0 до 1, представляющий место размещения делений на оси.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianDataCanvas"><apiName>CartesianDataCanvas</apiName><shortdesc>
 Этот класс позволяет использовать дополнительные графические элементы, например линии, эллипсы и другие фигуры, при помощи интерфейса API для графики.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataChildren"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:CartesianDataCanvas&gt;</code> tag inherits all the
  properties of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CartesianDataCanvas
    <strong>Properties</strong>
    dataChildren="<i>No default</i>"
    horizontalAxis="<i>No default</i>"
    includeInRanges="<i>false</i>"
    verticalAxis="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IDataCanvas</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
 Этот класс позволяет использовать дополнительные графические элементы, например линии, эллипсы и другие фигуры, при помощи интерфейса API для графики. Значения, передаваемые в интерфейс API для графики, выражены в координатах данных, а не в экранных координатах. Любой элемент DisplaObject можно добавить к холсту таким же образом, как добавляются нижестоящие элементы к контейнерам.
 
 <p>Область рисунка для холста определяется свойствами <codeph>verticalAxis</codeph> и <codeph>horizontalAxis</codeph> (если они указаны). В противном случае для вычисления области рисунка холст использует оси диаграммы по умолчанию.</p>
 
 <p>Координаты данных, передаваемые как параметры в интерфейсы API для рисунка, могут быть фактическими значениями координаты данных или объекта типа <codeph>CartesianCanvasValue</codeph>, который может содержать значение координаты данных и смещение в пикселях.</p>
 
 </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:CartesianDataCanvas:CartesianDataCanvas"><apiName>CartesianDataCanvas</apiName><shortdesc>
     Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     
     Добавляет экземпляр нижестоящего элемента DisplayObject к экземпляру DisplayObjectContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Экземпляр DisplayObject, передаваемый в параметр <codeph>child</codeph>.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Экземпляр DisplayObject для добавления в качестве нижестоящего элемента экземпляра DisplayObjectContainer.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Позиция индекса для добавления нижестоящего элемента. При указании занятой в настоящее время позиции индекса существующий в данной позиции дочерний объект и все вышестоящие позиции перемещаются по списку на одну позицию вверх. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
     Добавляет экземпляр дочернего элемента DisplayObject к экземпляру DisplayObjectContainer. Дочерний элемент добавляется к указанной позиции индекса. Индекс 0 представляет собой заднюю (нижнюю) часть списка отображения для объекта DisplayObjectContainer.
     
     <p>При добавлении дочернего объекта, уже имеющего отличный от других контейнер объекта отображения в качестве родительского элемента, объект удаляется из списка дочерних элементов другого контейнера объекта отображения. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addChild"><apiName>addChild</apiName><shortdesc>
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:addDataChild"><apiName>addDataChild</apiName><shortdesc>
     Добавляет указанный экранный объект как нижестоящий элемент к текущему холсту.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>    Экранный объект, добавляемый как нижестоящий элемент к текущему холсту.
     </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>     Левая координата по оси X <codeph>child</codeph> в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>      Верхняя координата по оси Y <codeph>child</codeph> в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Правая координата по оси X <codeph>child</codeph> в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Нижняя координата по оси Y <codeph>child</codeph> в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>hCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя координата по оси X <codeph>child</codeph> в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>vCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя координата по оси Y <codeph>child</codeph> в координатах данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Добавляет указанный экранный объект как нижестоящий элемент к текущему холсту.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:beginBitmapFill"><apiName>beginBitmapFill</apiName><shortdesc>
     Заполняет область рисунка растровым изображением.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bitmap</apiItemName><apiType value="flash.display:BitmapData"/><apiDesc>Прозрачное или матовое растровое изображение, содержащее отображаемые биты. 
     
     </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Координата x заливки.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>Координата y заливки.
     
     </apiDesc></apiParam><apiParam><apiItemName>matrix</apiItemName><apiType value="flash.geom:Matrix"/><apiData>null</apiData><apiDesc>Объект матрицы (из класса flash.geom.Matrix), который можно использовать для определения преобразований в растровом изображении.
     
     </apiDesc></apiParam><apiParam><apiItemName>repeat</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>При значении <codeph>true</codeph> растровое изображение повторяется по шаблону мозаики. При значении <codeph>false</codeph> растровое изображение не повторяется, а его края используются для заливки всей области, выходящей за его пределы.
     
     </apiDesc></apiParam><apiParam><apiItemName>smooth</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>При выборе значения <codeph>false</codeph> визуализируются растровые изображения, увеличенные при помощи алгоритма ближайшего соседнего пикселя, которые могут выглядеть нечетко. При выборе значения <codeph>true</codeph> увеличенное растровое изображение визуализируется с помощью билинейного алгоритма. Процедура визуализации с помощью алгоритма ближайшего соседнего пикселя требует меньше времени. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Заполняет область рисунка растровым изображением. Координаты, передаваемые в этот метод, относительно горизонтальной оси и вертикальной оси холста.
     
     <p>Использование и параметры этого метода идентичны методу <codeph>beginBitmapFill()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/beginBitmapFill()"><linktext>flash.display.Graphics.beginBitmapFill()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:beginFill"><apiName>beginFill</apiName><shortdesc conref="flash.display.Graphics#beginFill()">
     Примечание. Следующая информация из метода beginFill() класса flash.display.Graphics, за исключением методов beginGradientFill() и beginShaderFill(), применяется к этому методу:
      
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>color</apiItemName><apiType value="uint"/></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1</apiData></apiParam></apiOperationDef><apiDesc conref="flash.display.Graphics#beginFill()">
     <i>Примечание. Следующая информация из метода <codeph>beginFill()</codeph> класса <codeph>flash.display.Graphics</codeph>, за исключением методов <codeph>beginGradientFill()</codeph> и <codeph>beginShaderFill()</codeph>, применяется к этому методу:</i>
      
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:clear"><apiName>clear</apiName><shortdesc conref="flash.display.Graphics#clear()">
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#clear()">
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:curveTo"><apiName>curveTo</apiName><shortdesc>
     Рисует кривую с использованием текущего стиля линии от текущего положения до (anchorX, anchorY) и с применением контрольной точки, указанной в координатах (controlX, controlY).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>controlX</apiItemName><apiType value="any"/><apiDesc>Координата x контрольной точки. 
     
     </apiDesc></apiParam><apiParam><apiItemName>controlY</apiItemName><apiType value="any"/><apiDesc>Координата y контрольной точки.
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorX</apiItemName><apiType value="any"/><apiDesc>Координата x точки привязки. 
     
     </apiDesc></apiParam><apiParam><apiItemName>anchorY</apiItemName><apiType value="any"/><apiDesc>Координата y точки привязки.  
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует кривую с использованием текущего стиля линии от текущего положения до (anchorX, anchorY) и с применением контрольной точки, указанной в координатах (controlX, controlY). Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     <p>Использование и параметры этого метода идентичны методу <codeph>curveTo()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/curveTo()"><linktext>flash.display.Graphics.curveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      
      
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Координаты относительно диаграммы.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Значения данных для преобразования в координаты.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране. Вызов этой функции необходим для преобразования данных на экране с применением преобразования, используемого отдельными элементами. Например, при создании пользовательского выделения области данных диаграммы можно использовать эту функцию для определения экранных координат требуемого диапазона.
      
      <p>Для элементов диаграмм в прямоугольной системе координат обычно передаются два значения. Первое значение отображает значение относительно горизонтальной оси, а второе – по отношению к вертикальной оси.</p>
      
      <p>При использовании полярных диаграмм первое значение отображается по отношению к угловой оси, а второе – по отношению к радиальной оси.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:describeData"><apiName>describeData</apiName><shortdesc>
     
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Массив, содержащий экземпляры DataDescription, описывающий отображаемые данные.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Определяет ось для получения описания данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawCircle"><apiName>drawCircle</apiName><shortdesc>
     Рисует круг.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения центра круга (в пикселях). 
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения центра круга (в пикселях). 
     
     </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc>Радиус окружности (в пикселях). 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует круг. Прежде чем вызывать метод <codeph>drawCircle()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawEllipse"><apiName>drawEllipse</apiName><shortdesc>
     Рисует эллипс.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения верхнего левого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения верхнего левого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения нижнего правого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения нижнего правого угла ограничительной рамки эллипса.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует эллипс. Прежде чем вызывать метод <codeph>drawEllipse()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawEllipse()"><linktext>flash.display.Graphics.drawEllipse()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawRect"><apiName>drawRect</apiName><shortdesc>
     Рисует прямоугольник.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения нижнего правого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения нижнего правого угла прямоугольника.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует прямоугольник. Прежде чем вызывать метод <codeph>drawRect()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRect()"><linktext>flash.display.Graphics.drawRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:drawRoundedRect"><apiName>drawRoundedRect</apiName><shortdesc>
     Рисует прямоугольный примитив со скругленными углами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения верхнего левого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiDesc>Координата x местоположения нижнего правого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiDesc>Координата y местоположения нижнего правого угла прямоугольника.
     
     </apiDesc></apiParam><apiParam><apiItemName>cornerRadius</apiItemName><apiType value="Number"/><apiDesc>Радиусы углов в пикселях.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует прямоугольный примитив со скругленными углами. Прежде чем вызывать метод <codeph>drawRoundRect()</codeph>, необходимо задать стиль линии, заливку или и то, и другое. Для этого нужно вызвать метод <codeph>linestyle()</codeph>, <codeph>lineGradientStyle()</codeph>, <codeph>beginFill()</codeph>, <codeph>beginGradientFill()</codeph> или <codeph>beginBitmapFill()</codeph>. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/drawRoundRect()"><linktext>flash.display.Graphics.drawRoundRect()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:endFill"><apiName>endFill</apiName><shortdesc conref="flash.display.Graphics#endFill()"> 
     Примечание. Следующая информация из endFill() класса flash.display.Graphics, за исключением метода beginGradientFill(), применяется к этому методу:
     
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="flash.display.Graphics#endFill()"> 
     <i>Примечание. Следующая информация из <codeph>endFill()</codeph> класса <codeph>flash.display.Graphics</codeph>, за исключением метода<codeph>beginGradientFill()</codeph>, применяется к этому методу:</i>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Передает в холст сведения об изменении основных данных в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, если данные поставщика данных изменились.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Передает в холст сведения об изменении основных данных в поставщике данных. Этот метод инициирует вызов методов <codeph>updateMapping()</codeph> и <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:lineStyle"><apiName>lineStyle</apiName><shortdesc>
     Указывает стиль линии, используемый Flash для последующих вызовов других графических методов для объекта (например, lineTo() или drawCircle()).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiDesc>Целое число, определяющее толщину линии в точках; допустимыми являются значения от 0 до 255. Если число не указано или параметр не определен, то линия не будет проведена. Если передается значение меньше 0, по умолчанию задается 0. Значение 0 обозначает толщину одного волоса, максимальная толщина составляет 255. Если передается значение больше 255, по умолчанию задается 255. 
     
     </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Шестнадцатеричное значение цвета линии; например красный — 0xFF0000, синий — 0x0000FF и т.д. Если значение на задано, по умолчанию используется 0x000000 (черный).
     
     </apiDesc></apiParam><apiParam><apiItemName>alpha</apiItemName><apiType value="Number"/><apiData>1.0</apiData><apiDesc>Число, указывающее значение альфа-канала цвета линии, допустимые значения находятся в диапазоне 0-1. Если значение на задано, по умолчанию используется 1(сплошной). Если значение меньше 0, по умолчанию задается 0. Если значение больше 1, по умолчанию задается 1.
     
     </apiDesc></apiParam><apiParam><apiItemName>pixelHinting</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Логическое значение, определяющее, следует ли выполнять хинтинг штрихов до полных пикселей. Оно влияет на позицию привязок кривой и на размер штриха линии как таковой. Если для <codeph>pixelHinting</codeph> задано значение true, выполняется хинтинг ширины линии до полного пикселя. Если для <codeph>pixelHinting</codeph> задано значение false, в кривых и прямых линиях могут возникать разрывы.
     
     </apiDesc></apiParam><apiParam><apiItemName>scaleMode</apiItemName><apiType value="String"/><apiData>normal</apiData><apiDesc>Значение класса flash.display.LineScaleMode, задающее режим масштабирования:
     
     <ul>
       <li><codeph>LineScaleMode.NORMAL</codeph> – всегда масштабировать толщину линии при масштабировании объекта (по умолчанию).</li>
       <li><codeph>LineScaleMode.NONE</codeph>: никогда не масштабировать толщину линии.</li>
       <li><codeph>LineScaleMode.VERTICAL</codeph>: не масштабировать толщину линии, если объект масштабируется только по вертикали. </li>
       <li><codeph>LineScaleMode.HORIZONTAL</codeph>: не масштабировать толщину линии, если объект масштабируется только по горизонтали. </li>
     </ul>
     
     </apiDesc></apiParam><apiParam><apiItemName>caps</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Значение класса flash.display.CapsStyle, задающее тип концов линии. Допустимые значения: <codeph>CapsStyle.NONE</codeph>, <codeph>CapsStyle.ROUND</codeph> и <codeph>CapsStyle.SQUARE</codeph>. Если значение не указано, следует использовать скругленные концы. 
     
     </apiDesc></apiParam><apiParam><apiItemName>joints</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Значение класса flash.display.JointStyle, задающее тип стыка на углах. Допустимые значения: <codeph>JointStyle.BEVEL</codeph>, <codeph>JointStyle.MITER</codeph> и <codeph>JointStyle.ROUND</codeph>. Если значение не указано, следует использовать круглые стыки. 
     
     </apiDesc></apiParam><apiParam><apiItemName>miterLimit</apiItemName><apiType value="Number"/><apiData>3</apiData><apiDesc>Число, указывающее предел усечения уголка. Допустимыми являются значения в диапазоне 1-255 (остальные значения округляются до 1 или 255). Это значение используется, только если для jointStyle выбран тип miter. Значение <codeph>miterLimit</codeph> – это длина, до которой может продлеваться уголок после точки стыка. Значение выражает фактор thickness линии. Например, при факторе <codeph>miterLimit</codeph>, равном 2,5, и thickness в 10 пикселей, длина уголка достигает 25 пикселей. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Указывает стиль линии, используемый Flash для последующих вызовов других графических методов для объекта (например, <codeph>lineTo()</codeph> или <codeph>drawCircle()</codeph>).
     
     <p>Использование и параметры этого метода идентичны методу <codeph>lineStyle()</codeph> класса flash.display.Graphics.</p>
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineStyle()"><linktext>flash.display.Graphics.lineStyle()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:lineTo"><apiName>lineTo</apiName><shortdesc>
     Рисует линию с использованием текущего стиля линии от текущего положения инструмента рисования до точки с координатами (x, y); затем текущим положением становится точка (x, y).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Координата x позиции инструмента рисования.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Координата y позиции инструмента рисования. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Рисует линию с использованием текущего стиля линии от текущего положения инструмента рисования до точки с координатами (x, y); затем текущим положением становится точка (x, y). Если в экранном объекте, в котором выполняется отрисовка, есть содержимое, созданное с помощью инструментов рисования Flash, то вызовы метода <codeph>lineTo()</codeph> осуществляются под содержимым. Если вызвать <codeph>lineTo()</codeph> перед вызовом метода moveTo(), то текущим положением инструмента рисования по умолчанию становится точка с координатами (0, 0). Если отсутствует один из параметров, этот метод использовать не удастся, и текущее положение инструмента рисования остается без изменений. Координаты являются координатами в виде данных, а не экранных координат. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/lineTo()"><linktext>flash.display.Graphics.lineTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:localToData"><apiName>localToData</apiName><shortdesc>
      
      
      Преобразовывает экранную координату в кортеж значений данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Кортеж значений данных.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Преобразуемый объект Point.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      Преобразовывает экранную координату в кортеж значений данных. Вызов этой функции необходим для определения значений данных, представляемых определенной точкой на экране.
      <p>Некоторые типы диаграмм определяют способ выполнения преобразования. Точка должна быть относительной для пространства координат диаграммы.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
     
      Вызывается при отображении изменений одной или нескольких связанных осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     
      Вызывается при отображении изменений одной или нескольких связанных осей. Элемент DataTransform, назначенный этому объекту ChartElement, выполнит вызов данного метода при изменении любой из представляемых им осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:moveTo"><apiName>moveTo</apiName><shortdesc>
     Перемещает текущее положение инструмента рисования в точку с координатами (x, y).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="any"/><apiDesc>Координата x позиции инструмента рисования.
     
     </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="any"/><apiDesc>Координата y позиции инструмента рисования. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Перемещает текущее положение инструмента рисования в точку с координатами (x, y). Если отсутствует один из параметров, этот метод использовать не удастся, и текущее положение инструмента рисования остается без изменений. Координаты, передаваемые в этот метод, являются координатами в виде данных диаграммы, а не экранных координат.
     
     </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.display.xml#Graphics/moveTo()"><linktext>flash.display.Graphics.moveTo()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeAllChildren"><apiName>removeAllChildren</apiName><shortdesc>
     Удаляет все нижестоящие элементы данных холста (экземпляры DisplayObject).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
     Удаляет все нижестоящие элементы данных холста (экземпляры DisplayObject).
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeChildAt"><apiName>removeChildAt</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:removeChild"><apiName>removeChild</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого field равно NaN.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов. 
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Свойство <codeph>field</codeph> для тестирования.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого <codeph>field</codeph> равно <codeph>NaN</codeph>. Производные классы могут вызвать этот метод из своей реализации updateFilter() для удаления любого элемента ChartItem, отфильтрованного осями.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:updateDataChild"><apiName>updateDataChild</apiName><shortdesc>
     Обновляет положение любого нижестоящего элемента данными текущего холста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>    Экранный объект, который необходимо обновить.
     </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>     Левая координата по оси X нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>      Верхняя координата по оси Y нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>    Правая координата по оси X нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>   Нижняя координата по оси Y нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>hCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя координата по оси X нижестоящего элемента в координатах данных.
     </apiDesc></apiParam><apiParam><apiItemName>vCenter</apiItemName><apiType value="any"/><apiData>unknown</apiData><apiDesc>  Средняя координата по оси Y нижестоящего элемента в координатах данных.
     
     <p>Например:
     <pre>
          var lbl:Label = new Label();
          lbl.text = "Last Month";
          canvas.addChild(lbl);
          canvas.updateDataChild(lbl,"Feb",200);
     </pre>
     </p>
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Обновляет положение любого нижестоящего элемента данными текущего холста.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Вызывается, когда представляемые холстом основные данные необходимо отфильтровать согласно диапазонам, представляемым осями связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, когда представляемые холстом основные данные необходимо отфильтровать согласно диапазонам, представляемым осями связанного преобразования данных. Это может произойти по причине изменения основных данных или ввиду того, что был изменен диапазон связанных осей. При реализации пользовательского типа холста необходимо переопределить этот метод и отфильтровать все внешние данные с использованием метода <codeph>filterCache()</codeph> осей, управляемых с помощью связанного преобразования данных. Метод <codeph>filterCache()</codeph> обеспечивает преобразование всех значений, находящихся вне диапазона, в значения <codeph>NaN</codeph>. Необходимо убедиться в том, что метод <codeph>super.updateFilter()</codeph> был вызван в подклассе. Как правило, непосредственный вызов данного метода не требуется. При необходимости удостовериться в том, что данные были отфильтрованы в этой точке, вызовите метод <codeph>validateTransform()</codeph> класса CartesianDataCanvas. Как правило, в случае необходимости можно предположить, что методы <codeph>updateData()</codeph> и <codeph>updateMapping()</codeph> были вызваны перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:validateData"><apiName>validateData</apiName><shortdesc>
      При необходимости вызывает методы холста updateMapping() и updateFilter().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      При необходимости вызывает методы холста <codeph>updateMapping()</codeph> и <codeph>updateFilter()</codeph>. При необходимости этот метод вызывается холстом автоматически из метода <codeph>commitProperties()</codeph>, но полученный холст может вызвать его явным образом, если генерируемые значения необходимы в определенный период времени. Загрузка и отображение данных относительно осей предназначены для принятия данных осями в любое время. Этот метод безопасно вызывать явным образом в любой точке.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianDataCanvas:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      При необходимости вызывает метод холста updateTransform().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Возвращает <codeph>true</codeph> при вызове <codeph>updateTransform()</codeph>. В противном случае <codeph>false</codeph>.
     
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      При необходимости вызывает метод холста <codeph>updateTransform()</codeph>. При необходимости этот метод автоматически вызывается холстом в ходе метода <codeph>commitProperties()</codeph>, но полученный холст может вызвать его явно, если генерируемые значения необходимы в явное время. Фильтрация и преобразование данных используют определенные значения, вычисляемые осями, которые могут в свою очередь зависеть от данных, отображаемых в диаграмме. Вызов этой функции в неверное время может привести к выполнению дополнительной работы, если значения обновляются.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:dataChildren:get"><apiName>dataChildren</apiName><shortdesc>
     Массив нижестоящих объектов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
     Массив нижестоящих объектов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X. Используйте класс LinearAxis или класс CategoryAxis для установки свойств горизонтальной оси как нижестоящего тега в MXML или создайте объект LinearAxis или объект CategoryAxis в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:includeInRanges:get"><apiName>includeInRanges</apiName><shortdesc>
     При значении true вычисленный диапазон диаграммы задействован этим холстом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     При значении <codeph>true</codeph> вычисленный диапазон диаграммы задействован этим холстом.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y. Используйте класс LinearAxis или класс CategoryAxis для установки свойств вертикальной оси как нижестоящего тега в MXML или создайте объект LinearAxis или объект CategoryAxis в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianDataCanvas:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Объект DataTransform, с которым связан элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Объект DataTransform, с которым связан элемент. Объект DataTransform представляет связь между набором элементов и набором объектов оси, используемых для преобразования тех элементов из области данных в координаты экрана и обратно. Элемент диаграммы использует связанный объект DataTransform для вычисления способа визуализации его данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:IAxis"><apiName>IAxis</apiName><shortdesc>
  Класс IAxis является абстрактным интерфейсом для определения свойств метки, делений и позиционирования данных для оси диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Класс IAxis является абстрактным интерфейсом для определения свойств метки, делений и позиционирования данных для оси диаграммы.
 
  <p>Классы реализуют данный интерфейс для предоставления функции определения диапазона.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:dataChanged"><apiName>dataChanged</apiName><shortdesc> 
      Инициирует события, информирующие объект диапазона о времени изменения данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
      Инициирует события, информирующие объект диапазона о времени изменения данных диаграммы.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:filterCache"><apiName>filterCache</apiName><shortdesc>
      Отфильтровывает набор значений произвольного типа до набора чисел, которые могут быть отображены.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно отфильтрованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredString</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны быть сохранены отфильтрованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отфильтровывает набор значений произвольного типа до набора чисел, которые могут быть отображены.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:formatForScreen"><apiName>formatForScreen</apiName><shortdesc>
      Форматирует значения для отображения в элементах DataTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Текст DataTip.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Значение, подлежащее преобразованию в строку. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Форматирует значения для отображения в элементах DataTip. Возвращает строку, доступную для чтения пользователем.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:getLabelEstimate"><apiName>getLabelEstimate</apiName><shortdesc>
      Определяет диапазон для оценки того, какими должны быть метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
      Определяет диапазон для оценки того, какими должны быть метки оси. Ось практически сразу вызывает метод <codeph>getLabels()</codeph> для получения фактических значений. Ось использует оцененные значения для регулирования полей диаграммы. Таким образом, любое различие между оцененными метками и фактическими метками (возвращаются из метода <codeph>getLabels()</codeph>) приводит к масштабированию меток под фактический размер.
     
      <p>Для оси необходим только возврат минимальных и максимальных меток при возвращении оценки. Если набор меток является статическим, то вне зависимости от размера оси, визуализированной на экране, ось может возвратить весь набор меток из этой функции и отметить оценку как точную.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:getLabels"><apiName>getLabels</apiName><shortdesc>
      Получает текст визуализированных меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>minimumAxisLength</apiItemName><apiType value="Number"/><apiDesc>Минимальная длина оси (в пикселях). Длина оси может превосходить это значение, но не может быть меньше него.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает текст визуализированных меток. При вызове этого метода программой Flex минимальная длина метки уже определена осью.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:invertTransform"><apiName>invertTransform</apiName><shortdesc>
      Сопоставляет положение по оси обратно с числовым значением данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект, содержащий преобразованное значение.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Граница оси. Этот параметр должен иметь значение от 0 до 1, при этом 0 соответствует минимальной границе оси, а 1 – максимальной.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Сопоставляет положение по оси обратно с числовым значением данных.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:mapCache"><apiName>mapCache</apiName><shortdesc>
      Преобразует набор значений произвольного типа в набор чисел, которые могут быть преобразованы в экранные координаты.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где преобразованные значения должны быть сохранены.
     
      </apiDesc></apiParam><apiParam><apiItemName>indexValues</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Этот параметр имеет значение <codeph>true</codeph>, если отображаемые значения являются индексными значениями, и <codeph>false</codeph>, если они являются естественными значениями данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Преобразует набор значений произвольного типа в набор чисел, которые могут быть преобразованы в экранные координаты.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:preferDropLabels"><apiName>preferDropLabels</apiName><shortdesc> 
      Определяет поведение оси при наличии перекрывающихся меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Значение <codeph>true</codeph>, если метки могут быть пропущены без потери данных; в противном случае задается значение <codeph>false</codeph>. 
      
      </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc> 
      Определяет поведение оси при наличии перекрывающихся меток. Как правило, числовые диапазоны возвращают <codeph>true</codeph>, в то время как дискретные диапазоны на основе значения не возвращают это значение. Это свойство можно переопределить путем установки его непосредственно на оси.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc>
      Вызывается, если AxisRenderer не может выполнить чистую визуализацию меток без наложения и если требуется сокращение набора меток с помощью объекта Axis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Новый набор меток, используемый для разрешения проблемы наложения путем уменьшения количества меток.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Начало интервала, где происходит наложение меток.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Конец интервала, в котором происходит наложение меток.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается, если AxisRenderer не может выполнить чистую визуализацию меток без наложения и если требуется сокращение набора меток с помощью объекта Axis. Методу передаются две перекрывающиеся метки.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:registerDataTransform"><apiName>registerDataTransform</apiName><shortdesc>
      Каждое свойство DataTransform, использующее ось, регистрирует себя вместе с этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>Регистрируемый элемент DataTransform.
     
      </apiDesc></apiParam><apiParam><apiItemName>dimensionName</apiItemName><apiType value="String"/><apiDesc>Имя измерения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Каждое свойство DataTransform, использующее ось, регистрирует себя вместе с этой осью. Ось отвечает за передачу информации преобразования при изменении его релевантных значений. Также она выполняет запрос значений из преобразования при необходимости автоматического создания минимальных и максимальных значений.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:transformCache"><apiName>transformCache</apiName><shortdesc>
      Преобразует набор значений из области данных в область экрана.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются отображаемые значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащее предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны сохраняться преобразованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Преобразует набор значений из области данных в область экрана.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:unregisterDataTransform"><apiName>unregisterDataTransform</apiName><shortdesc>
      Каждое свойство DataTransform, использующее ось, регистрирует себя вместе с этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transform</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataTransform</apiOperationClassifier><apiDesc>DataTransform, для которого отменяется регистрация.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Каждое свойство DataTransform, использующее ось, регистрирует себя вместе с этой осью. Ось отвечает за передачу информации преобразования при изменении его релевантных значений. Также она выполняет запрос значений из преобразования при необходимости автоматического создания минимальных и максимальных значений.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:update"><apiName>update</apiName><shortdesc>
      Обновляет диаграмму.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обновляет диаграмму. Можно вызвать несколько раз за цикл. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:baseline:get"><apiName>baseline</apiName><shortdesc>
      Положение базовой линии оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Положение базовой линии оси. Некоторые серии, например ColumnSeries или AreaSeries, используют это значение для определения основания заполненной области, если не указано минимальное значение.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:displayName:get"><apiName>displayName</apiName><shortdesc> 
      Имя оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc> 
      Имя оси. Если оно установлено, Flex использует это имя для форматирования элементов управления DataTip.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:title:get"><apiName>title</apiName><shortdesc>
      Текст заголовка, отображаемый вдоль оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Текст заголовка, отображаемый вдоль оси.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:unitSize:get"><apiName>unitSize</apiName><shortdesc>
      Размер одной единицы данных, как представлено этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Размер одной единицы данных, как представлено этой осью. Это значение используется различными типами серии при выполнении визуализации. Например, класс ColumnSeries использует это значение для определения способа визуализации широких столбцов. Разные типы осей возвращают разные значения, иногда зависящие от представляемых данных. Например, класс DateTimeAxis может возвращать число миллисекунд за день или год в зависимости от данных, визуализация которых выполнена в диаграмме. Поскольку это значение зависит от сбора представляемых данных, пользовательская серия не предполагает, что это значение является точным в своих методах <codeph>updateData()</codeph> или <codeph>updateMapping()</codeph>. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:IAxis:mx.charts.chartClasses:IAxis:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Поставщик данных, присвоенный диаграмме с вложениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Поставщик данных, присвоенный диаграмме с вложениями. Типы осей на базе данных поставщика могут выбрать наследование поставщика данных, связанного с диаграммой с вложением. При распределении оси по нескольким диаграммам значением этого свойства является <codeph>undefined</codeph> (наиболее вероятно, что это будет последний поставщик данных, назначенный одной из связанных диаграмм).
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:PolarChart"><apiName>PolarChart</apiName><shortdesc>
  Элемент управления PolarChart служит базовым классом для циклических диаграмм на базе полярных координат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления PolarChart служит базовым классом для циклических диаграмм на базе полярных координат.
  
  <p>Минимальный размер диаграммы – 20x20 пикселей. </p>
  <p>Максимальный размер диаграммы не ограничен. </p>
  <p>Предпочтительный размер диаграммы – 400x400 пикселей. </p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.chartClasses.xml#ChartBase"><linktext>mx.charts.chartClasses.ChartBase</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:PolarChart:PolarChart"><apiName>PolarChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:PolarChart:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      
      Получает первый элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление, в котором необходимо вернуть первый элемент. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает первый элемент диаграммы относительно осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      
      Получает последний элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата последнего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает последний элемент диаграммы относительно осей.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата ближайшего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата предыдущего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:PolarChart:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:PolarChart:angularAxis:get"><apiName>angularAxis</apiName><shortdesc>
      Объект оси, используемый для отображения значений данных под углом в диапазоне от 0 до 2 PI.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Объект оси, используемый для отображения значений данных под углом в диапазоне от 0 до 2 PI. По умолчанию это линейная ось, для свойства <codeph>autoAdjust</codeph> которой установлено значение <codeph>false</codeph>. Поэтому данные равномерно отображаются вокруг диаграммы.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      
      Область диаграммы, используемая для отображения данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      Область диаграммы, используемая для отображения данных. Этот прямоугольник исключает область, используемую для средников, линий оси и меток заполнения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:radialAxis:get"><apiName>radialAxis</apiName><shortdesc>
      Объект оси, используемый для преобразования значений данных в радиальное расстояние от центра до внешней границы диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Объект оси, используемый для преобразования значений данных в радиальное расстояние от центра до внешней границы диаграммы. По умолчанию это линейная ось, для свойства <codeph>autoAdjust</codeph> которой установлено значение <codeph>false</codeph>. Таким образом, значения данных равномерно преобразуются из области внутри диаграммы в область за ее пределами. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:PolarChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:CartesianChart"><apiName>CartesianChart</apiName><shortdesc>
  Класс CartesianChart является базовым классом для общих типов диаграмм.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style arrayType="String" inherit="no" name="verticalAxisStyleNames" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Array">
<description>
  Массив селекторов класса, определяющий свойства стиля для вертикальных осей.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="String" inherit="no" name="horizontalAxisStyleNames" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Array">
<description>
  Массив селекторов класса, определяющий свойства стиля для горизонтальных осей.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterTop" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Размер региона в пикселях от верхней части области данных диаграммы до верхней части области элемента управления диаграммы.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterRight" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Размер региона в пикселях от правой стороны области данных диаграммы до внешней области элемента управления диаграммы.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterLeft" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Размер региона в пикселях от левой стороны области данных диаграммы до левой стороны области элемента управления диаграммы.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="gutterBottom" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Размер региона в пикселях от нижней части области данных диаграммы до нижней части области элемента управления диаграммы.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="gridLinesStyleName" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Селектор класса, определяющий свойства стиля для линий сетки по умолчанию. При явной установке свойства <codeph>backgroundElements</codeph> в диаграмме это значение игнорируется.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="axisTitleStyleName" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Имя селектора класса CSS используется при форматировании заголовков осей.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов FlashType. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элемента LegendItem по умолчанию используется значение <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>По умолчанию применяется значение <codeph>advanced</codeph>, разрешающее применение средства визуализации FlashType при использовании встроенного шрифта FlashType. Значение <codeph>normal</codeph> используется для отключения средства визуализации FlashType.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts.chartClasses:CartesianChart" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:CartesianChart&gt;</code> tag inherits all the
  properties of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CartesianChart
    <strong>Properties</strong>
    computedGutters="<i>No default</i>"
    dataRegion="<i>Rectangle; no default</i>"
    horizontalAxis="<i>Axis; no default</i>"
    horizontalAxisRatio=".33"
    horizontalAxisRenderers="<i>Array; no default</i>"
    selectedChartItems="<i>Array; no default</i>"
    verticalAxis="<i>Axis; no default</i>"
    verticalAxisRatio=".33"
    verticalAxisRenderers="<i>Array; no default</i>"
   
    <strong>Styles</strong>  
    axisTitleStyleName="<i>Style; no default</i>"
    gridLinesStyleName="<i>Style; no default</i>"
    gutterBottom="<i>No default</i>"
    gutterLeft="<i>No default</i>"
    gutterRight="<i>No default</i>"
    gutterTop="<i>No default</i>"
    horizontalAxisStyleNames=<i>Array; no default</i>"
    verticalAxisStyleNames = <i>Array; no default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CartesianChart является базовым классом для общих типов диаграмм. CartesianChart определяет поведение базовой структуры стандартных прямоугольных двумерных диаграмм.
   </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#CategoryAxis"><linktext>mx.charts.CategoryAxis</linktext></link><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link><link href="mx.charts.chartClasses.xml#ChartBase"><linktext>mx.charts.chartClasses.ChartBase</linktext></link></related-links><apiConstructor id="mx.charts.chartClasses:CartesianChart:CartesianChart"><apiName>CartesianChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:CartesianChart:getFirstItem"><apiName>getFirstItem</apiName><shortdesc>
      
      Получает первый элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление, в котором необходимо вернуть первый элемент. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает первый элемент диаграммы относительно осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getLastItem"><apiName>getLastItem</apiName><shortdesc>
      
      Получает последний элемент диаграммы относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата последнего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает последний элемент диаграммы относительно осей.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getNextItem"><apiName>getNextItem</apiName><shortdesc>
      
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата ближайшего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает элемент диаграммы рядом с текущим элементом диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:getPreviousItem"><apiName>getPreviousItem</apiName><shortdesc>
      
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Соответствующий объект ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiDesc>Направление возврата предыдущего элемента. Возможны следующие значения: <codeph>ChartBase.NAVIGATE_HORIZONTAL</codeph> и <codeph>ChartBase.NAVIGATE_VERTICAL</codeph>.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает элемент диаграммы, предшествующий текущему элементу диаграммы в фокусе относительно осей. При отсутствии текущего выбора элементов диаграммы данный метод вернет первый элемент первой серии.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:CartesianChart:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxisRatio"><apiName>horizontalAxisRatio</apiName><shortdesc>
      Определяет ограничение по высоте для горизонтальной оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0.33</apiData><apiType value="Number"/><apiDefaultValue>0.33.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет ограничение по высоте для горизонтальной оси. Ограничением является ширина оси, умноженная на этот коэффициент.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxisRatio"><apiName>verticalAxisRatio</apiName><shortdesc>
      Определяет ограничение по ширине для вертикальной оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0.33</apiData><apiType value="Number"/><apiDefaultValue>0.33.
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет ограничение по ширине для вертикальной оси. Ограничением является ширина оси, умноженная на этот коэффициент.
           </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:computedGutters:get"><apiName>computedGutters</apiName><shortdesc>
      Текущий вычисленный размер средников CartesianChart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      Текущий вычисленный размер средников CartesianChart. Эти средники представляют область между областью заполнения и областью данных диаграммы, где выполняется визуализация заголовков и осей. По умолчанию средники вычисляются динамически. Можно установить явные значения через стили средников. Средники вычисляются для соответствия любым изменениям диаграммы при проверке LayoutManager.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:protected:dataRegion:get"><apiName>dataRegion</apiName><shortdesc>
      
      Область диаграммы, используемая для отображения данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc>
      
      Область диаграммы, используемая для отображения данных. Этот прямоугольник исключает область, используемую для средников, линий оси и меток заполнения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxisRenderers:get"><apiName>horizontalAxisRenderers</apiName><shortdesc>
      Указывает, как данные появляются на оси х диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Указывает, как данные появляются на оси х диаграммы. Класс AxisRenderer используется для определения свойств для элемента horizontalAxisRenderer в качестве нижестоящего тега в MXML, либо для создания объекта AxisRenderer в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:horizontalAxis:get"><apiName>horizontalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для элементов по оси X. Для установки свойств horizontalAxis в качестве нижестоящего тега в MXML или создания объекта LinearAxis или CategoryAxis в ActionScript используется класс LinearAxis или класс CategoryAxis.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:selectedChartItems:get"><apiName>selectedChartItems</apiName><shortdesc>
      Массив выбранных объектов ChartItem в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив выбранных объектов ChartItem в диаграмме. Он включает в себя выбранные объекты ChartItem во всех сериях диаграммы.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxisRenderers:get"><apiName>verticalAxisRenderers</apiName><shortdesc>
      Указывает, как данные появляются на оси y диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Указывает, как данные появляются на оси y диаграммы. Класс AxisRenderer используется для установки свойств для элемента verticalAxisRenderer в качестве нижестоящего тега в MXML, либо для создания объекта AxisRenderer в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:verticalAxis:get"><apiName>verticalAxis</apiName><shortdesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Определяет метки, вспомогательные деления и положение данных для событий на оси Y. Используйте класс LinearAxis или класс CategoryAxis для установки свойств горизонтальной оси как нижестоящего тега в MXML или создайте объект LinearAxis или объект CategoryAxis в ActionScript.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:CartesianChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:Series"><apiName>Series</apiName><shortdesc>
  Класс Series является базовым классом для классов, позволяющих указывать серию данных для элемента управления диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><effects><effect event="showData" name="showDataEffect" owner="mx.charts.chartClasses:Series">
<description>
  Определяет эффект, который использует Flex при перемещении текущих данных в конечную позицию на экране.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect><effect event="hideData" name="hideDataEffect" owner="mx.charts.chartClasses:Series">
<description>
  Определяет эффект, который использует Flex при скрытии текущих данных в представлении.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс Series является базовым классом для классов, позволяющих указывать серию данных для элемента управления диаграммы. Подклассы класса Series используются со связанным элементом управления диаграммы. Класс Series используется для указания узора заливки и характеристики штрихов для элементов диаграммы, связанных с серией данных. 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:Series:Series"><apiName>Series</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:Series:beginInterpolation"><apiName>beginInterpolation</apiName><shortdesc>
      Вызывается эффектом SeriesInterpolate для инициирования эффекта интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Данные, необходимые в серии для осуществления интерполяции.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>sourceRenderData</apiItemName><apiType value="Object"/><apiDesc>Исходные данные серии для проведения интерполяции.
     
      </apiDesc></apiParam><apiParam><apiItemName>destRenderData</apiItemName><apiType value="Object"/><apiDesc>Целевые данные серии для проведения интерполяции.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается эффектом SeriesInterpolate для инициирования эффекта интерполяции. Эффект обеспечивает передачу исходных и целевых данных серии для проведения интерполяции. Эффект обеспечивает неоднократную передачу возвращаемого значения этого метода в метод <codeph>interpolate()</codeph> серии для перехода к анимации для длительности эффекта. В серии выполняется расчет данных, необходимых для осуществления интерполяции, которые затем возвращаются в этом методе.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheDefaultValues"><apiName>cacheDefaultValues</apiName><shortdesc>
      Кэширует значения, сохраненные в свойстве measureName из исходных элементов dataProvider в свойстве fieldName элемента диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, если значение свойства <codeph>measureName</codeph> является пустой строкой или равно null; в противном случае – <codeph>true</codeph>.     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Имя свойства элемента диаграммы, значение которого должно быть установлено значением из элемента dataProvider в зависимости от свойства <codeph>fieldName</codeph>. Например, свойством <codeph>measureName</codeph> могут быть свойства xValue, yValue, xNumber, yNumber и другие свойства, представленные в виде свойств элемента диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Метка (в элементе поставщика данных), значение которой должно использоваться для установки свойства <codeph>measureName</codeph> элемента диаграммы. Например, если поставщик данных имеет элемент <codeph>{Country:US, medals:10}</codeph>, значение <codeph>fieldName</codeph> может равняться Country или medals.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Кэширует значения, сохраненные в свойстве <codeph>measureName</codeph> из исходных элементов dataProvider в свойстве <codeph>fieldName</codeph> элемента диаграммы. Если значением свойства <codeph>categoryField</codeph> является <codeph>null</codeph> или пустая строка, этот метод предполагает, что исходные элементы поставщика данных являются необработанными значениями и кэширует их. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheIndexValues"><apiName>cacheIndexValues</apiName><shortdesc>
      Кэширует значения, сохраненные в свойстве measureName из исходных элементов dataProvider в свойстве fieldName элемента диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, если значение свойства <codeph>measureName</codeph> является пустой строкой или равно null; в противном случае – <codeph>true</codeph>.     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Имя свойства элемента диаграммы, значение которого должно быть установлено значением из элемента dataProvider в зависимости от свойства <codeph>fieldName</codeph>. Например, свойством <codeph>measureName</codeph> могут быть свойства xValue, yValue, xNumber, yNumber и другие свойства, представленные в виде свойств элемента диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Метка (в элементе поставщика данных), значение которой должно использоваться для установки свойства <codeph>measureName</codeph> элемента диаграммы. Например, если поставщик данных имеет элемент <codeph>{Country:US, medals:10}</codeph>, значение <codeph>fieldName</codeph> может равняться Country или medals.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Кэширует значения, сохраненные в свойстве <codeph>measureName</codeph> из исходных элементов dataProvider в свойстве <codeph>fieldName</codeph> элемента диаграммы. Если свойством <codeph>measureName</codeph>является<codeph>null</codeph> или пустая строка, этот метод сохраняет индекс элементов в свойстве <codeph>fieldName</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:cacheNamedValues"><apiName>cacheNamedValues</apiName><shortdesc>
      Кэширует значения, сохраненные в свойстве measureName из исходных элементов dataProvider в свойстве fieldName элемента диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, если значение свойства <codeph>measureName</codeph> является пустой строкой или равно null; в противном случае – <codeph>true</codeph>.     
     
     </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Имя свойства элемента диаграммы, значение которого должно быть установлено значением из элемента dataProvider в зависимости от свойства <codeph>fieldName</codeph>. Например, свойством <codeph>measureName</codeph> могут быть свойства xValue, yValue, xNumber, yNumber и другие свойства, представленные в виде свойств элемента диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>fieldName</apiItemName><apiType value="String"/><apiDesc>Метка (в элементе поставщика данных), значение которой должно использоваться для установки свойства <codeph>measureName</codeph> элемента диаграммы. Например, если поставщик данных имеет элемент <codeph>{Country:US, medals:10}</codeph>, значение <codeph>fieldName</codeph> может равняться Country или medals.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Кэширует значения, сохраненные в свойстве <codeph>measureName</codeph> из исходных элементов dataProvider в свойстве <codeph>fieldName</codeph> элемента диаграммы.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:claimStyles"><apiName>claimStyles</apiName><shortdesc conref="mx.charts.chartClasses.IChartElement#claimStyles()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="uint"/><apiDesc>Новое значение для <codeph>firstAvailable</codeph> после запроса любых стилей (например, <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Массив запрашиваемых стилей.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Первый запрашиваемый селектор стиля в массиве.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IChartElement#claimStyles()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:defaultFilterFunction"><apiName>defaultFilterFunction</apiName><shortdesc>
      Используется при отсутствии пользовательских функций, установленных в качестве filterFunction для серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Массив объектов. 
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов. 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Используется при отсутствии пользовательских функций, установленных в качестве filterFunction для серии. Отдельные серии должны выполнить перезапись.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Обработчик события dragStart по умолчанию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="mx.events:DragEvent"/><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик события <codeph>dragStart</codeph> по умолчанию.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:endInterpolation"><apiName>endInterpolation</apiName><shortdesc>
      Вызывается эффектом SeriesInterpolate для завершения эффекта интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>interpolationData</apiItemName><apiType value="Object"/><apiDesc>Объект, определяющий исходные данные (для эффекта <codeph>show</codeph>), которые представляют состояние серии до применения эффекта, и данные адресата (для эффекта <codeph>hide</codeph>), которые представляют состояние серии после применения эффекта.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается эффектом SeriesInterpolate для завершения эффекта интерполяции. Этот метод используется эффектом для завершения интерполяции и сброса любого временного состояния, связанного с этим эффектом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:extractMinInterval"><apiName>extractMinInterval</apiName><shortdesc>
      Извлекает минимальное значение, максимальное значение и (при необходимости) минимальный интервал из массива объектов ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Имя свойства элемента диаграммы, значение которого должно быть установлено значением из элемента dataProvider в зависимости от свойства <codeph>fieldName</codeph>. Например, свойством <codeph>measureName</codeph> могут быть свойства xValue, yValue, xNumber, yNumber и другие свойства, представленные в виде свойств элемента диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataDescription</apiOperationClassifier><apiDesc>Объект DataDescription этой серии. Это свойство содержит ограниченные значения серии, например, <codeph>min</codeph>, <codeph>max</codeph> и <codeph>minInterval</codeph>.    
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Извлекает минимальное значение, максимальное значение и (при необходимости) минимальный интервал из массива объектов ChartItem. Полученные классы могут выполнять вызов этого метода из собственных реализаций метода <codeph>describeData()</codeph> для заполнения подробной информации структуры DataDescription.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:extractMinMax"><apiName>extractMinMax</apiName><shortdesc>
      Извлекает минимальное значение, максимальное значение и (при необходимости) минимальный интервал из массива объектов ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>measureName</apiItemName><apiType value="String"/><apiDesc>Имя свойства элемента диаграммы, значение которого должно быть установлено значением из элемента dataProvider в зависимости от свойства <codeph>fieldName</codeph>. Например, свойством <codeph>measureName</codeph> могут быть свойства xValue, yValue, xNumber, yNumber и другие свойства, представленные в виде свойств элемента диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiOperationClassifier>mx.charts.chartClasses:DataDescription</apiOperationClassifier><apiDesc>Объект DataDescription этой серии. Это свойство содержит ограниченные значения серии, например, <codeph>min</codeph>, <codeph>max</codeph> и <codeph>minInterval</codeph>.
      
      </apiDesc></apiParam><apiParam><apiItemName>calculateInterval</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет необходимость извлечения <codeph>minInterval</codeph> для DataDescription <codeph>desc</codeph> при использовании объектов ChartItem в свойстве <codeph>cache</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Извлекает минимальное значение, максимальное значение и (при необходимости) минимальный интервал из массива объектов ChartItem. Полученные классы могут выполнять вызов этого метода из собственных реализаций метода <codeph>describeData()</codeph> для заполнения подробной информации структуры DataDescription.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getAxis"><apiName>getAxis</apiName><shortdesc>
      Как правило, экземпляр оси извлекается непосредственно через свойство с именем (как для серии horizontalAxis, verticalAxis или radiusAxis на базе прямоугольной системы координат)</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Экземпляр оси для определенного измерения диаграммы.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Измерение, для которого требуется ось.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Как правило, экземпляр оси извлекается непосредственно через свойство с именем (как для серии <codeph>horizontalAxis</codeph>, <codeph>verticalAxis</codeph> или <codeph>radiusAxis</codeph> на базе прямоугольной системы координат)
      
      <p>Это низкоуровневое средство доступа.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getElementBounds"><apiName>getElementBounds</apiName><shortdesc>
      Обеспечивает заполнение свойств elementBounds, bounds и visibleBounds структуры renderData, создаваемой этими сериями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>renderData</apiItemName><apiType value="Object"/><apiDesc>Структура, созданная с помощью этой серии.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает заполнение свойств <codeph>elementBounds</codeph>, <codeph>bounds</codeph> и <codeph>visibleBounds</codeph> структуры renderData, создаваемой этими сериями. Данный метод вызывается классами эффектов для заполнения этих полей и их использования при реализации различных типов эффектов. Полученные классы должны реализовать этот метод для создания границ элементов серии только при запросе.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getItemsInRegion"><apiName>getItemsInRegion</apiName><shortdesc>
      Получает все элементы, расположенные в прямоугольной области серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов ChartItem, расположенных в указанной прямоугольной области.
     
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>r</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Объект Rectangle, определяющий область.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получает все элементы, расположенные в прямоугольной области серии. Вызовите эту функцию для определения элементов, расположенных в указанной прямоугольной области этой серии.
      <p>Отдельные серии определяют, находится ли элемент диаграммы в данной области. Точка должна быть расположена в области глобальных координат.</p>
      
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.geom.Rectangle.xml"><linktext>flash.geom.Rectangle</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:getMissingInterpolationValues"><apiName>getMissingInterpolationValues</apiName><shortdesc>
      Обеспечивает заполнение отсутствующих значений в структуре интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>sourceProps</apiItemName><apiType value="Object"/><apiDesc>Объект, содержащий исходные значения, интерполированные для определенного элемента. При выходе из этого метода все свойства данного объекта должны иметь значения, отличные от <codeph>NaN</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Массив интерполируемых элементов исходной диаграммы.
     
      </apiDesc></apiParam><apiParam><apiItemName>destProps</apiItemName><apiType value="Object"/><apiDesc>Объект, содержащий целевые значения, которые интерполируются для определенного элемента. При выходе из этого метода все свойства данного объекта должны иметь значения, отличные от значения <codeph>NaN</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>destCache</apiItemName><apiType value="Array"/><apiDesc>Массив интерполируемых элементов целевой диаграммы.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Индекс элемента, заполняемого в кэше.  
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiDesc>Данные, перенесенные серией в метод <codeph>initializeInterpolationData()</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает заполнение отсутствующих значений в структуре интерполяции. При вызове метода <codeph>initializeInterpolationData()</codeph> серией, он передается в массив исходных и целевых значений для интерполяции. Если любой из двух массивов является неполным, «соответствующие» значения заполнителя для интерполяции должны быть обеспечены серией. Способ определения значений заполнителя зависит от типа серии. Для предоставления этих значений заполнителя средства расширения серий должны обеспечить отмену данного метода.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:getRenderDataForTransition"><apiName>getRenderDataForTransition</apiName><shortdesc>
      Записывает начальное и конечное состояние серии для анимации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Копия данных, необходимых для представления данных серии.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Указывает необходимость запроса эффектом описания скрываемых данных или новых данных с возможностью отображения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Записывает начальное и конечное состояние серии для анимации. Как правило, этот метод вызывается классами эффектов.
     
      <p>При реализации пользовательского типа серии этот метод обычно не переопределяется. Вместо этого требуется переопределение средства доступа <codeph>renderData()</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:initializeInterpolationData"><apiName>initializeInterpolationData</apiName><shortdesc>
      Вспомогательный метод для реализации эффекта интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Структура данных, передаваемая в метод <codeph>applyInterpolation()</codeph>.
     
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>srcCache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, поля которых содержат начальные значения для интерполяции.
     
      </apiDesc></apiParam><apiParam><apiItemName>dstCache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, поля которых содержат конечные значения для интерполяции.
     
      </apiDesc></apiParam><apiParam><apiItemName>iProps</apiItemName><apiType value="Object"/><apiDesc>Хэш-таблица, ключи которой определяют имена свойств из кэша для интерполяции.
     
      </apiDesc></apiParam><apiParam><apiItemName>cacheType</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Класс для создания, содержащий дельта-значения, вычисленные для интерполяции. Как правило, значение <codeph>null</codeph>, при котором используется родовой объект.
     
      </apiDesc></apiParam><apiParam><apiItemName>customData</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, содержащий специфические для серии данные. Когда процесс инициализации обнаруживает отсутствующее значение, он выполняет вызов метода <codeph>getMissingInterpolationValues()</codeph> для заполнения отсутствующего значения. Эти пользовательские данные передаются в данный метод и могут использоваться для передачи с помощью произвольных параметров.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вспомогательный метод для реализации эффекта интерполяции. Пользовательская серия может вызвать этот метод из собственного метода <codeph>beginInterpolation()</codeph> с целью инициализации структуры данных для интерполяции произвольного набора числовых свойств в течение срока действия эффекта. Эту структуру данных можно передать в служебный метод <codeph>applyInterpolation()</codeph> для фактического изменения значений при вызове метода <codeph>interpolate()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:interpolate"><apiName>interpolate</apiName><shortdesc>
      Вызывается эффектом SeriesInterpolate для расширения эффекта интерполяции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>interpolationValues</apiItemName><apiType value="Array"/><apiDesc>Массив чисел, каждое в пределах от 0 до 1, где число с порядковым номером <i>n</i> указывает процент для способа, которым значение с порядковым номером <i>n</i> интерполируется в серии данных между начальными и конечными значениями.
     
      </apiDesc></apiParam><apiParam><apiItemName>interpolationData</apiItemName><apiType value="Object"/><apiDesc>Данные, возвращенные из метода <codeph>beginInterpolation()</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается эффектом SeriesInterpolate для расширения эффекта интерполяции. Эффект вызывает этот метод для каждого кадра до завершения интерполяции. Серия отвечает за использование параметров для выполнения визуализации интерполированных значений. По умолчанию серия предполагает, что свойство <codeph>interpolationData</codeph> является структурой данных, возвращаемой методом <codeph>initializeInterpolationData()</codeph>, и передает его в метод <codeph>applyInterpolation()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateData"><apiName>invalidateData</apiName><shortdesc>
      Обеспечивает передачу информации об изменении основных данных в поставщике данных для серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Если установлено значение <codeph>true</codeph>, этот метод инициирует вызовы методов обновления.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает передачу информации об изменении основных данных в поставщике данных для серии. Эта функция инициирует вызов методов <codeph>updateData()</codeph>, <codeph>updateMapping()</codeph>, <codeph>updateFilter()</codeph> и <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>. Если любому элементу диаграммы были присвоены какие-либо эффекты данных, этот метод также инициирует эффекты отображения и скрытия.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateFilter"><apiName>invalidateFilter</apiName><shortdesc>
      Обеспечивает передачу информации для серии о том, что фильтр данных по отношению к осям изменен и должен быть повторно вычислен.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Если установлено значение <codeph>true</codeph>, этот метод инициирует вызовы методов обновления.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает передачу информации для серии о том, что фильтр данных по отношению к осям изменен и должен быть повторно вычислен. Этот метод инициирует вызов методов <codeph>updateFilter()</codeph> и <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>. Если любому элементу диаграммы были присвоены какие-либо эффекты данных, этот метод также инициирует эффекты отображения и скрытия.
           
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateMapping"><apiName>invalidateMapping</apiName><shortdesc>
      Обеспечивает передачу информации для серии о том, что сопоставление данных с числовыми значениями было изменено и должно быть вычислено повторно.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Если установлено значение <codeph>true</codeph>, этот метод инициирует вызовы методов обновления.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает передачу информации для серии о том, что сопоставление данных с числовыми значениями было изменено и должно быть вычислено повторно. Вызов этой функции приведет к вызову методов <codeph>updateMapping()</codeph>, <codeph>updateFilter()</codeph> и <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>. Если любому элементу диаграммы были присвоены какие-либо эффекты данных, этот метод также инициирует эффекты отображения и скрытия.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateTransform"><apiName>invalidateTransform</apiName><shortdesc>
      Обеспечивает передачу информации для серии о том, что преобразование данных в координаты экрана изменено и должно быть повторно вычислено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invalid</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Если установлено значение <codeph>true</codeph>, этот метод инициирует вызовы методов обновления.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает передачу информации для серии о том, что преобразование данных в координаты экрана изменено и должно быть повторно вычислено. Эта функция инициирует вызов метода <codeph>updateTransform()</codeph> при следующем вызове метода <codeph>commitProperties()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:invalidateTransitions"><apiName>invalidateTransitions</apiName><shortdesc>
      Предоставляет для серии информацию о значительных изменениях, возникших в отображении данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Предоставляет для серии информацию о значительных изменениях, возникших в отображении данных. Это инициирует запуск эффектов ShowData и HideData.  
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:legendDataChanged"><apiName>legendDataChanged</apiName><shortdesc>
      Обновляет элементы легенды при изменении отображаемого имени серии в ходе передачи нового события LegendDataChanged.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обновляет элементы легенды при изменении отображаемого имени серии в ходе передачи нового события LegendDataChanged.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:setAxis"><apiName>setAxis</apiName><shortdesc>
      Присваивает экземпляр Axis определенному измерению диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Измерение диаграммы, которую требуется назначить для оси.
      
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier><apiDesc>Ось, назначаемая для измерения диаграммы.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Присваивает экземпляр Axis определенному измерению диаграммы. Экземпляр оси обычно устанавливается непосредственно через свойство с именем (как для серий, основанных на прямоугольной системе координат <codeph>horizontalAxis</codeph>, <codeph>verticalAxis</codeph> или <codeph>radiusAxis</codeph>).
      
      <p>Это низкоуровневое средство доступа.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:stripNaNs"><apiName>stripNaNs</apiName><shortdesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого field равно NaN.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив элементов диаграммы.
      
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Свойство поля, из которого требуется удалить элемент.
      
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Удаляет любой элемент из предоставленного кэша, свойство которого <codeph>field</codeph> равно <codeph>NaN</codeph>. Полученные классы могут выполнять вызов этого метода из собственных реализаций метода <codeph>updateFilter()</codeph> для удаления любых отфильтрованных осями объектов ChartItem.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:stylesInitialized"><apiName>stylesInitialized</apiName><shortdesc>
      Выполняет вызов методаlegendDataChanged().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Выполняет вызов метода<codeph>legendDataChanged()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateData"><apiName>updateData</apiName><shortdesc>
      Вызывается, если основные данные, представляемые в сериях, были изменены и должны быть заново загружены из поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, если основные данные, представляемые в сериях, были изменены и должны быть заново загружены из поставщика данных. При реализации пользовательских типов серий необходимо отменить этот метод и загрузить все данные, необходимые для отображения серий из резервного поставщика данных. Также следует убедиться в том, что в подклассе был вызван метод <codeph>super.updateData()</codeph>. Как правило, непосредственный вызов данного метода не осуществляется. Вместо этого для обеспечения гарантии того, что данные в заданной точке были обновлены, выполните вызов метода <codeph>validateData()</codeph> класса Series.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateFilter"><apiName>updateFilter</apiName><shortdesc>
      Вызывается, если основные данные, представляемые в серии, должны быть отфильтрованы в соответствии с диапазонами, представляемыми с помощью осей связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, если основные данные, представляемые в серии, должны быть отфильтрованы в соответствии с диапазонами, представляемыми с помощью осей связанного преобразования данных. Это может произойти по причине изменения основных данных или ввиду того, что был изменен диапазон связанных осей. При реализации пользовательского типа серии необходимо отменить этот метод и отфильтровать все внешние данные с использованием метода <codeph>filterCache()</codeph> осей, управляемых с помощью связанного преобразования данных. Метод <codeph>filterCache()</codeph> обеспечивает преобразование всех значений, находящихся вне диапазона, в значения <codeph>NaN</codeph>. Необходимо убедиться в том, что метод <codeph>super.updateFilter()</codeph> был вызван в подклассе. Как правило, непосредственный вызов данного метода не требуется. Вместо этого при необходимости удостовериться в том, что данные были отфильтрованы в заданной точке, вызовите метод <codeph>validateTransform()</codeph> класса Series. Как правило, в случае необходимости можно предположить, что методы <codeph>updateData()</codeph> и <codeph>updateMapping()</codeph> были вызваны перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateMapping"><apiName>updateMapping</apiName><shortdesc>
      Вызывается, если основные данные, представляемые в сериях, должны быть сопоставлены с числовыми представлениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, если основные данные, представляемые в сериях, должны быть сопоставлены с числовыми представлениями. Это может случиться по причине изменения основных данных или ввиду того, что оси, используемые для отображения серий, были соответствующим образом изменены. При реализации пользовательских серий необходимо отменить этот метод и преобразовать данные, представляемые в виде числовых значений, с использованием метода <codeph>mapCache()</codeph> для осей, управляемых с помощью связанного преобразования данных. Также необходимо убедиться в вызове метода <codeph>super.updateMapping()</codeph> для подкласса. Как правило, непосредственный вызов данного метода не требуется. Вместо этого для гарантии того, что данные в заданной точке были сопоставлены, вызовите метод <codeph>validateData()</codeph> класса Series. Как правило, при необходимости можно предположить, что метод <codeph>updateData()</codeph> был вызван непосредственно перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:updateTransform"><apiName>updateTransform</apiName><shortdesc>
      Вызывается, если основные данные, представляемые в сериях, должны быть преобразованы из данных в экранные значения с помощью осей связанного преобразования данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается, если основные данные, представляемые в сериях, должны быть преобразованы из данных в экранные значения с помощью осей связанного преобразования данных. Это может произойти по причине изменения основных данных, ввиду изменения диапазона связанных осей или размера области на экране. При реализации пользовательского типа серий необходимо отменить этот метод и выполнить преобразование данных с использованием метода <codeph>transformCache()</codeph> связанного преобразования данных. Следует убедиться в вызове метода <codeph>super.updateTransform()</codeph> в подклассе. Как правило, непосредственный вызов данного метода не требуется. Вместо этого при необходимости убедиться в том, что данные были отфильтрованы в заданной точке, вызовите метод <codeph>valiateTransform()</codeph> класса Series. Как правило, при необходимости можно предположить, что методы <codeph>updateData()</codeph>, <codeph>updateMapping()</codeph> и <codeph>updateFilter()</codeph> были вызваны непосредственно перед этим методом.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:validateData"><apiName>validateData</apiName><shortdesc>
      В случае необходимости выполняет вызов методов серии updateData() и updateMapping().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      В случае необходимости выполняет вызов методов серии <codeph>updateData()</codeph> и <codeph>updateMapping()</codeph>. В случае необходимости серия автоматически вызывает этот метод из метода <codeph>commitProperties()</codeph>, но производная серия может вызвать его явно, если создаваемые значения требуются в явное время. Загрузка и отображение данных относительно осей предназначены для принятия данных осями в любое время. Этот метод безопасно вызывать явным образом в любой точке.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:Series:protected:validateTransform"><apiName>validateTransform</apiName><shortdesc>
      В случае необходимости вызывает методы серии updateFilter() и updateTransform().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      В случае необходимости вызывает методы серии <codeph>updateFilter()</codeph> и <codeph>updateTransform()</codeph>. В случае необходимости серия автоматически вызывает этот метод при выполнении метода <codeph>commitProperties()</codeph>, однако полученная серия может вызвать его явно, если создаваемые значения требуются в явное время. Фильтрация и преобразование данных используют определенные значения, вычисляемые осями, которые могут в свою очередь зависеть от данных, отображаемых в диаграмме. Вызов этой функции в неверное время может привести к выполнению дополнительной работы, если значения обновляются.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:Series:dataFunction:get"><apiName>dataFunction</apiName><shortdesc>
     Указывает метод, возвращающий значение, которое используется для позиционирования текущего элемента диаграммы в серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     Указывает метод, возвращающий значение, которое используется для позиционирования текущего элемента диаграммы в серии. Если это свойство установлено, то возвращаемое значение пользовательской функции данных будет иметь приоритет над другими связанными свойствами, такими как <codeph>xField</codeph> и <codeph>yField</codeph> для AreaSeries, BarSeries, BubbleSeries, ColumnSeries, LineSeries и PlotSeries. Для BubbleSeries возвращаемое значение имеет приоритет над свойством<codeph>radiusField</codeph>. Для PieSeries возвращаемое значение имеет приоритет над свойством<codeph>field</codeph>.     
     
     <p>Пользовательское свойство <codeph>dataFunction</codeph> для серии имеет следующую подпись:
      
     <pre>
     <i>function_name</i> (series:Series, item:Object, fieldName:String):Object { ... }
     </pre>
     
     <codeph>series</codeph> является текущей серией, использующей <codeph>dataFunction</codeph>. <codeph>item</codeph> является элементом в поставщике данных. <codeph>fieldName</codeph> является полем в текущем элементе диаграммы для заполнения. Эта функция возвращает объект.
     </p>
     
     <p>Как правило, свойство <codeph>dataFunction</codeph> используется для доступа к полям в поставщике данных, которые не являются скалярными значениями, однако вложены в поставщике данных. Например, для следующих данных требуются функции данных для доступа к полям поставщика данных диаграммы:</p>
      
      <pre>
      {month: "Aug", close: {High:45.87,Low:12.2}, open:25.19}
      </pre>
      
     <p>Следующий пример возвращает значение из этого поставщика данных:</p>
       
     <pre>
     public function myDataFunction(series:Series, item:Object, fieldName:String):Object {
          if (fieldName == 'yValue')
              return(item.close.High);
          else if (fieldName == "xValue")
              return(item.month);
          else
              return null;
     }     
     </pre>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:dataTipItems:get"><apiName>dataTipItems</apiName><shortdesc>
      Массив элементов диаграммы, для которых требуется показать неинтерактивные всплывающие подсказки на диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив элементов диаграммы, для которых требуется показать неинтерактивные всплывающие подсказки на диаграмме.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:displayName:get"><apiName>displayName</apiName><shortdesc>
      Имя серии, отображаемое для пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Имя серии, отображаемое для пользователя. Это свойство используется для представления серии в видимых пользователю метках, например во всплывающих подсказках данных.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterDataValues:get"><apiName>filterDataValues</apiName><shortdesc>
      Если установлено filterFuction, то filterDataValues, и filterData игнорируются.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Если установлено <codeph>filterFuction</codeph>, <codeph>filterDataValues</codeph> и <codeph>filterData</codeph> игнорируются. Если свойство <codeph>filterDataValues</codeph> установлено на <codeph>none</codeph>, то в серии не будет выполняться фильтрация его данных перед отображением. Если <codeph>filterDataValues</codeph> установлено на <codeph>nulls</codeph>, то перед отображением в серии выполняется фильтрация таких данных как <codeph>null</codeph>, <codeph>undefined</codeph> или <codeph>NaN</codeph>. Если это свойство установлено на <codeph>outsideRange</codeph>, в серии выполняется фильтрация таких его данных как <codeph>null</codeph>, <codeph>undefined</codeph> или <codeph>NaN</codeph>, а также значений, находящихся за пределами диапазона осей диаграммы. Если известно, что все данные в серии являются допустимыми, можно установить значение <codeph>none</codeph> для повышения производительности.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterData:get"><apiName>filterData</apiName><shortdesc>
      Если установлены filterFuction или filterDataValues, filterData игнорируется.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Если установлены <codeph>filterFuction</codeph> или <codeph>filterDataValues</codeph>, <codeph>filterData</codeph> игнорируется. <codeph>true</codeph>, если серия фильтрует собственные данные перед отображением. Если серия выполняет визуализацию данных, которые содержат отсутствующие значения (например, <codeph>null</codeph>, <codeph>undefined</codeph> или <codeph>NaN</codeph>) или выполняет визуализацию значений за пределами диапазона осей диаграммы, необходимо установить это свойство в значение <codeph>true</codeph> (по умолчанию). Если известно, что все данные в серии являются допустимыми, можно установить значение <codeph>false</codeph> для повышения производительности.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:filterFunction:get"><apiName>filterFunction</apiName><shortdesc>
     Определяет метод, который возвращает массив элементов диаграммы в рядах для отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     Определяет метод, который возвращает массив элементов диаграммы в рядах для отображения. Если это свойство установлено, возвращаемое значение функции пользовательской фильтрации будет иметь приоритет над свойствами <codeph>fill</codeph> и <codeph>fills</codeph>. Однако если возвращается значение null, предпочтительными будут являться свойства <codeph>fills</codeph> и <codeph>fill</codeph> в указанном порядке.  
     
     <p>Пользовательская функция <codeph>fillFunction</codeph> имеет следующую подпись:
      
     <pre>
     <i>function_name</i> (cache:Array):Array { ... }
     </pre>
     
     <codeph>cache</codeph> является ссылкой на массив фильтруемых элементов диаграммы. Эта функция возвращает массив отображаемых элементов диаграммы. 
     </p>
      
     </apiDesc><example>
     <pre>
     public function myFilterFunction(cache:Array):Array {
          var filteredCache:Array=[];
          var n:int = cache.length;  
          for(var i:int = 0; i &lt; n; i++)
          {
              var item:ColumnSeriesItem = ColumnSeriesItem(cache[i]);
              if(item.yNumber > 0 &amp;&amp; item.yNumber &lt; 700)
              {
                  filteredCache.push(item);
              }
          }
          return filteredCache;
     }
     </pre>
     
     <p>
      Если определяется пользовательская функция фильтрации для серии диаграммы, и требуется отфильтровать значения null или значения, находящиеся за пределами диапазона осей, следует отфильтровать их вручную с помощью функции пользовательской фильтрации. <codeph>filterDataValues</codeph> или <codeph> filterData</codeph> использовать невозможно.
      </p>
      
      </example></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:interactive:get"><apiName>interactive</apiName><shortdesc>
      Определяет, появляются ли всплывающие подсказки данных на экране при использовании пользователями данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, появляются ли всплывающие подсказки данных на экране при использовании пользователями данных диаграммы. Установлено значение <codeph>false</codeph> для предотвращения отображения всплывающих подсказок серии или создания элементов HitData.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:items:get"><apiName>items</apiName><shortdesc>
      Получает все элементы, находящиеся в серии после фильтрации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Получает все элементы, находящиеся в серии после фильтрации.
      <p>Отдельные серии определяют список элементов, которые должны быть возвращены.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:legendData:get"><apiName>legendData</apiName><shortdesc>
      Массив экземпляров LegendData, описывающий элементы, которые должны отображаться в легенде, представляющей эту серию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив экземпляров LegendData, описывающий элементы, которые должны отображаться в легенде, представляющей эту серию. Полученные классы серии обеспечивают перезапись этого получателя и возвращают данные легенды, специфичные для их стилей и метода представления данных. Несмотря на то что большинство типов серии возвращают только один экземпляр LegendData, некоторые типы серий, например PieSeries и StackedSeries, позволяют возвращать несколько экземпляров, представляющих отдельные элементы массива или несколько способов отображения данных.   
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:protected:renderData:get"><apiName>renderData</apiName><shortdesc>
      Сохраняет информацию, необходимую для отображения этой серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Сохраняет информацию, необходимую для отображения этой серии.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectable:get"><apiName>selectable</apiName><shortdesc>
      Определяет возможность выбора серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет возможность выбора серии.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс выбранного элемента в поставщике данных серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс выбранного элемента в поставщике данных серии. При выборе нескольких элементов это свойство ссылается на последний выбранный элемент. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedIndices:get"><apiName>selectedIndices</apiName><shortdesc>
      Массив индексов выбранных элементов в поставщике данных серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив индексов выбранных элементов в поставщике данных серии.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Элемент диаграммы, выбранный в серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts:ChartItem</apiValueClassifier></apiValueDef><apiDesc>
      Элемент диаграммы, выбранный в серии. При выборе нескольких элементов это свойство ссылается на последний выбранный элемент. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:selectedItems:get"><apiName>selectedItems</apiName><shortdesc>
      Массив элементов диаграммы, выбранных в серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив элементов диаграммы, выбранных в серии.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:transitionRenderData:get"><apiName>transitionRenderData</apiName><shortdesc>
      Структура визуализации данных, переданная с помощью текущего перехода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Структура визуализации данных, переданная с помощью текущего перехода. При установлении эффекта серии для воспроизведения его на серии сначала выполняется сбор текущего состояния серии путем запроса данных визуализации. Переход изменяет данные визуализации для создания требуемого эффекта и передает структуру обратно в серию для отображения. Если свойство <codeph>transitionRenderData</codeph> не является значением <codeph>null</codeph>, серия использует содержимое для обновления его отображения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:Series:dataTransform:set"><apiName>dataTransform</apiName><shortdesc>
      
      Объект DataTransform, с которым связан элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      
      Объект DataTransform, с которым связан элемент. Объект DataTransform представляет связь между набором элементов и набором объектов оси, используемых для преобразования тех элементов из области данных в координаты экрана и обратно. Элемент диаграммы использует связанный объект DataTransform для вычисления способа визуализации его данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:GraphicsUtilities"><apiName>GraphicsUtilities</apiName><shortdesc>
  Ряд внутренних утилит визуализации графики, используемых различными классами диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ряд внутренних утилит визуализации графики, используемых различными классами диаграммы.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:colorFromFill"><apiName>colorFromFill</apiName><shortdesc>
	  Преобразует значение заливки в сплошной цвет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Значение цвета, представляющее заливку.
	  
	  </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>f</apiItemName><apiType value="Object"/><apiDesc>Объект Fill, из которого требуется извлечь цвет.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Преобразует значение заливки в сплошной цвет. Этот удобный метод выполняет вынос значения цвета из объекта Fill, наиболее близкого к заливке на экране.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:drawArc"><apiName>drawArc</apiName><shortdesc>
	  Обеспечивает отображение дуги в целевом объекте Graphics.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Объект Graphics, в котором требуется выполнить отображение.
	 </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Точка отсчета дуги по горизонтали.
	 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Точка отсчета дуги по вертикали.
	 </apiDesc></apiParam><apiParam><apiItemName>startAngle</apiItemName><apiType value="Number"/><apiDesc>Начальный угол дуги в радианах.
	 </apiDesc></apiParam><apiParam><apiItemName>arc</apiItemName><apiType value="Number"/><apiDesc>Амплитуда дуги в радианах.
	 </apiDesc></apiParam><apiParam><apiItemName>radius</apiItemName><apiType value="Number"/><apiDesc> Радиус дуги по горизонтали в пикселях
	 </apiDesc></apiParam><apiParam><apiItemName>yRadius</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Радиус дуги по вертикали в пикселях. Если не указан, то предполагается, что он равен радиусу
	 </apiDesc></apiParam><apiParam><apiItemName>continueFlag</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, должна ли подпрограмма переместить графическое перо в начало дуги перед отображением. Значение <codeph>true</codeph> устанавливается для продолжения отображения линии, которое уже находится в процессе выполнения.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Обеспечивает отображение дуги в целевом объекте Graphics.  
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:drawPolyLine"><apiName>drawPolyLine</apiName><shortdesc>
	  Выполняет отображение линии, связывающей точки данных с помощью одной из форм.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>    Объект Graphics, в котором требуется выполнить отображение.
	 </apiDesc></apiParam><apiParam><apiItemName>pts</apiItemName><apiType value="Array"/><apiDesc>  Массив точек данных, определяющих линию.
	 </apiDesc></apiParam><apiParam><apiItemName>start</apiItemName><apiType value="int"/><apiDesc>Индекс первой точки в массиве <codeph>pts</codeph> для использования при отображении линии.
	 </apiDesc></apiParam><apiParam><apiItemName>end</apiItemName><apiType value="int"/><apiDesc>  Индекс последней точки в массиве (не включительно) для использования при отображении линии.
	 </apiDesc></apiParam><apiParam><apiItemName>hProp</apiItemName><apiType value="String"/><apiDesc>Имя свойства в объектах, содержащихся в массиве <codeph>pts</codeph>, который определяет горизонтальное расположение точек на линии.
	 </apiDesc></apiParam><apiParam><apiItemName>vProp</apiItemName><apiType value="String"/><apiDesc>Имя свойства в объектах, содержащихся в массиве <codeph>pts</codeph>, который определяет вертикальное расположение точек на линии.
	 </apiDesc></apiParam><apiParam><apiItemName>stroke</apiItemName><apiType value="mx.graphics:IStroke"/><apiDesc>Штрих используется для отображения линии.
	 </apiDesc></apiParam><apiParam><apiItemName>form</apiItemName><apiType value="Object"/><apiDesc> Форма, с помощью которой требуется выполнить визуализацию линии. Допустимыми значениями являются segment, horizontal, vertical, step, reverseStep или curve. Эти формы подобны свойству класса LineSeries <codeph>form</codeph>.
	 </apiDesc></apiParam><apiParam><apiItemName>moveToStart</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Указывает, требуется ли сначала переместить перо в начало линии перед отображением. Требуется передача <codeph>false</codeph> с целью использования этой функции для продолжения отображения линии, находящегося в процессе выполнения.
 	  
 	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Выполняет отображение линии, связывающей точки данных с помощью одной из форм.  
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:fillFromStyle"><apiName>fillFromStyle</apiName><shortdesc>
	  Преобразовывает значение стиля в объект Fill.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Соответствующий объект IFill.
	  
	  </apiDesc><apiType value="mx.graphics:IFill"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="Object"/><apiDesc>Значение для преобразования в объект Fill.
	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Преобразовывает значение стиля в объект Fill. Этот метод удобен для преобразования значения, назначенного посредством стилей в объект Fill, который можно использовать для заливки области на экране. Если значение является числовым, эта функция преобразует его в соответствующий класс SolidColor.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:fillRect"><apiName>fillRect</apiName><shortdesc>
	  Необходимо выполнить заливку прямоугольника с помощью предоставленных объектов IFill и IStroke.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Объект Graphics, в котором требуется выполнить отображение.
	 </apiDesc></apiParam><apiParam><apiItemName>left</apiItemName><apiType value="Number"/><apiDesc>Левая часть прямоугольника для заливки.
	 </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="Number"/><apiDesc>Верхняя часть прямоугольника для заливки.
	 </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="Number"/><apiDesc>Правая часть прямоугольника для заливки.
	 </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="Number"/><apiDesc>Нижняя часть прямоугольника для заливки.
	 </apiDesc></apiParam><apiParam><apiItemName>fill</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект IFill, с помощью которого выполняется заливка прямоугольника. Для отображения прямоугольника без заливки необходимо установить параметр в значение null.
	 </apiDesc></apiParam><apiParam><apiItemName>ls</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект Stroke, с помощью которого выполняется отображение прямоугольника. Для отображения прямоугольника без штриха необходимо установить этот параметр в значение null.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Необходимо выполнить заливку прямоугольника с помощью предоставленных объектов IFill и IStroke. Эта служебная функция используется для заполнения предоставленного прямоугольника в объекте Graphics с предоставленными объектами Fill и Stroke. Если объект Stroke не предоставлен, выполняется заливка прямоугольника без границы. Если объект Fill не предоставлен, отображение прямоугольника выполняется без заливки.
	 
	 	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:GraphicsUtilities:setLineStyle"><apiName>setLineStyle</apiName><shortdesc>
	  Применяет значения в объекте Stroke к предоставленному объекту Graphics.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Объект Graphics, подлежащий изменению.
	 </apiDesc></apiParam><apiParam><apiItemName>ls</apiItemName><apiType value="mx.graphics:IStroke"/><apiDesc>Используемый экземпляр IStroke установлен в значение <codeph>null</codeph> для выполнения визуализации без объекта Stroke.
	  
	  </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Применяет значения в объекте Stroke к предоставленному объекту Graphics. Эта служебная функция применяет передаваемый объект Stroke или удаляет стиль линии предоставленного объекта Graphics при установке параметра <codeph>ls</codeph> на <codeph>null</codeph>.
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:DateRangeUtilities"><apiName>DateRangeUtilities</apiName><shortdesc>
 Ряд деактивированных утилит диапазона даты, используемых DateTimeAxis
  
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Ряд деактивированных утилит диапазона даты, используемых DateTimeAxis
  
  </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="mx.charts.chartClasses:IStackable2"><apiName>IStackable2</apiName><shortdesc>
  Интерфейс IStackable2 реализуется любой серией, помещаемой в стек.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IStackable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Интерфейс IStackable2 реализуется любой серией, помещаемой в стек. Для наборов стека (ColumnSet, BarSet, AreaSet) любые назначенные для них подчиненные серии стека должны реализовывать этот интерфейс, если они отображают отрицательные значения при нахождении в стеке.
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.charts.chartClasses:IStackable2:mx.charts.chartClasses:IStackable2:stackAll"><apiName>stackAll</apiName><shortdesc>
  Обеспечивает накопление серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект, представляющий максимальное и минимальное значения во вновь накопленной серии.	 
  
  </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stackedPosXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Содержит базовые значения, которые должны быть помещены серией в верхнюю область стека. Ключи словаря являются значениями X, а значения – положительными значениями X.
 
  </apiDesc></apiParam><apiParam><apiItemName>stackedNegXValueDictionary</apiItemName><apiType value="flash.utils:Dictionary"/><apiDesc>Содержит базовые значения, которые должны быть помещены серией в верхнюю область стека. Ключи словаря являются значениями X, а значения – отрицательными значениями Y.
  
  </apiDesc></apiParam><apiParam><apiItemName>previousElement</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IStackable2</apiOperationClassifier><apiDesc>Предыдущий элемент в накоплении. Если элемент, к примеру, имеет тот же самый тип, можно перейти к этому свойству во избежание дублирования работы при выполнении визуализации.
  
  </apiDesc></apiParam></apiOperationDef><apiDesc>
  Обеспечивает накопление серии. Как правило, метод <codeph>updateData()</codeph> реализуется серией для загрузки ее данных из поставщика данных. Однако накопленная серия обеспечивает выполнение специальных операций, поскольку ее значения не обязательно сохраняются в поставщике данных. Значениями является информация, сохраненная в поставщике данных, суммируемая со значениями, загружаемыми объектом в верхнюю часть стека.
  <p>Пользовательская серия должна обеспечивать реализацию метода <codeph>stack()</codeph> путем загрузки его данных из поставщика данных, их добавления к основным значениям, хранящимся в словаре, для получения реальных значений, которые должны быть отображены, и замены значений словаря на новые, суммируемые значения.</p>
  
  </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.charts.chartClasses:ChartElement"><apiName>ChartElement</apiName><shortdesc>
  Класс ChartElement является базовым классом для визуальных элементов диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IChartElement2</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:DualStyleObject</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ChartElement является базовым классом для визуальных элементов диаграммы.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:ChartElement:ChartElement"><apiName>ChartElement</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:ChartElement:addChildAt"><apiName>addChildAt</apiName><shortdesc>
     Добавляет экземпляр нижестоящего элемента DisplayObject к экземпляру DisplayObjectContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Экземпляр DisplayObject, передаваемый в параметр <codeph>child</codeph>.
     
     </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Экземпляр DisplayObject для добавления в качестве нижестоящего элемента экземпляра DisplayObjectContainer.
     
     </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Позиция индекса для добавления нижестоящего элемента. При указании занятой в настоящее время позиции индекса существующий в данной позиции дочерний объект и все вышестоящие позиции перемещаются по списку на одну позицию вверх. 
         
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     Добавляет экземпляр дочернего элемента DisplayObject к экземпляру DisplayObjectContainer. Дочерний элемент добавляется к указанной позиции индекса. Индекс 0 представляет собой заднюю (нижнюю) часть списка отображения для объекта DisplayObjectContainer.
     
     <p>При добавлении дочернего объекта, уже имеющего отличный от других контейнер объекта отображения в качестве родительского элемента, объект удаляется из списка дочерних элементов другого контейнера объекта отображения. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:addChild"><apiName>addChild</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее предыдущее состояние.
     
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiType value="uint"/><apiDesc>Целое число, представляющее новое состояние.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызов выполняется посредством диаграммы с вложением для указания изменения текущего состояния диаграммы. Реализующие элементы должны ответить на этот метод для синхронизации изменений данных, отображаемых элементом.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:claimStyles"><apiName>claimStyles</apiName><shortdesc>
      
      Вызывается диаграммой для разрешения запроса селекторов стиля для связанных элементов из массива chartSeriesStyles.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Новое значение для <codeph>firstAvailable</codeph> после запроса любых стилей (например, <codeph>firstAvailable</codeph> + <i>N</i>).
      
      </apiDesc><apiType value="uint"/></apiReturn><apiParam><apiItemName>styles</apiItemName><apiType value="Array"/><apiDesc>Массив запрашиваемых стилей.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstAvailable</apiItemName><apiType value="uint"/><apiDesc>Первый запрашиваемый селектор стиля в массиве.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызывается диаграммой для разрешения запроса селекторов стиля для связанных элементов из массива chartSeriesStyles. Каждая диаграмма имеет связанный набор селекторов, которые неявным образом присвоены к элементам, содержащимся в диаграмме. Реализация этой функции при необходимости позволяет «запрашивать» элементы из данного набора. Элемент, требующий наличия <i>N</i> селекторов стиля, запрашивает значения с <codeph>styles[firstAvailable]</codeph> по <codeph>styles[firstAvailable + <i>N</i> – 1]</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:collectTransitions"><apiName>collectTransitions</apiName><shortdesc>
      
      Вызывается диаграммой с вложениями для получения всех эффектов перехода, которые воспроизводятся определенным элементом при изменении состояния диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>chartState</apiItemName><apiType value="Number"/><apiDesc>Состояние, в котором диаграмма воспроизводит новые эффекты перехода.
     
      </apiDesc></apiParam><apiParam><apiItemName>transitions</apiItemName><apiType value="Array"/><apiDesc>Массив перехода для добавления к списку воспроизводимых эффектов перехода диаграммы.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызывается диаграммой с вложениями для получения всех эффектов перехода, которые воспроизводятся определенным элементом при изменении состояния диаграммы. Диаграмма получает эффекты перехода от всех элементов и обеспечивает их параллельное воспроизведение. Диаграмма ожидает завершения всех переходов перед сменой состояния. Средства реализации должны добавить необходимые переходы в параметр переходов Array.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:createDataID"><apiName>createDataID</apiName><shortdesc>
      Создает уникальный идентификатор, представляющий объект dataPoint для сравнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Идентификатор для dataPoint, который является уникальным в приложении.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>dataPointID</apiItemName><apiType value="Number"/><apiDesc>Текущий идентификатор dataPoint.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает уникальный идентификатор, представляющий объект dataPoint для сравнения. Полученные классы могут выполнить вызов этой функции с локальным уникальным идентификатором точки данных для создания уникального для приложения идентификатора.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:dataChanged"><apiName>dataChanged</apiName><shortdesc>
      Указывает на то, что представляемые элементом основные данные изменены.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Указывает на то, что представляемые элементом основные данные изменены. Вызов этого метода необходимо выполнять каждый раз при отображении изменений серией или элементом. Он предоставляет возможность обновления диапазонов любых связанных осей (при их наличии).
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:dataToLocal"><apiName>dataToLocal</apiName><shortdesc>
      
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Координаты относительно диаграммы.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>dataValues</apiItemName><apiType value="restParam"/><apiDesc>Значения данных для преобразования в координаты.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Преобразовывает кортеж значений данных в координаты по осям X и Y на экране. Вызов этой функции необходим для преобразования данных на экране с применением преобразования, используемого отдельными элементами. Например, при создании пользовательского выделения области данных диаграммы можно использовать эту функцию для определения экранных координат требуемого диапазона.
      
      <p>Для элементов диаграмм в прямоугольной системе координат обычно передаются два значения. Первое значение отображает значение относительно горизонтальной оси, а второе – по отношению к вертикальной оси.</p>
      
      <p>При использовании полярных диаграмм первое значение отображается по отношению к угловой оси, а второе – по отношению к радиальной оси.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:describeData"><apiName>describeData</apiName><shortdesc>
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив, содержащий экземпляры DataDescription, описывающий отображаемые данные.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Определяет ось для получения описания данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Битовое поле, указывающее на значения объекта DataDescription, относящиеся к определенной оси. Оптимизация может осуществляться только путем вычисления необходимых полей.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызывается управляющим элементом DataTransform для получения описания данных, представляемых этим элементом IChartElement. Разработчики осуществляют заполнение и возврат массива объектов mx.charts.chartClasses.DataDescription, что позволяет убедиться в корректном вычислении их данных для любых осей, обеспечивающих автоматическое создание значений из отображаемых данных (например, минимальное и максимальное значения, интервал и значение unitSize). Большинство элементов возвращают массив, содержащий отдельный экземпляр DataDescription. Составные элементы, например BarSet и ColumnSet, могут возвращать несколько объектов DataDescription, описывающих данные, отображаемые подчиненными элементами. При выполнении вызова разработчики осуществляют описание данных вдоль оси, указанной с помощью аргумента <codeph>dimension</codeph>. Эта функция может вызываться для каждой оси, поддерживаемой диаграммой с данными.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:findDataPoints"><apiName>findDataPoints</apiName><shortdesc> 
      Обеспечивает поиск ближайшей точки данных, представляемой элементом, рядом с заданными координатами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив HitData.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Координата X.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Координата Y.
     
      </apiDesc></apiParam><apiParam><apiItemName>sensitivity2</apiItemName><apiType value="Number"/><apiDesc>Число, представляющее расстояние (в пикселях) от точных координат, на котором должен находиться указатель для рассмотрения его, как размещенного «рядом». Это свойство аналогично значению свойства mouseSensitivity элемента управления диаграммы.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Обеспечивает поиск ближайшей точки данных, представляемой элементом, рядом с заданными координатами.
     
      <p>Этот метод возвращает любой массив структур HitData, описывающий точки данных внутри диапазона. Отдельные экземпляры ChartElement могут возвращать только отдельный объект dataPoint, если их экземпляры dataPoints гарантированно не накладываются друг на друга.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:getAllDataPoints"><apiName>getAllDataPoints</apiName><shortdesc>
      Возвращает массив элементов HitData всех основных классов ChartElements, для которых необходимо отобразить объекты dataTip при установке свойства showAllDataTips в значение true в диаграмме.
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объекты HitData, описывающие точки данных.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      Возвращает массив элементов HitData всех основных классов ChartElements, для которых необходимо отобразить объекты dataTip при установке свойства <codeph>showAllDataTips</codeph> в значение <codeph>true</codeph> в диаграмме.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:localToData"><apiName>localToData</apiName><shortdesc>
      
      Преобразовывает экранную координату в кортеж значений данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Кортеж значений данных.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>pt</apiItemName><apiType value="flash.geom:Point"/><apiDesc>Преобразуемый объект Point.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Преобразовывает экранную координату в кортеж значений данных. Вызов этой функции необходим для определения значений данных, представляемых определенной точкой на экране.
      <p>Некоторые типы диаграмм определяют способ выполнения преобразования. Точка должна быть относительной для пространства координат диаграммы.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:mappingChanged"><apiName>mappingChanged</apiName><shortdesc>
      Вызывается при отображении изменений одной или нескольких связанных осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывается при отображении изменений одной или нескольких связанных осей. Элемент DataTransform, назначенный этому объекту ChartElement, выполнит вызов данного метода при изменении любой из представляемых им осей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:ChartElement:protected:processNewDataProvider"><apiName>processNewDataProvider</apiName><shortdesc> 
      Вызывается при назначении нового свойства dataProvider для элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Поставщик данных. Обычно это Array, ArrayCollection, XMLList, XMLListCollection или подобный класс.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Вызывается при назначении нового свойства dataProvider для элемента. Подклассы могут перезаписать и определить пользовательское поведение при назначении нового свойства dataProvider. Этот метод вызывается либо при установке свойства <codeph>dataProvider</codeph>, либо при установке свойства <codeph>chartDataProvider</codeph> при отсутствии непосредственного назначения определенного свойства dataProvider.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:ChartElement:protected:cursor"><apiName>cursor</apiName><shortdesc>
      Каждый класс ChartElement имеет курсор, связанный со свойством dataProvider для собственного внутреннего использования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:IViewCursor"/></apiValueDef><apiDesc>
      Каждый класс ChartElement имеет курсор, связанный со свойством dataProvider для собственного внутреннего использования. Курсор принадлежит только классам ChartElements, ожидающим, что другой код не изменит его позицию.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:protected:chart:get"><apiName>chart</apiName><shortdesc>
      Ссылается на компонент диаграммы, содержащий этот элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts.chartClasses:ChartBase</apiValueClassifier></apiValueDef><apiDesc>
      Ссылается на компонент диаграммы, содержащий этот элемент.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Поставщик данных, назначенный для определенного элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Поставщик данных, назначенный для определенного элемента. Как правило, элементы наследуют свойство dataProvider из диаграммы с вложением. При этом отдельные элементы могут сами выполнять перезапись с помощью определенного свойства dataProvider.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:dataTransform:get"><apiName>dataTransform</apiName><shortdesc>
      Объект DataTransform, с которым связан элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:DataTransform</apiValueClassifier></apiValueDef><apiDesc>
      Объект DataTransform, с которым связан элемент. Объект DataTransform представляет связь между набором элементов и набором объектов оси, используемых для преобразования тех элементов из области данных в координаты экрана и обратно. Элемент диаграммы использует связанный объект DataTransform для вычисления способа визуализации его данных.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:labelContainer:get"><apiName>labelContainer</apiName><shortdesc>
      
      Объект DisplayObject, который отображает метки, визуализированные этим элементом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      
      Объект DisplayObject, который отображает метки, визуализированные этим элементом. В большинстве случаев метки, отображаемые в области данных диаграммы, отображаются над всеми элементами, а не перемежаются данными. При существовании отображаемых меток в реализующем элементе он может расположить их в объекте Sprite и возвратить как значение свойства <codeph>labelContainer</codeph>. Диаграммы с вложениями выполнят визуализацию элементов labelContainers для всех включенных элементов и расположат их в области данных над прочими элементами.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:ChartElement:chartDataProvider:set"><apiName>chartDataProvider</apiName><shortdesc>
      Поставщик данных, присвоенный диаграмме с вложениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
      Поставщик данных, присвоенный диаграмме с вложениями. При необходимости для типов элементов существует возможность выбора наследования поставщика данных из диаграммы с вложениями или разрешения разработчикам присваивать поставщиков данных конкретному элементу. Управление элементами не всегда выполняется поставщиком данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DataTransform"><apiName>DataTransform</apiName><shortdesc>
  Объект DataTransform представляет часть диаграммы, содержащей глифы и может преобразовывать значения в координаты экрана и наоборот.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Объект DataTransform представляет часть диаграммы, содержащей глифы и может преобразовывать значения в координаты экрана и наоборот. Каждый объект DataTransform имеет горизонтальную ось, вертикальную ось и набор глифов (фон, данные и перекрытие) для выполнения визуализации.  
  
  <p>Теоретически диаграмма может содержать несколько перекрывающихся объектов DataTransform. Это позволяет отображать диаграмму с несколькими наборами данных, визуализация которых выполнена в той же самой области, но с другими диапазонами. Например, требуется показать годовые доходы в сравнении с числом проданных единиц. Если бы годовой доход был в миллионах, а единицы в тысячах, то визуализацию этих данных было бы сложно выполнить в одном диапазоне. Наложение их в разных объектах DataTransform позволяет конечному пользователю сравнивать изменения в значениях при выполнении визуализации с различными диапазонами.</p>
 
  <p>Диаграммы могут содержать только один набор DataTransform.</p>
  
  <p>В основном используется объект ChartBase, скрывающий существование объекта DataTransform между диаграммой с содержащимися в ней объектами глифов и осей. При создании собственных объектов ChartElement для правильной реализации их элемента необходимо понимать методы класса DataTransform.</p>
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.charts.chartClasses:DataTransform_mx.events.FlexEvent.TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><shortdesc>
  Передается при изменении преобразования из области данных в область экрана, как правило, из-за того, что оси, составляющие преобразование, каким-либо образом изменились или само преобразование данных имеет размер.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении преобразования из области данных в область экрана, как правило, из-за того, что оси, составляющие преобразование, каким-либо образом изменились или само преобразование данных имеет размер.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts.chartClasses:DataTransform:DataTransform"><apiName>DataTransform</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts.chartClasses:DataTransform:dataChanged"><apiName>dataChanged</apiName><shortdesc>
      Предоставляет объекту DataTransform информацию об изменении основных данных, представленных в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Предоставляет объекту DataTransform информацию об изменении основных данных, представленных в диаграмме. Как правило, DataTransform не имеет информации об источнике основных данных, представляемых диаграммой. Таким образом, глифы должны выполнить вызов информации при изменении данных для получения возможности повторного вычисления шкал диапазона, основанного на их данных с помощью свойства DataTransform. Это не делает свойство DataTransform <b>не</b>действительным, так как нет гарантии, что данные изменились. Объекты оси (или объекты диапазона) должны инициировать событие снятия действительности.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:describeData"><apiName>describeData</apiName><shortdesc>
      Собирает важные отображаемые значения для всех элементов, связанных с преобразованием этих данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов BoundedValue.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Измерение, для которого требуется собрать значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>requiredFields</apiItemName><apiType value="uint"/><apiDesc>Определяет данные, требуемые преобразованием.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Собирает важные отображаемые значения для всех элементов, связанных с преобразованием этих данных. Экземпляры оси выполняют вызов этого метода с целью сбора значений, требуемых для определения момента, когда автоматическое создание назначается для диапазонов. Этот метод возвращает массив объектов BoundedValue.
      
      <p>Для сбора важных значений для горизонтальной оси CartesianTransform необходимо передать 0. Для сбора значений для вертикальной оси необходимо передать 1.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:getAxis"><apiName>getAxis</apiName><shortdesc>
      Извлекает экземпляр оси, отвечающий за преобразование измерения данных, указанное параметром dimension.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Экземпляр оси.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Измерение, ось которого отвечает за преобразование данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Извлекает экземпляр оси, отвечающий за преобразование измерения данных, указанное параметром <codeph>dimension</codeph>. При отсутствии предварительно назначенных осей создается ось по умолчанию. Осью по умолчанию для всех измерений является LinearAxis со свойством <codeph>autoAdjust</codeph>, установленным в значение <codeph>false</codeph>. 
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#LinearAxis"><linktext>mx.charts.LinearAxis</linktext></link></related-links></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:invertTransform"><apiName>invertTransform</apiName><shortdesc>
      Преобразует координаты x и y относительно системы координат DataTransform в двухмерное значение в области данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив, содержащий преобразованные значения.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>values</apiItemName><apiType value="restParam"/><apiDesc>Позиции X и Y (в этом порядке).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Преобразует координаты x и y относительно системы координат DataTransform в двухмерное значение в области данных.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:setAxis"><apiName>setAxis</apiName><shortdesc>
      Назначает экземпляр оси для определенного измерения преобразования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dimension</apiItemName><apiType value="String"/><apiDesc>Измерение преобразования.
      </apiDesc></apiParam><apiParam><apiItemName>v</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IAxis</apiOperationClassifier><apiDesc>Целевой экземпляр оси.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Назначает экземпляр оси для определенного измерения преобразования. Объекты Axis назначены объектом диаграммы с вложением.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts.chartClasses:DataTransform:transformCache"><apiName>transformCache</apiName><shortdesc>
      Отображает набор числовых значений, представляющих данные экранных координат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, содержащих значения данные в полях. Также здесь хранятся преобразованные числовые значения функции.
     
      </apiDesc></apiParam><apiParam><apiItemName>xField</apiItemName><apiType value="String"/><apiDesc>Поле, в котором возможно обнаружение значений данных оси X.
     
      </apiDesc></apiParam><apiParam><apiItemName>xConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для сохранения отображаемой экранной координаты X.
     
      </apiDesc></apiParam><apiParam><apiItemName>yField</apiItemName><apiType value="String"/><apiDesc>Поле, в котором возможно обнаружение значений данных оси Y.
     
      </apiDesc></apiParam><apiParam><apiItemName>yConvertedField</apiItemName><apiType value="String"/><apiDesc>Поле для сохранения отображаемой экранной координаты Y.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отображает набор числовых значений, представляющих данные экранных координат. Этот метод предполагает, что все значения являются числами, так что все нечисловые значения должны быть предварительно преобразованы при помощи метода <codeph>mapCache()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts.chartClasses:DataTransform:axes:get"><apiName>axes</apiName><shortdesc>
      Набор осей, связанных с этим преобразованием.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор осей, связанных с этим преобразованием.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts.chartClasses:DataTransform:elements:get"><apiName>elements</apiName><shortdesc>
      Элементы, связанные с этим преобразованием.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Элементы, связанные с этим преобразованием. В этот массив входит фон, серия и перекрывающиеся элементы, связанные с этим преобразованием. Это значение назначено объектом диаграммы с вложением.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts.chartClasses:DualStyleObject"><apiName>DualStyleObject</apiName><shortdesc>
  Класс DualStyleObject служит базовым классом для компонентов, которые требуется назначить для селектора класса без контроля разработчика клиента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p><b>Common MXML Syntax Inherited from DualStyleObject</b></p>
  
  <p>Flex components inherit the following properties
  from the DualStyleObject class:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    internalStyleName="<i>Style; No default</i>"
  &gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DualStyleObject служит базовым классом для компонентов, которые требуется назначить для селектора класса без контроля разработчика клиента. Экземпляры DualStyleObject имеют два свойства styleName...стандартное свойство styleName и дополнительное internalStyleName. В случае необходимости для компонента можно назначить свойство internalStyleName и предоставить свойство styleName разработчику клиента для присвоения.
 
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts.chartClasses:DualStyleObject:DualStyleObject"><apiName>DualStyleObject</apiName><shortdesc> 
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> 
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts.chartClasses:DualStyleObject:internalStyleName:get"><apiName>internalStyleName</apiName><shortdesc>
      Имя селектора класса, из которого экземпляр наследует значения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Имя селектора класса, из которого экземпляр наследует значения. Свойство <codeph>internalStyleName</codeph> имеет более низкий приоритет, чем селектор <codeph>styleName</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>