<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="mx.charts"><apiName>mx.charts</apiName><apiDetail/><apiClassifier id="mx.charts:ColumnChart"><apiName>ColumnChart</apiName><shortdesc>
  Элемент управления ColumnChart представляет данные в виде ряда вертикальных столбцов, высота которых определяется значениями данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="labelClass" owner="mx.charts:ColumnChart" playerVersion="Flash10.2" type="Class">
<description>
  Класс, который используется этим компонентом для визуализации меток.
   <p>Может являться классом mx.controls.Label или классом spark.components.Label.</p>
   </description>
<default>spark.components.Label
  
  </default>

<playerversion>AIR 2.0
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="maxColumnWidth" owner="mx.charts:ColumnChart" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину отображаемых столбцов в пикселях. Фактически используемая ширина столбца представляет собой наименьшее из значений этого свойства и свойства <codeph>columnWidthRatio</codeph>. Сгруппированные столбцы пропорционально разделяют эту область между столбцами в каждом кластере. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnWidthRatio" owner="mx.charts:ColumnChart" playerVersion="Flash9" type="Number">
<description>
  Указывает отношение ширины отображаемых столбцов относительно ширины для соответствующей категории в виде процентного значения в пределах от 0 до 1. В случае значения 1 используется все пространство, тогда как в случае значения 0,6 используется 60% доступного пространства столбца. Фактически используемая ширина столбца представляет собой наименьшее из значений свойства <codeph>columnWidthRatio</codeph> и свойства <codeph>maxColumnWidth</codeph>. Сгруппированные столбцы пропорционально разделяют эту область между столбцами в каждом кластере. Значением по умолчанию является 0,65.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:ColumnChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:ColumnChart
    <strong>Properties</strong>
    extendLabelToEnd="false|true"
    maxLabelWidth="<i>50</i>"
    showLabelVertically="false|true"
    type="<i>clustered|overlaid|stacked|100%</i>"
 
    <strong>Styles</strong>
    columnWidthRatio=".65"
    maxColumnWidth="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ColumnChart представляет данные в виде ряда вертикальных столбцов, высота которых определяется значениями данных. Свойство ColumnChart можно использовать для представления целого ряда различных гистограмм, включая простые столбцы и обычные гистограммы, гистограммы с накоплением и нормированные гистограммы, а также гистограммы максимальных/минимальных значений. 
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления ColumnChart содержит массив объектов ColumnSeries.</p>
   <p>Гистограммы с накоплением и нормированные гистограммы отменяют значение свойства <codeph>minField</codeph> соответствующих объектов ColumnSeries.</p>
   </apiDesc><example conref="Column_BarChartExample.mxml"><swfblock conref="examples/Column_BarChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#ColumnSeries"><linktext>mx.charts.series.ColumnSeries</linktext></link></related-links><apiConstructor id="mx.charts:ColumnChart:ColumnChart"><apiName>ColumnChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:ColumnChart:extendLabelToEnd:get"><apiName>extendLabelToEnd</apiName><shortdesc>
     Определяет возможность распространения меток данных до конца диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Определяет возможность распространения меток данных до конца диаграммы. Если задано значение true, для отображения соответствующих меток может использоваться все пространство между элементом и границей диаграммы. В противном случае местоположение меток данных ограничено областью, определяемой соответствующим элементом диаграммы.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ColumnChart:maxLabelWidth:get"><apiName>maxLabelWidth</apiName><shortdesc>
     Определяет максимальную ширину метки для элементов в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>50
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Определяет максимальную ширину метки для элементов в пикселях.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ColumnChart:showLabelVertically:get"><apiName>showLabelVertically</apiName><shortdesc>
     Определяет возможность отображения метки данных по вертикали.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Определяет возможность отображения метки данных по вертикали. Если установлено значение true, и используются встроенные шрифты, то метки отображаются по вертикали, если их горизонтальное представление не соответствует ширине столбца.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ColumnChart:type:get"><apiName>type</apiName><shortdesc>
      Тип гистограммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Тип гистограммы.
           <p>Возможные значения:</p>
      <ul>
        <li><codeph>clustered</codeph>: значения из различных серий группируются по категориям. Этот тип используется по умолчанию.</li>
        <li><codeph>overlaid</codeph>: несколько значений отображаются одно над другим с учетом категории, при этом последняя серия размещается сверху. </li>
        <li><codeph>stacked</codeph>: формируется стек из размещаемых друг над другом столбцов, сгруппированных по категориям. Каждый столбец представляет совокупное значение расположенных под ним столбцов. </li>
        <li><codeph>100%</codeph>: столбцы помещаются в стек один над другим, составляя в сумме 100%. Каждый столбец представляет процентное значение, соответствующее его доле в сумме значений для соответствующей категории.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ColumnChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:LinearAxis"><apiName>LinearAxis</apiName><shortdesc>
  Класс LinearAxis равномерно отображает числовые значения между минимальным и максимальным значениями вдоль оси диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:LinearAxis&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:LinearAxis
    <strong>Properties</strong>
    interval="null"
    maximum="null"
    maximumLabelPrecision="null"
    minimum="null"
    minorInterval="null"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:NumericAxis</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс LinearAxis равномерно отображает числовые значения между минимальным и максимальным значениями вдоль оси диаграммы. По умолчанию значения <codeph>minimum</codeph>, <codeph>maximum</codeph> и <codeph>interval</codeph> определяются на основе данных диаграмм в соответствии со всеми элементами диаграммы на экране. Кроме того, определенные значения для этих свойств можно задать явным образом.
  
  <p>Автоматическое определение значений диапазона выполняется следующим образом:
 
  <ol>
    <li> Flex определяет минимальное и максимальное значения, между которыми размещаются все данные, отображаемые на диаграмме.</li>
    <li> Если для свойств <codeph>autoAdjust</codeph> и <codeph>baseAtZero</codeph> задано значение <codeph>true</codeph>, Flex выполняет следующие корректировки:
      <ul>
        <li>Если все значения являются положительными, Flex устанавливает значение свойства <codeph>minimum</codeph> равным нулю.</li>
  	  <li>Если все значения являются отрицательными, Flex устанавливает значение свойства <codeph>maximum</codeph> равным нулю.</li>
  	</ul>
    </li>
    <li> Если свойство <codeph>autoAdjust</codeph> имеет значение <codeph>true</codeph>, Flex корректирует значения свойств <codeph>minimum</codeph> и <codeph>maximum</codeph> путем их округления до меньшего или большего числа.</li>
    <li> Flex выполняет проверку необходимости дополнительного заполнения для правильного представления отображаемых на диаграмме элементов (например, для меток). Для этого выполняется соответствующая корректировка значений свойств <codeph>minimum</codeph> и <codeph>maximum</codeph>.</li>
    <li> Flex определяет, указана ли явно необходимость заполнения вокруг значений <codeph>minimum</codeph> и <codeph>maximum</codeph>, а затем выполняется соответствующая корректировка этих значений.</li>
  </ol>
  </p>
  
  </apiDesc><example conref="HLOCChartExample.mxml"><swfblock conref="examples/HLOCChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.chartClasses.xml#IAxis"><linktext>mx.charts.chartClasses.IAxis</linktext></link></related-links><apiConstructor id="mx.charts:LinearAxis:LinearAxis"><apiName>LinearAxis</apiName><shortdesc>
	 Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	 Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:LinearAxis:interval:get"><apiName>interval</apiName><shortdesc>
	  Указывает числовое значение интервала между значениями меток вдоль оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает числовое значение интервала между значениями меток вдоль оси. Числовое значение интервала вычисляется в приложении Flex, если для этого свойства задано значение <codeph>NaN</codeph>,. По умолчанию используется значение <codeph>NaN</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LinearAxis:maximum:get"><apiName>maximum</apiName><shortdesc>
	  Определяет максимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Определяет максимальное значение для метки оси. Если для свойства <codeph>autoAdjust</codeph> задано значение <codeph>true</codeph>, приложение Flex вычисляет соответствующее значение. Если задано значение <codeph>NaN</codeph>, приложение Flex определяет максимальное значение на основе данных диаграммы. По умолчанию используется значение <codeph>NaN</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LinearAxis:minimum:get"><apiName>minimum</apiName><shortdesc>
	  Определяет минимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Определяет минимальное значение для метки оси. Если задано значение <codeph>NaN</codeph>, приложение Flex определяет минимальное значение на основе данных диаграммы. По умолчанию используется значение <codeph>NaN</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LinearAxis:minorInterval:get"><apiName>minorInterval</apiName><shortdesc>
	  Указывает числовое значение интервала между вспомогательными делениями вдоль оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает числовое значение интервала между вспомогательными делениями вдоль оси. Числовое значение интервала вычисляется в приложении Flex, если для этого свойства задано значение <codeph>NaN</codeph>.  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LinearAxis:maximumLabelPrecision:set"><apiName>maximumLabelPrecision</apiName><shortdesc>
	  Определяет максимальное количество десятичных знаков при представлении дробных значений на метках, генерируемых для размещения вдоль оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Определяет максимальное количество десятичных знаков при представлении дробных значений на метках, генерируемых для размещения вдоль оси. По умолчанию эти значения на оси генерируются непосредственно на основе меток. Значение 0 приводит к округлению до ближайшего целого значения, в то время как значение 2 приводит к округлению до ближайшего значения 1/100.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:AreaChart"><apiName>AreaChart</apiName><shortdesc>
  Элемент управления AreaChart представляет данные в виде области, которая ограничена линией, соединяющей значения данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:AreaChart&gt;</code> tag inherits all the properties
  of its parent classes, and adds the following properties:</p>
  
  <pre>
  &lt;mx:AreaChart
    <strong>Properties</strong>
    type="<i>overlaid|stacked|100%</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления AreaChart представляет данные в виде области, которая ограничена линией, соединяющей значения данных. Элемент управления AreaChart может использоваться для представления различных вариантов, включая диаграммы с областями, диаграммы с областями с накоплением, нормированные диаграммы с областями и диаграммы максимальных/минимальных значений.
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления AreaChart содержит массив объектов AreaSeries.</p>
  
  <p>Диаграммы с областями с накоплением и нормированные диаграммы с областями отменяют свойство <codeph>minField</codeph> соответствующих объектов AreaSeries.</p>
   </apiDesc><example conref="Line_AreaChartExample.mxml"><swfblock conref="examples/Line_AreaChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#AreaSeries"><linktext>mx.charts.series.AreaSeries</linktext></link></related-links><apiConstructor id="mx.charts:AreaChart:AreaChart"><apiName>AreaChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:AreaChart:type:get"><apiName>type</apiName><shortdesc>
      Тип графика с заливкой, подлежащий визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Тип графика с заливкой, подлежащий визуализации.
           <p>Возможные значения:</p>
      <ul>
        <li><codeph>overlaid</codeph>: несколько графиков с заливкой размещаются друг над другом, при этом сверху располагается серия, указанная последней. Это значение является значением по умолчанию.</li>
        <li><codeph>stacked</codeph>: формируется стек из размещаемых друг над другом областей, сгруппированных по категориям. Каждая область представляет совокупное значение расположенных под ней областей.</li>
        <li><codeph>100 %</codeph>: области помещаются в стек одна над другой, составляя в сумме 100%. Каждая область представляет процентное значение, соответствующее ее доле в совокупной сумме значений.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AreaChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:PieChart"><apiName>PieChart</apiName><shortdesc>
  Элемент управления PieChart представляет серию данных в виде стандартной круговой диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="innerRadius" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Определяет размер отверстия в центре круговой диаграммы. Значение этого свойства является процентным соотношением между радиусом внутреннего круга и радиусом всей круговой диаграммы. По умолчанию используется значение 0%. Это свойство используется для создания кольцевой диаграммы.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts:PieChart" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов FlashType. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элемента LegendItem по умолчанию используется значение <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts:PieChart" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts:PieChart" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>По умолчанию применяется значение <codeph>advanced</codeph>, разрешающее применение средства визуализации FlashType при использовании встроенного шрифта FlashType. Значение <codeph>normal</codeph> используется для отключения средства визуализации FlashType.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts:PieChart" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts:PieChart" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:PieChart&gt;</code> tag inherits all the properties
  of its parent classes, and adds the following properties:
  
  <pre>
  &lt;mx:PieChart
    <strong>Styles</strong>
    innerRadius="0"
    textAlign="left"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:PolarChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления PieChart представляет серию данных в виде стандартной круговой диаграммы. Данные для поставщика данных определяют размер каждого сектора в круговой диаграмме относительно других секторов. Класс PieSeries можно использовать для создания стандартных круговых диаграмм, кольцевых диаграмм или круговых диаграмм с накоплением.
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления PieChart содержит массив объектов PieSeries.</p>
   </apiDesc><example conref="PieChartExample.mxml"><swfblock conref="examples/PieChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#PieSeries"><linktext>mx.charts.series.PieSeries</linktext></link></related-links><apiConstructor id="mx.charts:PieChart:PieChart"><apiName>PieChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:PieChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:GridLines"><apiName>GridLines</apiName><shortdesc> 
  Класс GridLines позволяет отображать линии сетки в области данных диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="verticalTickAligned" owner="mx.charts:GridLines" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость выравнивания вертикальных линий сетки с делениями. Если задано значение <codeph>true</codeph>, Flex отображает вертикальные линии сетки с учетом их выравнивания с делениями. Если задано значение <codeph>false</codeph>, Flex отображает вертикальные линии сетки между делениями. По умолчанию используется значение <codeph>true</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalStroke" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Указывает стиль линии для вертикальных линий сетки. Класс Stroke используется для определения свойств в качестве нижестоящего тега в MXML, либо для создания объекта Stroke в ActionScript.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalShowOrigin" owner="mx.charts:GridLines" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость отображения точки отсчета по вертикали. Если задано значение <codeph>true</codeph>, и точка отсчета находится внутри границ диаграммы, Flex отображает ее с использованием стиля <codeph>verticalOriginStroke</codeph>. Для элементов управления ColumnChart, LineChart и AreaChart используется значение по умолчанию <codeph>false</codeph>. Для элементов управления PlotChart, BubbleChart и управления BarChart используется значение по умолчанию <codeph>true</codeph>. Это свойство не применяется в отношении элементов управления PieChart.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalOriginStroke" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Указывает стиль линии для точки отсчета по вертикали. Класс Stroke используется для определения свойств в качестве нижестоящего тега в MXML, либо для создания объекта Stroke в ActionScript.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalFill" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Указывает узор заливки для изменения вертикальных полос, создаваемых линиями сетки. Класс IFill используется для определения свойств заполнения в качестве нижестоящего тега в MXML, либо для создания объекта IFill в ActionScript. Если задано значение <codeph>null</codeph>, полосы не заполняются. По умолчанию используется <codeph>null</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalChangeCount" owner="mx.charts:GridLines" playerVersion="Flash9" type="int">
<description>
  Указывает количество делений между вертикальными линиями сетки. Для отображения линий сетки через каждое третье деление на оси следует установить для свойства <codeph>verticalChangeCount</codeph> значение <codeph>3</codeph>. Стиль заливки изменяется в каждой линии сетки, таким образом, увеличение значения <codeph>verticalChangeCount</codeph> приводит к увеличению чередующихся полос. По умолчанию используется значение <codeph>1</codeph>. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalAlternateFill" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Указывает узор заливки для изменения вертикальных полос, не определяемых свойством заливки. Класс IFill используется для определения свойств заливки в качестве нижестоящего тега в MXML, либо для создания объекта IFill в ActionScript. Если задано значение <codeph>null</codeph>, полосы не заполняются. По умолчанию используется <codeph>null</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalTickAligned" owner="mx.charts:GridLines" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость выравнивания горизонтальных линий сетки с делениями. Если задано значение <codeph>true</codeph>, отображаемые горизонтальные линии сетки выравниваются относительно делений. Если задано значение <codeph>false</codeph>, Flex отображает вертикальные линии сетки между делениями. По умолчанию используется значение <codeph>true</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalStroke" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Указывает стиль линии для горизонтальных линий сетки. Класс Stroke используется для определения свойств в качестве нижестоящего тега в MXML, либо для создания объекта Stroke в ActionScript.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalShowOrigin" owner="mx.charts:GridLines" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость отображения точки отсчета по горизонтали. Если задано значение <codeph>true</codeph>, и точка отсчета находится внутри границ диаграммы, линии сетки отображают ее с использованием стиля <codeph>horizontalOriginStroke</codeph>. Для элементов управления ColumnChart, LineChart, PlotChart, BubbleChart и AreaChart используется значение по умолчанию <codeph>true</codeph>. Для элементов управления BarChart используется значение по умолчанию <codeph>false</codeph>. Это свойство не применяется в отношении элементов управления PieChart.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalOriginStroke" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Указывает стиль линии для точки отсчета по горизонтали. Класс Stroke используется для определения свойств в качестве нижестоящего тега в MXML, либо для создания объекта Stroke в ActionScript.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalFill" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Указывает узор заливки для каждой горизонтальной полосы, создаваемой линиями сетки. Класс IFill используется для определения свойств заполнения в качестве нижестоящего тега в MXML, либо для создания объекта IFill в ActionScript. Если задано значение <codeph>null</codeph>, полосы не заполняются. По умолчанию используется <codeph>null</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalChangeCount" owner="mx.charts:GridLines" playerVersion="Flash9" type="int">
<description>
  Указывает количество делений между горизонтальными линиями сетки. Для отображения линий сетки через каждое третье деление на оси установите для свойства <codeph>horizontalChangeCount</codeph> значение 3. Стиль заливки изменяется в каждой линии сетки, таким образом, увеличение значения <codeph>horizontalChangeCount</codeph> приводит к увеличению чередующихся полос. По умолчанию используется значение <codeph>1</codeph>. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalAlternateFill" owner="mx.charts:GridLines" playerVersion="Flash9" type="mx.graphics.IFill">
<description>
  Указывает узор заливки для чередующихся горизонтальных полос, не определяемых свойством <codeph>fill</codeph>. Класс IFill используется для определения свойств заливки в качестве нижестоящего тега в MXML, либо для создания объекта IFill в ActionScript. Если задано значение <codeph>null</codeph>, полосы не заполняются. По умолчанию используется <codeph>null</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="horizontal,vertical,both" inherit="no" name="gridDirection" owner="mx.charts:GridLines" playerVersion="Flash9" type="String">
<description>
  Указывает направление линий сетки. Допустимыми значениями являются <codeph>horizontal</codeph>, <codeph>vertical</codeph> или <codeph>both</codeph>. По умолчанию используется значение <codeph>horizontal</codeph>.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:GridLines&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:GridLines
    <strong>Styles</strong>
     gridDirection="horizontal|vertical|both"
     horizontalAlternateFill="null"
     horizontalChangeCount="1"
     horizontalFill="null"
     horizontalOriginStroke="<i>IStroke; No default</i>"
     horizontalShowOrigin="<i>Default depends on type of chart</i>"
     horizontalStroke="<i>IStroke; No default</i>"
     horizontalTickAligned="true|false"
     verticalAlternateFill="null"
     verticalChangeCount="1"
     verticalFill="null"
     verticalOriginStroke="<i>IStroke; No default</i>"
     verticalShowOrigin="<i>Default depends on type of chart</i>"
     verticalStroke="<i>IStroke; No default</i>"
     verticalTickAligned="true|false"
  /&gt;
  </pre>
   ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:ChartElement</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Класс GridLines позволяет отображать линии сетки в области данных диаграммы. Flex может отображать линии по горизонтали, по вертикали или в обоих направлениях. 
  
  <p>Flex отображает линии сетки, выровненные по делениям вышестоящей диаграммы. По умолчанию Flex отображает одну линию, проходящую через каждое деление по соответствующей оси.</p>
  
  <p>Класс GridLines обычно используется как нижестоящий тег свойства <codeph>backgroundElements</codeph> или свойства <codeph>annotationElements</codeph> элемента управления диаграммы.</p>
  
  </apiDesc><example conref="GridLinesExample.mxml"><swfblock conref="examples/GridLinesExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.charts:GridLines:GridLines"><apiName>GridLines</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:GridLines:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
	  </apiDesc></apiValueDetail><apiInheritDoc/></apiValue></apiClassifier><apiClassifier id="mx.charts:HLOCChart"><apiName>HLOCChart</apiName><shortdesc>
  Элемент управления HLOCChart (High, Low, Open, Close – высокое, низкое, открывающее, закрывающее значение) представляет финансовые данные в виде серии элементов, соответствующих высокому и низкому значениям, а также значениям закрытия и – при необходимости – открытия в серии данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="maxColumnWidth" owner="mx.charts:HLOCChart" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину отображаемых линий HLOC в пикселях. Фактически используемая ширина является наименьшим из значений этого свойства и свойства <codeph>columnWidthRatio</codeph>. Серии из нескольких линий HLOC пропорционально разделяют это пространство.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnWidthRatio" owner="mx.charts:HLOCChart" playerVersion="Flash9" type="Number">
<description>
  Указывает пропорцию ширины отображаемых линий HLOC относительно значений ширины для категории по горизонтальной оси в виде процентного значения в пределах от 0 до 1. Если задано значение 1, используется все пространство, в то время как при значении 0,6 используется 60% доступного для категории пространства. Фактическая используемая ширина элемента является наименьшим из значений свойств <codeph>columnWidthRatio</codeph> и <codeph>maxColumnWidth</codeph>. Серии из нескольких элементов пропорционально разделяют это пространство. Значением по умолчанию является 0,65.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  The <code>&lt;mx:HLOCChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:HLOCChart
    <strong>Styles</strong>
    columnWidthRatio=".65"
    maxColumnWidth="<i>No default</i>"
  /&gt;
  </pre> 
   ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления HLOCChart (High, Low, Open, Close – высокое, низкое, открывающее, закрывающее значение) представляет финансовые данные в виде серии элементов, соответствующих высокому и низкому значениям, а также значениям закрытия и – при необходимости – открытия в серии данных. Верхняя и нижняя граница вертикальной линии каждого элемента представляют наибольшее и наименьшее значения точки данных. Правая отметка соответствует значениям закрытия, а левая отметка – значению открытия, если таковое было указано. 
   
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления HLOCChart содержит массив объектов HLOCSeries.</p>
 
  </apiDesc><example conref="HLOCChartExample.mxml"><swfblock conref="examples/HLOCChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#HLOCSeries"><linktext>mx.charts.series.HLOCSeries</linktext></link></related-links><apiConstructor id="mx.charts:HLOCChart:HLOCChart"><apiName>HLOCChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:HLOCChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:BarChart"><apiName>BarChart</apiName><shortdesc>
  Элемент управления BarChart представляет данные в виде серии горизонтальных полос, длина которых зависит от значений данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="labelClass" owner="mx.charts:BarChart" playerVersion="Flash10.2" type="Class">
<description>
  Класс, который используется этим компонентом для визуализации меток.
   <p>Может являться классом mx.controls.Label или классом spark.components.Label.</p>
   </description>
<default>spark.components.Label
  
  </default>

<playerversion>AIR 2.0
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="maxBarWidth" owner="mx.charts:BarChart" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину отображаемых полос в пикселях. Фактически используемая ширина полосы соответствует наименьшему из значений этого свойства и свойства <codeph>barWidthRatio</codeph>. Сгруппированные полосы пропорционально разделяют эту область между полосами в каждом кластере. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="barWidthRatio" owner="mx.charts:BarChart" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину отображаемых полос относительно ширины для категории в виде процентного значения в пределах от 0 до 1. Если задано значение 1, используется все пространство, в то время как при значении 0,6 используется 60% доступного пространства полосы. Фактически используемая ширина полосы соответствует наименьшему из значений свойств <codeph>barWidthRatio</codeph> и <codeph>maxbarWidth</codeph>. Линейчатые диаграммы с группировкой пропорционально разделяют этот пространство между полосами в каждом кластере. Значением по умолчанию является 0,65.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:BarChart&gt;</code> tag inherits all the properties
  of its parent classes, and adds the following properties:</p>
  
  <pre>
  &lt;mx:BarChart
    <strong>Properties</strong>
    type="clustered|overlaid|stacked|100%"
    
    <strong>Styles</strong>
    barWidthRatio=".65"
    maxBarWidth="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления BarChart представляет данные в виде серии горизонтальных полос, длина которых зависит от значений данных. Элемент управления BarChart может представлять различные варианты диаграмм, включая линейчатые диаграммы, линейчатые диаграммы с группировкой, линейчатые диаграммы с накоплением, нормированные линейчатые диаграммы и диаграммы максимальных/минимальных значений.
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления BarChart содержит массив объектов BarSeries.</p>
  
  <p>Линейчатые диаграммы с накоплением и нормированные линейчатые диаграммы отменяют свойство <codeph>minField</codeph> соответствующих объектов BarSeries.</p>
   </apiDesc><example conref="Column_BarChartExample.mxml"><swfblock conref="examples/Column_BarChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#BarSeries"><linktext>mx.charts.series.BarSeries</linktext></link></related-links><apiConstructor id="mx.charts:BarChart:BarChart"><apiName>BarChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:BarChart:type:get"><apiName>type</apiName><shortdesc>
      Тип гистограммы, подлежащий визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Тип гистограммы, подлежащий визуализации. Возможные значения:    
      <ul>
        <li><codeph>clustered</codeph>: полосы группируются по категориям. Это значение является значением по умолчанию.</li>
      
        <li><codeph>overlaid</codeph>: несколько полос отображаются одна над другой по категориям, при этом последняя серия – в верхней части гистограммы.</li>
      
        <li><codeph>stacked</codeph>: полосы состыковываются вплотную и группируются по категориям. Каждая полоса представляет совокупное значение данных расположенных под ней полос.</li>
      
        <li><codeph>100%</codeph>: полосы состыковываются вплотную, составляя в сумме 100%. Каждая полоса представляет процентное значение ее доли в сумме значений для данной категории.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:BarChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:LegendItem"><apiName>LegendItem</apiName><shortdesc>
  Управляет отдельными элементами легенды в легенде диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="stroke" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Object">
<description>
  Определяет штрих линии для элемента легенды.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="markerWidth" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину элемента легенды.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="markerHeight" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description> 
  Указывает высоту элемента легенды.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="legendMarkerRenderer" owner="mx.charts:LegendItem" playerVersion="Flash9" type="mx.core.IFactory">
<description>
  Указывает класс, используемый для визуализации части маркера элемента легенды. Как правило, маркер предоставляется элементом диаграммы, генерирующим элемент легенды. Однако при создании легенды вручную этот стиль определяет класс, используемый для визуализации маркера. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,bottom,right,left" inherit="yes" name="labelPlacement" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Указывает местоположение метки элемента легенды. Допустимыми значениями являются <codeph>top</codeph>, <codeph>bottom</codeph>, <codeph>left</codeph> и <codeph>right</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="fill" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Object">
<description>
  Указывает объект IFill, определяющий заливку для элемента легенды.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов FlashType. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элемента LegendItem по умолчанию используется значение <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts:LegendItem" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>По умолчанию применяется значение <codeph>advanced</codeph>, разрешающее применение средства визуализации FlashType при использовании встроенного шрифта FlashType. Значение <codeph>normal</codeph> используется для отключения средства визуализации FlashType.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts:LegendItem" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts:LegendItem" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между правой границей элемента управления и правым краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей элемента управления и левым краем его области содержимого.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значение по умолчанию – 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.charts:LegendItem" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не перезаписано для класса, в качестве значения по умолчанию используется 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:LegendItem&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:LegendItem
    <strong>Properties</strong>
    element="<i>No default</i>"    
    label="<i>No default</i>"
    source="<i>No default</i>"
    legendData="<i>No default</i>"
    marker="<i>No default</i>"
    markerAspectRatio="<i>No default</i>"
 
    <strong>Styles</strong>
    fill="<i>IFill; no default.</i>"
    fontWeight="normal|bold"
    fontSize="10"
    horizontalGap="8"
    labelPlacement="right|left|top|bottom"
    legendMarkerRenderer="<i>Defaults to series's itemRenderer</i>"
    markerHeight="15"
    markerWidth="10"
    paddingLeft="0"
    paddingRight="0"
    stroke="<i>IStroke; no default</i>"
 	  textDecoration="underline|none"
    verticalGap="6"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Управляет отдельными элементами легенды в легенде диаграммы.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#Legend"><linktext>mx.charts.Legend</linktext></link><link href="mx.charts.chartClasses.xml#LegendData"><linktext>mx.charts.chartClasses.LegendData</linktext></link></related-links><apiConstructor id="mx.charts:LegendItem:LegendItem"><apiName>LegendItem</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:LegendItem:element"><apiName>element</apiName><shortdesc>
	  Элемент диаграммы, ответственный за генерацию этого элемента легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.charts.chartClasses:IChartElement</apiValueClassifier></apiValueDef><apiDesc>
	  Элемент диаграммы, ответственный за генерацию этого элемента легенды. Если содержимое элемента управления Legend генерируется автоматически на основе диаграммы, это поле имеет ссылку на элемент (как правило, серию), который представляет этот элемент. В некоторых случаях на один и тот же элемент могут ссылаться несколько элементов легенды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:markerAspectRatio"><apiName>markerAspectRatio</apiName><shortdesc>
	  Соотношение сторон для маркера, связанного с этим элементом легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Соотношение сторон для маркера, связанного с этим элементом легенды. Некоторые маркеры, предоставляемые серией диаграммы, должны отображаться с учетом определенного соотношения сторон. Если это свойство установлено, элемент легенды обеспечивает требуемое соотношение сторон маркера при создании макета.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:label:get"><apiName>label</apiName><shortdesc>
	  Указывает текст, отображаемый Flex рядом с элементом легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает текст, отображаемый Flex рядом с элементом легенды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:marker:get"><apiName>marker</apiName><shortdesc>
	  Маркер, отображаемый этим элементом легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFlexDisplayObject"/></apiValueDef><apiDesc>
	  Маркер, отображаемый этим элементом легенды. Маркеры обычно присваиваются элементом диаграммы, который сгенерировал объект LegendData, связанный с этим элементом.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:source:get"><apiName>source</apiName><shortdesc>
	  Содержит ссылку на серию данных, на основе которых сгенерирован объект LegendItem, при наличии привязки свойства dataProvider вышестоящего элемента управления Legend к элементу управления диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
	  Содержит ссылку на серию данных, на основе которых сгенерирован объект LegendItem, при наличии привязки свойства <codeph>dataProvider</codeph> вышестоящего элемента управления Legend к элементу управления диаграммы. В противном случае это свойство содержит ссылку на объект, связанный с LegendItem.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:legendData:set"><apiName>legendData</apiName><shortdesc>
	  Экземпляр LegendData, представляющий данный объект LegendItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Object"/></apiValueDef><apiDesc>
	  Экземпляр LegendData, представляющий данный объект LegendItem. Когда диаграмма генерирует содержимое элемента управления Legend, на основе элементов диаграммы создается одна или несколько структур LegendData, отображаемых в элементе управления Legend. Каждая структура LegendData генерирует один объект LegendItem.  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LegendItem:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
	  </apiDesc></apiValueDetail><apiInheritDoc/></apiValue></apiClassifier><apiClassifier id="mx.charts:HitData"><apiName>HitData</apiName><shortdesc>
  Класс HitData представляет информацию об элементе данных в определенном местоположении на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс HitData представляет информацию об элементе данных в определенном местоположении на экране. Flex возвращает структуру HitData для событий мыши, связанных с точками данных диаграммы. Эта структура описывает, какие точки данных соответствуют текущей позиции указателя мыши. 
 
  <p>Кроме того, метод <codeph>findDataPoints()</codeph> элемента управления диаграммы позволяет получить структуру HitData, описывающую точку данных в определенном местоположении на диаграмме.</p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#ChartItem"><linktext>mx.charts.ChartItem</linktext></link></related-links><apiConstructor id="mx.charts:HitData:HitData"><apiName>HitData</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="Number"/><apiDesc>Указывает уникальный идентификатор, соответствующий точке данных.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>distance</apiItemName><apiType value="Number"/><apiDesc>Указывает расстояние между элементом данных на экране и местоположением указателя мыши (в пикселях).
	 
	  </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Указывает координату Х элемента данных на экране.
	 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Указывает координату У элемента данных на экране.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>chartItem</apiItemName><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier><apiDesc>Элемент диаграммы, описываемый HitData.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:HitData:chartItem"><apiName>chartItem</apiName><shortdesc>
	  Элемент диаграммы, описываемый HitData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.charts:ChartItem</apiValueClassifier></apiValueDef><apiDesc>
	  Элемент диаграммы, описываемый HitData. Элемент диаграммы представляет данные, используемые серией для описания отдельного элемента из <codeph>dataProvider</codeph>. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:contextColor"><apiName>contextColor</apiName><shortdesc>
	  Значение RGB, которое может использоваться для связи с экранным представлением соответствующего элемента chartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
	  Значение RGB, которое может использоваться для связи с экранным представлением соответствующего элемента <codeph>chartItem</codeph>. Это поле используется DataTips при визуализации соответствующих данных.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:dataTipFunction"><apiName>dataTipFunction</apiName><shortdesc>
	  Функция, предоставляемая создателем HitData для генерации отображаемой на экране пользовательской строки, описывающей элемент, на который имеется ссылка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/></apiValueDef><apiDesc>
	  Функция, предоставляемая создателем HitData для генерации отображаемой на экране пользовательской строки, описывающей элемент, на который имеется ссылка. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:distance"><apiName>distance</apiName><shortdesc>
	  Указывает расстояние между элементом данных на экране и местоположением указателя мыши (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает расстояние между элементом данных на экране и местоположением указателя мыши (в пикселях).
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:id"><apiName>id</apiName><shortdesc>
	  Указывает уникальный идентификатор, соответствующий точке данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает уникальный идентификатор, соответствующий точке данных. Этот идентификатор можно использовать для проверки эквивалентности двух объектов HitData. Если два различных элемента диаграммы представляют одно и то же значение <codeph>dataProvider</codeph>, они будут иметь два различных идентификатора.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:item"><apiName>item</apiName><shortdesc>
	  Указывает элемент данных, описываемый структурой HitData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Указывает элемент данных, описываемый структурой HitData.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:x"><apiName>x</apiName><shortdesc>
	  Указывает координату X элемента данных на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает координату X элемента данных на экране.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:y"><apiName>y</apiName><shortdesc>
	  Указывает координату Y элемента данных на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Указывает координату Y элемента данных на экране.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:displayText:get"><apiName>displayText</apiName><shortdesc>
	  Описание связанного элемента для отображения на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Описание связанного элемента для отображения на экране. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:HitData:element:get"><apiName>element</apiName><shortdesc>
	  Указывает элемент диаграммы, используемый для визуализации этого элемента данных, который сгенерировал структуру HitData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts.chartClasses:IChartElement</apiValueClassifier></apiValueDef><apiDesc>
	  Указывает элемент диаграммы, используемый для визуализации этого элемента данных, который сгенерировал структуру HitData.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:BubbleChart"><apiName>BubbleChart</apiName><shortdesc>
  Элемент управления BubbleChart представляет данные с тремя значениями для каждой точки данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="minRadius" owner="mx.charts:BubbleChart" playerVersion="Flash9" type="Number">
<description>
  Минимальный радиус наименьшего элемента диаграммы (в пикселях) присваивается Flex точке данных с наименьшим значением; всем другим точкам данных присваивается больший радиус в зависимости от их значений относительно наименьшего и наибольшего значения. По умолчанию используется значение 0 пикселей.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="maxRadius" owner="mx.charts:BubbleChart" playerVersion="Flash9" type="Number">
<description>
  Максимальный радиус наибольшего элемента диаграммы (в пикселях) присваивается Flex точке данных с наибольшим значением; всем другим точкам данных присваивается меньший радиус в зависимости от их значений относительно наименьшего и наибольшего значения. По умолчанию используется значение 50 пикселей.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  The <code>&lt;mx:BubbleChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:BubbleChart
    <strong>Properties</strong>
    radiusAxis="<i>LinearAxis</i>"
 
    <strong>Styles</strong>
    maxRadius="50"
    minRadius="0"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления BubbleChart представляет данные с тремя значениями для каждой точки данных. Каждая точка данных определяется значением, указывающим ее позицию по горизонтальной оси, значением, указывающим ее позицию по вертикальной оси, и значением, указывающим размер элемента диаграммы, относительно других точек данных на диаграмме.
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления BubbleChart содержит массив объектов BubbleSeries.</p>
  
  </apiDesc><example conref="BubbleChartExample.mxml"><swfblock conref="examples/BubbleChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#BubbleSeries"><linktext>mx.charts.series.BubbleSeries</linktext></link></related-links><apiConstructor id="mx.charts:BubbleChart:BubbleChart"><apiName>BubbleChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:BubbleChart:radiusAxis:get"><apiName>radiusAxis</apiName><shortdesc>
      Ось, по которой отображается радиус пузырька для пузырьковой диаграммы, определяет размер отдельных пузырьков в качестве третьего измерения данных, которое преобразуется таким же образом, что и позиции по оси Х и Y.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Ось, по которой отображается радиус пузырька для пузырьковой диаграммы, определяет размер отдельных пузырьков в качестве третьего измерения данных, которое преобразуется таким же образом, что и позиции по оси Х и Y. По умолчанию <codeph>radiusAxis</codeph> является элементом LinearAxis с установленным значением <codeph>false</codeph> свойства <codeph>autoAdjust</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:BubbleChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:Legend"><apiName>Legend</apiName><shortdesc>
      Элемент управления Legend добавляет легенду к диаграммам, в которых легенды отображают метку для каждой серии данных в диаграмме и ключ, указывающий элемент диаграммы для серии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><Exclude kind="effect" name="focusOutEffect"/><Exclude kind="effect" name="focusInEffect"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="event" name="focusOut"/><Exclude kind="event" name="focusIn"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="tileWidth"/><Exclude kind="property" name="tileHeight"/><Exclude kind="property" name="label"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="defaultButton"/><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
      Вертикальное выравнивание каждого нижестоящего элемента внутри ячейки. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>. Если значение равно <codeph>top</codeph>, верхний край каждого нижестоящего элемента совпадает с верхним краем его ячейки. Если значение равно <codeph>middle</codeph>, каждый нижестоящий элемент выровнен в ячейке вертикально по центру. Если значение равно <codeph>bottom</codeph>, нижний край каждого нижестоящего элемента совпадает с нижним краем его ячейки.
           </description>
<default>"top"
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style inherit="no" name="stroke" owner="mx.charts:Legend" playerVersion="Flash9" type="Object">
<description>
      Определяет штрих линии для элемента легенды.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="uint">
<description>
      Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
       
      </description>
<default>0x000000
     
      </default>

<playerversion>AIR 1.5
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 4
     </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
      Количество пикселей между верхней границей легенды и верхним краем его области содержимого.
           </description>
<default>0
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
      Число пикселей между нижней границей легенды и нижним краем его области содержимого.
           </description>
<default>0
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="markerWidth" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
      Указывает ширину элемента легенды.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="markerHeight" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
      Указывает высоту элемента легенды.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style enumeration="top,bottom,right,left" inherit="yes" name="labelPlacement" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
      Указывает местоположение метки элемента легенды. Допустимыми значениями являются <codeph>top</codeph>, <codeph>bottom</codeph>, <codeph>right</codeph> и <codeph>left</codeph>.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
      Горизонтальное выравнивание каждого нижестоящего элемента внутри ячейки. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>. Если значение равно <codeph>left</codeph>, левый край каждого нижестоящего элемента совпадает с левым краем его ячейки. Если значение равно <codeph>center</codeph>, каждый нижестоящий элемент выровнен горизонтально по центру ячейки. Если значение равно <codeph>right</codeph>, правый край каждого нижестоящего элемента совпадает с правым краем его ячейки.
           </description>
<default>"left"
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="uint">
<description>
      Цвет кольца фокуса, если компонент находится в фокусе
       
      </description>
<default>0x70B2EE
      
      </default>

<playerversion>AIR 1.5
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 4
     </productversion></asCustoms></prolog></style><style inherit="no" name="disabledOverlayAlpha" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
      Значение альфа-канала для наложения, размещенного в верхней части контейнера при его деактивации.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
      Радиус углов компонента. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 0. Значением по умолчанию для ApplicationControlBar является 5.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="uint">
<description>
      Цвет области содержимого компонента.
       
      </description>
<default>0xFFFFFF
      
      </default>

<playerversion>AIR 1.5
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 4
     </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="Number">
<description>
      Альфа-канал фона содержимого для данного компонента.
     
      </description>

<playerversion>AIR 1.5
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 4
     </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="barColor" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="uint">
<description>
      Определяет цвет ProgressBar. ProgressBar заполняется вертикальным градиентом между этим цветом и более ярким цветом, вычисленным на его основе. Этот стиль не влияет на другие компоненты, но может быть установлен в контейнере в целях управления внешним видом всех включенных индикаторов выполнения. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. В этом случае используется свойство стиля <codeph>themeColor</codeph>.
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
      Цвет фона компонента. Можно одновременно установить значения для свойств <codeph>backgroundColor</codeph> и <codeph>backgroundImage</codeph>. Некоторые компоненты не имеют фона. Элемент управления DataGrid игнорирует этот стиль. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. Если этот стиль и стиль <codeph>backgroundImage</codeph> имеют значения <codeph>undefined</codeph>, фон компонента будет прозрачным.
           <p>Для контейнера Application этот стиль указывает цвет фона во время загрузки приложения и градиент фона во время выполнения приложения. Flex вычисляет образец градиента между двумя цветами: немного более темным и немного более светлым, чем указанный цвет.</p>
     
      <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате цвет фона контейнера частично «расплывается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
      <pre>
      &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
          &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
      &lt;/mx:<i>Container</i>></pre>
      </p>
      
      </description>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
      Альфа-уровень цвета, определяемый свойством <codeph>backgroundColor</codeph> для изображения или файла SWF, заданного стилем <codeph>backgroundImage</codeph>. Допустимыми являются значения от 0,0 до 1,0. Для большинства элементов управления значением по умолчанию является 1,0, но для элементов управления ToolTip значением по умолчанию является 0,95, а для элементов управления Alert – 0,9.
      
      </description>
<default>1.0
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAttachment" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
      При указании фонового изображения этот стиль указывает на его фиксированность относительно области просмотра (<codeph>fixed</codeph>) или выполняет прокрутку содержимого (<codeph>scroll</codeph>).
           </description>
<default>"scroll"
      
      </default>

<playerversion>AIR 1.1
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 3
     </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="accentColor" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="uint">
<description>
      Цвет для акцентов, используемый темами оформления компонента. Заданная по умолчанию тема оформления кнопки использует этот цвет для определения оттенка фона. Этот цвет используется при выделении полосы прокрутки. 
     
      </description>
<default>#0099FF
     
      </default>

<playerversion>AIR 1.5
      </playerversion>
	<prolog><asCustoms><langversion>3.0
      </langversion><productversion>Flex 4
     </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значение по умолчанию – 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не перезаписано для класса, в качестве значения по умолчанию используется 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.charts:Legend" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.charts:Legend" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts:Legend" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Функция кернинга поддерживается только для вложенных расширенных шрифтов с возможностью сглаживания. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элементов управления Button значением по умолчанию является <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании вложенного расширенного шрифта с возможностью сглаживания и в том случае, если для свойства <codeph>fontAntiAliasType</codeph> установлено значение <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, что разрешает расширенное сглаживание при использовании вложенного расширенного шрифта с возможностью сглаживания. Для отключения расширенного сглаживания установите значение <codeph>normal</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts:Legend" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts:Legend" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между правой границей элемента управления и правым краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.charts:Legend" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей элемента управления и левым краем его области содержимого.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. Если для свойства установлено отрицательное значение, тень отображается над компонентом.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет тени.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах установите свойство <codeph>contentBackgroundColor</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Этот стиль используется при установке значения solid для свойства <codeph>borderStyle</codeph>. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах выберите свойства <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.charts:Legend" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Возможными значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>inset</codeph>. Значением по умолчанию для большинства контейнеров является <codeph>none</codeph>. Значения <codeph>inset</codeph> и <codeph>outset</codeph> являются действительными только с темой Halo.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.charts:Legend" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления границы компонента. Значением по умолчанию во всех компонентах, где оно не установлено явным образом, является <codeph>mx.skins.halo.HaloBorder</codeph> для тем Halo и <codeph>mx.skins.spark.BorderSkin</codeph> для тем Spark. Значением по умолчанию контейнера Panel является <codeph>mx.skins.halo.PanelSkin</codeph> для темы Halo и <codeph>mx.skins.spark.BorderSkin</codeph> для темы Spark. Для определения значения по умолчанию для компонента см. файл default.css.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="String">
<description>
  Стороны ограничительной рамки. Строка, разделенная пробелами, указывающая отображаемые стороны границы. Строка может содержать значения <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph> в любом порядке. Значением по умолчанию является <codeph>left top right bottom</codeph>. При этом будут отображаться все четыре стороны. Этот стиль используется только в том случае, если для borderStyle установлено значение <codeph>solid</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. Значение по умолчанию зависит от класса компонента. Если значение для класса не изменено, то значением по умолчанию является <codeph>0xB7BABC</codeph> для темы Halo и <codeph>0x696969</codeph> для темы Spark.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.charts:Legend" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="String">
<description>
  Масштабирует изображение, указанное свойством <codeph>backgroundImage</codeph>, в соответствии с различными указываемыми процентными значениями. При значении <codeph>100%</codeph> изображение растягивается по всей области компонента. Для указания процентного значения необходимо добавить символ процента (%). Значением по умолчанию для контейнера Application является <codeph>100%</codeph>. Значением по умолчанию для всех других контейнеров является <codeph>auto</codeph>, при котором сохраняется первоначальный размер изображения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Фоновое изображение компонента. Может являться классом, абсолютным или относительным URL-адресом. Можно установить <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. Фоновое изображение отображается поверх цвета фона. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что значение не установлено. Если этот стиль и стиль <codeph>backgroundColor</codeph> не определены, для компонента устанавливается прозрачный фон.
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате фоновое изображение контейнера частично «растекается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.charts:Legend" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента при его деактивации. Глобальным значением по умолчанию является <codeph>undefined</codeph>. Значением по умолчанию для элементов управления List является <codeph>0xDDDDDD</codeph> (светло-серый). Если контейнер деактивирован, фон бледнеет в соответствии с градацией, заданной стилем <codeph>disabledOverlayAlpha</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[ 
      <p>The <code>&lt;mx:Legend&gt;</code> tag inherits all the properties
      of its parent classes and adds the following properties:</p>
      
      <pre>
      &lt;mx:Legend
        <strong>Properties</strong>
        autoLayout="true|false"
        clipContent="true|false"
        creationIndex="undefined"
        creationPolicy="auto|all|queued|none"
        dataProvider="<i>No default</i>"
        direction="horizontal|vertical"
        horizontalScrollPosition="0"
        legendItemClass="<i>No default</i>"
        verticalScrollPosition="0"   
     
        <strong>Styles</strong>
        backgroundAlpha="1.0"
        backgroundAttachment="scroll"
        backgroundColor="undefined"
        backgroundDisabledColor="undefined"
        backgroundImage="undefined"
        backgroundSize="auto" 
        barColor="undefined"
        borderColor="0xAAB3B3"
        borderSides="left top right bottom"
        borderSkin="mx.skins.halo.HaloBorder"
        borderStyle="inset|none|solid|outset"
        borderThickness="1"
        color="0x0B333C"
        cornerRadius="0"
        disabledColor="0xAAB3B3"
        disbledOverlayAlpha="undefined"
        dropShadowColor="0x000000"
        dropShadowEnabled="false"
        fontAntiAliasType="advanced"
        fontfamily="Verdana"
        fontGridFitType="pixel"
        fontSharpness="0""
        fontSize="10"
        fontStyle="normal"
        fontThickness="0"
        fontWeight="normal"
        horizontalAlign="left|center|right"
        horizontalGap="<i>8</i>"
        labelPlacement="right|left|top|bottom"
        markerHeight="15"
        markerWidth="10"
        paddingBottom="0"
        paddingLeft="0"
        paddingRight="0"
        paddingTop="0"
        shadowDirection="center"
        shadowDistance="2"
        stroke="<i>IStroke; no default</i>"
        textAlign="left"
        textDecoration="none|underline"
        textIndent="0"
        verticalAlign="top|middle|bottom"
        verticalGap="<i>6</i>"
        
        <strong>Events</strong>
        childAdd="<i>No default</i>"
        childIndexChange="<i>No default</i>"
        childRemove="<i>No default</i>"
        dataChange="<i>No default</i>"
        itemClick="<i>Event; no default</i>"
        itemMouseDown="<i>Event; no default</i>"
        itemMouseOut="<i>Event; no default</i>"
        itemMouseOver="<i>Event; no default</i>"
        itemMouseUp="<i>Event; no default</i>"
      /&gt;
      </pre>
           ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IContainer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      Элемент управления Legend добавляет легенду к диаграммам, в которых легенды отображают метку для каждой серии данных в диаграмме и ключ, указывающий элемент диаграммы для серии.
      
      <p>Элемент управления Legend можно инициализировать путем связывания идентификатора элемента управления диаграммы со свойством <codeph>dataProvider</codeph> элемента управления Legend; кроме того, можно определить массив объектов LegendItem.</p>
           </apiDesc><example conref="PlotChartExample.mxml"><swfblock conref="examples/PlotChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.xml#LegendItem"><linktext>mx.charts.LegendItem</linktext></link></related-links><adobeApiEvent id="mx.charts:Legend_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
      Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается при изменении свойства<codeph>data</codeph>.
           <p>Если легенда используется как средство визуализации в List или других компонентах, свойство <codeph>data</codeph> используется для передачи в легенду данных для отображения.</p>
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.events.ChildExistenceChangedEvent.CHILD_REMOVE_childRemove"><apiName>childRemove</apiName><shortdesc>
      Отправляется до удаления нижестоящего элемента легенды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ChildExistenceChangedEvent.CHILD_REMOVE</apiEventType><adobeApiEventClassifier>mx.events.ChildExistenceChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Отправляется до удаления нижестоящего элемента легенды.
           <p>Это событие доставляется при вызове одного из следующих методов: <codeph>removeChild()</codeph>, <codeph>removeChildAt()</codeph> или <codeph>removeAllChildren()</codeph>.</p>
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.events.IndexChangedEvent.CHILD_INDEX_CHANGE_childIndexChange"><apiName>childIndexChange</apiName><shortdesc>
      Отправляется после изменения индекса нижестоящего элемента легенды (среди нижестоящих элементов легенды).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.CHILD_INDEX_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Отправляется после изменения индекса нижестоящего элемента легенды (среди нижестоящих элементов легенды). Это событие отправляется для нижестоящего элемента, указанного в качестве аргумента для метода <codeph>setChildIndex()</codeph>; событие не отправляется для нижестоящих элементов, изменение индекса которых вызвано побочным эффектом вызова метода <codeph>setChildIndex()</codeph>.
           <p>Индекс нижестоящего элемента изменяется при вызове метода <codeph>setChildIndex()</codeph>.</p>
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.events.ChildExistenceChangedEvent.CHILD_ADD_childAdd"><apiName>childAdd</apiName><shortdesc>
      Отправляется после добавления нижестоящего элемента к легенде.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ChildExistenceChangedEvent.CHILD_ADD</apiEventType><adobeApiEventClassifier>mx.events.ChildExistenceChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Отправляется после добавления нижестоящего элемента к легенде.
           <p>Событие childAdd отправляется при вызове метода <codeph>addChild()</codeph> или <codeph>addChildAt()</codeph>. При первоначальном создании контейнера метод <codeph>addChild()</codeph> вызывается автоматически для каждого нижестоящего компонента, объявленного в файле MXML. Метод <codeph>addChildAt()</codeph> вызывается автоматически при каждом добавлении или удалении объектом Repeater нижестоящих объектов. Разработчик приложений может также вызывать методы для добавления новых нижестоящих элементов вручную.</p>
           <p>Во время отправки данного события нижестоящий объект инициализирован, но его ширина и высота еще не вычислены, и нижестоящий элемент не выведен на экран. Если требуется уведомление о полной инициализации и визуализации нижестоящего элемента, зарегистрируйте прослушиватель для события нижестоящего элемента <codeph>creationComplete</codeph>.</p>
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.charts.events.LegendMouseEvent.ITEM_MOUSE_UP_itemMouseUp"><apiName>itemMouseUp</apiName><shortdesc>
      Передается, когда пользователь отпускает кнопку мыши, указатель которой наведен на LegendItem в элементе управления Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.LegendMouseEvent.ITEM_MOUSE_UP</apiEventType><adobeApiEventClassifier>mx.charts.events.LegendMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается, когда пользователь отпускает кнопку мыши, указатель которой наведен на LegendItem в элементе управления Legend.
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.charts.events.LegendMouseEvent.ITEM_MOUSE_OVER_itemMouseOver"><apiName>itemMouseOver</apiName><shortdesc>
      Передается, когда пользователь перемещает курсор мыши на LegendItem в элементе управления Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.LegendMouseEvent.ITEM_MOUSE_OVER</apiEventType><adobeApiEventClassifier>mx.charts.events.LegendMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается, когда пользователь перемещает курсор мыши на LegendItem в элементе управления Legend.
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.charts.events.LegendMouseEvent.ITEM_MOUSE_OUT_itemMouseOut"><apiName>itemMouseOut</apiName><shortdesc>
      Передается, когда пользователь перемещает курсор мыши за пределы LegendItem в элементе управления Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.LegendMouseEvent.ITEM_MOUSE_OUT</apiEventType><adobeApiEventClassifier>mx.charts.events.LegendMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается, когда пользователь перемещает курсор мыши за пределы LegendItem в элементе управления Legend.
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.charts.events.LegendMouseEvent.ITEM_MOUSE_DOWN_itemMouseDown"><apiName>itemMouseDown</apiName><shortdesc>
      Передается, когда пользователь нажимает кнопку мыши, указатель которой наведен на LegendItem в элементе управления Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.LegendMouseEvent.ITEM_MOUSE_DOWN</apiEventType><adobeApiEventClassifier>mx.charts.events.LegendMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается, когда пользователь нажимает кнопку мыши, указатель которой наведен на LegendItem в элементе управления Legend.
           </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.charts:Legend_mx.charts.events.LegendMouseEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
      Передается, когда пользователь выбирает LegendItem в элементе управления Legend.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.charts.events.LegendMouseEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.charts.events.LegendMouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
      Передается, когда пользователь выбирает LegendItem в элементе управления Legend.
           </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.charts:Legend:Legend"><apiName>Legend</apiName><shortdesc>
          Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
          Конструктор.
          
          </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts:Legend:addChildAt"><apiName>addChildAt</apiName><shortdesc>
          Добавляет нижестоящий элемент DisplayObject к этому контейнеру.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Добавляемый нижестоящий элемент как объект типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу добавляемого компонента.
                   </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>DisplayObject для добавления в качестве нижестоящего элемента этого контейнера. Он должен реализовывать интерфейс IUIComponent.
                   </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс для места добавления нижестоящего элемента.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Добавляет нижестоящий элемент DisplayObject к этому контейнеру. Нижестоящий элемент добавляется к указанной позиции индекса.
                   <p><b>Примечание. </b>Несмотря на то что аргумент <codeph>child</codeph> для метода указан как аргумент типа DisplayObject, он должен реализовывать интерфейс IUIComponent для добавления в качестве нижестоящего элемента контейнера. Все компоненты Flex реализуют этот интерфейс.</p>
                   <p>Нижестоящие элементы расположены слоями от задней части экрана к передней. Другими словами, при наложении нижестоящих элементов элемент с индексом 0 является самым дальним, а элемент с индексом <codeph>numChildren – 1</codeph> расположен в самой передней части экрана. Это означает, что последние добавленные нижестоящие элементы располагаются перед существующими нижестоящими элементами.</p>
                   <p>При добавлении нового нижестоящего элемента в позицию индекса, занятую старым нижестоящим элементом, он не заменяет старый нижестоящий элемент; вместо этого старый нижестоящий элемент и новый «наслаиваются» и индекс увеличивается на единицу. Предположим, что контейнер содержит нижестоящие элементы (A, B, C) и к ним добавляется элемент D к индексу 1. Тогда контейнер будет содержать (A, D, B, C). Если требуется заменить старый нижестоящий элемент, следует удалить его до добавления нового.</p>
                   </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.IUIComponent.xml"><linktext>mx.core.IUIComponent</linktext></link></related-links></apiOperation><apiOperation id="mx.charts:Legend:addChild"><apiName>addChild</apiName><shortdesc>
          Добавляет нижестоящий элемент DisplayObject к этому контейнеру.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Добавляемый нижестоящий элемент как объект типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу добавляемого компонента.
                   </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>DisplayObject для добавления в качестве нижестоящего элемента этого контейнера. Он должен реализовывать интерфейс IUIComponent.
                   </apiDesc></apiParam><apiTipTexts><apiTipText>Добавляет нижестоящий объект к этому контейнеру.
          
          </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
          Добавляет нижестоящий элемент DisplayObject к этому контейнеру. Нижестоящий элемент добавляется после остальных существующих нижестоящих элементов, так что первый добавленный нижестоящий элемент имеет индекс 0, следующий – 1 и т. д.
                   <p><b>Примечание. </b>Несмотря на то что аргумент <codeph>child</codeph> для метода указан как аргумент типа DisplayObject, он должен реализовывать интерфейс IUIComponent для добавления в качестве нижестоящего элемента контейнера. Все компоненты Flex реализуют этот интерфейс.</p>
                   <p>Нижестоящие элементы расположены слоями от задней части экрана к передней. Другими словами, при наложении нижестоящих элементов элемент с индексом 0 является самым дальним, а элемент с индексом <codeph>numChildren – 1</codeph> расположен в самой передней части экрана. Это означает, что последние добавленные нижестоящие элементы располагаются перед существующими нижестоящими элементами.</p>
                   </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.IUIComponent.xml"><linktext>mx.core.IUIComponent</linktext></link></related-links></apiOperation><apiOperation id="mx.charts:Legend:addElementAt"><apiName>addElementAt</apiName><shortdesc conref="mx.core.IVisualElementContainer#addElementAt()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.core:IVisualElement"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#addElementAt()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:addElement"><apiName>addElement</apiName><shortdesc conref="mx.core.IVisualElementContainer#addElement()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.core:IVisualElement"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#addElement()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:protected:attachOverlay"><apiName>attachOverlay</apiName><shortdesc>
          Используется на внутреннем уровне эффектом Dissolve для добавления оверлея к хрому контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Используется на внутреннем уровне эффектом Dissolve для добавления оверлея к хрому контейнера. 
          
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:contentToGlobal"><apiName>contentToGlobal</apiName><shortdesc conref="mx.core.UIComponent#contentToGlobal()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#contentToGlobal()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:contentToLocal"><apiName>contentToLocal</apiName><shortdesc conref="mx.core.UIComponent#contentToLocal()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#contentToLocal()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
          При необходимости создает тему оформления границы контейнера, если она не существует.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          При необходимости создает тему оформления границы контейнера, если она не существует.
          
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:createComponentFromDescriptor"><apiName>createComponentFromDescriptor</apiName><shortdesc>
          Если указан отдельный UIComponentDescriptor, создайте соответствующий компонент и добавьте его в качестве нижестоящего элемента данного контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Созданный компонент.
         
          </apiDesc><apiType value="mx.core:IFlexDisplayObject"/></apiReturn><apiParam><apiItemName>descriptor</apiItemName><apiType value="mx.core:ComponentDescriptor"/><apiDesc>UIComponentDescriptor для создаваемого компонента. Этот аргумент является объектом UIComponentDescriptor или индексом одного из нижестоящих элементов контейнера (целое число между 0 и n-1, где n – общее количество нижестоящих элементов этого контейнера).
                   </apiDesc></apiParam><apiParam><apiItemName>recurse</apiItemName><apiType value="Boolean"/><apiDesc>При значении <codeph>false</codeph> создается этот компонент, но не его нижестоящие элементы. При значении <codeph>true</codeph> после создания компонента Flex вызывает метод <codeph>createComponentsFromDescriptors()</codeph> для создания всех или нескольких нижестоящих элементов на основе значения свойства компонента <codeph>creationPolicy</codeph>.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Если указан отдельный UIComponentDescriptor, создайте соответствующий компонент и добавьте его в качестве нижестоящего элемента данного контейнера.
          
          <p>Этот метод создает экземпляры нового объекта, но не добавляет его к списку отображения, таким образом, объект не появляется на экране по умолчанию. Для добавления нового объекта к списку отображения вызовите в контейнере метод <codeph>validateNow()</codeph> после вызова метода <codeph>createComponentFromDescriptor()</codeph>, как показано в следующем примере:
          <pre>
          myVBox.createComponentFromDescriptor(myVBox.childDescriptors[0],false);
          myVBox.validateNow();
          </pre>
          </p>
          
          <p>Либо вызовите в контейнере метод<codeph>createComponentsFromDescriptors()</codeph> для одновременного создания всех компонентов. Вызов метода <codeph>validateNow()</codeph> после вызова метода <codeph>createComponentsFromDescriptors()</codeph> является необязательным.</p>
                   </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.UIComponentDescriptor.xml"><linktext>mx.core.UIComponentDescriptor</linktext></link></related-links></apiOperation><apiOperation id="mx.charts:Legend:createComponentsFromDescriptors"><apiName>createComponentsFromDescriptors</apiName><shortdesc>
          Выполните итерации в отношении массива childDescriptors и вызовите методcreateComponentFromDescriptor() для каждого элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recurse</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>При значении <codeph>true</codeph> компоненты создаются рекурсивно.
          
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Выполните итерации в отношении массива <codeph>childDescriptors</codeph> и вызовите метод<codeph>createComponentFromDescriptor()</codeph> для каждого элемента.
          
          <p>Если значение свойства контейнера <codeph>creationPolicy</codeph> – <codeph>ContainerCreationPolicy.ALL</codeph>, этот метод вызывается автоматически в порядке инициализации.</p>
          
          <p>Если значение контейнера <codeph>creationPolicy</codeph> – <codeph>ContainerCreationPolicy.AUTO</codeph>, этот метод вызывается автоматически, когда нижестоящие элементы контейнера становятся видимыми.</p>
          
          <p>Если значение свойства контейнера <codeph>creationPolicy</codeph> – <codeph>ContainerCreationPolicy.NONE</codeph>, необходимо вызвать эту функцию для создания нижестоящих элементов контейнера.</p>
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:createDeferredContent"><apiName>createDeferredContent</apiName><shortdesc>
          Выполняет эквивалентную операцию вызова метода createComponentsFromDescriptors(true) для контейнеров, внедряющих интерфейс IDeferredContentOwner для поддержки отложенной реализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Выполняет эквивалентную операцию вызова метода <codeph>createComponentsFromDescriptors(true)</codeph> для контейнеров, внедряющих интерфейс IDeferredContentOwner для поддержки отложенной реализации.
                   </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#Legend/createComponentsFromDescriptors()"><linktext>createComponentsFromDescriptors()</linktext></link></related-links></apiOperation><apiOperation id="mx.charts:Legend:executeBindings"><apiName>executeBindings</apiName><shortdesc>
          Выполняет все привязки данных в этом контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recurse</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>При значении <codeph>false</codeph> выполните привязки только для этого контейнера. При значении <codeph>true</codeph> выполните также привязки для нижестоящих элементов первого, второго и третьего уровней контейнера.
          
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Выполняет все привязки данных в этом контейнере. Flex вызывает этот метод автоматически после создания контейнера для инициации всех привязок данных, которые содержат выполняемые адреса назначения. Обходной путь решения проблемы контейнера/связывания MXML (177074): отмените Container.executeBindings() в пользу descriptor.document поверх parentDocument при вызове BindingManager.executeBindings(). Это должно обеспечить правильное поведение экземпляров, создаваемых дескриптором, и обеспечить исходное поведение экземпляров, созданных с помощью процедур. (В последнем случае может возникнуть ошибка.) Более полный вариант исправлений, гарантирующий правильное поведение как в сценариях не-DI, так и в сценариях восстановления отношений компонентов, ожидается в средстве обновления 1.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:executeChildBindings"><apiName>executeChildBindings</apiName><shortdesc>
          Выполняет привязки к объекту UIComponent нижестоящего элемента контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recurse</apiItemName><apiType value="Boolean"/><apiDesc>При значении <codeph>false</codeph> выполните привязки только для непосредственных нижестоящих элементов этого контейнера. При значении <codeph>true</codeph> выполните также привязки для нижестоящих элементов второго, третьего уровня и т. д.
          
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Выполняет привязки к объекту UIComponent нижестоящего элемента контейнера. Flex вызывает этот метод автоматически при создании контейнера.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:getChildAt"><apiName>getChildAt</apiName><shortdesc>
          Получает n-ный объект нижестоящего компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Ссылка на нижестоящий элемент как объект типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу элемента управления Flex, например ComboBox или TextArea.
          
          </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Число от 0 до (numChildren – 1).
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Получает <i>n</i>-ный объект нижестоящего компонента.
                   <p>Нижестоящие записи, возвращаемые из этого метода, включают нижестоящие элементы, объявленные в MXML, и нижестоящие элементы, добавленные при помощи метода <codeph>addChild()</codeph> или <codeph>addChildAt()</codeph>.</p>
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:getChildByName"><apiName>getChildByName</apiName><shortdesc>
          Возвращает нижестоящий элемент, свойство name которого является указанным String.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>DisplayObject, представляющий нижестоящий элемент как объект типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу элемента управления Flex, например ComboBox или TextArea. Возвращает динамическую ошибку, если нижестоящий элемент с указанным именем не существует.
          
          </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>Идентификатор нижестоящего элемента.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Возвращает нижестоящий элемент, свойство <codeph>name</codeph> которого является указанным String.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:getChildIndex"><apiName>getChildIndex</apiName><shortdesc>
          Получает отсчитываемый от нуля индекс нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Число между 0 и (numChildren – 1).
          
          </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Ссылка на нижестоящий элемент с получаемым индексом.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Получает отсчитываемый от нуля индекс нижестоящего элемента.
                   <p>Первый нижестоящий элемент контейнера (например: первый нижестоящий тег, объявленный в MXML) имеет индекс 0, второй нижестоящий элемент – индекс 1 и т. д. Индексы нижестоящих элементов контейнера определяют порядок их расположения. Например, в VBox нижестоящий элемент с индексом 0 расположен в верхней части контейнера, нижестоящий элемент с индексом 1 – под ним и т. д.</p>
                   <p>При добавлении нижестоящего элемента посредством вызова метода <codeph>addChild()</codeph> индекс нового нижестоящего элемента равен самому высокому индексу среди существующих нижестоящих элементов плюс единица. Можно вставить нижестоящий элемент в указанной позиции индекса при помощи метода <codeph>addChildAt()</codeph>; в этом случае индексы нижестоящего элемента ранее находившегося в этой позиции индекса, и нижестоящих элементов с более высокими индексами увеличиваются на один, так что все индексы располагаются в диапазоне от 0 до <codeph>(numChildren - 1)</codeph>.</p>
                   <p>При удалении нижестоящего элемента при помощи вызова метода <codeph>removeChild()</codeph> или <codeph>removeChildAt()</codeph> индексы остальных нижестоящих элементов регулируются, чтобы все индексы располагались в диапазоне от 0 до <codeph>(numChildren – 1)</codeph>.</p>
                   <p>Если <codeph>myView.getChildIndex(myChild)</codeph> возвращает 5, то <codeph>myView.getChildAt(5)</codeph> возвращает myChild.</p>
                   <p>Индекс нижестоящего элемента может быть изменен посредством вызова метода <codeph>setChildIndex()</codeph>.</p>
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:getChildren"><apiName>getChildren</apiName><shortdesc>
          Возвращает массив объектов DisplayObject, состоящий из нижестоящих элементов содержимого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Массив объектов DisplayObject, состоящий из нижестоящих элементов содержимого контейнера.
         
          </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
          Возвращает массив объектов DisplayObject, состоящий из нижестоящих элементов содержимого контейнера. Этот массив <b>не</b> включает DisplayObjects, реализующие элементы отображения контейнера, как, например, граница и фоновое изображение контейнера.
                   </apiDesc></apiOperationDetail><related-links><link href="mx.charts.xml#Legend/rawChildren"><linktext>rawChildren</linktext></link></related-links></apiOperation><apiOperation id="mx.charts:Legend:getElementAt"><apiName>getElementAt</apiName><shortdesc conref="mx.core.IVisualElementContainer#getElementAt()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.core:IVisualElement"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#getElementAt()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:getElementIndex"><apiName>getElementIndex</apiName><shortdesc conref="mx.core.IVisualElementContainer#getElementIndex()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#getElementIndex()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:globalToContent"><apiName>globalToContent</apiName><shortdesc conref="mx.core.UIComponent#globalToContent()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#globalToContent()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:protected:layoutChrome"><apiName>layoutChrome</apiName><shortdesc>
          Установите позиции и размеры границ этого контейнера в ответ на изменение размера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
                   </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
          
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Установите позиции и размеры границ этого контейнера в ответ на изменение размера. Это расширенный метод, который можно переопределить при создании подкласса контейнера.
                   <p>Метод <codeph> layoutChrome()</codeph> вызывается программой Flex при добавлении контейнера к вышестоящему контейнеру при помощи метода <codeph>addChild()</codeph>, а также при вызове метода контейнера <codeph>invalidateDisplayList()</codeph>.</p>
                   <p>Метод <codeph>Container.layoutChrome()</codeph> вызывается вне зависимости от значения свойства <codeph>autoLayout</codeph>.</p>
                   <p>Метод <codeph>Container.layoutChrome()</codeph> устанавливает положение и размер границы контейнера Container. В каждом подклассе Container метод<codeph>layoutChrome()</codeph> подкласса должен выполнить вызов метода <codeph>super.layoutChrome()</codeph> для правильного установления границы.</p>
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:localToContent"><apiName>localToContent</apiName><shortdesc conref="mx.core.UIComponent#localToContent()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>point</apiItemName><apiType value="flash.geom:Point"/></apiParam></apiOperationDef><apiDesc conref="mx.core.UIComponent#localToContent()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeAllChildren"><apiName>removeAllChildren</apiName><shortdesc>
          Удаляет все нижестоящие элементы из списка нижестоящих элементов этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Удаляет все нижестоящие элементы из списка нижестоящих элементов этого контейнера.
          
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeAllElements"><apiName>removeAllElements</apiName><shortdesc conref="mx.core.IVisualElementContainer#removeAllElements()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#removeAllElements()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeChildAt"><apiName>removeChildAt</apiName><shortdesc>
          Удаляет нижестоящий элемент DisplayObject в указанной позиции индекса из этого списка нижестоящих элементов контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Удаляемый нижестоящий элемент является объектом типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу удаляемого компонента.
          
          </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Удаляемый индекс нижестоящего элемента DisplayObject.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Удаляет нижестоящий элемент DisplayObject в указанной позиции индекса из этого списка нижестоящих элементов контейнера. Удаляемый нижестоящий элемент будет иметь свойство <codeph>parent</codeph> со значением null. Нижестоящий элемент будет по-прежнему существовать, если не будет удален явным образом. При добавлении элемента к другому контейнеру, он сохранит последнее известное состояние.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeChild"><apiName>removeChild</apiName><shortdesc>
          Удаляет нижестоящий элемент DisplayObject из списка нижестоящих элементов этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Удаляемый нижестоящий элемент является объектом типа DisplayObject. Как правило, возвращаемое значение приводится к UIComponent или типу удаляемого компонента.
          
          </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Удаляемый элемент DisplayObject.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Удаляет нижестоящий элемент DisplayObject из списка нижестоящих элементов этого контейнера. Удаляемый нижестоящий элемент будет иметь свойство <codeph>parent</codeph> со значением null. Нижестоящий элемент будет по-прежнему существовать, если не будет удален явным образом. При добавлении элемента к другому контейнеру, он сохранит последнее известное состояние.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeElementAt"><apiName>removeElementAt</apiName><shortdesc conref="mx.core.IVisualElementContainer#removeElementAt()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.core:IVisualElement"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#removeElementAt()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:removeElement"><apiName>removeElement</apiName><shortdesc conref="mx.core.IVisualElementContainer#removeElement()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.core:IVisualElement"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#removeElement()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:protected:scrollChildren"><apiName>scrollChildren</apiName><shortdesc>
          Размещает область содержимого контейнера относительно видимой области на основе свойств horizontalScrollPosition и verticalScrollPosition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Размещает область содержимого контейнера относительно видимой области на основе свойств horizontalScrollPosition и verticalScrollPosition. Содержимое, не отображаемое в видимой области, отсекается. Этот метод должен быть переопределен подклассами, имеющими прокручиваемый хром в области содержимого.
          
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:setChildIndex"><apiName>setChildIndex</apiName><shortdesc>
          Устанавливает индекс определенного нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Ссылка на нижестоящий элемент с получаемым индексом.
                   </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/><apiDesc>Число, указывающее новый индекс. Должно быть целым числом от 0 до (numChildren – 1).
          
          </apiDesc></apiParam></apiOperationDef><apiDesc>
          Устанавливает индекс определенного нижестоящего элемента. См. описание метода <codeph>getChildIndex()</codeph> для получения описания индекса нижестоящего элемента.
                   </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:setElementIndex"><apiName>setElementIndex</apiName><shortdesc conref="mx.core.IVisualElementContainer#setElementIndex()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#setElementIndex()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:swapElementsAt"><apiName>swapElementsAt</apiName><shortdesc conref="mx.core.IVisualElementContainer#swapElementsAt()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index1</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>index2</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#swapElementsAt()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:swapElements"><apiName>swapElements</apiName><shortdesc conref="mx.core.IVisualElementContainer#swapElements()">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element1</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam><apiParam><apiItemName>element2</apiItemName><apiType value="mx.core:IVisualElement"/></apiParam></apiOperationDef><apiDesc conref="mx.core.IVisualElementContainer#swapElements()">
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:Legend:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
          Установите позиции и размеры нижестоящих элементов этого контейнера в ответ на изменение размера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
                   </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента в пикселях в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
                   </apiDesc></apiParam></apiOperationDef><apiDesc>
          Установите позиции и размеры нижестоящих элементов этого контейнера в ответ на изменение размера.
                   <p>Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.</p>
                   <p>Метод <codeph>Container.updateDisplayList()</codeph> устанавливает позицию и размер границы контейнера Container. В каждом подклассе Container метод подкласса<codeph>updateDisplayList()</codeph> должен выполнить вызов метода <codeph>super.updateDisplayList()</codeph> для правильного установления границы.</p>
                   </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.UIComponent.xml"><linktext>mx.core.UIComponent</linktext></link></related-links></apiOperation><apiValue id="mx.charts:Legend:protected:actualCreationPolicy"><apiName>actualCreationPolicy</apiName><shortdesc>
          Политика создания этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
          Политика создания этого контейнера. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:legendItemClass"><apiName>legendItemClass</apiName><shortdesc>
          Класс, используемый для создания экземпляров объектов LegendItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/></apiValueDef><apiDesc>
          Класс, используемый для создания экземпляров объектов LegendItem. При извлечении содержимого легенды из диаграммы или данных создается один экземпляр класса <codeph>legendItemClass</codeph> для каждого элемента, описываемого свойством <codeph>dataProvider</codeph>. При необходимости обеспечения пользовательского поведения элементов легенды подкласс LegendItem можно присвоить этому свойству; таким образом, в легенде создаются экземпляры производного типа.  
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:autoLayout:get"><apiName>autoLayout</apiName><shortdesc>
          При значении true измерение и макет выполняются при изменении позиции или размера нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
          
          </apiDefaultValue></apiValueDef><apiDesc>
          При значении <codeph>true</codeph> измерение и макет выполняются при изменении позиции или размера нижестоящего элемента. При значении <codeph>false</codeph> измерение и макет выполняются только однажды, при добавлении или удалении нижестоящих элементов из контейнера.
                   <p>При использовании эффекта Move макет вокруг перемещающегося компонента не регулируется для соответствия анимации эффекта Move. Установка свойства контейнера <codeph>autoLayout</codeph> на <codeph>true</codeph> не влияет на его поведение.</p>
                   <p>Если свойство <codeph>autoLayout</codeph> установлено на <codeph>false</codeph>, эффект Zoom не работает.</p>
                   <p>Свойство <codeph>autoLayout</codeph> не применимо к контейнерам Accordion или ViewStack.</p>
         
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
          Возвращает объект EdgeMetrics, имеющий четыре свойства: left, top, right и bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:EdgeMetrics"/></apiValueDef><apiDesc>
          Возвращает объект EdgeMetrics, имеющий четыре свойства: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph>. Значение каждого свойства равно толщине одной из сторон границы в пикселях.
                   <p>В отличие от <codeph>viewMetrics</codeph> это свойство не изменяется подклассами Container.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:childDescriptors:get"><apiName>childDescriptors</apiName><shortdesc>
          Массив объектов UIComponentDescriptor, созданных компилятором MXML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
          Массив объектов UIComponentDescriptor, созданных компилятором MXML.
                   <p>Каждый объект UIComponentDescriptor содержит информацию, указанную в нижестоящем теге MXML тега контейнера MXML. Порядок следования объектов UIComponentDescriptor в массиве совпадает с порядком следования нижестоящих тегов. Во время инициализации нижестоящие дескрипторы используются для создания нижестоящих объектов UIComponent и Repeater контейнера и установки указанных в MXML начальных значений свойств, обработчиков событий, эффектов и пр.</p>
                   </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.UIComponentDescriptor.xml"><linktext>mx.core.UIComponentDescriptor</linktext></link></related-links></apiValue><apiValue id="mx.charts:Legend:clipContent:get"><apiName>clipContent</apiName><shortdesc>
          Определяет необходимость применения маски отсечения, если позиции и/или размеры нижестоящих элементов контейнера располагаются за пределами границ этого контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Определяет необходимость применения маски отсечения, если позиции и/или размеры нижестоящих элементов контейнера располагаются за пределами границ этого контейнера. Если установлено значение <codeph>false</codeph>, то нижестоящие элементы этого контейнера остаются видимыми при перемещении или при установлении размера за пределами границ этого контейнера. Если установлено значение <codeph>true</codeph>, нижестоящие элементы этого контейнера отсекаются.
                   <p>Если для <codeph>clipContent</codeph> установлено значение <codeph>false</codeph>, прокрутка для этого контейнера отключается, и полосы прокрутки не будут отображаться. Если для <codeph>clipContent</codeph> установлено значение true, то полосы прокрутки, как правило, отображаются, если нижестоящие элементы контейнера расположены за пределами границ контейнера. Для дополнительного управления внешним видом полосы прокрутки см. <codeph>horizontalScrollPolicy</codeph> и <codeph>verticalScrollPolicy</codeph>.</p>
         
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:contentMouseX:get"><apiName>contentMouseX</apiName><shortdesc conref="mx.core.UIComponent#contentMouseX">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.core.UIComponent#contentMouseX">
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:contentMouseY:get"><apiName>contentMouseY</apiName><shortdesc conref="mx.core.UIComponent#contentMouseY">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.core.UIComponent#contentMouseY">
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:creatingContentPane:get"><apiName>creatingContentPane</apiName><shortdesc>
          Контейнеры используют внутреннюю область содержимого для управления прокруткой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          Контейнеры используют внутреннюю область содержимого для управления прокруткой. Для <codeph>creatingContentPane</codeph> установлено значение <codeph>true</codeph>, если контейнер создает область содержимого, так что некоторые события могут игнорироваться или блокироваться.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:creationIndex:get"><apiName>creationIndex</apiName><shortdesc>
          Указывает порядок создания экземпляров и вывода на экран нижестоящих элементов контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
          
          </apiDefaultValue><apiDeprecated><apiDesc>Устаревший</apiDesc></apiDeprecated></apiValueDef><apiDesc>
          Указывает порядок создания экземпляров и вывода на экран нижестоящих элементов контейнера.
                   <p>Это свойство можно использовать только при установке свойства <codeph>creationPolicy</codeph> на <codeph>ContainerCreationPolicy.QUEUED</codeph>. В противном случае оно игнорируется.</p>
                   </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:creationPolicy:get"><apiName>creationPolicy</apiName><shortdesc>
          Политика создания нижестоящего элемента для этого контейнера MX.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ContainerCreationPolicy.AUTO
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Политика создания нижестоящего элемента для этого контейнера MX. Допустимые значения ActionScript: <codeph>ContainerCreationPolicy.AUTO</codeph>, <codeph>ContainerCreationPolicy.ALL</codeph> или <codeph>ContainerCreationPolicy.NONE</codeph>. Возможные значения MXML: <codeph>auto</codeph>, <codeph>all</codeph> или <codeph>none</codeph>.
                   <p>Если для контейнера не указано свойство <codeph>creationPolicy</codeph>, он наследует <codeph>creationPolicy</codeph> вышестоящего контейнера. Если для приложения не указано свойство <codeph>creationPolicy</codeph>, по умолчанию устанавливается <codeph>ContainerCreationPolicy.AUTO</codeph>.</p>
                   <p><codeph>creationPolicy</codeph> <codeph>ContainerCreationPolicy.AUTO</codeph> означает, что контейнер задерживает создание некоторых или всех нижестоящих элементов, пока они не потребуются; этот процесс называется <i>отложенная реализация</i>. Эта политика обеспечивает наилучший момент запуска, так как первоначально создается меньшее число UIComponents. Однако это приводит к задержкам при навигации при переходе пользователя к другим частям приложения в первый раз. Контейнеры навигатора, как, например, Accordion, TabNavigator и ViewStack, реализуют стратегию <codeph>ContainerCreationPolicy.AUTO</codeph>, создавая все нижестоящие элементы немедленно, но ожидают выбора нижестоящего элемента контейнера навигатора для создания нижестоящих элементов более низкого уровня.</p>
                   <p>Свойство <codeph>creationPolicy</codeph> <codeph>ContainerCreationPolicy.ALL</codeph> означает, что контейнеры навигатора немедленно создают нижестоящие элементы более низкого уровня для каждого нижестоящего элемента, а не ожидает выбора нижестоящего элемента. Для контейнеров с одним представлением, например контейнер VBox, отсутствует разница между политикой <codeph>ContainerCreationPolicy.AUTO</codeph> и <codeph>ContainerCreationPolicy.ALL</codeph>.</p>
                   <p>Свойство <codeph>creationPolicy</codeph> <codeph>ContainerCreationPolicy.NONE</codeph> означает, что контейнер не создает нижестоящие элементы. В этом случае автор MXML берет на себя ответственность по созданию нижестоящих элементов при помощи вызова метода <codeph>createComponentsFromDescriptors()</codeph>.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
          Набор данных, используемых в легенде.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="collectionChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
          Набор данных, используемых в легенде.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:data:get"><apiName>data</apiName><shortdesc>
          Свойство data позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="dataChange"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
          </apiDefaultValue></apiValueDef><apiDesc>
          Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
                   <p>Это свойство не устанавливается в MXML.</p>
                   </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.charts:Legend:deferredContentCreated:get"><apiName>deferredContentCreated</apiName><shortdesc>
          IDeferredContentOwner – эквивалент processedDescriptors
         
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
          IDeferredContentOwner – эквивалент processedDescriptors
         
          </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.charts.xml#UIComponent/processedDescriptors"><linktext>UIComponent.processedDescriptors</linktext></link></related-links></apiValue><apiValue id="mx.charts:Legend:direction:get"><apiName>direction</apiName><shortdesc>
          Определяет способ размещения нижестоящих элементов в контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="directionChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"horizontal"
         
          </apiDefaultValue></apiValueDef><apiDesc>
          Определяет способ размещения нижестоящих элементов в контейнере. Возможными значениями MXML являются <codeph>horizontal</codeph> и <codeph>vertical</codeph>. В ActionScript направление устанавливается с помощью значения TileDirection.HORIZONTAL или TileDirection.VERTICAL. Значением по умолчанию является <codeph>horizontal</codeph>. (Если контейнер является контейнером Legend, который представляет собой подкласс Tile, в качестве значения по умолчанию используется <codeph>vertical</codeph>.)
                   <p>Первый нижестоящий элемент всегда помещается в верхнем левом углу контейнера Tile. Если для свойства <codeph>direction</codeph> установлено значение <codeph>horizontal</codeph>, нижестоящие элементы помещаются слева направо в самой верхней строке, затем слева направо во второй сверху строке и т. д. Если установлено значение <codeph>vertical</codeph>, нижестоящие элементы помещаются сверху вниз в крайнем левом столбце, затем сверху вниз во втором слева столбце и т. д.</p>
                   </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.charts.TileDirection.xml"><linktext>TileDirection</linktext></link></related-links></apiValue><apiValue id="mx.charts:Legend:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc>
          Текущая позиция горизонтальной полосы прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="viewChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Текущая позиция горизонтальной полосы прокрутки. Она совпадает по размеру с расстоянием в пикселях между левой границей прокручиваемой области и крайней левой частью видимой в настоящий момент области.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:maxHorizontalScrollPosition:get"><apiName>maxHorizontalScrollPosition</apiName><shortdesc>
          Максимальное значение для свойства horizontalScrollPosition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
          Максимальное значение для свойства <codeph>horizontalScrollPosition</codeph>. Устанавливает по умолчанию 0 при отсутствии горизонтальной полосы прокрутки.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:maxVerticalScrollPosition:get"><apiName>maxVerticalScrollPosition</apiName><shortdesc>
          Максимальное значение для свойства verticalScrollPosition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
          Максимальное значение для свойства <codeph>verticalScrollPosition</codeph>. Устанавливает по умолчанию 0 при отсутствии вертикальной полосы прокрутки.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:numChildren:get"><apiName>numChildren</apiName><shortdesc>
          Число нижестоящих компонентов в этом контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
          Число нижестоящих компонентов в этом контейнере.
                   <p>Число нижестоящих элементов первоначально равно числу нижестоящих элементов, объявленных в MXML. Во время выполнения новые нижестоящие элементы могут быть добавлены при помощи вызова метода <codeph>addChild()</codeph> или <codeph>addChildAt()</codeph>, а существующие нижестоящие элементы могут быть удалены при помощи вызова метода <codeph>removeChild()</codeph>, <codeph>removeChildAt()</codeph> или <codeph>removeAllChildren()</codeph>.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:numElements:get"><apiName>numElements</apiName><shortdesc conref="mx.core.IVisualElementContainer#numElements">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc conref="mx.core.IVisualElementContainer#numElements">
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:rawChildren:get"><apiName>rawChildren</apiName><shortdesc>
          Как правило, контейнер содержит нижестоящие компоненты, которые могут быть перечислены с использованием метода Container.getChildAt() и свойства Container.numChildren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:IChildList"/></apiValueDef><apiDesc>
          Как правило, контейнер содержит нижестоящие компоненты, которые могут быть перечислены с использованием метода <codeph>Container.getChildAt()</codeph> и свойства <codeph>Container.numChildren</codeph>. Кроме того, контейнер может содержать элементы стиля и темы оформления, как, например, граница и фон. Flash Player и AIR не различают нижестоящие элементы и темы оформления. Они доступны с использованием метода проигрывателя <codeph>getChildAt()</codeph> и свойства <codeph>numChildren</codeph>. Однако класс Container переопределяет метод <codeph>getChildAt()</codeph> и свойство <codeph>numChildren</codeph> (и несколько других методов) для создания иллюзии, что нижестоящие элементы контейнера являются единственными нижестоящими компонентами.
                   <p>При необходимости получения доступа ко всем нижестоящим элементам контейнера (нижестоящим элементам содержимого и темам оформления) используйте методы и свойства в свойстве <codeph>rawChildren</codeph> вместо стандартных методов контейнера. Например, используйте метод <codeph>Container.rawChildren.getChildAt())</codeph>. Однако, если контейнер создает объект ContentPane Sprite для нижестоящих элементов, значение свойства <codeph>rawChildren</codeph> учитывается только для ContentPane, а не для нижестоящих элементов контейнера. Определение наличия ContentPane для контейнера не всегда возможно.</p>
         
          <p><b>Примечание.</b>При вызове метода <codeph>addChild</codeph> или <codeph>addChildAt</codeph> объекта <codeph>rawChildren</codeph> установите значение <codeph>tabFocusEnabled = false</codeph> для добавляемого компонента. Выполнение этой операции предотвращает табулирование только к видимым добавленным компонентам.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:verticalScrollPosition:get"><apiName>verticalScrollPosition</apiName><shortdesc>
          Текущая позиция вертикальной полосы прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="viewChanged"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Текущая позиция вертикальной полосы прокрутки. Она совпадает по размеру с расстоянием в пикселях между верхней границей прокручиваемой области и крайней верхней частью видимой в настоящий момент области.
                   </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:viewMetricsAndPadding:get"><apiName>viewMetricsAndPadding</apiName><shortdesc>
          Возвращает объект, имеющий четыре свойства: left, top, right и bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:EdgeMetrics"/></apiValueDef><apiDesc>
          Возвращает объект, имеющий четыре свойства: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph>. Значение каждого свойства равно толщине хрома (визуальные элементы) вокруг границы контейнера в совокупности с толщиной полей объекта.
                   <p>Хром включает толщину границ. Если свойство <codeph>horizontalScrollPolicy</codeph> или <codeph>verticalScrollPolicy</codeph> имеют значение <codeph>ScrollPolicy.ON</codeph>, хром также включает толщину соответствующей полосы прокрутки. Если стратегия прокрутки имеет значение <codeph>ScrollPolicy.AUTO</codeph>, измерение хрома не включает толщину полосы прокрутки даже в случае ее отображения.</p>
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:Legend:viewMetrics:get"><apiName>viewMetrics</apiName><shortdesc>
          Возвращает объект, имеющий четыре свойства: left, top, right и bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="mx.core:EdgeMetrics"/></apiValueDef><apiDesc>
          Возвращает объект, имеющий четыре свойства: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph>. Значение каждого свойства равно толщине хрома (визуальные элементы) вокруг границы контейнера. 
                   <p>Хром включает толщину границ. Если свойство <codeph>horizontalScrollPolicy</codeph> или <codeph>verticalScrollPolicy</codeph> имеют значение <codeph>ScrollPolicy.ON</codeph>, хром также включает толщину соответствующей полосы прокрутки. Если стратегия прокрутки имеет значение <codeph>ScrollPolicy.AUTO</codeph>, измерение хрома не включает толщину полосы прокрутки даже в случае ее отображения.</p>
                   <p>Подклассы контейнера должны переопределять этот метод так, чтобы они могли учитывать другой хром при расположении нижестоящих элементов контейнера. Например, свойство<codeph>viewMetrics</codeph> для класса Panel должно возвращать объект, свойство <codeph>top</codeph> которого включает толщину строки заголовка контейнера Panel.</p>
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:ChartItem"><apiName>ChartItem</apiName><shortdesc>
  Элемент ChartItem представляет отдельный элемент в ChartSeries.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент ChartItem представляет отдельный элемент в ChartSeries. В большинстве стандартных серий существует один элемент ChartItem, создаваемый для каждого элемента в коллекции dataProvider соответствующей серии. Элементы ChartItems передаются в экземпляры itemRenderer серии для визуализации. Серии большинства типов расширяют элемент ChartItem в целях включения дополнительной информации, специфичной для соответствующего типа диаграммы.  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.charts:ChartItem:ChartItem"><apiName>ChartItem</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>mx.charts.chartClasses:IChartElement</apiOperationClassifier><apiData>null</apiData><apiDesc>Серия или элемент, которому принадлежит ChartItem.
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Элемент из поставщика данных серии, представляемый этим ChartItem.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Индекс данных из поставщика данных серии, представляемый этим элементом ChartItem.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts:ChartItem:clone"><apiName>clone</apiName><shortdesc>
      Возвращает копию этого элемента ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Копия этого элемента ChartItem.
      
      </apiDesc><apiOperationClassifier>mx.charts:ChartItem</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
      Возвращает копию этого элемента ChartItem.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts:ChartItem:DISABLED"><apiName>DISABLED</apiName><shortdesc>
      Значение, которое указывает на то, что элемент ChartItem отображается как деактивированный и не допускающий возможности выбора.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disabled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, которое указывает на то, что элемент ChartItem отображается как деактивированный и не допускающий возможности выбора.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:FOCUSEDSELECTED"><apiName>FOCUSEDSELECTED</apiName><shortdesc>
      Значение, указывающее на то, что элемент ChartItem отображается как активированный и допускающий возможность выбора.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>focusedSelected</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, указывающее на то, что элемент ChartItem отображается как активированный и допускающий возможность выбора.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:FOCUSED"><apiName>FOCUSED</apiName><shortdesc>
      Значение, которое указывает на то, что элемент ChartItem отображается как активированный, но не допускающий возможности выбора.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>focused</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, которое указывает на то, что элемент ChartItem отображается как активированный, но не допускающий возможности выбора.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:NONE"><apiName>NONE</apiName><shortdesc>
      Значение, указывающее на то, что элемент ChartItem отображается как не выбранный, не активированный, и без наведенного на него указателя мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, указывающее на то, что элемент ChartItem отображается как не выбранный, не активированный, и без наведенного на него указателя мыши.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:ROLLOVER"><apiName>ROLLOVER</apiName><shortdesc>
      Значение, указывающее на то, что элемент ChartItem отображается так, как будто на него наведен указатель мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, указывающее на то, что элемент ChartItem отображается так, как будто на него наведен указатель мыши.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:SELECTED"><apiName>SELECTED</apiName><shortdesc>
      Значение, указывающее на то, что элемент ChartItem отображается как выбранный, но не активированный.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selected</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение, указывающее на то, что элемент ChartItem отображается как выбранный, но не активированный.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:element"><apiName>element</apiName><shortdesc>
      Серия или элемент, являющийся владельцем ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.charts.chartClasses:IChartElement</apiValueClassifier></apiValueDef><apiDesc>
      Серия или элемент, являющийся владельцем ChartItem.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:index"><apiName>index</apiName><shortdesc>
      Индекс данных из поставщика данных серии, представляемый этим элементом ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс данных из поставщика данных серии, представляемый этим элементом ChartItem.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Экземпляр элемента itemRenderer диаграммы, представляющий этот элемент ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:IFlexDisplayObject"/></apiValueDef><apiDesc>
      Экземпляр элемента itemRenderer диаграммы, представляющий этот элемент ChartItem.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:item"><apiName>item</apiName><shortdesc>
      Элемент из поставщика данных серии, представляемый этим ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Элемент из поставщика данных серии, представляемый этим ChartItem.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:ChartItem:currentState:get"><apiName>currentState</apiName><shortdesc>
      Определяет отображение элемента ChartItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Определяет отображение элемента ChartItem. Для свойства <codeph>currentState</codeph> может быть задано значение <codeph>none</codeph>, <codeph>rollOver</codeph>, <codeph>selected</codeph>, <codeph>disabled</codeph>, <codeph>focusSelected</codeph> или <codeph>focused</codeph>.
     
      <P>Установка состояния элемента не приводит к его добавлению в массив selectedItems. Она лишь изменяет представление элемента диаграммы. Кроме того, установка значения этого свойства не приводит к инициализации события <codeph>change</codeph>.</P>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:LineChart"><apiName>LineChart</apiName><shortdesc>
  Элемент управления LineChart представляет серию данных в виде точек, соединенных непрерывной линией.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  The <code>&lt;mx:LineChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:LineChart
  /&gt;
  </pre> 
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления LineChart представляет серию данных в виде точек, соединенных непрерывной линией. Для представления каждой точки данных вдоль линии можно использовать значок или символ, либо может отображаться простая линия без значков. 
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления LineChart содержит массив объектов LineSeries.</p>
 
  </apiDesc><example conref="Line_AreaChartExample.mxml"><swfblock conref="examples/Line_AreaChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#LineSeries"><linktext>mx.charts.series.LineSeries</linktext></link></related-links><apiConstructor id="mx.charts:LineChart:LineChart"><apiName>LineChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:LineChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:AxisLabel"><apiName>AxisLabel</apiName><shortdesc>
  Объект AxisLabel представляет отдельную метку на оси диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Объект AxisLabel представляет отдельную метку на оси диаграммы. Объекты AxisLabel генерируются объектами IAxis. Объект AxisLabel также передается в качестве данных в пользовательские объекты AxisLabel, реализующие интерфейс IDataRenderer.
  	
  </apiDesc></apiClassifierDetail><related-links><link href="mx.charts.xml#AxisRenderer"><linktext>mx.charts.AxisRenderer</linktext></link><link href="mx.charts.chartClasses.xml#IAxis"><linktext>mx.charts.chartClasses.IAxis</linktext></link></related-links><apiConstructor id="mx.charts:AxisLabel:AxisLabel"><apiName>AxisLabel</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>position</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Позиция метки по оси, указанная в виде значения от 0 до 1.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Значение, представляемое меткой.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Текстовая метка, фактически отображаемая на оси.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:AxisLabel:position"><apiName>position</apiName><shortdesc>
	  Позиция метки по оси, указанная в виде значения от 0 до 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Позиция метки по оси, указанная в виде значения от 0 до 1. AxisLabel с позицией 0 соответствует местоположению минимального значения по оси, в то время как AxisLabel с позицией 1 соответствует местоположению максимального значение по оси.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisLabel:text"><apiName>text</apiName><shortdesc>
	  Текстовая метка, фактически отображаемая на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Текстовая метка, фактически отображаемая на оси.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisLabel:value"><apiName>value</apiName><shortdesc>
	  Значение, представляемое меткой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Значение, представляемое меткой. Определенный тип свойства значения является специфичным для оси, по которой сгенерирована метка. Например, LinearAxis может генерировать числовые значения, в то время как DateTimeAxis может генерировать значения экземпляра даты.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:LogAxis"><apiName>LogAxis</apiName><shortdesc>
  Класс LogAxis отображает числовые значения между минимальным и максимальным значениями на оси диаграммы по логарифмическому закону.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:LogAxis&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:LogAxis
    <strong>Properties</strong>
    interval="10"
    maximum="null"
    maximumLabelPrecision="null"
    minimum="null"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:NumericAxis</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс LogAxis отображает числовые значения между минимальным и максимальным значениями на оси диаграммы по логарифмическому закону. По умолчанию значения <codeph>minimum</codeph>, <codeph>maximum</codeph> и <codeph>interval</codeph> определяются на основе данных диаграмм в соответствии со всеми элементами диаграммы на экране. Кроме того, определенные значения для этих свойств можно задать явным образом. Правильная визуализация отрицательных значений посредством объекта LogAxis невозможна, поскольку Log10() отрицательного числа имеет значение <codeph>undefined</codeph>.
 
  </apiDesc><example conref="LogAxisExample.mxml"><swfblock conref="examples/LogAxisExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.chartClasses.xml#IAxis"><linktext>mx.charts.chartClasses.IAxis</linktext></link></related-links><apiConstructor id="mx.charts:LogAxis:LogAxis"><apiName>LogAxis</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:LogAxis:interval:get"><apiName>interval</apiName><shortdesc>
	  Указывает значения метки множителя на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>10
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Указывает значения метки множителя на оси. Значение 10 позволяет генерировать метки в позициях 1, 10, 100, 1000 и т. д., в то время как значение 100 позволяет генерировать метки в позициях 1, 100, 10 000 и т. д. Числовое значение интервала вычисляется в приложении Flex, если для этого свойства задано значение <codeph>NaN</codeph>,. Интервалы должны быть кратными 10, их значение не может быть меньше 10. При необходимости LogAxis округляет интервал до меньшего значения, кратного 10.
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LogAxis:maximum:get"><apiName>maximum</apiName><shortdesc>
	  Определяет максимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Определяет максимальное значение для метки оси. Если задано значение <codeph>NaN</codeph>, приложение Flex определяет максимальное значение на основе данных диаграммы. Максимальное значение должно равняться 10 в четной степени. При необходимости LogAxis округляет явное максимальное значение в большую сторону до 10 в четной степени.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LogAxis:minimum:get"><apiName>minimum</apiName><shortdesc>
	  Определяет минимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
	  
	  </apiDefaultValue></apiValueDef><apiDesc>
	  Определяет минимальное значение для метки оси. Если задано значение <codeph>NaN</codeph>, приложение Flex определяет минимальное значение на основе данных диаграммы. Минимальное значение должно равняться 10 в четной степени. При необходимости LogAxis округляет явное минимальное значение в меньшую сторону до 10 в четной степени.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:LogAxis:maximumLabelPrecision:set"><apiName>maximumLabelPrecision</apiName><shortdesc>
	  Определяет максимальное количество десятичных знаков при представлении дробных значений на метках, генерируемых для размещения вдоль оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
	  Определяет максимальное количество десятичных знаков при представлении дробных значений на метках, генерируемых для размещения вдоль оси. По умолчанию эти значения генерируются для оси непосредственно на основе меток. Значение 0 приводит к округлению до ближайшего целого значения, в то время как значение 2 приводит к округлению до ближайшего значения 1/100.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:AxisRenderer"><apiName>AxisRenderer</apiName><shortdesc>
  Класс AxisRenderer используется для описания горизонтальных и вертикальных осей диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style enumeration="flippedVertical,vertical" inherit="no" name="verticalAxisTitleAlignment" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет способ визуализации заголовка вертикальной оси. <codeph>flippedVertical</codeph> обеспечивает визуализацию заголовка сверху вниз, тогда как <codeph>vertical</codeph> обеспечивает визуализацию заголовка снизу вверх.
 
  </description>
<default>flippedVertical
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="tickStroke" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Указывает характеристики делений на оси. Этот стиль должен являться экземпляром класса Stroke.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inside,outside,cross,none" inherit="no" name="tickPlacement" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет позиции для отображения делений. Допустимые варианты:
  <ul>
    <li><codeph>inside</codeph>: деления отображаются в области данных.</li>
     <li><codeph>outside</codeph>: деления отображаются в области метки.</li>
     <li><codeph>cross</codeph>: деления отображаются на оси.</li>
     <li><codeph>none</codeph>: деления не отображаются.</li>
  </ul>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tickLength" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Определяет длину делений на оси (в пикселях). 
  
  </description>
<default>3  
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="showLine" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость отображения оси. 
  
  </description>
<default>true 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="showLabels" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Boolean">
<description>
  Определяет необходимость отображения меток на оси. 
  
  </description>
<default>true 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="minorTickStroke" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Определяет характеристики вспомогательных делений на оси. Этот стиль должен являться экземпляром класса Stroke.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inside,outside,cross,none" inherit="no" name="minorTickPlacement" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Указывает позиции для отображения вспомогательных делений. Допустимые варианты:
  <ul>
    <li><codeph>inside</codeph>: вспомогательные деления отображаются в области данных.</li>
     <li><codeph>outside</codeph>: вспомогательные деления отображаются в области метки.</li>
     <li><codeph>cross</codeph>: вспомогательные деления отображаются на оси.</li>
     <li><codeph>none</codeph>: вспомогательные деления не отображаются.</li>
  </ul>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="minorTickLength" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Указывает длину вспомогательных делений на оси (в пикселях). 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="labelRotation" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description> 
  Указывает вращение метки. В случае визуализации меток с использованием шрифтов устройства метки всегда отображаются горизонтально. Если этот стиль имеет отрицательное значение, AxisRenderer определяет оптимальный угол для визуализации меток в наименьшей области без наложения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="labelGap" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description> 
  Указывает промежуток между концом деления и вершиной метки (в пикселях). 
  
  </description>
<default>3 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="labelClass" owner="mx.charts:AxisRenderer" playerVersion="Flash10.2" type="Class">
<description>
  Класс, который используется этим компонентом для визуализации меток.
   <p>Может являться классом mx.controls.Label или классом spark.components.Label.</p>
   </description>
<default>spark.components.Label
  
  </default>

<playerversion>AIR 2.0
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="left,top,right,bottom,center" inherit="no" name="labelAlign" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет выравнивание метки по отношению к позиции значения, которое она указывает.
 
  </description>
<default>center
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="canStagger" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Boolean">
<description> 
  Определяет необходимость смещения меток в пределах двух строк меток. Этот параметр позволяет минимизировать пространство, требуемое для меток. По умолчанию используется значение <codeph>true</codeph>, которое обеспечивает смещение меток. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="canDropLabels" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Boolean">
<description>
  Определяет, должен ли AxisRenderer пропускать метки по мере необходимости в целях правильного отображения данных.
   <p>Если задано значение <codeph>true</codeph>, AxisRenderer пропускает перекрывающиеся метки при визуализации. Метки всегда отображаются равномерно. При необходимости AxisRenderer отображает каждую вторую или каждую третью метку, однако пропуск двух или более последовательных меток не допустим.</p>
   <p>Если задано значение <codeph>false</codeph>, AxisRenderer использует для визуализации меток другие схемы (вращение, масштабирование).</p>
   <p>Если этот стиль явно не установлен, AxisRenderer по умолчанию использует значение, которое соответствует типу оси, подлежащей визуализации.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="axisTitleStyleName" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Имя селектора класса CSS используется при форматировании заголовка оси.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="axisStroke" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="mx.graphics.IStroke">
<description>
  Определяет характеристики линии для оси. Этот стиль должен являться экземпляром класса Stroke.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>По умолчанию большинство элементов управления имеют значение <codeph>left</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph>. Для этих компонентов данное свойство распознается только в том случае, если для свойства <codeph>labelPlacement</codeph> было установлено значение <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> — включено и <codeph>false</codeph> — отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов FlashType. Определенные шрифты, например Verdana, и моноширинные шрифты, например Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Распознаются значения <codeph>normal</codeph> и <codeph>bold</codeph>. Для элемента LegendItem по умолчанию используется значение <codeph>bold</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях. Значением по умолчанию является 10 для всех элементов управления, исключая элемент управления ColorPicker. Для элемента управления ColorPicker значением по умолчанию является 11. 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только в случае использования встроенного шрифта FlashType и установки значения <codeph>advanced</codeph> для свойства <codeph>fontAntiAliasType</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства.
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>По умолчанию применяется значение <codeph>advanced</codeph>, разрешающее применение средства визуализации FlashType при использовании встроенного шрифта FlashType. Значение <codeph>normal</codeph> используется для отключения средства визуализации FlashType.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField и не может быть применен только к отдельным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.charts:AxisRenderer" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента.
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[ 
  <p>The <code>&lt;mx:AxisRenderer&gt;</code> tag inherits all the properties
  of its parent classes, and adds the following properties:</p>
  
  <pre>
  &lt;mx:AxisRenderer
    <strong>Properties</strong>
    axis="<i>IAxis</i>"
    chart="<i>ChartBase</i>"
    gutters="<i>Rectangle</i>"
    heightLimit="<i>Number</i>"
    labelRenderer="<i>IFactory</i>"
    labelFunction="<i>Function</i>"
    length="<i>Number</i>"
    otherAxes="<i>Array</i>"
    placement="right|left|bottom|top"
    ticks="<i>Array</i>"
    titleRenderer="<i>IFactory</i>"
     
    <strong>Styles</strong>
    axisStroke="<i>No default</i>"
    axisTitleStyleName="<i>No default</i>"
    canDropLabels="true|false"
    canStagger="true|false"
    labelAlign="center|left|right" (horizontal axes) or "center|top|bottom" (vertical axes)
    labelGap="3"
    labelRotation="<i>No default</i>"
    minorTickLength="<i>Default depends on axis</i>"
    minorTickPlacement="none|inside|outside|cross"
    minorTickStroke="<i>No default</i>"
    showLabels="true|false"
    showLine="true|false"
    tickLength="<i>Default depends on axis</i>"
    tickPlacement="inside|outside|cross|none"
    tickStroke="<i>No default</i>"
    verticalAxisTitleAlignment="flippedVertical|vertical"
  /&gt;
  </pre>
    
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IAxisRenderer</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:DualStyleObject</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс AxisRenderer используется для описания горизонтальных и вертикальных осей диаграммы. Ось является ответственной за визуализацию меток, делений и заголовка вдоль ее длины. 
   
  <p>Объекты AxisRenderer наследуют некоторые визуальные свойства объекта диаграммы с вложением. Текстовый формат меток и заголовка по умолчанию имеет текстовые свойства файла CSS средства визуализации. Для отдельного управления форматированием заголовка оси следует задать <codeph>axisTitleStyleName</codeph> либо для AxisRenderer, либо или для диаграммы с включением.</p> 
  
  <p>При позиционировании меток и определении их размеров AxisRenderer использует минимальное доступное пространство диаграммы. Если метки занимают слишком много места, выполняется их масштабирование. Однако AxisRenderer не может использовать масштабирование более мелкое, чем размер кегля. Для повышения удобства восприятия на основе минимизации требований к масштабированию инструментом AxisRenderer выбирается один из следующих методов макета:</p>
   <ul>
    <li>Отображение меток по горизонтали вплотную.</li> 
    <li>Сдвиг меток по горизонтали в пределах двух строк.</li> 
    <li>Вращение меток для их размещения в доступном пространстве. При вращении меток используется минимальный угол, необходимый для предотвращения их наложения. Максимальный угол равен 90 градусам.</li>
  </ul>
  
  <p>AxisRenderer может корректировать границы области данных диаграммы в целях предотвращения выхода меток за границы.</p>
  
  </apiDesc><example conref="HLOCChartExample.mxml"><swfblock conref="examples/HLOCChartExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.charts:AxisRenderer:AxisRenderer"><apiName>AxisRenderer</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts:AxisRenderer:adjustGutters"><apiName>adjustGutters</apiName><shortdesc>
      
      Корректирует макет в целях размещения передаваемых средников.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Прямоугольник, определяющий размеры средников с учетом корректировок.
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>workingGutters</apiItemName><apiType value="flash.geom:Rectangle"/><apiDesc>Определяет средники, подлежащие корректировке.
     
      </apiDesc></apiParam><apiParam><apiItemName>adjustable</apiItemName><apiType value="Object"/><apiDesc>Состоит из четырех логических свойств (left=true/false, top=true/false, right=true/false и bottom=true/false), определяющих возможность дополнительной корректировки каждого из средников средством визуализации оси.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Корректирует макет в целях размещения передаваемых средников. Этот метод вызывается диаграммой с включением для определения размера средников и соответствующей области данных. Этот метод предоставляет AxisRenderer возможность определения макета с учетом новых средников, а также их корректировки (при необходимости). Если определенный средник допускает корректировку, средство визуализации оси может дополнительно откорректировать средники в сторону увеличения, но не в сторону уменьшения.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:AxisRenderer:chartStateChanged"><apiName>chartStateChanged</apiName><shortdesc>
      Вызывается диаграммой для определения изменения ее текущего состояния перехода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldState</apiItemName><apiType value="uint"/><apiDesc>Число, представляющее предыдущее состояние.
           </apiDesc></apiParam><apiParam><apiItemName>newState</apiItemName><apiType value="uint"/><apiDesc>Число, представляющее новое состояние.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается диаграммой для определения изменения ее текущего состояния перехода.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:AxisRenderer:invalidateDisplayList"><apiName>invalidateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts:AxisRenderer:invalidateSize"><apiName>invalidateSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts:AxisRenderer:protected:measure"><apiName>measure</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts:AxisRenderer:move"><apiName>move</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts:AxisRenderer:setActualSize"><apiName>setActualSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>w</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiOperation id="mx.charts:AxisRenderer:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail><apiInheritDoc/></apiOperation><apiValue id="mx.charts:AxisRenderer:axis:get"><apiName>axis</apiName><shortdesc>
      Объект оси, связанный с этим средством визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.charts.chartClasses:IAxis</apiValueClassifier></apiValueDef><apiDesc>
      Объект оси, связанный с этим средством визуализации. Управление этим свойством осуществляет диаграмма с включением, и в случае использования нескольких средств визуализации осей существует возможность его явного задания.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:protected:chart:get"><apiName>chart</apiName><shortdesc>
      Основная диаграмма для этого объекта AxisRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.charts.chartClasses:ChartBase</apiValueClassifier></apiValueDef><apiDesc>
      Основная диаграмма для этого объекта AxisRenderer.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:gutters:get"><apiName>gutters</apiName><shortdesc> 
    
      Расстояние между axisRenderer и сторонами окружающей диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.geom:Rectangle"/></apiValueDef><apiDesc> 
    
      Расстояние между axisRenderer и сторонами окружающей диаграммы. Значение этого свойства автоматически присваивается диаграммой, его непосредственное присвоение не требуется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:heightLimit:get"><apiName>heightLimit</apiName><shortdesc> 
    
      Максимальный объем пространства в пикселях, занимаемый средством визуализации оси в диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
    
      Максимальный объем пространства в пикселях, занимаемый средством визуализации оси в диаграмме. Средства визуализации оси по умолчанию будут использовать все необходимое пространство в диаграмме для визуализации всех меток в полном размере. При установке параметра heightLimit AxisRenderer уменьшит размер меток таким образом, что общий размер оси будет меньше heightLimit.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:highlightElements:get"><apiName>highlightElements</apiName><shortdesc>
      Определяет необходимость выделения элементов диаграммы, например серии, при наведении указателя мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Определяет необходимость выделения элементов диаграммы, например серии, при наведении указателя мыши.
      
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:horizontal:get"><apiName>horizontal</apiName><shortdesc>
      
      Свойство имеет значение true, если средство визуализации оси используется в качестве горизонтальной оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      Свойство имеет значение <codeph>true</codeph>, если средство визуализации оси используется в качестве горизонтальной оси. Этим свойством управляет включающий объект CartesianChart, непосредственная установка значения этого свойства не требуется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Вызывается при форматировании значений средства визуализации оси для отображения в качестве меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Вызывается при форматировании значений средства визуализации оси для отображения в качестве меток. <codeph>labelFunction</codeph> имеет следующую подпись:
      <pre>
      function labelFunction(<i>axisRenderer</i>:IAxisRenderer, <i>label</i>:String):String { ... }
      </pre>
      
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:labelRenderer:get"><apiName>labelRenderer</apiName><shortdesc> 
      Ссылка на фабрику, используемую для визуализации меток оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc> 
      Ссылка на фабрику, используемую для визуализации меток оси. Этот тип используется для реализации интерфейсов IFlexDisplayObject и IDataRenderer.
      <p>AxisRenderer создает один экземпляр этого класса для каждой метки на оси. Свойству данных labelRenderer присвоен объект AxisLabel, содержащий значение и метку для визуализации.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:length:get"><apiName>length</apiName><shortdesc> 
      Определяет длину оси (в экранных координатах).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc> 
      Определяет длину оси (в экранных координатах). Длина по умолчанию зависит от ряда факторов, включая размер диаграммы, размер меток, способ, используемый AxisRenderer для выбора позиций меток, а также любые требования, налагаемые другими фрагментами диаграммы.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:minorTicks:get"><apiName>minorTicks</apiName><shortdesc>
      
      Содержит массив, указывающий позиции для отображения приложением Flex вспомогательных делений по оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Содержит массив, указывающий позиции для отображения приложением Flex вспомогательных делений по оси. Каждый элемент массива содержит значение от 0 до 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:placement:get"><apiName>placement</apiName><shortdesc>
      
      Сторона диаграммы, на которой отображается axisRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      
      Сторона диаграммы, на которой отображается axisRenderer. Допустимыми значениями являются <codeph>left</codeph> и <codeph>right</codeph> для средств визуализации вертикальной оси; <codeph>top</codeph> и <codeph>bottom</codeph> для средств визуализации горизонтальной оси. По умолчанию основные оси размещаются в левой верхней части, а вспомогательные оси – в правой нижней части. CartesianCharts автоматически обеспечивает размещение дополнительных осей напротив основных осей; например, если основная вертикальная ось явно размещается справа, то дополнительная вертикальная ось перемещается влево
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:ticks:get"><apiName>ticks</apiName><shortdesc>
      
      Содержит массив, указывающий позиции для отображения делений по оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Содержит массив, указывающий позиции для отображения делений по оси. Каждый элемент массива содержит значение от 0 до 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:titleRenderer:get"><apiName>titleRenderer</apiName><shortdesc> 
      Ссылка на фабрику, используемую для визуализации заголовка оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc> 
      Ссылка на фабрику, используемую для визуализации заголовка оси. Этот тип используется для расширения UIComponent и реализации интерфейсов IFlexDisplayObject и IDataRenderer.
      <p>AxisRenderer создает экземпляр этого класса для заголовка оси. Заголовок, подлежащий визуализации, присваивается свойству данных titleRenderer.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:AxisRenderer:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
	  </apiDesc></apiValueDetail><apiInheritDoc/></apiValue><apiValue id="mx.charts:AxisRenderer:otherAxes:set"><apiName>otherAxes</apiName><shortdesc>
      
      Массив осей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef><apiDesc>
      
      Массив осей.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:CategoryAxis"><apiName>CategoryAxis</apiName><shortdesc>
  Класс CategoryAxis позволяет диаграммам представлять данные, сгруппированные в наборы дискретных значений, по определенной оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:CategoryAxis&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CategoryAxis
    <strong>Properties</strong>
    categoryField="null"
    dataFunction="<i>No default</i>"
    dataProvider="<i>No default</i>"
    labelFunction="<i>No default</i>"
    padding="<i>Default depends on chart type</i>"
    ticksBetweenLabels="<i>true</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.charts.chartClasses:IAxis</apiBaseInterface><apiBaseClassifier>mx.charts.chartClasses:AxisBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CategoryAxis позволяет диаграммам представлять данные, сгруппированные в наборы дискретных значений, по определенной оси. Как правило, класс CategoryAxis используется для определения набора меток, отображаемых по оси диаграммы. Например, диаграммы, отображающие данные в соответствии с объектами «Город», «Год», «Филиал» и т. д.
  
  <p>Явное задание значения свойства <codeph>dataProvider</codeph> в CategoryAxis не требуется. Класс CategoryAxis, используемый в диаграмме, наследует свойство <codeph>dataProvider</codeph> из вышестоящей диаграммы.</p>
  
  <p>Один и тот же поставщик данных может использоваться для предоставления данных для диаграммы и категорий для CategoryAxis, класс CategoryAxis позволяет оптимизировать визуализацию, если его поставщик данных является относительно статическим. По возможности следует обеспечить относительную статичность категорий и сохранение измененных данных в отдельных поставщиках данных.</p>
  
  <p>Свойство <codeph>dataProvider</codeph> может принимать либо массив строк, либо массив записей (объектов) со свойством, указывающим имя категории. Если определено свойство <codeph>categoryField</codeph>, класс CategoryAxis предполагает, что поставщиком данных является массив объектов. Если для свойства <codeph>categoryField</codeph> задано значение <codeph>null</codeph>, класс CategoryAxis предполагает, что поставщиком данных является массив строк.</p>
  
  </apiDesc><example conref="HLOCChartExample.mxml"><swfblock conref="examples/HLOCChartExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.charts:CategoryAxis:CategoryAxis"><apiName>CategoryAxis</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts:CategoryAxis:filterCache"><apiName>filterCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно отфильтрованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны быть сохранены отфильтрованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:formatForScreen"><apiName>formatForScreen</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>Текст DataTip.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiDesc>Значение, подлежащее преобразованию в строку. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#formatForScreen()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:getLabelEstimate"><apiName>getLabelEstimate</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabelEstimate()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:getLabels"><apiName>getLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Массив объектов AxisLabel.
      
      </apiDesc></apiReturn><apiParam><apiItemName>minimumAxisLength</apiItemName><apiType value="Number"/><apiDesc>Минимальная длина оси (в пикселях). Длина оси может превосходить это значение, но не может быть меньше него.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#getLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:invertTransform"><apiName>invertTransform</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>Объект, содержащий преобразованное значение.
      
      </apiDesc></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Граница оси. Этот параметр должен иметь значение от 0 до 1, при этом 0 соответствует минимальной границе оси, а 1 – максимальной.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#invertTransform()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:mapCache"><apiName>mapCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где преобразованные значения должны быть сохранены.
     
      </apiDesc></apiParam><apiParam><apiItemName>indexValues</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Этот параметр имеет значение <codeph>true</codeph>, если отображаемые значения являются индексными значениями, и <codeph>false</codeph>, если они являются естественными значениями данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#mapCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:preferDropLabels"><apiName>preferDropLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>Значение <codeph>true</codeph>, если метки могут быть пропущены без потери данных; в противном случае задается значение <codeph>false</codeph>. 
      
      </apiDesc></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#preferDropLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier><apiDesc>Новый набор меток, используемый для разрешения проблемы наложения путем уменьшения количества меток.
      
      </apiDesc></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Начало интервала, где происходит наложение меток.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Конец интервала, в котором происходит наложение меток.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#reduceLabels()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:transformCache"><apiName>transformCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются отображаемые значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащее предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны сохраняться преобразованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:CategoryAxis:update"><apiName>update</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#update()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#update()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts:CategoryAxis:baseline:get"><apiName>baseline</apiName><shortdesc>
      
      Положение базовой линии оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      
      Положение базовой линии оси. Некоторые серии, например ColumnSeries или AreaSeries, используют это значение для определения основания заполненной области, если не указано минимальное значение.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:categoryField:get"><apiName>categoryField</apiName><shortdesc>
      Указывает поле поставщика данных, содержащее текст для меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает поле поставщика данных, содержащее текст для меток. Если это свойство имеет значение <codeph>null</codeph>, класс CategoryAxis предполагает, что dataProvider содержит массив строк.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:dataFunction:get"><apiName>dataFunction</apiName><shortdesc>
     Указывает метод, возвращающий значение, которое должно использоваться в качестве categoryValue для текущего элемента. Если это свойство установлено, возвращаемое значение пользовательской функции данных имеет приоритет над categoryField. Пользовательская dataFunction имеет следующую подпись: function_name (axis:CategoryAxis, item:Object):Object { ...</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
     Указывает метод, возвращающий значение, которое должно использоваться в качестве categoryValue для текущего элемента. Если это свойство установлено, возвращаемое значение пользовательской функции данных имеет приоритет над <codeph>categoryField</codeph>
     
     <p>Пользовательская функция <codeph>dataFunction</codeph> имеет следующую подпись:
      
     <pre>
     <i>function_name</i> (axis:CategoryAxis, item:Object):Object { ... }
     </pre>
     
     <codeph>axis</codeph> является текущей осью, которая использует эту <codeph>dataFunction</codeph>, <codeph>item</codeph> является рассматриваемым элементом dataProvider. Эта функция возвращает объект.
     </p>
      
     <p>Примером использования пользовательской функции <codeph>dataFunction</codeph> является возврат значения из dataProvider, имеющего элементы с вложенными полями</p>
       
     </apiDesc><example>
     <pre>
     public function myFunction(axis:CategoryAxis,item:Object):Object {
          return(item.Country.State);
     }     
     </pre>
     
      
      </example></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Указывает источник данных, содержащий имена меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Указывает источник данных, содержащий имена меток. <codeph>dataProvider</codeph> может быть массивом строк, массивом объектов или любым объектом, реализующий интерфейс ICollectionView или IList. Если значением свойства <codeph>dataProvider</codeph> является массив строк, необходимо убедиться в том, что свойство <codeph>categoryField</codeph> имеет значение <codeph>null</codeph>. Если значением свойства dataProvider является массив объектов, в качестве значения свойства <codeph>categoryField</codeph> следует установить имя поля, содержащего текст метки.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Указывает функцию, определяющую метки, которые генерируются для каждого элемента в dataProvider класса CategoryAxis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Указывает функцию, определяющую метки, которые генерируются для каждого элемента в <codeph>dataProvider</codeph> класса CategoryAxis. Если значение <codeph>labelFunction</codeph> не предоставляется, метки оси по умолчанию используют непосредственно значение категории.
     
      <p>Метод <codeph>labelFunction</codeph> для CategoryAxis имеет следующую подпись:</p>
      <pre>
      function <i>function_name</i>(<i>categoryValue</i>:Object, <i>previousCategoryValue</i>:Object, <i>axis</i>:CategoryAxis, <i>categoryItem</i>:Object):String { ... }
      </pre>
      
      <p>Где:</p>
      <ul>
       <li><codeph><i>categoryValue</i></codeph> является значением представляемой категории.</li>
       <li><codeph><i>previousCategoryValue</i></codeph> является значением предыдущей категории на оси.</li>
       <li><codeph><i>ось</i></codeph> является визуализируемым классом CategoryAxis.</li>
       <li><codeph><i>categoryItem</i></codeph> является элементом из представляемого <codeph>dataProvider</codeph>.</li>
      </ul>
      
      <p>Flex отображает возвращенную строку как метку оси.</p>
     
      <p>Если свойство <codeph>categoryField</codeph> не установлено, то его значение совпадет со значением свойства <codeph>categoryValue</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:padding:get"><apiName>padding</apiName><shortdesc>
      Определяет заполнение, добавляемое к любой из сторон оси во время визуализации данных на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет заполнение, добавляемое к любой из сторон оси во время визуализации данных на экране. Значение 0 означает, что первая категория соответствует началу оси, а последняя категория – ее концу. Значение 0,5 соответствует заполнению половины ширины категории на оси между началом оси и первой категорией, а также между последней категорией и концом оси.
      
      <p>Это применимо для типов диаграмм, отображение которых выходит за пределы категории, например столбцов и полос. Однако при использовании в качестве горизонтальной оси в LineChart или AreaChart это значение сбрасывается на 0.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:CategoryAxis:ticksBetweenLabels:get"><apiName>ticksBetweenLabels</apiName><shortdesc>
      Указывает местоположение основных делений на оси относительно меток категории.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает местоположение основных делений на оси относительно меток категории. Если задано значение <codeph>true</codeph>, деления (и любые связанные линии сетки) отображаются между категориями. Если задано значение <codeph>false</codeph>, деления отображаются в середине категории, выровненные относительно метки.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:PlotChart"><apiName>PlotChart</apiName><shortdesc>
  Элемент управления PlotChart представляет данные с двумя значениями для каждой точки данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  The <code>&lt;mx:PlotChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:PlotChart
  /&gt;
  </pre> 
  
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления PlotChart представляет данные с двумя значениями для каждой точки данных. Одно значение определяет позицию точки данных по горизонтальной оси, а другое значение – его позицию по вертикальной оси.
  
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления PlotChart содержит массив объектов PlotSeries.</p>
 
  </apiDesc><example conref="PlotChartExample.mxml"><swfblock conref="examples/PlotChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#PlotSeries"><linktext>mx.charts.series.PlotSeries</linktext></link></related-links><apiConstructor id="mx.charts:PlotChart:PlotChart"><apiName>PlotChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:PlotChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:CandlestickChart"><apiName>CandlestickChart</apiName><shortdesc>
  Элемент управления CandlestickChart представляет финансовые данные в виде серии диаграмм «свечи», соответствующих высокому и низкому значениям, а также значениям закрытия и открытия в серии данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="maxColumnWidth" owner="mx.charts:CandlestickChart" playerVersion="Flash9" type="Number">
<description>
  Указывает ширину отображаемых «свечей» в пикселях. Фактически используемая ширина столбца представляет собой наименьшее из значений этого свойства и свойства <codeph>columnWidthRatio</codeph>. Серии из нескольких «свечей» пропорционально разделяют это пространство.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnWidthRatio" owner="mx.charts:CandlestickChart" playerVersion="Flash9" type="Number">
<description>
  Указывает пропорцию ширины отображаемых «свечей» относительно значений ширины для категории по горизонтальной оси в виде процентного значения в пределах от 0 до 1. В случае значения 1 используется все пространство, тогда как в случае значения 0,6 используется 60% доступного пространства столбца. Фактически используемая ширина «свечи» является наименьшим из значений свойств <codeph>columnWidthRatio</codeph> и <codeph>maxColumnWidth</codeph>. Серии из нескольких «свечей» пропорционально разделяют это пространство. Значением по умолчанию является 0,65.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[ 
  The <code>&lt;mx:CandlestickChart&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:CandlestickChart
    <strong>Styles</strong>
    columnWidthRatio=".65"
    maxColumnWidth="<i>No default</i>"
  /&gt;
  </pre> 
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:CartesianChart</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления CandlestickChart представляет финансовые данные в виде серии диаграмм «свечи», соответствующих высокому и низкому значениям, а также значениям закрытия и открытия в серии данных. Верхняя и нижняя граница вертикальной линии в каждой «свечи» представляет верхнее и нижнее значения для точки данных, в то время как верхняя и нижняя граница квадрата представляет значения открытия и закрытия. Каждая «свеча» заполняется по-своему, в зависимости от того, превышает значение закрытия для точки данных значение открытия или нет.
   
  <p>Предполагается, что свойство <codeph>series</codeph> элемента управления CandlestickChart содержит массив объектов CandlestickSeries.</p>
   </apiDesc><example conref="CandlestickChartExample.mxml"><swfblock conref="examples/CandlestickChartExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.series.xml#CandlestickSeries"><linktext>mx.charts.series.CandlestickSeries</linktext></link></related-links><apiConstructor id="mx.charts:CandlestickChart:CandlestickChart"><apiName>CandlestickChart</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.charts:CandlestickChart:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
       Фабрика модулей применяется в качестве контекста для использования встроенных шрифтов и для поиска менеджера стиля, который управляет стилями этого компонента.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.charts:DateTimeAxis"><apiName>DateTimeAxis</apiName><shortdesc>
  Класс DateTimeAxis используется для равномерного отображения значений времени между минимальным и максимальным значениями вдоль оси диаграммы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:DateTimeAxis&gt;</code> tag inherits all the properties
  of its parent classes and adds the following properties:</p>
  
  <pre>
  &lt;mx:DateTimeAxis
    <strong>Properties</strong>
    alignLabelsToUnits="true|false"
    dataUnits="milliseconds|seconds|minutes|hours|days|weeks|months|years"
    disabledDays="<i>Array; No default</i>"
    disabledRanges="<i>Array; No default</i>"
    displayLocalTime="<i>false</i>"
    interval="<i>Number</i>"
    labelUnits="milliseconds|seconds|minutes|hours|days|weeks|months|years"
    maximum="<i>Date</i>"
    minimum="<i>Date</i>"
    minorTickInterval="<i>Number</i>"
    minorTickUnits="milliseconds|seconds|minutes|hours|days|weeks|months|years"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.charts.chartClasses:NumericAxis</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DateTimeAxis используется для равномерного отображения значений времени между минимальным и максимальным значениями вдоль оси диаграммы. Этот класс позволяет выводить значения, представленные либо как экземпляры класса Date, т.е. числовые значения, соответствующие количеству миллисекунд с начала эпохи (1 января 1970 г., GMT), либо как строковые значения (при наличии пользовательской функции синтаксического анализа).  
 
  <p>DateTimeAxis выбирает для отметки на оси наиболее соответствующие единицы из диапазона между минимальным и максимальным значениями оси. Ось выбирает наибольшую единицу, генерирующую приемлемое количество меток для данного диапазона. Можно ограничить набор единиц, рассматриваемых диаграммой, или точно указать используемые единицы путем установки свойства <codeph>labelUnits</codeph>.</p>
 
  <p>Минимальное и максимальное значения могут быть явно заданы пользователем, либо ось автоматически определяет их на основе значений, визуализируемых в диаграмме. По умолчанию DateTimeAxis выбирает наименьший возможный диапазон, содержащий все значения, представленные в диаграмме. При необходимости можно создать запрос на округление минимального и максимального значений до целых единиц (миллисекунды, секунды, минуты, часы, дни, недели, месяцы, годы) путем задания для свойства <codeph>autoAdjust</codeph> значения <codeph>true</codeph>.</p>
  
  <p>Можно указать недопустимые дни недели или диапазоны дат с целью отображения на оси не всех дней между минимальным и максимальным значением, а только рабочих дней. Кроме того, можно выполнить фильтрацию данных с целью отображения только тех данных, которые соответствуют рабочим дням на диаграмме</p>
  </apiDesc><example conref="DateTimeAxisExample.mxml"><swfblock conref="examples/DateTimeAxisExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.charts.chartClasses.xml#IAxis"><linktext>mx.charts.chartClasses.IAxis</linktext></link></related-links><apiConstructor id="mx.charts:DateTimeAxis:DateTimeAxis"><apiName>DateTimeAxis</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.charts:DateTimeAxis:protected:buildMinorTickCache"><apiName>buildMinorTickCache</apiName><shortdesc>
      
      Формирует массив позиций для массива вспомогательных делений, генерируемых этой осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Массив позиций со значениями от 0 до 1, представляющими точки между минимальным и максимальным значениями оси, в которых визуализируются вспомогательные деления.
      
      </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      
      Формирует массив позиций для массива вспомогательных делений, генерируемых этой осью. Эта функция реализуется подклассами. Вызов этой функции выполняется автоматически классом NumericAxis. Вместо непосредственного вызова этой функции следует использовать свойство <codeph>minorTicks</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:filterCache"><apiName>filterCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащем предварительно отфильтрованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>filteredField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны быть сохранены отфильтрованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#filterCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatDays"><apiName>formatDays</apiName><shortdesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе дня.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе дня. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatMilliseconds"><apiName>formatMilliseconds</apiName><shortdesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе миллисекунды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе миллисекунды. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatMinutes"><apiName>formatMinutes</apiName><shortdesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе минуты.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе минуты. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatMonths"><apiName>formatMonths</apiName><shortdesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе месяца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе месяца. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatSeconds"><apiName>formatSeconds</apiName><shortdesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе секунды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе секунды. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:protected:formatYears"><apiName>formatYears</apiName><shortdesc> 
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием labelUnits на основе года.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Отформатированная метка.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>d</apiItemName><apiType value="Date"/><apiDesc>Объект Date, содержащий форматируемую единицу.
      
      </apiDesc></apiParam><apiParam><apiItemName>previousValue</apiItemName><apiType value="Date"/><apiDesc>Объект Date, который содержит точку данных, предшествующую текущей точке данных.
      
      </apiDesc></apiParam><apiParam><apiItemName>axis</apiItemName><apiOperationClassifier>mx.charts:DateTimeAxis</apiOperationClassifier><apiDesc>Класс DateTimeAxis для визуализации метки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Функция форматирования по умолчанию, применяемая в том случае, если ось визуализируется с использованием <codeph>labelUnits</codeph> на основе года. В случае создания пользовательского класса DateTimeAxis при необходимости использования альтернативного форматирования по умолчанию этот метод можно отменить.
      
      <p>Этот метод не вызывается напрямую. Вместо этого Flex выполняет его вызов перед визуализацией метки в целях отображения соответствующей строки.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:reduceLabels"><apiName>reduceLabels</apiName><shortdesc> 
      Вызывается, если AxisRenderer не может выполнить чистую визуализацию меток без наложения и если требуется сокращение набора меток с помощью объекта Axis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Новый набор меток, используемый для разрешения проблемы наложения путем уменьшения количества меток.
      
      </apiDesc><apiOperationClassifier>mx.charts.chartClasses:AxisLabelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>intervalStart</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Начало интервала, где происходит наложение меток.
     
      </apiDesc></apiParam><apiParam><apiItemName>intervalEnd</apiItemName><apiOperationClassifier>mx.charts:AxisLabel</apiOperationClassifier><apiDesc>Конец интервала, в котором происходит наложение меток.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      Вызывается, если AxisRenderer не может выполнить чистую визуализацию меток без наложения и если требуется сокращение набора меток с помощью объекта Axis. Методу передаются две перекрывающиеся метки.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.charts:DateTimeAxis:transformCache"><apiName>transformCache</apiName><shortdesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>cache</apiItemName><apiType value="Array"/><apiDesc>Массив объектов, из которого считываются и в котором сохраняются отображаемые значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, содержащее предварительно преобразованные значения.
     
      </apiDesc></apiParam><apiParam><apiItemName>convertedField</apiItemName><apiType value="String"/><apiDesc>Поле объектов в массиве кэша, где должны сохраняться преобразованные значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.charts.chartClasses.IAxis#transformCache()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.charts:DateTimeAxis:alignLabelsToUnits:get"><apiName>alignLabelsToUnits</apiName><shortdesc>
      Определяет размещение меток на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет размещение меток на оси.
      <p>Если задано значение <codeph>false</codeph>, диаграмма всегда помещает метку в начале оси. Например, если метки отображаются на основе месяца, и первой точкой данных является 14 июля, то первая метка соответствует 14 июля. Если задано значение <codeph>true</codeph>, сначала вычисляются единицы метки, а затем целиком отмечается первый интервал, соответствующий этим единицам. Например, если первой точкой данных является 14 июля, а в качестве единицы метки определен месяц (задан явно или вычислен динамически), то первой метке соответствует 1 августа.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:dataUnits:get"><apiName>dataUnits</apiName><shortdesc>
      Указывает единицы, используемые для представления данных на диаграмме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает единицы, используемые для представления данных на диаграмме. Может использоваться одно из следующих значений:
      <ul>
       <li><codeph>milliseconds;</codeph></li>
       <li><codeph>seconds;</codeph></li>
       <li><codeph>minutes;</codeph></li>
       <li><codeph>hours;</codeph></li>
       <li><codeph>days;</codeph></li>
       <li><codeph>weeks;</codeph></li>
       <li><codeph>months;</codeph></li>
       <li><codeph>years.</codeph></li>
      </ul>
     
      <p>Использовать это значение можно двумя способами. Во-первых, при выборе соответствующих единиц метки DateTimeAxis не может выбрать единицы, меньшие единиц представляемых данных. Если свойство <codeph>dataUnits</codeph> имеет значение <codeph>days</codeph>, на диаграмме не отображаются метки для каждого часа вне зависимости от диапазона минимум/максимум.</p>
     
      <p>Во-вторых, значение свойства <codeph>dataUnits</codeph> используется некоторыми сериями для выполнения визуализации соответствующим образом. В частности, многие колоночные серии (например, ColumnSeries, BarSeries, CandlestickSeries и HLOCSeries) используют значение свойства <codeph>dataUnits</codeph> для определения ширины при визуализации столбцов.</p>
     
      <p>Если, например, свойство <codeph>labelUnits</codeph> горизонтальной оси элемента управления ColumnChart имеет значение <codeph>weeks</codeph>, и свойство <codeph>dataUnits</codeph> имеет значение <codeph>days</codeph>, ColumnChart отображает каждый столбец в позиции, соответствующей 1/7 расстояния между метками.</p>
     
      <p>Если свойство <codeph>dataUnits</codeph> имеет значение <codeph>null</codeph>, столбцы колоночных серий отображаются как дни, однако DateTimeAxis выбирает соответствующую единицу при генерации меток.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      Дни недели, подлежащие деактивации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Дни недели, подлежащие деактивации. Деактивируются все даты в пределах месяца, соответствующие указанному дню. Элементы этого массива могут иметь значения от 0 (воскресенье) до 6 (суббота). Например, значение <codeph>[0, 6]</codeph> деактивирует воскресенье и субботу.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      Позволяет деактивировать один или несколько дней.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет деактивировать один или несколько дней.
     
      <p>Это свойство принимает массив объектов в качестве параметра. Каждый объект в этом массиве является либо объектом Date, определяющим один день, подлежащий деактивации; либо объектом, содержащим один или оба свойства <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>, каждое из значений которых представляет собой объект Date. Значение этих свойств указывает границы диапазона дат. Если любое из значений опущено, диапазон рассматривается как неограниченный в соответствующем направлении. Если определено только свойство <codeph>rangeStart</codeph>, деактивируются все даты после указанной даты, включая дату <codeph>rangeStart</codeph>. Если определено только свойство <codeph>rangeEnd</codeph>, деактивируются все даты, предшествующие указанной дате, включая дату <codeph>rangeEnd</codeph>. Для деактивации отдельного дня используется отдельный объект Date в массиве, указывающий определенную дату.</p>
     
      <p>Например, требуется деактивировать следующие даты: 11 января 2006 г. в диапазоне от 23 января до 10 февраля 2006 г., а также 1 марта 2006 г. и все последующие даты.</p>
     
      <p><codeph>disabledRanges="{[ new Date(2006,0,11), {rangeStart: new Date(2006,0,23), rangeEnd: new Date(2006,1,10)}, {rangeStart: new Date(2006,2,1)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:displayLocalTime:get"><apiName>displayLocalTime</apiName><shortdesc> 
      Если задано значение true, DateTimeAxis рассматривает все значения даты как принадлежащие часовому поясу клиентского компьютера, на котором функционирует приложение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
      Если задано значение <codeph>true</codeph>, DateTimeAxis рассматривает все значения даты как принадлежащие часовому поясу клиентского компьютера, на котором функционирует приложение. Если задано значение <codeph>false</codeph>, все значения указаны по всемирному (гринвичскому) времени.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:interval:get"><apiName>interval</apiName><shortdesc>
      Указывает количество labelUnits между значениями меток на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает количество <codeph>labelUnits</codeph> между значениями меток на оси. Числовое значение интервала вычисляется в приложении Flex, если для этого свойства задано значение <codeph>null</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:labelUnits:get"><apiName>labelUnits</apiName><shortdesc>
      Единицы, используемые осью для генерации меток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Единицы, используемые осью для генерации меток. По умолчанию DateTimeAxis рассматривает все допустимые единицы (<codeph>milliseconds</codeph>, <codeph>seconds</codeph>, <codeph>minutes</codeph>, <codeph>hours</codeph>, <codeph>days</codeph>, <codeph>weeks</codeph>, <codeph>months</codeph> и <codeph>years</codeph>).
      
      <p>Если значение свойства <codeph>labelUnits</codeph> не установлено, для визуализации меток на диаграмме не могут использоваться единицы, меньшие, чем значение свойства <codeph>dataUnits</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:maximum:get"><apiName>maximum</apiName><shortdesc>
      Определяет максимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет максимальное значение для метки оси. Если задано значение <codeph>null</codeph>, в Flex определяется минимальное значение на основе данных диаграммы.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:minimum:get"><apiName>minimum</apiName><shortdesc>
      Определяет минимальное значение для метки оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет минимальное значение для метки оси. Если задано значение <codeph>null</codeph>, в Flex определяется минимальное значение на основе данных диаграммы. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:minorTickInterval:get"><apiName>minorTickInterval</apiName><shortdesc> 
      Указывает количество minorTickUnits между вспомогательными делениями на оси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc> 
      Указывает количество <codeph>minorTickUnits</codeph> между вспомогательными делениями на оси. Если установлено значение <codeph>NaN</codeph>, DateTimeAxis выполняет автоматическое вычисление этого значения.
      
      <p>Как правило, для свойства <codeph>minorTickInterval</codeph> автоматически устанавливается значение 1. Однако если свойство <codeph>minorTickUnits</codeph> определяет те же самые единицы, что и свойство <codeph>dataUnits</codeph> (заданные явно или вычисленные неявно), то значением свойства <codeph>minorTickInterval</codeph> является максимальная величина из 1 и <codeph>dataInterval</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:minorTickUnits:get"><apiName>minorTickUnits</apiName><shortdesc>
      Единицы, используемые при генерации на оси вспомогательных делений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Единицы, используемые при генерации на оси вспомогательных делений. По умолчанию DateTimeAxis рассматривает все допустимые единицы (<codeph>milliseconds</codeph>, <codeph>seconds</codeph>, <codeph>minutes</codeph>, <codeph>hours</codeph>, <codeph>days</codeph>, <codeph>weeks</codeph>, <codeph>months</codeph> и <codeph>years</codeph>).
      
      <p>Если это свойство не установлено, для диаграммы определяется значение свойства <codeph>minorTickUnits</codeph>. Если интервал метки больше 1, то для свойства <codeph>minorTickUnits</codeph> устанавливается значение свойства <codeph>labelUnits</codeph>, и для свойства <codeph>minorTickInterval</codeph> устанавливается значение 1. Если интервал метки равен 1, то значением свойства <codeph>minorTickUnits</codeph> является следующая меньшая единица из свойства <codeph>labelUnits</codeph>. Заданное значение свойства <codeph>minorTickUnits</codeph> не может быть меньшим, чем значение свойства <codeph>dataUnits</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:protected:requiredDescribedFields:get"><apiName>requiredDescribedFields</apiName><shortdesc>
      Поля структуры DescribeData, используемые осью.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
      Поля структуры DescribeData, используемые осью.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:unitSize:get"><apiName>unitSize</apiName><shortdesc>
      Ширина отдельной единицы данных (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина отдельной единицы данных (в пикселях). Тип единицы данных определяется значением свойства <codeph>dataUnits</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.charts:DateTimeAxis:dataInterval:set"><apiName>dataInterval</apiName><shortdesc>
      Определяет интервал между данными на диаграмме в соответствии со значениями в dataUnits.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc>
      Определяет интервал между данными на диаграмме в соответствии со значениями в <codeph>dataUnits</codeph>.
      <p>Например, если для свойства <codeph>dataUnits</codeph> установлено значение <codeph>hours</codeph>, и для свойства <codeph>dataInterval</codeph> установлено значение 4, на диаграмме отображаются данные, поступающие каждые четыре часа. Это свойство оказывает влияние на способ визуализации некоторых серий (например, ColumnSeries и CandlestickSeries). Это свойство также воздействует на способ автоматического выбора меток.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="mx.charts.xml#DateTimeAxis/dataUnits"><linktext>dataUnits</linktext></link></related-links></apiValue><apiValue id="mx.charts:DateTimeAxis:parseFunction:set"><apiName>parseFunction</apiName><shortdesc> 
      Указывает метод, используемый для настройки значений точек данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool description="" name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc> 
      Указывает метод, используемый для настройки значений точек данных. Это свойства позволяет указывать метод, посредством которого принимается значение и возвращается объект Date. Затем этот объект Date используется объектом DateTimeAxis диаграммы. Такой подход обеспечивает возможность настройки строк ввода даты и их преобразования в объекты Date, которые затем интерпретируются приложением Flex для использования в DateTimeAxis.
      
      <p>В метод синтаксического анализа передается только один параметр. Этот параметр является значением точки данных, которое указано для серии. Как правило, это строка, представляющая дату в определенном формате. Отмена этого параметра или добавление дополнительных параметров не допускается.</p>
      
      <p>Этот объект Date немедленно преобразуется в числовое значение, таким образом, пользовательские parseFunctions могут многократно использовать один и тот же объект Date, что положительно влияет на производительность. По умолчанию DateTimeAxis использует функциональные возможности синтаксического анализа строки, предоставляемые стандартным методом <codeph>Date.parse()</codeph> ECMA.</p>
      
      В следующем примере используется поставщик данных, определяющий объект данных в формате { yyyy, mm, dd }. На основе этих значений метод, определяемый функцией <codeph>parseFunction</codeph>, создает объект Date, который может использоваться осью.
      
      <pre>
      &lt;mx:Script>
          import mx.collections.ArrayCollection;
          [Bindable] 
          public var aapl:ArrayCollection = new ArrayCollection([ 
              {date: "2005, 8, 1", close: 42.71},
              {date: "2005, 8, 2", close: 42.99},
              {date: "2005, 8, 3", close: 44}
          ]);
          
          public function myParseFunction(s:String):Date { 
              // Get an array of Strings from the comma-separated String passed in.
              var a:Array = s.split(",");
      
              // Create the new Date object. Note that the month argument is 0-based (with 0 being January).
              var newDate:Date = new Date(a[0],a[1]-1,a[2]);
              return newDate;
          }
      &lt;/mx:Script>
      &lt;mx:LineChart id="mychart" dataProvider="{aapl}" showDataTips="true">
          &lt;mx:horizontalAxis>
              &lt;mx:DateTimeAxis dataUnits="days" parseFunction="myParseFunction"/>
          &lt;/mx:horizontalAxis>
          &lt;mx:series>
              &lt;mx:LineSeries yField="close" xField="date" displayName="AAPL"/>
          &lt;/mx:series>
      &lt;/mx:LineChart>
      </pre>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>